import React from 'react';
import { Form, Checkbox as ACheckbox } from 'antd';
import 'antd/es/checkbox/style';
import { ControlSchema } from '../../core';
import { FormItemWrapper } from '../../core/common/form-item-wrapper';
import { renderFormItemExtra } from '../../core/common/tooltip';
import styles from './index.less';

interface Props {
  controlSchema: ControlSchema;
}

export const Checkbox: React.FC<Props> = props => {
  const { controlSchema } = props;
  const { type, required, tooltip, extra, name, label } = controlSchema;

  return (
    <FormItemWrapper schema={controlSchema}>
      {({ hidden, disabled, initialValue }) => {
        return (
          <Form.Item
            className={styles.checkbox}
            name={name}
            initialValue={initialValue}
            tooltip={tooltip}
            extra={renderFormItemExtra(extra)}
            required={required}
            hidden={hidden}
            valuePropName="checked"
            getValueFromEvent={e => {
              const { checked } = e.target;
              const valueMap = {
                String: {
                  true: 'true',
                  false: 'false',
                },
                Boolean: {
                  true: true,
                  false: false,
                },
              };
              return valueMap[type as 'String' | 'Boolean'][
                checked.toString() as 'true' | 'false'
              ];
            }}
            getValueProps={(checked: boolean) => {
              const checkedMap = {
                true: true,
                false: false,
              };
              return {
                checked: !!checkedMap[checked.toString() as 'true' | 'false'],
              };
            }}
          >
            <ACheckbox disabled={disabled}>{label}</ACheckbox>
          </Form.Item>
        );
      }}
    </FormItemWrapper>
  );
};
