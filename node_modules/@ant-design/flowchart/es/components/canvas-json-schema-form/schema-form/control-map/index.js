import { StringInput } from './string-input';
import { Checkbox } from './checkbox';
import { TextArea } from './text-area';
import { Select } from './select';
import { Datetime } from './datetime';
import { Float } from './float';
import { Log } from '../../../../util';
export var xflowDefaultControls = [
    ['input', StringInput],
    ['checkbox', Checkbox],
    ['textArea', TextArea],
    ['select', Select],
    ['datetime', Datetime],
    ['float', Float],
];
export var makeControlMap = function (controls) {
    var controlMap = new Map();
    controls.forEach(function (item) {
        var key = item[0], control = item[1];
        var uuid = key.toLowerCase();
        if (controlMap.has(uuid)) {
            Log.error("".concat(key, " is duplicated in controlMap:"), controlMap);
        }
        controlMap.set(uuid, control);
    });
    return controlMap;
};
export var getControlFromMap = function (key, controlMap, defaultControl) {
    if (controlMap.has(key)) {
        return controlMap.get(key);
    }
    var uuid = key.toLowerCase();
    if (controlMap.has(uuid)) {
        return controlMap.get(uuid);
    }
    Log.warn("".concat(key, " is not exist in controlmap, fallback to defaultControl"));
    return defaultControl;
};
