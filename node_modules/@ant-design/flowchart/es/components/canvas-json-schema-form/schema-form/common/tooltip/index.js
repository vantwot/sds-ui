var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { Tooltip as ATooltip } from 'antd';
export var Tooltip = function (props) {
    var text = props.text, otherProps = __rest(props, ["text"]);
    if (!text) {
        return null;
    }
    return (React.createElement(ATooltip, __assign({ placement: "left", title: text }, otherProps),
        React.createElement("div", { className: "text-truncate" }, text)));
};
// 渲染 FormItem 的 extra 项
export function renderFormItemExtra(text) {
    if (!text) {
        return undefined;
    }
    return React.createElement(Tooltip, { text: text });
}
