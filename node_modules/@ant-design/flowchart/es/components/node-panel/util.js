// 类型检测
export var isType = function (value, type) {
    var toString = {}.toString;
    return toString.call(value) === "[object ".concat(type, "]");
};
export var isNumber = function (value) {
    return isType(value, 'Number');
};
// 创建节点路径
export var createPath = function (paths, offsetX, offsetY) {
    if (offsetX === void 0) { offsetX = 0; }
    if (offsetY === void 0) { offsetY = 0; }
    if (!paths.length) {
        return null;
    }
    var path = '';
    // @ts-ignore
    paths.forEach(function (item) {
        var c = item[0], x = item[1], y = item[2], c2x = item[3], c2y = item[4];
        path += isNumber(y) ? " ".concat(c, " ").concat(x + offsetX, " ").concat(y + offsetY) : " ".concat(c);
        if (c2y) {
            path += " ".concat(c2x + offsetX, " ").concat(c2y + offsetY);
        }
    });
    return path;
};
