var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React, { useContext } from 'react';
import { Popover } from 'antd';
import AppContext from '../../../context';
import { getProps } from '../../../util';
export var withPopover = function (props) { return function (WrappedComponent) {
    var _a;
    var flowchartId = useContext(AppContext).flowchartId;
    var _b = (_a = getProps(flowchartId, 'popoverProps')) !== null && _a !== void 0 ? _a : {}, content = _b.content, title = _b.title, extra = _b.extra;
    var data = props.data;
    if (!content) {
        return React.createElement(WrappedComponent, __assign({}, props));
    }
    var getContent = function (callback) {
        if (typeof callback === 'function') {
            return callback(data);
        }
        return callback;
    };
    return (React.createElement(Popover, __assign({}, extra, { content: getContent(content), title: getContent(title) }),
        React.createElement("div", { className: "charts-popover" },
            React.createElement(WrappedComponent, __assign({}, props)))));
}; };
