"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setNodeRender = exports.treeDataService = exports.getRegisterNode = exports.ASPECTRATIONODE = exports.AppContext = exports.NODE_WIDTH = exports.NODE_HEIGHT = exports.NodeComponents = exports.onNodeDrop = exports.searchService = void 0;
/**
 * 节点面板
 * 内置多种节点，同时提供用户注册机制
 * ```ts
 * nodePanelProps: {
 *  registerNode:{
 *   nodes: [
 *     {
 *       component: CustomNode, // 函数组件
 *       popover: () => <div>节点1</div>,
 *       name: 'custom-node',
 *       width: 60,
 *       height: 40,
 *      },
 *     ],
 *   }
 * }
 * ```
 */
var xflow_1 = require("@antv/xflow");
var util_1 = require("../../util");
var context_1 = __importDefault(require("../../context"));
exports.AppContext = context_1.default;
var with_popover_1 = require("./with-popover");
var constants_1 = require("./constants");
Object.defineProperty(exports, "NODE_HEIGHT", { enumerable: true, get: function () { return constants_1.NODE_HEIGHT; } });
Object.defineProperty(exports, "NODE_WIDTH", { enumerable: true, get: function () { return constants_1.NODE_WIDTH; } });
Object.defineProperty(exports, "ASPECTRATIONODE", { enumerable: true, get: function () { return constants_1.ASPECTRATIONODE; } });
var NodeComponents = __importStar(require("./nodes"));
exports.NodeComponents = NodeComponents;
var service_1 = require("./service");
Object.defineProperty(exports, "searchService", { enumerable: true, get: function () { return service_1.searchService; } });
Object.defineProperty(exports, "onNodeDrop", { enumerable: true, get: function () { return service_1.onNodeDrop; } });
/** 和 graph config 注册的节点保持一致 */
var getAnchorStyle = function (position) {
    return {
        position: { name: position },
        attrs: {
            circle: {
                r: 4,
                magnet: true,
                stroke: '#31d0c6',
                strokeWidth: 2,
                fill: '#fff',
                style: {
                    visibility: 'hidden',
                },
            },
        },
        zIndex: 10,
    };
};
var getPorts = function (position) {
    if (position === void 0) { position = ['top', 'right', 'bottom', 'left']; }
    return {
        items: position.map(function (name) {
            return { group: name, id: (0, xflow_1.uuidv4)() };
        }),
        groups: {
            top: getAnchorStyle('top'),
            right: getAnchorStyle('right'),
            bottom: getAnchorStyle('bottom'),
            left: getAnchorStyle('left'),
        },
    };
};
var getRegisterNode = function (flowchartId) {
    var _a;
    var registerNode = ((_a = (0, util_1.getProps)(flowchartId, 'nodePanelProps')) !== null && _a !== void 0 ? _a : {}).registerNode;
    return ((registerNode === null || registerNode === void 0 ? void 0 : registerNode.nodes) || []).map(function (item) {
        var name = item.name, popover = item.popover, _a = item.label, label = _a === void 0 ? '' : _a, _b = item.width, width = _b === void 0 ? constants_1.NODE_HEIGHT : _b, _c = item.height, height = _c === void 0 ? constants_1.NODE_HEIGHT : _c, ports = item.ports;
        var id = (0, xflow_1.uuidv4)(); // 暂不使用上层数据
        return {
            parentId: '',
            id: id,
            renderKey: name,
            name: name,
            label: label,
            popoverContent: popover,
            width: width,
            height: height,
            ports: ports || getPorts(),
            originData: __assign({}, item),
            isCustom: true,
        };
    });
};
exports.getRegisterNode = getRegisterNode;
var treeDataService = function (meta, modelService, flowchartId) { return __awaiter(void 0, void 0, void 0, function () {
    var customNodes;
    return __generator(this, function (_a) {
        customNodes = (0, exports.getRegisterNode)(flowchartId);
        return [2 /*return*/, __spreadArray(__spreadArray([], customNodes, true), constants_1.NODEPOOL.map(function (_a) {
                var name = _a.name, ports = _a.ports, _b = _a.width, width = _b === void 0 ? constants_1.NODE_WIDTH : _b, _c = _a.height, height = _c === void 0 ? constants_1.NODE_HEIGHT : _c, _d = _a.label, label = _d === void 0 ? '' : _d;
                return {
                    parentId: '',
                    id: (0, xflow_1.uuidv4)(),
                    renderKey: name,
                    // name: `${name.replace(/\s+/g, '-')}`,
                    name: name,
                    label: label,
                    popoverContent: function () { return name; },
                    width: width,
                    height: height,
                    ports: getPorts(ports),
                };
            }), true)];
    });
}); };
exports.treeDataService = treeDataService;
var setNodeRender = function (config, nodePanelProps) {
    // 自定义节点
    var registerNode = (nodePanelProps !== null && nodePanelProps !== void 0 ? nodePanelProps : {}).registerNode;
    var nodes = (registerNode === null || registerNode === void 0 ? void 0 : registerNode.nodes) || [];
    if (nodes.length) {
        nodes.forEach(function (item) {
            var name = item.name, component = item.component;
            config.setNodeRender(name, component);
        });
    }
    // 默认节点
    constants_1.NODEPOOL.forEach(function (item) {
        config.setNodeRender(item.name, function (props) {
            return (0, with_popover_1.withPopover)(props)(NodeComponents["".concat(item.name.replace(/\s+/g, ''), "Node")]);
        });
    });
};
exports.setNodeRender = setNodeRender;
