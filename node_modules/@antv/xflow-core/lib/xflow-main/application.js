"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FrontendApplication = exports.IFrontendApplicationContribution = void 0;
/* eslint-disable @typescript-eslint/no-redeclare */
/* eslint-disable no-await-in-loop */
/* eslint-disable max-classes-per-file */
var mana_syringe_1 = require("mana-syringe");
var x6_1 = require("@antv/x6");
var graph_provider_1 = require("../xflow-main/graph/graph-provider");
var interface_1 = require("../command/interface");
var model_service_1 = require("../model-service");
var interface_2 = require("./interface");
var graph_utils_1 = require("../common/graph-utils");
var interface_3 = require("./interface");
Object.defineProperty(exports, "IFrontendApplicationContribution", { enumerable: true, get: function () { return interface_3.IFrontendApplicationContribution; } });
var TIMER_WARNING_THRESHOLD = 100;
var FrontendApplication = /** @class */ (function () {
    function FrontendApplication() {
        var _this = this;
        /** 获取画布配置项 */
        this.getGraphData = function () { return __awaiter(_this, void 0, void 0, function () {
            var graph, cells;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.graphProvider.getGraphInstance()];
                    case 1:
                        graph = _a.sent();
                        cells = graph.getCells();
                        return [2 /*return*/, (0, graph_utils_1.cellsToJson)(cells)];
                }
            });
        }); };
    }
    /** 启动app */
    FrontendApplication.prototype.start = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.startContributions()];
                    case 1:
                        _a.sent();
                        this.registerEventListeners();
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 获取画布实例 */
    FrontendApplication.prototype.getGraphInstance = function () {
        return this.graphProvider.getGraphInstance();
    };
    /** 获取画布配置项 */
    FrontendApplication.prototype.getGraphConfig = function () {
        return this.graphProvider.getGraphOptions();
    };
    /** 获取画布所有节点 */
    FrontendApplication.prototype.getAllNodes = function () {
        return __awaiter(this, void 0, void 0, function () {
            var graph;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.graphProvider.getGraphInstance()];
                    case 1:
                        graph = _a.sent();
                        return [2 /*return*/, graph.getNodes()];
                }
            });
        });
    };
    /** 获取画布节点 */
    FrontendApplication.prototype.getNodeById = function (nodeId) {
        return __awaiter(this, void 0, void 0, function () {
            var graph;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.graphProvider.getGraphInstance()];
                    case 1:
                        graph = _a.sent();
                        return [2 /*return*/, graph.getCellById(nodeId)];
                }
            });
        });
    };
    /** 获取画布所有连线 */
    FrontendApplication.prototype.getAllEdges = function () {
        return __awaiter(this, void 0, void 0, function () {
            var graph;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.graphProvider.getGraphInstance()];
                    case 1:
                        graph = _a.sent();
                        return [2 /*return*/, graph.getEdges()];
                }
            });
        });
    };
    /** 获取画布连线 */
    FrontendApplication.prototype.getEdgeById = function (edgeId) {
        return __awaiter(this, void 0, void 0, function () {
            var graph;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.graphProvider.getGraphInstance()];
                    case 1:
                        graph = _a.sent();
                        return [2 /*return*/, graph.getCellById(edgeId)];
                }
            });
        });
    };
    /** 更新节点样式 */
    FrontendApplication.prototype.updateNodeAttrs = function (node, attrs) {
        return __awaiter(this, void 0, void 0, function () {
            var x6Node;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(node instanceof x6_1.Node)) return [3 /*break*/, 1];
                        node.setAttrs(attrs);
                        return [3 /*break*/, 3];
                    case 1: return [4 /*yield*/, this.getNodeById(node)];
                    case 2:
                        x6Node = _a.sent();
                        x6Node.setAttrs(attrs);
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /** 更新连线样式 */
    FrontendApplication.prototype.updateEdgeAttrs = function (edge, attrs) {
        return __awaiter(this, void 0, void 0, function () {
            var x6Edge;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(edge instanceof x6_1.Edge)) return [3 /*break*/, 1];
                        edge.setAttrs(attrs);
                        return [3 /*break*/, 3];
                    case 1: return [4 /*yield*/, this.getEdgeById(edge)];
                    case 2:
                        x6Edge = _a.sent();
                        x6Edge.setAttrs(attrs);
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /** 平移画布 */
    FrontendApplication.prototype.translateGraph = function (tx, ty) {
        return __awaiter(this, void 0, void 0, function () {
            var graph, currentTranslate;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.graphProvider.getGraphInstance()];
                    case 1:
                        graph = _a.sent();
                        currentTranslate = graph.translate();
                        graph.translate(currentTranslate.tx + tx, currentTranslate.ty + ty);
                        return [2 /*return*/];
                }
            });
        });
    };
    /** 暴露命令的执行接口 */
    FrontendApplication.prototype.executeCommand = function (commandId, cmdArgs, hook) {
        if (hook === void 0) { hook = []; }
        return this.commandService.executeCommand(commandId, cmdArgs, hook);
    };
    /** 暴露命令的批量执行接口 */
    FrontendApplication.prototype.executeCommandPipeline = function (cmdOptions) {
        return this.commandService.executeCommandPipeline(cmdOptions);
    };
    /**
     * Register global event listeners.
     */
    FrontendApplication.prototype.registerEventListeners = function () {
        var _this = this;
        /** 触发app的卸载逻辑 */
        window.addEventListener('unload', function () {
            _this.stopContributions();
        });
    };
    /**
     * Initialize and start the frontend application contributions.
     */
    FrontendApplication.prototype.startContributions = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _loop_1, this_1, _i, _a, contribution;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        console.log(this.contributions.getContributions());
                        _loop_1 = function (contribution) {
                            var error_1;
                            return __generator(this, function (_c) {
                                switch (_c.label) {
                                    case 0:
                                        if (!contribution.onStart) return [3 /*break*/, 4];
                                        _c.label = 1;
                                    case 1:
                                        _c.trys.push([1, 3, , 4]);
                                        return [4 /*yield*/, this_1.measure(contribution.constructor.name + ".onStart", function () {
                                                return contribution.onStart(_this);
                                            })];
                                    case 2:
                                        _c.sent();
                                        return [3 /*break*/, 4];
                                    case 3:
                                        error_1 = _c.sent();
                                        console.error('Could not start contribution', error_1);
                                        return [3 /*break*/, 4];
                                    case 4: return [2 /*return*/];
                                }
                            });
                        };
                        this_1 = this;
                        _i = 0, _a = this.contributions.getContributions();
                        _b.label = 1;
                    case 1:
                        if (!(_i < _a.length)) return [3 /*break*/, 4];
                        contribution = _a[_i];
                        return [5 /*yield**/, _loop_1(contribution)];
                    case 2:
                        _b.sent();
                        _b.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Stop the frontend application contributions. This is called when the window is unloaded.
     */
    FrontendApplication.prototype.stopContributions = function () {
        console.info('>>> Stopping frontend contributions...');
        for (var _i = 0, _a = this.contributions.getContributions(); _i < _a.length; _i++) {
            var contribution = _a[_i];
            if (contribution.onStop) {
                try {
                    contribution.onStop(this);
                }
                catch (error) {
                    console.error('Could not stop contribution', error);
                }
            }
        }
        console.info('<<< All frontend contributions have been stopped.');
    };
    FrontendApplication.prototype.measure = function (name, fn) {
        return __awaiter(this, void 0, void 0, function () {
            var startMark, endMark, result, _i, _a, item, contribution;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        startMark = name + "-start";
                        endMark = name + "-end";
                        performance.mark(startMark);
                        return [4 /*yield*/, fn()];
                    case 1:
                        result = _b.sent();
                        performance.mark(endMark);
                        performance.measure(name, startMark, endMark);
                        for (_i = 0, _a = performance.getEntriesByName(name); _i < _a.length; _i++) {
                            item = _a[_i];
                            contribution = "Frontend " + item.name;
                            if (item.duration > TIMER_WARNING_THRESHOLD) {
                                console.warn(contribution + " is slow, took: " + item.duration.toFixed(1) + " ms");
                            }
                            else {
                                console.debug(contribution + " took: " + item.duration.toFixed(1) + " ms");
                            }
                        }
                        performance.clearMeasures(name);
                        return [2 /*return*/, result];
                }
            });
        });
    };
    __decorate([
        (0, mana_syringe_1.contrib)(interface_2.IFrontendApplicationContribution),
        __metadata("design:type", Object)
    ], FrontendApplication.prototype, "contributions", void 0);
    __decorate([
        (0, mana_syringe_1.inject)(graph_provider_1.IGraphProvider),
        __metadata("design:type", Object)
    ], FrontendApplication.prototype, "graphProvider", void 0);
    __decorate([
        (0, mana_syringe_1.inject)(interface_1.IGraphCommandService),
        __metadata("design:type", Object)
    ], FrontendApplication.prototype, "commandService", void 0);
    __decorate([
        (0, mana_syringe_1.inject)(model_service_1.IModelService),
        __metadata("design:type", Object)
    ], FrontendApplication.prototype, "modelService", void 0);
    FrontendApplication = __decorate([
        (0, mana_syringe_1.singleton)()
    ], FrontendApplication);
    return FrontendApplication;
}());
exports.FrontendApplication = FrontendApplication;
//# sourceMappingURL=application.js.map