"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.XFlowCanvas = void 0;
var react_1 = __importDefault(require("react"));
var position_1 = require("../../common/position");
var graph_1 = require("../graph");
var extension_context_1 = require("./extension-context");
var global_config_context_1 = require("./global-config-context");
var x6_react_shape_1 = require("@antv/x6-react-shape");
var app_context_1 = require("./app-context");
var XFlowCanvas = function (props) {
    var app = (0, app_context_1.useXFlowApp)();
    /** x6画布parent的dom节点 */
    var rootRef = react_1.default.useRef(null);
    /** x6画布的dom节点 */
    var canvasRef = react_1.default.useRef(null);
    /** 生成配置中心 */
    var extensionRegistry = (0, extension_context_1.useExtensionRegistry)();
    /** 获取ContextService的配置 */
    var graphConfig = react_1.default.useMemo(function () {
        var config = props.config ? props.config : new graph_1.GraphConfig();
        config.setX6Config();
        return config;
        /** 保证只生成一次 */
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    /** X6_NODE_PORTAL_NODE_VIEW */
    var _a = (0, x6_react_shape_1.usePortal)(graphConfig.graphId), Portal = _a[0], setGraph = _a[1];
    react_1.default.useEffect(function () {
        app &&
            app.getGraphInstance().then(function (graph) {
                setGraph(graph);
            });
    }, [app, setGraph]);
    react_1.default.useEffect(function () {
        /** 设置画布parent dom节点、画布dom节点 */
        graphConfig.setRootContainer(rootRef.current);
        graphConfig.setGraphContainer(canvasRef.current);
        /** 关联XflowApp和Graph*/
        graphConfig.xflowInstanceId = extensionRegistry.getInstaceId();
        extensionRegistry.addCoreModule({ config: graphConfig, createModule: graph_1.createX6GraphModule });
        /** unmount */
        var destroy = function () { return __awaiter(void 0, void 0, void 0, function () {
            return __generator(this, function (_a) {
                graphConfig.dispose();
                return [2 /*return*/];
            });
        }); };
        return function () {
            destroy();
        };
        /** 保证只生成一次 */
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);
    var style = (0, position_1.usePositionStyle)(props.position);
    var rootClz = (0, global_config_context_1.useXflowPrefixCls)('canvas-root');
    var canvasClz = (0, global_config_context_1.useXflowPrefixCls)('x6-canvas');
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("div", { ref: rootRef, className: rootClz, style: style, id: graphConfig.graphId, tabIndex: 0 },
            react_1.default.createElement("div", { ref: canvasRef, className: canvasClz }),
            props.children),
        react_1.default.createElement(Portal, null)));
};
exports.XFlowCanvas = XFlowCanvas;
exports.XFlowCanvas.defaultProps = {
    isXFlowCanvas: true,
};
//# sourceMappingURL=canvas.js.map