"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerCommandConfig = exports.createCommandConfig = exports.CommandConfig = exports.getDefaultContributions = exports.CONFIG_TYPE = void 0;
var mana_syringe_1 = require("mana-syringe");
var interface_1 = require("../hooks/interface");
var utils_1 = require("../common/utils");
exports.CONFIG_TYPE = 'CommandConfig';
var getDefaultContributions = function () {
    return [];
};
exports.getDefaultContributions = getDefaultContributions;
var CommandConfig = /** @class */ (function () {
    function CommandConfig() {
        var _this = this;
        this.setCommandContributions = function (fn) {
            _this.getContributions = fn;
        };
        this.getCommandContributions = function () {
            return _this.getContributions();
        };
        this.registerHook = function (hooks) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.registerHookFn) {
                    return [2 /*return*/, this.registerHookFn(hooks)];
                }
                return [2 /*return*/, utils_1.disposableNoop];
            });
        }); };
        this.registerHookHub = function (registry) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.registerHookHubFn) {
                    return [2 /*return*/, this.registerHookHubFn(registry)];
                }
                return [2 /*return*/, utils_1.disposableNoop];
            });
        }); };
        /** 设置CONFIG类型 */
        this.CONFIG_TYPE = exports.CONFIG_TYPE;
        /** set command hook fn */
        this.setRegisterHookFn = function (fn) {
            _this.registerHookFn = fn;
        };
        /** 注册 command hook hub */
        this.setRegisterHookHubFn = function (fn) {
            _this.registerHookHubFn = fn;
        };
        /** 获取config的所有配置*/
        this.getConfig = function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, {
                        registerHookFn: this.registerHookFn,
                        getContributions: this.getContributions,
                        CONFIG_TYPE: this.CONFIG_TYPE,
                    }];
            });
        }); };
        this.getContributions = exports.getDefaultContributions;
    }
    return CommandConfig;
}());
exports.CommandConfig = CommandConfig;
/** 提供一个工厂方法 */
var createCommandConfig = function () {
    return new CommandConfig();
};
exports.createCommandConfig = createCommandConfig;
var registerCommandConfig = function (register, commandConfig) {
    register({
        token: CommandConfig,
        contrib: [interface_1.IHookContribution],
        lifecycle: mana_syringe_1.Syringe.Lifecycle.singleton,
        useDynamic: function () {
            return commandConfig;
        },
    });
};
exports.registerCommandConfig = registerCommandConfig;
//# sourceMappingURL=config.js.map