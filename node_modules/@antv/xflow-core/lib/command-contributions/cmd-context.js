"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CmdContext = void 0;
var mana_syringe_1 = require("mana-syringe");
var disposable_1 = require("../common/disposable");
var graph_provider_1 = require("../xflow-main/graph/graph-provider");
var model_service_1 = require("../model-service");
var hooks_1 = require("../hooks");
var interface_1 = require("../command/interface");
var CmdContext = /** @class */ (function () {
    function CmdContext() {
        var _this = this;
        /** undos 存在这里 */
        this.toDispose = new disposable_1.DisposableCollection();
        /** command handler的runtimeHook */
        this.runtimeHooks = [];
        /** 获取 x6 实例 */
        this.getX6Graph = function () { return __awaiter(_this, void 0, void 0, function () {
            var graphInstance;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (this.graph)
                            return [2 /*return*/, this.graph];
                        return [4 /*yield*/, this.graphProvider.getGraphInstance()];
                    case 1:
                        graphInstance = _a.sent();
                        this.graph = graphInstance;
                        return [2 /*return*/, graphInstance];
                }
            });
        }); };
        /** 获取 graph */
        this.getGraphConfig = function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.graphProvider.getGraphOptions()];
            });
        }); };
        this.getGraphMeta = function () { return __awaiter(_this, void 0, void 0, function () {
            var service, meta, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        service = this.getModelService();
                        _a = this.graphMeta;
                        if (_a) return [3 /*break*/, 2];
                        return [4 /*yield*/, model_service_1.MODELS.GRAPH_META.useValue(service)];
                    case 1:
                        _a = (_b.sent());
                        _b.label = 2;
                    case 2:
                        meta = _a;
                        return [2 /*return*/, meta];
                }
            });
        }); };
        /** 设置参数 */
        this.setArgs = function (args, runtimeHooks) {
            if (runtimeHooks === void 0) { runtimeHooks = []; }
            _this.args = args;
            _this.runtimeHooks = runtimeHooks;
            return { args: args, hooks: runtimeHooks };
        };
        /** 获取参数 */
        this.getArgs = function () {
            /** 注入graph meta */
            var args = __assign(__assign({}, _this.args), { graphMeta: _this.graphMeta, modelService: _this.getModelService(), commandService: _this.getCommands(), getX6Graph: _this.getX6Graph, getGraphConfig: _this.getGraphConfig });
            return { args: args, hooks: _this.runtimeHooks };
        };
        /** 设置执行结果 */
        this.setResult = function (result) {
            _this.result = result;
            return _this.result;
        };
        /** 获取执行结果 */
        this.getResult = function () {
            return _this.result;
        };
        /** hooks */
        this.getHooks = function () {
            return _this.hookService.hookProvider();
        };
        /** 获取Command Service */
        this.getCommands = function () {
            return _this.commandService;
        };
        /** 获取Context Service */
        this.getModelService = function () {
            return _this.modelService;
        };
        /** 添加undo */
        this.addUndo = function (disposable) {
            if (!Array.isArray(disposable)) {
                return _this.addUndo([disposable]);
            }
            _this.toDispose.pushAll(disposable);
        };
        /** 执行undo */
        this.undo = function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.toDispose.dispose()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); };
        /** 是否可以执行undo */
        this.isUndoable = function () {
            return !_this.toDispose.disposed;
        };
        /** 获取 toDispose */
        this.getDisposables = function () { return _this.toDispose; };
        /** 设置的共享变量 可以在command间共享 */
        this.setGlobal = function (key, value) {
            _this.commandService.setGlobal(key, value);
        };
        /** 获取共享变量 */
        this.getGlobal = function (key) {
            return _this.commandService.getGlobal(key);
        };
    }
    CmdContext.prototype.init = function () {
        var _this = this;
        this.getGraphMeta().then(function (meta) {
            _this.graphMeta = meta;
        });
    };
    __decorate([
        (0, mana_syringe_1.inject)(graph_provider_1.IGraphProvider),
        __metadata("design:type", Object)
    ], CmdContext.prototype, "graphProvider", void 0);
    __decorate([
        (0, mana_syringe_1.inject)(hooks_1.IHookService),
        __metadata("design:type", Object)
    ], CmdContext.prototype, "hookService", void 0);
    __decorate([
        (0, mana_syringe_1.inject)(interface_1.IGraphCommandService),
        __metadata("design:type", Object)
    ], CmdContext.prototype, "commandService", void 0);
    __decorate([
        (0, mana_syringe_1.inject)(model_service_1.IModelService),
        __metadata("design:type", Object)
    ], CmdContext.prototype, "modelService", void 0);
    __decorate([
        (0, mana_syringe_1.postConstruct)(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], CmdContext.prototype, "init", null);
    CmdContext = __decorate([
        (0, mana_syringe_1.injectable)()
    ], CmdContext);
    return CmdContext;
}());
exports.CmdContext = CmdContext;
//# sourceMappingURL=cmd-context.js.map