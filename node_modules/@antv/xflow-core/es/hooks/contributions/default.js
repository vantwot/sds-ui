var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { DisposableCollection, Disposable } from '../../common/disposable';
import { HookConfig } from '../config';
import { singleton, inject } from 'mana-syringe';
import { IHookContribution } from '../interface';
export var NsGraphEventPlugin;
(function (NsGraphEventPlugin) {
    NsGraphEventPlugin.pluginId = 'GraphEventPlugin';
})(NsGraphEventPlugin || (NsGraphEventPlugin = {}));
/**
 * 内置的hook contribution
 * 处理 config上的runtime的注册项
 */
let RuntimeContribution = class RuntimeContribution {
    constructor() {
        this.toDispose = new DisposableCollection();
        this.registerHook = (hooks) => __awaiter(this, void 0, void 0, function* () {
            const { hookRegisterFn } = yield this.hookConfig.getConfig();
            const d = hookRegisterFn(hooks);
            return Disposable.create(() => {
                d.dispose();
            });
        });
        this.registerHookHub = (registry) => __awaiter(this, void 0, void 0, function* () {
            const { hookhubRegisterFn } = yield this.hookConfig.getConfig();
            const d = hookhubRegisterFn(registry);
            return Disposable.create(() => {
                d.dispose();
            });
        });
    }
};
__decorate([
    inject(HookConfig),
    __metadata("design:type", HookConfig)
], RuntimeContribution.prototype, "hookConfig", void 0);
RuntimeContribution = __decorate([
    singleton({ contrib: IHookContribution })
], RuntimeContribution);
export { RuntimeContribution };
//# sourceMappingURL=default.js.map