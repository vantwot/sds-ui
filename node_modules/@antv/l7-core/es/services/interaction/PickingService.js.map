{"version":3,"sources":["../../../src/services/interaction/PickingService.ts"],"names":["decodePickingColor","DOM","inject","injectable","TYPES","isEventCrash","InteractionEvent","gl","PickingService","IRendererService","IGlobalConfigService","IInteractionService","ILayerService","layer","x","y","lngLat","type","target","isPicked","rendererService","getViewportSize","readPixels","getContainer","getContainerSize","width","height","DPR","getLayerConfig","enableHighlight","enableSelect","xInDevicePixel","yInDevicePixel","pickedColors","Math","floor","pickBufferScale","data","Uint8Array","framebuffer","pickingFBO","pickedFeatureIdx","rawFeature","getSource","getFeatureById","getCurrentPickId","layerTarget","featureId","feature","setCurrentPickId","triggerHoverOnLayer","highlightPickedFeature","toString","selectedId","getCurrentSelectedId","selectFeature","setCurrentSelectedId","id","createTexture2D","createFramebuffer","configService","getSceneConfig","color","round","wrapS","CLAMP_TO_EDGE","wrapT","interactionService","on","Hover","pickingAllLayer","bind","box","cb","useFramebuffer","clear","resizePickingFBO","stencil","depth","hooks","beforePickingEncode","call","renderModels","afterPickingEncode","features","pickBox","map","v","tmpV","xMin","yMin","xMax","yMax","w","min","h","featuresIdMap","i","length","slice","push","container","getContext","getBoundingClientRect","alreadyInPicking","layerService","alreadyInRendering","isMapDragging","pickingLayers","renderLayers","resize","layers","getLayers","filter","needPick","reverse","some","pickFromPickingFBO","enablePropagation","emit","r","g","b","beforeHighlight","beforeSelect"],"mappings":"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","sourcesContent":["import {\n  decodePickingColor,\n  DOM,\n  encodePickingColor,\n  isMini,\n} from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { TYPES } from '../../types';\nimport { isEventCrash } from '../../utils/dom';\nimport { IGlobalConfigService, ISceneConfig } from '../config/IConfigService';\nimport {\n  IInteractionService,\n  IInteractionTarget,\n  InteractionEvent,\n} from '../interaction/IInteractionService';\nimport { ILayer, ILayerService } from '../layer/ILayerService';\nimport { ILngLat } from '../map/IMapService';\nimport { gl } from '../renderer/gl';\nimport { IFramebuffer } from '../renderer/IFramebuffer';\nimport { IRendererService } from '../renderer/IRendererService';\nimport { IPickingService } from './IPickingService';\n@injectable()\nexport default class PickingService implements IPickingService {\n  @inject(TYPES.IRendererService)\n  private rendererService: IRendererService;\n\n  @inject(TYPES.IGlobalConfigService)\n  private readonly configService: IGlobalConfigService;\n\n  @inject(TYPES.IInteractionService)\n  private interactionService: IInteractionService;\n\n  @inject(TYPES.ILayerService)\n  private layerService: ILayerService;\n  private pickingFBO: IFramebuffer;\n\n  private width: number = 0;\n\n  private height: number = 0;\n\n  private alreadyInPicking: boolean = false;\n\n  private pickBufferScale: number = 1.0;\n\n  public init(id: string) {\n    const {\n      createTexture2D,\n      createFramebuffer,\n      getViewportSize,\n      getContainer,\n    } = this.rendererService;\n\n    let { width, height } = this.getContainerSize(\n      getContainer() as HTMLCanvasElement | HTMLElement,\n    );\n    width *= DOM.DPR;\n    height *= DOM.DPR;\n    this.pickBufferScale =\n      this.configService.getSceneConfig(id).pickBufferScale || 1;\n    // 创建 picking framebuffer，后续实时 resize\n    this.pickingFBO = createFramebuffer({\n      color: createTexture2D({\n        width: Math.round(width / this.pickBufferScale),\n        height: Math.round(height / this.pickBufferScale),\n        wrapS: gl.CLAMP_TO_EDGE,\n        wrapT: gl.CLAMP_TO_EDGE,\n      }),\n    });\n\n    // 监听 hover 事件\n    this.interactionService.on(\n      InteractionEvent.Hover,\n      this.pickingAllLayer.bind(this),\n    );\n  }\n\n  public async boxPickLayer(\n    layer: ILayer,\n    box: [number, number, number, number],\n    cb: (...args: any[]) => void,\n  ): Promise<any> {\n    const { useFramebuffer, clear, getContainer } = this.rendererService;\n    this.resizePickingFBO();\n    useFramebuffer(this.pickingFBO, () => {\n      clear({\n        framebuffer: this.pickingFBO,\n        color: [0, 0, 0, 0],\n        stencil: 0,\n        depth: 1,\n      });\n      layer.hooks.beforePickingEncode.call();\n      layer.renderModels();\n      layer.hooks.afterPickingEncode.call();\n      const features = this.pickBox(layer, box);\n      cb(features);\n    });\n  }\n\n  public pickBox(layer: ILayer, box: [number, number, number, number]): any[] {\n    const [xMin, yMin, xMax, yMax] = box.map((v) => {\n      const tmpV = v < 0 ? 0 : v;\n      return Math.floor((tmpV * DOM.DPR) / this.pickBufferScale);\n    });\n    const { getViewportSize, readPixels, getContainer } = this.rendererService;\n    let { width, height } = this.getContainerSize(\n      getContainer() as HTMLCanvasElement | HTMLElement,\n    );\n    width *= DOM.DPR;\n    height *= DOM.DPR;\n    if (\n      xMin > ((width - 1) * DOM.DPR) / this.pickBufferScale ||\n      xMax < 0 ||\n      yMin > ((height - 1) * DOM.DPR) / this.pickBufferScale ||\n      yMax < 0\n    ) {\n      return [];\n    }\n    let pickedColors: Uint8Array | undefined;\n    const w = Math.min(width / this.pickBufferScale, xMax) - xMin;\n    const h = Math.min(height / this.pickBufferScale, yMax) - yMin;\n    pickedColors = readPixels({\n      x: xMin,\n      // 视口坐标系原点在左上，而 WebGL 在左下，需要翻转 Y 轴\n      y: Math.floor(height / this.pickBufferScale - (yMax + 1)),\n      width: w,\n      height: h,\n      data: new Uint8Array(w * h * 4),\n      framebuffer: this.pickingFBO,\n    });\n\n    const features = [];\n    const featuresIdMap: { [key: string]: boolean } = {};\n    for (let i = 0; i < pickedColors.length / 4; i = i + 1) {\n      const color = pickedColors.slice(i * 4, i * 4 + 4);\n      const pickedFeatureIdx = decodePickingColor(color);\n      if (pickedFeatureIdx !== -1 && !featuresIdMap[pickedFeatureIdx]) {\n        const rawFeature = layer.getSource().getFeatureById(pickedFeatureIdx);\n        features.push(rawFeature);\n        featuresIdMap[pickedFeatureIdx] = true;\n      }\n    }\n    return features;\n  }\n\n  // 获取容器的大小 - 兼容小程序环境\n  private getContainerSize(container: HTMLCanvasElement | HTMLElement) {\n    if (!!(container as HTMLCanvasElement).getContext) {\n      return {\n        width: (container as HTMLCanvasElement).width / DOM.DPR,\n        height: (container as HTMLCanvasElement).height / DOM.DPR,\n      };\n    } else {\n      return container.getBoundingClientRect();\n    }\n  }\n  private async pickingAllLayer(target: IInteractionTarget) {\n    if (\n      // TODO: this.alreadyInPicking 避免多次重复拾取\n      this.alreadyInPicking ||\n      // TODO: this.layerService.alreadyInRendering 一个渲染序列中只进行一次拾取操作\n      this.layerService.alreadyInRendering ||\n      // TODO: this.layerService.isMapDragging() 如果地图正在拖拽 则不进行拾取操作\n      this.layerService.isMapDragging()\n    ) {\n      return;\n    }\n    this.alreadyInPicking = true;\n    await this.pickingLayers(target);\n    this.layerService.renderLayers();\n    this.alreadyInPicking = false;\n  }\n\n  private resizePickingFBO() {\n    const { getContainer } = this.rendererService;\n    let { width, height } = this.getContainerSize(\n      getContainer() as HTMLCanvasElement | HTMLElement,\n    );\n    width *= DOM.DPR;\n    height *= DOM.DPR;\n    if (this.width !== width || this.height !== height) {\n      this.pickingFBO.resize({\n        width: Math.round(width / this.pickBufferScale),\n        height: Math.round(height / this.pickBufferScale),\n      });\n      this.width = width;\n      this.height = height;\n    }\n  }\n  private async pickingLayers(target: IInteractionTarget) {\n    const {\n      getViewportSize,\n      useFramebuffer,\n      clear,\n      getContainer,\n    } = this.rendererService;\n\n    this.resizePickingFBO();\n\n    useFramebuffer(this.pickingFBO, () => {\n      const layers = this.layerService.getLayers();\n      layers\n        .filter((layer) => layer.needPick(target.type))\n        .reverse()\n        .some((layer) => {\n          clear({\n            framebuffer: this.pickingFBO,\n            color: [0, 0, 0, 0],\n            stencil: 0,\n            depth: 1,\n          });\n          layer.hooks.beforePickingEncode.call();\n          layer.renderModels();\n          layer.hooks.afterPickingEncode.call();\n          const isPicked = this.pickFromPickingFBO(layer, target);\n          return isPicked && !layer.getLayerConfig().enablePropagation;\n        });\n    });\n  }\n\n  private pickFromPickingFBO = (\n    layer: ILayer,\n    { x, y, lngLat, type, target }: IInteractionTarget,\n  ) => {\n    let isPicked = false;\n    const { getViewportSize, readPixels, getContainer } = this.rendererService;\n    let { width, height } = this.getContainerSize(\n      getContainer() as HTMLCanvasElement | HTMLElement,\n    );\n    width *= DOM.DPR;\n    height *= DOM.DPR;\n    const { enableHighlight, enableSelect } = layer.getLayerConfig();\n\n    const xInDevicePixel = x * DOM.DPR;\n    const yInDevicePixel = y * DOM.DPR;\n    if (\n      xInDevicePixel > width - 1 * DOM.DPR ||\n      xInDevicePixel < 0 ||\n      yInDevicePixel > height - 1 * DOM.DPR ||\n      yInDevicePixel < 0\n    ) {\n      return false;\n    }\n    let pickedColors: Uint8Array | undefined;\n    pickedColors = readPixels({\n      x: Math.floor(xInDevicePixel / this.pickBufferScale),\n      // 视口坐标系原点在左上，而 WebGL 在左下，需要翻转 Y 轴\n      y: Math.floor((height - (y + 1) * DOM.DPR) / this.pickBufferScale),\n      width: 1,\n      height: 1,\n      data: new Uint8Array(1 * 1 * 4),\n      framebuffer: this.pickingFBO,\n    });\n    if (\n      pickedColors[0] !== 0 ||\n      pickedColors[1] !== 0 ||\n      pickedColors[2] !== 0\n    ) {\n      const pickedFeatureIdx = decodePickingColor(pickedColors);\n      const rawFeature = layer.getSource().getFeatureById(pickedFeatureIdx);\n      if (\n        pickedFeatureIdx !== layer.getCurrentPickId() &&\n        type === 'mousemove'\n      ) {\n        type = 'mouseenter';\n      }\n\n      const layerTarget = {\n        x,\n        y,\n        type,\n        lngLat,\n        featureId: pickedFeatureIdx,\n        feature: rawFeature,\n        target,\n      };\n      if (!rawFeature) {\n        // this.logger.error(\n        //   '未找到颜色编码解码后的原始 feature，请检查 fragment shader 中末尾是否添加了 `gl_FragColor = filterColor(gl_FragColor);`',\n        // );\n      } else {\n        // trigger onHover/Click callback on layer\n        isPicked = true;\n        layer.setCurrentPickId(pickedFeatureIdx);\n        this.triggerHoverOnLayer(layer, layerTarget); // 触发拾取事件\n      }\n    } else {\n      // 未选中\n      const layerTarget = {\n        x,\n        y,\n        lngLat,\n        type:\n          layer.getCurrentPickId() !== null && type === 'mousemove'\n            ? 'mouseout'\n            : 'un' + type,\n        featureId: null,\n        target,\n        feature: null,\n      };\n      this.triggerHoverOnLayer(layer, {\n        ...layerTarget,\n        type: 'unpick',\n      });\n      this.triggerHoverOnLayer(layer, layerTarget);\n      layer.setCurrentPickId(null);\n    }\n\n    if (enableHighlight) {\n      this.highlightPickedFeature(layer, pickedColors);\n    }\n    if (\n      enableSelect &&\n      type === 'click' &&\n      pickedColors?.toString() !== [0, 0, 0, 0].toString()\n    ) {\n      const selectedId = decodePickingColor(pickedColors);\n      if (\n        layer.getCurrentSelectedId() === null ||\n        selectedId !== layer.getCurrentSelectedId()\n      ) {\n        this.selectFeature(layer, pickedColors);\n        layer.setCurrentSelectedId(selectedId);\n      } else {\n        this.selectFeature(layer, new Uint8Array([0, 0, 0, 0])); // toggle select\n        layer.setCurrentSelectedId(null);\n      }\n    }\n    return isPicked;\n  };\n  private triggerHoverOnLayer(\n    layer: ILayer,\n    target: {\n      x: number;\n      y: number;\n      type: string;\n      lngLat: ILngLat;\n      feature: unknown;\n      featureId: number | null;\n    },\n  ) {\n    // layer.emit(target.type, target);\n    // 判断是否发生事件冲突\n    if (isEventCrash(target)) {\n      layer.emit(target.type, target);\n    }\n  }\n\n  /**\n   * highlight 如果直接修改选中 feature 的 buffer，存在两个问题：\n   * 1. 鼠标移走时无法恢复\n   * 2. 无法实现高亮颜色与原始原色的 alpha 混合\n   * 因此高亮还是放在 shader 中做比较好\n   * @example\n   * this.layer.color('name', ['#000000'], {\n   *  featureRange: {\n   *    startIndex: pickedFeatureIdx,\n   *    endIndex: pickedFeatureIdx + 1,\n   *  },\n   * });\n   */\n  private highlightPickedFeature(\n    layer: ILayer,\n    pickedColors: Uint8Array | undefined,\n  ) {\n    // @ts-ignore\n    const [r, g, b] = pickedColors;\n    layer.hooks.beforeHighlight.call([r, g, b]);\n  }\n\n  private selectFeature(layer: ILayer, pickedColors: Uint8Array | undefined) {\n    // @ts-ignore\n    const [r, g, b] = pickedColors;\n    layer.hooks.beforeSelect.call([r, g, b]);\n  }\n}\n"],"file":"PickingService.js"}