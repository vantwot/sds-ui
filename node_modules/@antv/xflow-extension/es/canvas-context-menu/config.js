var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { uuidv4 } from '@antv/xflow-core';
export var NsContextMenu;
(function (NsContextMenu) {
    NsContextMenu.CONFIG_TYPE = 'ContextMenuConfig';
})(NsContextMenu || (NsContextMenu = {}));
export class ContextMenuConfig {
    /** uuid */
    constructor(moduleId) {
        /** config type */
        this.CONFIG_TYPE = NsContextMenu.CONFIG_TYPE;
        /** 设置组件的props */
        this.setMenuModelService = (service) => {
            this.menuModelService = service;
        };
        /** 设置组件的props */
        this.setCustomMenuRender = (service) => {
            this.menuCustomRender = service;
        };
        /** 获取Props */
        this.getConfig = () => __awaiter(this, void 0, void 0, function* () {
            return {
                CONFIG_TYPE: this.CONFIG_TYPE,
                menuCustomRender: this.menuCustomRender,
                menuModelService: this.menuModelService,
            };
        });
        this.moduleId = moduleId || uuidv4();
    }
    /** dispose */
    dispose() { }
}
//# sourceMappingURL=config.js.map