"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonSchemaForm = exports.JsonSchemaFormMain = exports.executeJsonSchemaFormCommand = exports.FormItemWrapper = void 0;
var react_1 = __importDefault(require("react"));
var xflow_core_1 = require("@antv/xflow-core");
var panel_footer_1 = require("./panel-footer");
var panel_header_1 = require("./panel-header");
var panel_body_1 = require("./panel-body");
var utils_1 = require("./utils");
var service_1 = require("./service");
var schema_form_1 = require("./schema-form");
Object.defineProperty(exports, "FormItemWrapper", { enumerable: true, get: function () { return schema_form_1.FormItemWrapper; } });
var service_2 = require("./service");
Object.defineProperty(exports, "executeJsonSchemaFormCommand", { enumerable: true, get: function () { return service_2.executeJsonSchemaFormCommand; } });
var base_panel_1 = require("../base-panel");
/** useFormPanelData获取数据 */
var JsonSchemaFormMain = function (props) {
    var prefixClz = props.prefixClz;
    var getCustomRenderComponent = props.getCustomRenderComponent, afterUpdatingCb = props.afterUpdatingCb, _a = props.formValueUpdateService, formValueUpdateService = _a === void 0 ? function () { } : _a;
    var _b = (0, service_1.useJsonSchemaFormModel)(props), state = _b.state, commandService = _b.commandService, modelService = _b.modelService;
    // 联动更新form items的值
    var triggerUpdate = react_1.default.useCallback(function (form, values) {
        if (values === void 0) { values = {}; }
        return __awaiter(void 0, void 0, void 0, function () {
            var changedFields, allFields, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        form.setFieldsValue(values);
                        changedFields = Object.entries(values).map(function (_a) {
                            var key = _a[0], val = _a[1];
                            return { name: key, value: val };
                        });
                        allFields = Object.entries(state.targetData).map(function (_a) {
                            var key = _a[0], val = _a[1];
                            return { name: key, value: val };
                        });
                        return [4 /*yield*/, formValueUpdateService({
                                allFields: allFields,
                                values: changedFields,
                                modelService: modelService,
                                commandService: commandService,
                                targetData: state.targetData,
                                targetType: state.targetType,
                            })];
                    case 1:
                        result = _a.sent();
                        if (afterUpdatingCb) {
                            afterUpdatingCb(result);
                        }
                        return [2 /*return*/];
                }
            });
        });
    }, [
        afterUpdatingCb,
        commandService,
        formValueUpdateService,
        modelService,
        state.targetData,
        state.targetType,
    ]);
    // 在fields change时的回调
    var onFieldsChange = react_1.default.useCallback(function (changedFields, allFields) { return __awaiter(void 0, void 0, void 0, function () {
        var result;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, formValueUpdateService({
                        values: changedFields,
                        allFields: allFields,
                        modelService: modelService,
                        commandService: commandService,
                        targetData: state.targetData,
                        targetType: state.targetType,
                    })];
                case 1:
                    result = _a.sent();
                    if (afterUpdatingCb) {
                        afterUpdatingCb(result);
                    }
                    return [2 /*return*/];
            }
        });
    }); }, [
        afterUpdatingCb,
        commandService,
        formValueUpdateService,
        modelService,
        state.targetData,
        state.targetType,
    ]);
    /** schema为空的情况  */
    var noSchema = react_1.default.useMemo(function () {
        try {
            return state.schema.tabs.length === 0 || !state.schema;
        }
        catch (error) {
            return true;
        }
    }, [state.schema]);
    var _c = (0, utils_1.usePanelLyaoutStyle)(props, noSchema), headerStyle = _c.headerStyle, bodyStyle = _c.bodyStyle, footerStyle = _c.footerStyle;
    /** 支持自定义渲染 */
    if (getCustomRenderComponent) {
        var Component = getCustomRenderComponent(state.targetType, state.targetData, modelService, commandService);
        if (Component) {
            return react_1.default.createElement(Component, __assign(__assign({}, props), { headerStyle: headerStyle, bodyStyle: bodyStyle, footerStyle: footerStyle, targetData: state.targetData, targetType: state.targetType, modelService: modelService, commandService: commandService }));
        }
    }
    return (react_1.default.createElement("div", { className: prefixClz },
        react_1.default.createElement(panel_header_1.PanelHeader, __assign({ hasSchema: !noSchema }, props, { state: state, style: headerStyle, prefixClz: props.prefixClz })),
        react_1.default.createElement(panel_body_1.PanelBody, __assign({}, props, { key: state.targetData && state.targetData.id, style: bodyStyle, prefixClz: props.prefixClz, loading: state.loading, schema: state.schema, triggerUpdate: triggerUpdate, onFieldsChange: onFieldsChange })),
        react_1.default.createElement(panel_footer_1.PanelFooter, __assign({}, props, { state: state, style: footerStyle }))));
};
exports.JsonSchemaFormMain = JsonSchemaFormMain;
var JsonSchemaForm = function (props) {
    var prefixClz = (0, xflow_core_1.useXflowPrefixCls)('json-schema-form');
    return (react_1.default.createElement(base_panel_1.WorkspacePanel, __assign({}, props, { className: prefixClz }),
        react_1.default.createElement(exports.JsonSchemaFormMain, __assign({}, props, { prefixClz: prefixClz }))));
};
exports.JsonSchemaForm = JsonSchemaForm;
//# sourceMappingURL=main.js.map