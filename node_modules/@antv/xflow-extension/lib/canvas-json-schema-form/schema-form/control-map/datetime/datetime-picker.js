"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatetimePicker = void 0;
var react_1 = __importStar(require("react"));
var antd_1 = require("antd");
var moment_1 = __importDefault(require("moment"));
var DatetimePicker = function (props) {
    var className = props.className, style = props.style, disabled = props.disabled, value = props.value, onChange = props.onChange;
    var _a = (0, react_1.useState)(value ? (0, moment_1.default)(value) : undefined), innerValue = _a[0], setInnerValue = _a[1];
    var mountedRef = (0, react_1.useRef)(false);
    (0, react_1.useEffect)(function () {
        if (!mountedRef.current) {
            mountedRef.current = true;
            return;
        }
        var valueMoment = (0, moment_1.default)(value);
        if (valueMoment.isValid()) {
            setInnerValue(valueMoment);
        }
    }, [value]);
    var onChangeMoment = (0, react_1.useCallback)(function (_, dateString) {
        var nextMoment = (0, moment_1.default)(dateString);
        setInnerValue(nextMoment.isValid() ? nextMoment : undefined);
        if (typeof onChange === 'function') {
            onChange(nextMoment.isValid() ? nextMoment.format('YYYY-MM-DD HH:mm:ss') : '');
        }
    }, [onChange]);
    return (react_1.default.createElement(antd_1.DatePicker, { showTime: true, allowClear: true, className: className, style: style, disabled: disabled, value: innerValue, onChange: onChangeMoment }));
};
exports.DatetimePicker = DatetimePicker;
//# sourceMappingURL=datetime-picker.js.map