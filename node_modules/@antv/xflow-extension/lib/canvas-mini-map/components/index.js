"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CanvasMiniMap = exports.getDefaultMinimapOptions = exports.CONFIG_TYPE = void 0;
var react_1 = __importDefault(require("react"));
var module_1 = require("../module");
var xflow_core_1 = require("@antv/xflow-core");
var xflow_core_2 = require("@antv/xflow-core");
var x6_node_view_1 = require("../x6-node-view");
/** 配置类型 */
exports.CONFIG_TYPE = 'CanvasMiniMap';
/** 获取默认配置 */
var getDefaultMinimapOptions = function () {
    return {
        grid: false,
        enabled: true,
        width: 200,
        height: 120,
        padding: 8,
        graphOptions: {
            async: true,
            getCellView: function (cell) {
                if (cell.isNode()) {
                    return x6_node_view_1.SimpleNodeView;
                }
            },
            createCellView: function (cell) {
                if (cell.isEdge()) {
                    return null;
                }
            },
        },
    };
};
exports.getDefaultMinimapOptions = getDefaultMinimapOptions;
var CanvasMiniMap = function (props) {
    var nodeFillColor = props.nodeFillColor, _a = props.borderColor, borderColor = _a === void 0 ? '#ced4de' : _a, _b = props.handlerColor, handlerColor = _b === void 0 ? 'rgba(0,0,0,.3)' : _b, _c = props.miniMapClz, miniMapClz = _c === void 0 ? '' : _c, _d = props.position, position = _d === void 0 ? { bottom: 12, right: 12 } : _d, _e = props.minimapOptions, minimapOptions = _e === void 0 ? {} : _e;
    /** x6画布的dom节点 */
    var minimapRef = react_1.default.useRef(null);
    var minimapConfigRef = react_1.default.useRef(props.minimapOptions);
    var classNameSet = react_1.default.useMemo(function () {
        return new Set([
            miniMapClz,
            'xflow-minimap',
            'minimap-instacne-' + Date.now().toString(),
        ]);
    }, [miniMapClz]);
    var getConfig = react_1.default.useMemo(function () { return function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, __assign(__assign(__assign({}, (0, exports.getDefaultMinimapOptions)()), minimapConfigRef.current), { container: minimapRef.current })];
        });
    }); }; }, [minimapRef]);
    var style = (0, xflow_core_2.usePositionStyle)(position);
    react_1.default.useEffect(function () {
        /** 设置minimap容器 */
        minimapConfigRef.current = minimapOptions;
    }, [minimapConfigRef, minimapOptions]);
    react_1.default.useEffect(function () {
        /** 设置Node样式 */
        if (nodeFillColor) {
            x6_node_view_1.SimpleNodeView.setNodeFillColor(nodeFillColor);
        }
    }, [nodeFillColor]);
    react_1.default.useEffect(function () {
        var containerSelector = Array.from(classNameSet).reduce(function (acc, clz) { return (clz ? acc + "." + clz : acc); }, '');
        var cssString = "\n      " + containerSelector + " .x6-widget-minimap-viewport {\n        border: 1px solid " + borderColor + ";\n        margin: 0;\n      }\n      " + containerSelector + " .x6-widget-minimap-viewport-zoom {\n        border: 1px solid " + handlerColor + "; \n      }\n    ";
        var $style = (0, xflow_core_1.insertCss)(cssString);
        return function () {
            document.head.removeChild($style);
        };
    }, [borderColor, classNameSet, handlerColor]);
    var clzName = Array.from(classNameSet).join(' ');
    return (react_1.default.createElement(xflow_core_2.XFlowAppExtensionMoudle, { config: {
            getConfig: getConfig,
            CONFIG_TYPE: exports.CONFIG_TYPE,
        }, createModule: module_1.createModule },
        react_1.default.createElement("div", { ref: minimapRef, className: clzName, style: style })));
};
exports.CanvasMiniMap = CanvasMiniMap;
//# sourceMappingURL=index.js.map