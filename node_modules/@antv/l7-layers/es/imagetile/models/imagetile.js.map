{"version":3,"sources":["../../../src/imagetile/models/imagetile.ts"],"names":["gl","BaseModel","RasterImageTriangulation","Tile","ImageTileModel","mapService","getBounds","WS","EN","NE","lng","lat","SW","tileLayer","calCurrentTiles","tileCenter","getCenter","currentZoom","getZoom","minSourceZoom","getMinZoom","minZoom","maxZoom","getMaxZoom","layer","zIndex","getLayerConfig","resolution","maxSourceZoom","source","getSource","data","tileurl","url","layerService","crstype","tile","t","Date","getTime","on","newT","cutT","buildLayerModel","moduleName","vertexShader","ImageTileVert","fragmentShader","ImageTileFrag","triangulation","primitive","TRIANGLES","depth","enable","blend","getBlend","removeTiles","initModels"],"mappings":"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","sourcesContent":["import { gl, IModelUniform } from '@antv/l7-core';\nimport BaseModel from '../../core/BaseModel';\nimport { RasterImageTriangulation } from '../../core/triangulation';\nimport ImageTileFrag from './shaders/imagetile_frag.glsl';\nimport ImageTileVert from './shaders/imagetile_vert.glsl';\n\nimport Tile from '../utils/Tile';\n\ninterface IImageLayerStyleOptions {\n  resolution: string;\n  maxSourceZoom: number;\n}\n\nexport default class ImageTileModel extends BaseModel {\n  public tileLayer: any;\n  public getUninforms(): IModelUniform {\n    return {};\n  }\n\n  // 瓦片方法\n  public tile() {\n    const [WS, EN] = this.mapService.getBounds();\n    const NE = { lng: EN[0], lat: EN[1] };\n    const SW = { lng: WS[0], lat: WS[1] };\n    this.tileLayer.calCurrentTiles({\n      NE,\n      SW,\n      tileCenter: this.mapService.getCenter(),\n      currentZoom: this.mapService.getZoom(),\n      minSourceZoom: this.mapService.getMinZoom(),\n      minZoom: this.mapService.getMinZoom(),\n      maxZoom: this.mapService.getMaxZoom(),\n    });\n  }\n\n  public initModels() {\n    // TODO: 瓦片组件默认在最下层\n    this.layer.zIndex = -999;\n    const {\n      resolution = 'low',\n      maxSourceZoom = 17,\n    } = this.layer.getLayerConfig() as IImageLayerStyleOptions;\n    const source = this.layer.getSource();\n    // 当存在 url 的时候生效\n    if (source.data.tileurl) {\n      this.tileLayer = new Tile({\n        url: source.data.tileurl,\n        layerService: this.layerService,\n        layer: this.layer,\n        resolution,\n        maxSourceZoom,\n        // Tip: 当前为 default\n        crstype: 'epsg3857',\n      });\n\n      // TODO: 首次加载的时候请求瓦片\n      this.tile();\n\n      let t = new Date().getTime();\n      this.mapService.on('mapchange', () => {\n        const newT = new Date().getTime();\n        const cutT = newT - t;\n        t = newT;\n        // TODO: 限制刷新频率\n        if (cutT < 16) {\n          return;\n        }\n        // TODO: 瓦片地图最大层级为 2\n        if (this.mapService.getZoom() < 2.0) {\n          return;\n        }\n        this.tile();\n      });\n    }\n\n    return [\n      this.layer.buildLayerModel({\n        moduleName: 'ImageTileLayer',\n        vertexShader: ImageTileVert,\n        fragmentShader: ImageTileFrag,\n        triangulation: RasterImageTriangulation,\n        primitive: gl.TRIANGLES,\n        depth: { enable: false },\n        blend: this.getBlend(),\n      }),\n    ];\n  }\n\n  public clearModels() {\n    this.tileLayer.removeTiles();\n  }\n\n  public buildModels() {\n    return this.initModels();\n  }\n\n  protected registerBuiltinAttributes() {\n    return;\n  }\n}\n"],"file":"imagetile.js"}