"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.L7Plot = void 0;
var tslib_1 = require("tslib");
var util_1 = require("@antv/util");
var map_1 = require("../core/map");
var utils_1 = require("../utils");
var layer_group_1 = require("../core/layer/layer-group");
var types_1 = require("./types");
var DEFAULT_OPTIONS = {};
var L7Plot = /** @class */ (function (_super) {
    (0, tslib_1.__extends)(L7Plot, _super);
    function L7Plot(container, options) {
        var _this = _super.call(this, options) || this;
        /**
         * 图表实例
         */
        _this.plots = [];
        _this.container = _this.createContainer(container);
        _this.theme = _this.createTheme();
        _this.scene = _this.createScene();
        _this.registerResources();
        _this.render();
        _this.inited = true;
        return _this;
    }
    /**
     * 获取默认配置
     */
    L7Plot.prototype.getDefaultOptions = function () {
        return (0, utils_1.deepAssign)({}, map_1.Map.DefaultOptions, L7Plot.DefaultOptions);
    };
    /**
     * 创建图层
     */
    L7Plot.prototype.createLayers = function () {
        var layerGroup = new layer_group_1.LayerGroup([]);
        var layers = this.options.layers || [];
        for (var index = 0; index < layers.length; index++) {
            var _a = layers[index], type = _a.type, options = (0, tslib_1.__rest)(_a, ["type"]);
            var LayerClass = types_1.LAYERS_MAP[type];
            if ((0, util_1.isUndefined)(LayerClass)) {
                throw new Error("Don't exist ".concat(type, " layer"));
            }
            var layer = new LayerClass(options);
            layerGroup.addLayer(layer);
        }
        return layerGroup;
    };
    /**
     * 更新图层
     */
    L7Plot.prototype.updateLayers = function (layers) {
        //
    };
    /**
     * 更新 Plot
     */
    L7Plot.prototype.updatePlots = function (plots) {
        //
    };
    /**
     * 渲染
     */
    L7Plot.prototype.render = function () {
        var layerGroup = this.createLayers();
        if (this.inited) {
            this.layerGroup.removeAllLayer();
            layerGroup.addTo(this.scene);
            this.layerGroup = layerGroup;
            this.updateControls();
        }
        else {
            this.layerGroup = layerGroup;
            this.onLayersLoaded();
            layerGroup.addTo(this.scene);
        }
    };
    /**
     * 图层加载成功
     */
    L7Plot.prototype.onLayersLoaded = function () {
        var _this = this;
        var onLoaded = function () {
            _this.renderPlots();
            _this.initControls();
            _this.loaded = true;
            _this.emit('loaded');
        };
        if (this.scene['sceneService'].loaded) {
            this.sceneLoaded = true;
            this.layersLoaded && onLoaded();
        }
        else {
            this.scene.once('loaded', function () {
                _this.sceneLoaded = true;
                _this.layersLoaded && onLoaded();
            });
        }
        if (this.layerGroup.isEmpty()) {
            this.layersLoaded = true;
        }
        else {
            this.layerGroup.once('inited-all', function () {
                _this.layersLoaded = true;
                _this.sceneLoaded && onLoaded();
            });
        }
    };
    /**
     * 渲染 plot
     */
    L7Plot.prototype.renderPlot = function (plot) {
        var type = plot.type, legend = plot.legend, layerMenu = plot.layerMenu, options = (0, tslib_1.__rest)(plot, ["type", "legend", "layerMenu"]);
        var PlotClass = types_1.PLOTS_MAP[type];
        if ((0, util_1.isUndefined)(PlotClass)) {
            throw new Error("Don't exist ".concat(type, " plot"));
        }
        var plotInstance = new PlotClass(options);
        plotInstance.attachToScene(this.scene, this.theme);
        this.plots.push(plotInstance);
    };
    /**
     * 渲染 plots
     */
    L7Plot.prototype.renderPlots = function () {
        var plots = this.options.plots || [];
        for (var index = 0; index < plots.length; index++) {
            var plot = plots[index];
            this.renderPlot(plot);
        }
    };
    /**
     * 添加图表
     */
    L7Plot.prototype.addPlot = function (plot) {
        // TODO: duplicate plot
        this.renderPlot(plot);
    };
    /**
     * 默认的 options 配置项
     */
    L7Plot.DefaultOptions = DEFAULT_OPTIONS;
    return L7Plot;
}(map_1.Map));
exports.L7Plot = L7Plot;
//# sourceMappingURL=index.js.map