"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createCountryBoundaryLayer = void 0;
var path_layer_1 = require("../../layers/path-layer");
var constants_1 = require("./constants");
var createCountryBoundaryLayer = function (data, plotLayerConfig) {
    var _a = plotLayerConfig || {}, visible = _a.visible, minZoom = _a.minZoom, maxZoom = _a.maxZoom, _b = _a.zIndex, zIndex = _b === void 0 ? 0 : _b;
    var chinaBoundaryFeatures = data.features.filter(function (_a) {
        var properties = _a.properties;
        return ['coast', 'hkm', 'national'].includes(properties.type);
    });
    var disputeBoundaryFeatures = data.features.filter(function (_a) {
        var properties = _a.properties;
        return properties.type === 'dispute';
    });
    var chinaBoundaryLayer = new path_layer_1.PathLayer({
        name: 'chinaBoundaryLayer',
        visible: visible,
        minZoom: minZoom,
        maxZoom: maxZoom,
        zIndex: zIndex + 0.1,
        source: {
            data: { type: 'FeatureCollection', features: chinaBoundaryFeatures },
            parser: { type: 'geojson' },
        },
        color: {
            field: 'type',
            value: function (_a) {
                var type = _a.type;
                return constants_1.CHINA_BOUNDARY_STYLE[type].color;
            },
        },
        size: {
            field: 'type',
            value: function (_a) {
                var type = _a.type;
                return constants_1.CHINA_BOUNDARY_STYLE[type].width;
            },
        },
        style: {
            opacity: ['type', function (type) { return constants_1.CHINA_BOUNDARY_STYLE[type].opacity; }],
        },
    });
    var chinaDisputeBoundaryLayer = new path_layer_1.PathLayer({
        name: 'chinaDisputeBoundaryLayer',
        visible: visible,
        minZoom: minZoom,
        maxZoom: maxZoom,
        zIndex: zIndex + 0.1,
        source: {
            data: { type: 'FeatureCollection', features: disputeBoundaryFeatures },
            parser: { type: 'geojson' },
        },
        color: constants_1.CHINA_BOUNDARY_STYLE['dispute'].color,
        size: constants_1.CHINA_BOUNDARY_STYLE['dispute'].width,
        style: {
            opacity: constants_1.CHINA_BOUNDARY_STYLE['dispute'].opacity,
            lineType: 'dash',
            dashArray: constants_1.CHINA_BOUNDARY_STYLE['dispute'].dashArray,
        },
    });
    return { chinaBoundaryLayer: chinaBoundaryLayer, chinaDisputeBoundaryLayer: chinaDisputeBoundaryLayer };
};
exports.createCountryBoundaryLayer = createCountryBoundaryLayer;
//# sourceMappingURL=layer.js.map