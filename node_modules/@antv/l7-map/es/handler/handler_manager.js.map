{"version":3,"sources":["../../src/handler/handler_manager.ts"],"names":["$window","isMini","Point","DOM","BlockableMapEventHandler","BoxZoomHandler","ClickZoomHandler","Event","RenderFrameEvent","HandlerInertia","KeyboardHandler","MapEventHandler","MousePanHandler","MousePitchHandler","MouseRotateHandler","ScrollZoomHandler","DoubleClickZoomHandler","DragPanHandler","DragRotateHandler","TouchZoomRotateHandler","TapDragZoomHandler","TapZoomHandler","TouchPanHandler","TouchPitchHandler","TouchRotateHandler","TouchZoomHandler","isMoving","p","zoom","drag","pitch","rotate","hasChange","result","panDelta","mag","zoomDelta","bearingDelta","pitchDelta","HandlerManager","map","options","e","handleEvent","type","eventName","stop","updatingCamera","inputEvent","undefined","mergedIHandlerResult","needsRenderFrame","eventsInProgress","activeHandlers","mapTouches","touches","getMapTouches","points","touchPos","el","mousePos","handlers","handlerName","handler","allowed","isEnabled","data","blockedByActive","reset","handerName","mergeIHandlerResult","triggerRenderFrame","isActive","deactivatedHandlers","name","previousActiveHandlers","Object","keys","length","changes","push","cameraAnimation","inertia","clear","fireEvents","getCanvasContainer","handlersById","bearingSnap","addDefaultHandlers","listeners","passive","window","document","capture","target","listenerOptions","addEventListener","handleWindowEvent","removeEventListener","scrollZoom","isZooming","Boolean","HandlerResult","eventData","originalEvent","frameId","requestRenderFrame","timeStamp","applyChanges","add","boxZoom","tapZoom","clickZoom","doubleClickZoom","tapDragZoom","touchPitch","mouseRotate","mousePitch","dragRotate","mousePan","touchPan","dragPan","touchRotate","touchZoom","touchZoomRotate","keyboard","interactive","enable","myName","indexOf","t","contains","combined","combinedEventsInProgress","combinedDeactivatedHandlers","change","_add","around","pinchAround","noInertia","updateMapTransform","combinedResult","tr","transform","centerPoint","loc","pointLocation","sub","bearing","setLocationAtPoint","update","record","newEventsInProgress","wasMoving","nowMoving","startEvents","fireEvent","bearingChanged","endEvents","originalEndEvent","stillMoving","inertialEase","onMoveEnd","inertiaOptions","shouldSnapToNorth","getBearing","easeTo","emit","resetNorth"],"mappings":"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","sourcesContent":["// @ts-ignore\n// tslint:disable-next-line: no-submodule-imports\nimport { $window, isMini } from '@antv/l7-utils';\nimport { merge } from 'lodash';\nimport { EarthMap } from '../earthmap';\nimport Point from '../geo/point';\nimport { Map } from '../map';\nimport DOM from '../utils/dom';\nimport BlockableMapEventHandler from './blockable_map_event';\nimport BoxZoomHandler from './box_zoom';\nimport ClickZoomHandler from './click_zoom';\nimport { Event } from './events/event';\nimport RenderFrameEvent from './events/render_event';\nimport HandlerInertia from './handler_inertia';\nimport { IHandler, IHandlerResult } from './IHandler';\nimport KeyboardHandler from './keyboard';\nimport MapEventHandler from './map_event';\nimport {\n  MousePanHandler,\n  MousePitchHandler,\n  MouseRotateHandler,\n} from './mouse';\nimport ScrollZoomHandler from './scroll_zoom';\nimport DoubleClickZoomHandler from './shim/dblclick_zoom';\nimport DragPanHandler from './shim/drag_pan';\nimport DragRotateHandler from './shim/drag_rotate';\nimport TouchZoomRotateHandler from './shim/touch_zoom_rotate';\nimport TapDragZoomHandler from './tap/tap_drag_zoom';\nimport TapZoomHandler from './tap/tap_zoom';\nimport {\n  TouchPanHandler,\n  TouchPitchHandler,\n  TouchRotateHandler,\n  TouchZoomHandler,\n} from './touch';\n\nexport type InputEvent = MouseEvent | TouchEvent | KeyboardEvent | WheelEvent;\n\nconst isMoving = (p: any) => p.zoom || p.drag || p.pitch || p.rotate;\n\nfunction hasChange(result: IHandlerResult) {\n  return (\n    (result.panDelta && result.panDelta.mag()) ||\n    result.zoomDelta ||\n    result.bearingDelta ||\n    result.pitchDelta\n  );\n}\n\nexport interface IHandlerOptions {\n  interactive: boolean;\n  boxZoom: boolean;\n  dragRotate: boolean;\n  dragPan: boolean;\n  keyboard: boolean;\n  doubleClickZoom: boolean;\n  touchZoomRotate: boolean;\n  touchPitch: boolean;\n  trackResize: boolean;\n  renderWorldCopies: boolean;\n  bearingSnap: number;\n  clickTolerance: number;\n  pitchWithRotate: boolean;\n}\n\nclass HandlerManager {\n  private map: Map | EarthMap;\n  private el: HTMLElement;\n  private handlers: Array<{\n    handlerName: string;\n    handler: IHandler;\n    allowed: any;\n  }>;\n  private eventsInProgress: any;\n  private frameId: number;\n  private inertia: HandlerInertia;\n  private bearingSnap: number;\n  private handlersById: { [key: string]: IHandler };\n  private updatingCamera: boolean;\n  private changes: Array<[IHandlerResult, any, any]>;\n  private previousActiveHandlers: { [key: string]: IHandler };\n  private bearingChanged: boolean;\n  private listeners: Array<\n    [HTMLElement, string, void | { passive?: boolean; capture?: boolean }]\n  >;\n\n  constructor(map: Map | EarthMap, options: IHandlerOptions) {\n    this.map = map;\n    this.el = this.map.getCanvasContainer();\n    this.handlers = [];\n    this.handlersById = {};\n    this.changes = [];\n\n    this.inertia = new HandlerInertia(map);\n    this.bearingSnap = options.bearingSnap;\n    this.previousActiveHandlers = {};\n\n    // Track whether map is currently moving, to compute start/move/end events\n    this.eventsInProgress = {};\n\n    this.addDefaultHandlers(options);\n\n    const el = this.el;\n    this.listeners = [];\n    if (!isMini) {\n      // l7 - mini\n      this.listeners = [\n        // Bind touchstart and touchmove with passive: false because, even though\n        // they only fire a map events and therefore could theoretically be\n        // passive, binding with passive: true causes iOS not to respect\n        // e.preventDefault() in _other_ handlers, even if they are non-passive\n        // (see https://bugs.webkit.org/show_bug.cgi?id=184251)\n        [el, 'touchstart', { passive: false }],\n        [el, 'touchmove', { passive: false }],\n        [el, 'touchend', undefined],\n        [el, 'touchcancel', undefined],\n\n        [el, 'mousedown', undefined],\n        [el, 'mousemove', undefined],\n        [el, 'mouseup', undefined],\n\n        // Bind window-level event listeners for move and up/end events. In the absence of\n        // the pointer capture API, which is not supported by all necessary platforms,\n        // window-level event listeners give us the best shot at capturing events that\n        // fall outside the map canvas element. Use `{capture: true}` for the move event\n        // to prevent map move events from being fired during a drag.\n        // @ts-ignore\n        [window.document, 'mousemove', { capture: true }],\n        // @ts-ignore\n        [window.document, 'mouseup', undefined],\n\n        [el, 'mouseover', undefined],\n        [el, 'mouseout', undefined],\n        [el, 'dblclick', undefined],\n        [el, 'click', undefined],\n\n        [el, 'keydown', { capture: false }],\n        [el, 'keyup', undefined],\n\n        [el, 'wheel', { passive: false }],\n        [el, 'contextmenu', undefined],\n        // @ts-ignore\n        [window, 'blur', undefined],\n      ];\n      for (const [target, type, listenerOptions] of this.listeners) {\n        // @ts-ignore\n        DOM.addEventListener(\n          target,\n          type,\n          // @ts-ignore\n          target === window.document\n            ? this.handleWindowEvent\n            : this.handleEvent,\n          listenerOptions,\n        );\n      }\n    } else {\n      $window.document.addEventListener(\n        'touchstart',\n        (e: any) => {\n          this.handleEvent(e);\n        },\n        {},\n      );\n      $window.document.addEventListener(\n        'touchmove',\n        (e: any) => {\n          this.handleEvent(e);\n        },\n        {},\n      );\n      $window.document.addEventListener(\n        'touchend',\n        (e: any) => {\n          this.handleEvent(e);\n        },\n        {},\n      );\n      $window.document.addEventListener(\n        'touchcancel',\n        (e: any) => {\n          this.handleEvent(e);\n        },\n        {},\n      );\n    }\n  }\n  public destroy() {\n    for (const [target, type, listenerOptions] of this.listeners) {\n      // @ts-ignore\n      DOM.removeEventListener(\n        target,\n        type,\n        // @ts-ignore\n        target === window.document ? this.handleWindowEvent : this.handleEvent,\n        listenerOptions,\n      );\n    }\n  }\n\n  public stop() {\n    // do nothing if this method was triggered by a gesture update\n    if (this.updatingCamera) {\n      return;\n    }\n\n    for (const { handler } of this.handlers) {\n      handler.reset();\n    }\n    this.inertia.clear();\n    this.fireEvents({}, {});\n    this.changes = [];\n  }\n\n  public isActive() {\n    for (const { handler } of this.handlers) {\n      if (handler.isActive()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public isZooming() {\n    return !!this.eventsInProgress.zoom || this.map.scrollZoom.isZooming();\n  }\n  public isRotating() {\n    return !!this.eventsInProgress.rotate;\n  }\n\n  public isMoving() {\n    return Boolean(isMoving(this.eventsInProgress)) || this.isZooming();\n  }\n\n  public handleWindowEvent = (e: InputEvent) => {\n    this.handleEvent(e, `${e.type}Window`);\n  };\n\n  public handleEvent = (\n    e: InputEvent | RenderFrameEvent,\n    eventName?: string,\n  ) => {\n    if (e.type === 'blur') {\n      this.stop();\n      return;\n    }\n    this.updatingCamera = true;\n    const inputEvent = e.type === 'renderFrame' ? undefined : (e as InputEvent);\n\n    /*\n     * We don't call e.preventDefault() for any events by default.\n     * Handlers are responsible for calling it where necessary.\n     */\n\n    const mergedIHandlerResult: IHandlerResult = { needsRenderFrame: false };\n    const eventsInProgress: { [key: string]: any } = {};\n    const activeHandlers: { [key: string]: any } = {};\n    // @ts-ignore\n    const mapTouches = e.touches\n      ? // @ts-ignore\n        this.getMapTouches(e.touches as Touch[])\n      : undefined;\n    const points = mapTouches\n      ? DOM.touchPos(this.el, mapTouches)\n      : DOM.mousePos(this.el, e as MouseEvent);\n\n    for (const { handlerName, handler, allowed } of this.handlers) {\n      if (!handler.isEnabled()) {\n        continue;\n      }\n      let data: IHandlerResult;\n      if (this.blockedByActive(activeHandlers, allowed, handlerName)) {\n        handler.reset();\n      } else {\n        const handerName = eventName || e.type;\n        // @ts-ignore\n        if (handler && handler[handerName]) {\n          // @ts-ignore\n          data = handler[handerName](e, points, mapTouches);\n          this.mergeIHandlerResult(\n            mergedIHandlerResult,\n            eventsInProgress,\n            data,\n            handlerName,\n            inputEvent,\n          );\n          if (data && data.needsRenderFrame) {\n            this.triggerRenderFrame();\n          }\n        }\n      }\n      // @ts-ignore\n      if (data || handler.isActive()) {\n        activeHandlers[handlerName] = handler;\n      }\n    }\n\n    const deactivatedHandlers: { [key: string]: any } = {};\n    for (const name in this.previousActiveHandlers) {\n      if (!activeHandlers[name]) {\n        deactivatedHandlers[name] = inputEvent;\n      }\n    }\n    this.previousActiveHandlers = activeHandlers;\n    if (\n      Object.keys(deactivatedHandlers).length ||\n      hasChange(mergedIHandlerResult)\n    ) {\n      this.changes.push([\n        mergedIHandlerResult,\n        eventsInProgress,\n        deactivatedHandlers,\n      ]);\n      this.triggerRenderFrame();\n    }\n\n    if (Object.keys(activeHandlers).length || hasChange(mergedIHandlerResult)) {\n      this.map.stop(true);\n    }\n\n    this.updatingCamera = false;\n\n    const { cameraAnimation } = mergedIHandlerResult;\n    if (cameraAnimation) {\n      this.inertia.clear();\n      this.fireEvents({}, {});\n      this.changes = [];\n      cameraAnimation(this.map);\n    }\n  };\n\n  public mergeIHandlerResult(\n    mergedIHandlerResult: IHandlerResult,\n    eventsInProgress: { [key: string]: any },\n    HandlerResult: IHandlerResult,\n    name: string,\n    e?: InputEvent,\n  ) {\n    if (!HandlerResult) {\n      return;\n    }\n\n    merge(mergedIHandlerResult, HandlerResult);\n\n    const eventData = {\n      handlerName: name,\n      originalEvent: HandlerResult.originalEvent || e,\n    };\n\n    // track which handler changed which camera property\n    if (HandlerResult.zoomDelta !== undefined) {\n      eventsInProgress.zoom = eventData;\n    }\n    if (HandlerResult.panDelta !== undefined) {\n      eventsInProgress.drag = eventData;\n    }\n    if (HandlerResult.pitchDelta !== undefined) {\n      eventsInProgress.pitch = eventData;\n    }\n    if (HandlerResult.bearingDelta !== undefined) {\n      eventsInProgress.rotate = eventData;\n    }\n  }\n\n  public triggerRenderFrame() {\n    if (this.frameId === undefined) {\n      this.frameId = this.map.requestRenderFrame((timeStamp: number) => {\n        // @ts-ignore\n        delete this.frameId;\n        this.handleEvent(new RenderFrameEvent('renderFrame', { timeStamp }));\n        this.applyChanges();\n      });\n    }\n  }\n\n  private addDefaultHandlers(options: IHandlerOptions) {\n    const map = this.map;\n    const el = map.getCanvasContainer();\n    this.add('mapEvent', new MapEventHandler(map, options));\n\n    const boxZoom = (map.boxZoom = new BoxZoomHandler(map, options));\n    this.add('boxZoom', boxZoom);\n\n    const tapZoom = new TapZoomHandler();\n    const clickZoom = new ClickZoomHandler();\n    map.doubleClickZoom = new DoubleClickZoomHandler(clickZoom, tapZoom);\n    this.add('tapZoom', tapZoom);\n    this.add('clickZoom', clickZoom);\n\n    const tapDragZoom = new TapDragZoomHandler();\n    this.add('tapDragZoom', tapDragZoom);\n\n    const touchPitch = (map.touchPitch = new TouchPitchHandler());\n    this.add('touchPitch', touchPitch);\n\n    const mouseRotate = new MouseRotateHandler(options);\n    const mousePitch = new MousePitchHandler(options);\n    map.dragRotate = new DragRotateHandler(options, mouseRotate, mousePitch);\n    this.add('mouseRotate', mouseRotate, ['mousePitch']);\n    this.add('mousePitch', mousePitch, ['mouseRotate']);\n\n    const mousePan = new MousePanHandler(options);\n    const touchPan = new TouchPanHandler(options);\n    map.dragPan = new DragPanHandler(el, mousePan, touchPan);\n    this.add('mousePan', mousePan);\n    this.add('touchPan', touchPan, ['touchZoom', 'touchRotate']);\n\n    const touchRotate = new TouchRotateHandler();\n    const touchZoom = new TouchZoomHandler();\n    map.touchZoomRotate = new TouchZoomRotateHandler(\n      el,\n      touchZoom,\n      touchRotate,\n      tapDragZoom,\n    );\n    this.add('touchRotate', touchRotate, ['touchPan', 'touchZoom']);\n    this.add('touchZoom', touchZoom, ['touchPan', 'touchRotate']);\n\n    const scrollZoom = (map.scrollZoom = new ScrollZoomHandler(map, this));\n    this.add('scrollZoom', scrollZoom, ['mousePan']);\n\n    const keyboard = (map.keyboard = new KeyboardHandler());\n    this.add('keyboard', keyboard);\n\n    this.add('blockableMapEvent', new BlockableMapEventHandler(map));\n\n    for (const name of [\n      'boxZoom',\n      'doubleClickZoom',\n      'tapDragZoom',\n      'touchPitch',\n      'dragRotate',\n      'dragPan',\n      'touchZoomRotate',\n      'scrollZoom',\n      'keyboard',\n    ]) {\n      // @ts-ignore\n      if (options.interactive && options[name]) {\n        // @ts-ignore\n        map[name].enable(options[name]);\n      }\n    }\n  }\n\n  private add(handlerName: string, handler: IHandler, allowed?: string[]) {\n    this.handlers.push({ handlerName, handler, allowed });\n    this.handlersById[handlerName] = handler;\n  }\n\n  private blockedByActive(\n    activeHandlers: { [key: string]: IHandler },\n    allowed: string[],\n    myName: string,\n  ) {\n    for (const name in activeHandlers) {\n      if (name === myName) {\n        continue;\n      }\n      if (!allowed || allowed.indexOf(name) < 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private getMapTouches(touches: Touch[]): Touch[] {\n    const mapTouches = [];\n    for (const t of touches) {\n      const target = t.target as Node;\n      if (isMini || this.el.contains(target)) {\n        mapTouches.push(t);\n      }\n    }\n    return mapTouches;\n  }\n\n  private applyChanges() {\n    const combined: { [key: string]: any } = {};\n    const combinedEventsInProgress = {};\n    const combinedDeactivatedHandlers = {};\n\n    for (const [change, eventsInProgress, deactivatedHandlers] of this\n      .changes) {\n      if (change.panDelta) {\n        combined.panDelta = (combined.panDelta || new Point(0, 0))._add(\n          change.panDelta,\n        );\n      }\n      if (change.zoomDelta) {\n        combined.zoomDelta = (combined.zoomDelta || 0) + change.zoomDelta;\n      }\n      if (change.bearingDelta) {\n        combined.bearingDelta =\n          (combined.bearingDelta || 0) + change.bearingDelta;\n      }\n      if (change.pitchDelta) {\n        combined.pitchDelta = (combined.pitchDelta || 0) + change.pitchDelta;\n      }\n      if (change.around !== undefined) {\n        combined.around = change.around;\n      }\n      if (change.pinchAround !== undefined) {\n        combined.pinchAround = change.pinchAround;\n      }\n      if (change.noInertia) {\n        combined.noInertia = change.noInertia;\n      }\n\n      merge(combinedEventsInProgress, eventsInProgress);\n      merge(combinedDeactivatedHandlers, deactivatedHandlers);\n    }\n\n    this.updateMapTransform(\n      combined,\n      combinedEventsInProgress,\n      combinedDeactivatedHandlers,\n    );\n    this.changes = [];\n  }\n\n  private updateMapTransform(\n    combinedResult: any,\n    combinedEventsInProgress: any,\n    deactivatedHandlers: any,\n  ) {\n    const map = this.map;\n    const tr = map.transform;\n\n    if (!hasChange(combinedResult)) {\n      return this.fireEvents(combinedEventsInProgress, deactivatedHandlers);\n    }\n    const {\n      panDelta,\n      zoomDelta,\n      bearingDelta,\n      pitchDelta,\n      pinchAround,\n    } = combinedResult;\n    let { around } = combinedResult;\n\n    if (pinchAround !== undefined) {\n      around = pinchAround;\n    }\n\n    // stop any ongoing camera animations (easeTo, flyTo)\n    map.stop(true);\n\n    around = around || map.transform.centerPoint;\n    const loc = tr.pointLocation(panDelta ? around.sub(panDelta) : around);\n    if (bearingDelta) {\n      tr.bearing += bearingDelta;\n    }\n    if (pitchDelta) {\n      tr.pitch += pitchDelta;\n    }\n    if (zoomDelta) {\n      tr.zoom += zoomDelta;\n    }\n    tr.setLocationAtPoint(loc, around);\n\n    this.map.update();\n    if (!combinedResult.noInertia) {\n      this.inertia.record(combinedResult);\n    }\n    this.fireEvents(combinedEventsInProgress, deactivatedHandlers);\n  }\n\n  private fireEvents(\n    newEventsInProgress: { [key: string]: any },\n    deactivatedHandlers: { [key: string]: any },\n  ) {\n    const wasMoving = isMoving(this.eventsInProgress);\n    const nowMoving = isMoving(newEventsInProgress);\n\n    const startEvents: { [key: string]: any } = {};\n\n    for (const eventName in newEventsInProgress) {\n      if (newEventsInProgress[eventName]) {\n        const { originalEvent } = newEventsInProgress[eventName];\n        if (!this.eventsInProgress[eventName]) {\n          startEvents[`${eventName}start`] = originalEvent;\n        }\n\n        this.eventsInProgress[eventName] = newEventsInProgress[eventName];\n      }\n    }\n\n    // fire start events only after this.eventsInProgress has been updated\n    if (!wasMoving && nowMoving) {\n      this.fireEvent('movestart', nowMoving.originalEvent);\n    }\n\n    for (const name in startEvents) {\n      if (startEvents[name]) {\n        this.fireEvent(name, startEvents[name]);\n      }\n    }\n\n    if (newEventsInProgress.rotate) {\n      this.bearingChanged = true;\n    }\n\n    if (nowMoving) {\n      this.fireEvent('move', nowMoving.originalEvent);\n    }\n\n    for (const eventName in newEventsInProgress) {\n      if (newEventsInProgress[eventName]) {\n        const { originalEvent } = newEventsInProgress[eventName];\n        this.fireEvent(eventName, originalEvent);\n      }\n    }\n\n    const endEvents: { [key: string]: any } = {};\n\n    let originalEndEvent;\n    for (const eventName in this.eventsInProgress) {\n      if (this.eventsInProgress[eventName]) {\n        const { handlerName, originalEvent } = this.eventsInProgress[eventName];\n        if (!this.handlersById[handlerName].isActive()) {\n          delete this.eventsInProgress[eventName];\n          originalEndEvent = deactivatedHandlers[handlerName] || originalEvent;\n          endEvents[`${eventName}end`] = originalEndEvent;\n        }\n      }\n    }\n\n    for (const name in endEvents) {\n      if (endEvents[name]) {\n        this.fireEvent(name, endEvents[name]);\n      }\n    }\n\n    const stillMoving = isMoving(this.eventsInProgress);\n    if ((wasMoving || nowMoving) && !stillMoving) {\n      this.updatingCamera = true;\n      const inertialEase = this.inertia.onMoveEnd(\n        this.map.dragPan.inertiaOptions,\n      );\n\n      const shouldSnapToNorth = (bearing: number) =>\n        bearing !== 0 &&\n        -this.bearingSnap < bearing &&\n        bearing < this.bearingSnap;\n\n      if (inertialEase) {\n        if (shouldSnapToNorth(inertialEase.bearing || this.map.getBearing())) {\n          inertialEase.bearing = 0;\n        }\n        this.map.easeTo(inertialEase, { originalEvent: originalEndEvent });\n      } else {\n        this.map.emit(\n          'moveend',\n          new Event('moveend', { originalEvent: originalEndEvent }),\n        );\n        if (shouldSnapToNorth(this.map.getBearing())) {\n          this.map.resetNorth();\n        }\n      }\n      this.bearingChanged = false;\n      this.updatingCamera = false;\n    }\n  }\n\n  private fireEvent(type: string, e: any) {\n    this.map.emit(type, new Event(type, e ? { originalEvent: e } : {}));\n  }\n}\n\nexport default HandlerManager;\n"],"file":"handler_manager.js"}