{"ast":null,"code":"// 类型检测\nexport var isType = function isType(value, type) {\n  var toString = {}.toString;\n  return toString.call(value) === \"[object \".concat(type, \"]\");\n};\nexport var getType = function getType(n) {\n  return Object.prototype.toString.call(n).slice(8, -1);\n};\n/**\n * 深克隆\n * @param source 要深克隆的目标对象\n */\n\nexport var deepClone = function deepClone(source) {\n  if (!source) {\n    return source;\n  } // @ts-ignore\n\n\n  var target = new source.constructor();\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = getType(source[key]) === 'Object' || getType(source[key]) === 'Array' ? deepClone(source[key]) : source[key];\n    }\n  }\n\n  return target;\n};\nexport var clone = function clone(source) {\n  if (!source) {\n    return source;\n  }\n\n  var target = {}; // eslint-disable-next-line guard-for-in\n\n  for (var k in source) {\n    target[k] = source[k];\n  }\n\n  return target;\n};","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@ant-design/maps/es/util/utils.js"],"names":["isType","value","type","toString","call","concat","getType","n","Object","prototype","slice","deepClone","source","target","constructor","key","hasOwnProperty","clone","k"],"mappings":"AAAA;AACA,OAAO,IAAIA,MAAM,GAAG,SAATA,MAAS,CAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AACvC,MAAIC,QAAQ,GAAG,GAAGA,QAAlB;AACA,SAAOA,QAAQ,CAACC,IAAT,CAAcH,KAAd,MAAyB,WAAWI,MAAX,CAAkBH,IAAlB,EAAwB,GAAxB,CAAhC;AACH,CAHM;AAIP,OAAO,IAAII,OAAO,GAAG,SAAVA,OAAU,CAAUC,CAAV,EAAa;AAC9B,SAAOC,MAAM,CAACC,SAAP,CAAiBN,QAAjB,CAA0BC,IAA1B,CAA+BG,CAA/B,EAAkCG,KAAlC,CAAwC,CAAxC,EAA2C,CAAC,CAA5C,CAAP;AACH,CAFM;AAGP;AACA;AACA;AACA;;AACA,OAAO,IAAIC,SAAS,GAAG,SAAZA,SAAY,CAAUC,MAAV,EAAkB;AACrC,MAAI,CAACA,MAAL,EAAa;AACT,WAAOA,MAAP;AACH,GAHoC,CAIrC;;;AACA,MAAIC,MAAM,GAAG,IAAID,MAAM,CAACE,WAAX,EAAb;;AACA,OAAK,IAAIC,GAAT,IAAgBH,MAAhB,EAAwB;AACpB,QAAIA,MAAM,CAACI,cAAP,CAAsBD,GAAtB,CAAJ,EAAgC;AAC5BF,MAAAA,MAAM,CAACE,GAAD,CAAN,GACIT,OAAO,CAACM,MAAM,CAACG,GAAD,CAAP,CAAP,KAAyB,QAAzB,IAAqCT,OAAO,CAACM,MAAM,CAACG,GAAD,CAAP,CAAP,KAAyB,OAA9D,GAAwEJ,SAAS,CAACC,MAAM,CAACG,GAAD,CAAP,CAAjF,GAAiGH,MAAM,CAACG,GAAD,CAD3G;AAEH;AACJ;;AACD,SAAOF,MAAP;AACH,CAbM;AAcP,OAAO,IAAII,KAAK,GAAG,SAARA,KAAQ,CAAUL,MAAV,EAAkB;AACjC,MAAI,CAACA,MAAL,EAAa;AACT,WAAOA,MAAP;AACH;;AACD,MAAIC,MAAM,GAAG,EAAb,CAJiC,CAKjC;;AACA,OAAK,IAAIK,CAAT,IAAcN,MAAd,EAAsB;AAClBC,IAAAA,MAAM,CAACK,CAAD,CAAN,GAAYN,MAAM,CAACM,CAAD,CAAlB;AACH;;AACD,SAAOL,MAAP;AACH,CAVM","sourcesContent":["// 类型检测\nexport var isType = function (value, type) {\n    var toString = {}.toString;\n    return toString.call(value) === \"[object \".concat(type, \"]\");\n};\nexport var getType = function (n) {\n    return Object.prototype.toString.call(n).slice(8, -1);\n};\n/**\n * 深克隆\n * @param source 要深克隆的目标对象\n */\nexport var deepClone = function (source) {\n    if (!source) {\n        return source;\n    }\n    // @ts-ignore\n    var target = new source.constructor();\n    for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n            target[key] =\n                getType(source[key]) === 'Object' || getType(source[key]) === 'Array' ? deepClone(source[key]) : source[key];\n        }\n    }\n    return target;\n};\nexport var clone = function (source) {\n    if (!source) {\n        return source;\n    }\n    var target = {};\n    // eslint-disable-next-line guard-for-in\n    for (var k in source) {\n        target[k] = source[k];\n    }\n    return target;\n};\n"]},"metadata":{},"sourceType":"module"}