{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport React from 'react';\nimport { Disposable } from '../../common/disposable';\nimport { uuidv4 } from '../../common/uuid';\n/** 保存组件上的配置 */\n\nexport var ExtensionRegistry = /*#__PURE__*/function () {\n  function ExtensionRegistry() {\n    var _this = this;\n\n    _classCallCheck(this, ExtensionRegistry);\n\n    this.extensions = [];\n    this.containerClassNames = new Set();\n\n    this.addCoreModule = function (extension) {\n      // core module 添加在前面\n      _this.extensions.unshift(extension);\n\n      return Disposable.create(function () {\n        _this.removeExtension(extension);\n      });\n    };\n\n    this.addExtension = function (extension) {\n      _this.extensions.push(extension);\n\n      return Disposable.create(function () {\n        _this.removeExtension(extension);\n      });\n    };\n\n    this.removeExtension = function (extension) {\n      var idx = _this.extensions.indexOf(extension);\n\n      if (idx > -1) {\n        _this.extensions.splice(idx, 1);\n      }\n    };\n\n    this.getInstaceId = function () {\n      return _this.instanceId;\n    };\n\n    this.addContainerClassNames = function (clz) {\n      return _this.containerClassNames.add(clz);\n    };\n\n    this.getContainerClassNames = function () {\n      return Array.from(_this.containerClassNames);\n    };\n\n    this.getAllExtensions = function () {\n      return _this.extensions;\n    };\n\n    this.getAllExtensionConfigs = function () {\n      return _this.extensions.map(function (i) {\n        return i.config;\n      });\n    };\n\n    this.instanceId = uuidv4();\n  }\n\n  _createClass(ExtensionRegistry, [{\n    key: \"has\",\n    value: function has(name) {\n      return this.extensions.some(function (ext) {\n        return ext.config.CONFIG_TYPE === name;\n      });\n    }\n  }]);\n\n  return ExtensionRegistry;\n}();\n/** 获取Xflow extension，用于收集React组件的配置 */\n\nexport var createExtensionRegistry = function createExtensionRegistry() {\n  /* eslint-disable-next-line react-hooks/rules-of-hooks */\n  var registry = React.useMemo(function () {\n    return new ExtensionRegistry();\n  }, []);\n  return registry;\n};","map":{"version":3,"sources":["../../../src/xflow-main/components/extension-registry.tsx"],"names":[],"mappings":";;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,UAAT,QAA2B,yBAA3B;AACA,SAAS,MAAT,QAAuB,mBAAvB;AAGA;;AACA,WAAa,iBAAb;AAQE,+BAAA;AAAA;;AAAA;;AAJS,SAAA,UAAA,GAAiC,EAAjC;AAEA,SAAA,mBAAA,GAAmC,IAAI,GAAJ,EAAnC;;AAMT,SAAA,aAAA,GAAgB,UAAC,SAAD,EAAgC;AAC9C;AACA,MAAA,KAAI,CAAC,UAAL,CAAgB,OAAhB,CAAwB,SAAxB;;AACA,aAAO,UAAU,CAAC,MAAX,CAAkB,YAAK;AAC5B,QAAA,KAAI,CAAC,eAAL,CAAqB,SAArB;AACD,OAFM,CAAP;AAGD,KAND;;AAQA,SAAA,YAAA,GAAe,UAAC,SAAD,EAAgC;AAC7C,MAAA,KAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,SAArB;;AACA,aAAO,UAAU,CAAC,MAAX,CAAkB,YAAK;AAC5B,QAAA,KAAI,CAAC,eAAL,CAAqB,SAArB;AACD,OAFM,CAAP;AAGD,KALD;;AAOA,SAAA,eAAA,GAAkB,UAAC,SAAD,EAAgC;AAChD,UAAM,GAAG,GAAG,KAAI,CAAC,UAAL,CAAgB,OAAhB,CAAwB,SAAxB,CAAZ;;AACA,UAAI,GAAG,GAAG,CAAC,CAAX,EAAc;AACZ,QAAA,KAAI,CAAC,UAAL,CAAgB,MAAhB,CAAuB,GAAvB,EAA4B,CAA5B;AACD;AACF,KALD;;AAOA,SAAA,YAAA,GAAe,YAAK;AAClB,aAAO,KAAI,CAAC,UAAZ;AACD,KAFD;;AAIA,SAAA,sBAAA,GAAyB,UAAC,GAAD,EAAgB;AACvC,aAAO,KAAI,CAAC,mBAAL,CAAyB,GAAzB,CAA6B,GAA7B,CAAP;AACD,KAFD;;AAIA,SAAA,sBAAA,GAAyB,YAAK;AAC5B,aAAO,KAAK,CAAC,IAAN,CAAW,KAAI,CAAC,mBAAhB,CAAP;AACD,KAFD;;AAQA,SAAA,gBAAA,GAAmB,YAAK;AACtB,aAAO,KAAI,CAAC,UAAZ;AACD,KAFD;;AAIA,SAAA,sBAAA,GAAyB,YAAK;AAC5B,aAAO,KAAI,CAAC,UAAL,CAAgB,GAAhB,CAAoB,UAAA,CAAC;AAAA,eAAI,CAAC,CAAC,MAAN;AAAA,OAArB,CAAP;AACD,KAFD;;AA7CE,SAAK,UAAL,GAAkB,MAAM,EAAxB;AACD;;AAVH;AAAA;AAAA,WA8CE,aAAI,IAAJ,EAAgB;AACd,aAAO,KAAK,UAAL,CAAgB,IAAhB,CAAqB,UAAA,GAAG;AAAA,eAAI,GAAG,CAAC,MAAJ,CAAW,WAAX,KAA2B,IAA/B;AAAA,OAAxB,CAAP;AACD;AAhDH;;AAAA;AAAA;AA2DA;;AACA,OAAO,IAAM,uBAAuB,GAAG,SAA1B,uBAA0B,GAAK;AAC1C;AACA,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAN,CAAc,YAAK;AAClC,WAAO,IAAI,iBAAJ,EAAP;AACD,GAFgB,EAEd,EAFc,CAAjB;AAGA,SAAO,QAAP;AACD,CANM","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { Disposable } from '../../common/disposable';\nimport { uuidv4 } from '../../common/uuid';\n/** 保存组件上的配置 */\nexport class ExtensionRegistry {\n    constructor() {\n        this.extensions = [];\n        this.containerClassNames = new Set();\n        this.addCoreModule = (extension) => {\n            // core module 添加在前面\n            this.extensions.unshift(extension);\n            return Disposable.create(() => {\n                this.removeExtension(extension);\n            });\n        };\n        this.addExtension = (extension) => {\n            this.extensions.push(extension);\n            return Disposable.create(() => {\n                this.removeExtension(extension);\n            });\n        };\n        this.removeExtension = (extension) => {\n            const idx = this.extensions.indexOf(extension);\n            if (idx > -1) {\n                this.extensions.splice(idx, 1);\n            }\n        };\n        this.getInstaceId = () => {\n            return this.instanceId;\n        };\n        this.addContainerClassNames = (clz) => {\n            return this.containerClassNames.add(clz);\n        };\n        this.getContainerClassNames = () => {\n            return Array.from(this.containerClassNames);\n        };\n        this.getAllExtensions = () => {\n            return this.extensions;\n        };\n        this.getAllExtensionConfigs = () => {\n            return this.extensions.map(i => i.config);\n        };\n        this.instanceId = uuidv4();\n    }\n    has(name) {\n        return this.extensions.some(ext => ext.config.CONFIG_TYPE === name);\n    }\n}\n/** 获取Xflow extension，用于收集React组件的配置 */\nexport const createExtensionRegistry = () => {\n    /* eslint-disable-next-line react-hooks/rules-of-hooks */\n    const registry = React.useMemo(() => {\n        return new ExtensionRegistry();\n    }, []);\n    return registry;\n};\n//# sourceMappingURL=extension-registry.js.map"]},"metadata":{},"sourceType":"module"}