{"ast":null,"code":"import { getImage } from '@antv/l7-utils';\nexport default function image(data, cfg) {\n  var _cfg$extent = cfg.extent,\n      extent = _cfg$extent === void 0 ? [121.168, 30.2828, 121.384, 30.4219] : _cfg$extent;\n  var images = new Promise(function (resolve) {\n    loadData(data, function (res) {\n      resolve(res);\n    });\n  });\n  var resultData = {\n    originData: data,\n    images: images,\n    _id: 1,\n    dataArray: [{\n      _id: 0,\n      coordinates: [[extent[0], extent[1]], [extent[2], extent[3]]]\n    }]\n  };\n  return resultData;\n}\n\nfunction loadData(data, done) {\n  var url = data;\n  var imageDatas = [];\n\n  if (typeof url === 'string') {\n    getImage({\n      url: url\n    }, function (err, img) {\n      imageDatas.push(img);\n      done(imageDatas);\n    });\n  } else {\n    var imageCount = url.length;\n    var imageindex = 0;\n    url.forEach(function (item) {\n      getImage({\n        url: item\n      }, function (err, img) {\n        imageindex++;\n        imageDatas.push(img);\n\n        if (imageindex === imageCount) {\n          done(imageDatas);\n        }\n      });\n    });\n  }\n\n  return image;\n}","map":{"version":3,"sources":["../../src/parser/image.ts"],"names":["extent","cfg","images","loadData","resolve","resultData","originData","_id","dataArray","coordinates","url","imageDatas","getImage","done","imageCount","imageindex","item"],"mappings":"AACA,SAAA,QAAA,QAAA,gBAAA;AAIA,eAAe,SAAA,KAAA,CAAA,IAAA,EAAA,GAAA,EAGA;AAEb,MAAA,WAAA,GAA0DC,GAA1D,CAAA,MAAA;AAAA,MAAQD,MAAR,GAAA,WAAA,KAAA,KAAA,CAAA,GAAiB,CAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAjB,OAAiB,CAAjB,GAAA,WAAA;AACA,MAAME,MAAM,GAAG,IAAA,OAAA,CAAY,UAAA,OAAA,EAAa;AACtCC,IAAAA,QAAQ,CAAA,IAAA,EAAO,UAAA,GAAA,EAAc;AAC3BC,MAAAA,OAAO,CAAPA,GAAO,CAAPA;AADFD,KAAQ,CAARA;AADF,GAAe,CAAf;AAKA,MAAME,UAAuB,GAAG;AAC9BC,IAAAA,UAAU,EADoB,IAAA;AAE9BJ,IAAAA,MAAM,EAFwB,MAAA;AAG9BK,IAAAA,GAAG,EAH2B,CAAA;AAI9BC,IAAAA,SAAS,EAAE,CACT;AACED,MAAAA,GAAG,EADL,CAAA;AAEEE,MAAAA,WAAW,EAAE,CACX,CAACT,MAAM,CAAP,CAAO,CAAP,EAAYA,MAAM,CADP,CACO,CAAlB,CADW,EAEX,CAACA,MAAM,CAAP,CAAO,CAAP,EAAYA,MAAM,CAFP,CAEO,CAAlB,CAFW;AAFf,KADS;AAJmB,GAAhC;AAcA,SAAA,UAAA;AACD;;AACD,SAAA,QAAA,CAAA,IAAA,EAAA,IAAA,EAAsD;AACpD,MAAMU,GAAG,GAAT,IAAA;AACA,MAAMC,UAA8B,GAApC,EAAA;;AACA,MAAI,OAAA,GAAA,KAAJ,QAAA,EAA6B;AAC3BC,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,GAAG,EAAHA;AAAF,KAAD,EAAU,UAAA,GAAA,EAAA,GAAA,EAAwC;AACxDC,MAAAA,UAAU,CAAVA,IAAAA,CAAAA,GAAAA;AACAE,MAAAA,IAAI,CAAJA,UAAI,CAAJA;AAFFD,KAAQ,CAARA;AADF,GAAA,MAKO;AACL,QAAME,UAAU,GAAGJ,GAAG,CAAtB,MAAA;AACA,QAAIK,UAAU,GAAd,CAAA;AACAL,IAAAA,GAAG,CAAHA,OAAAA,CAAY,UAAA,IAAA,EAAU;AACpBE,MAAAA,QAAQ,CAAC;AAAEF,QAAAA,GAAG,EAAEM;AAAP,OAAD,EAAgB,UAAA,GAAA,EAAA,GAAA,EAAqC;AAC3DD,QAAAA,UAAU;AACVJ,QAAAA,UAAU,CAAVA,IAAAA,CAAAA,GAAAA;;AACA,YAAII,UAAU,KAAd,UAAA,EAA+B;AAC7BF,UAAAA,IAAI,CAAJA,UAAI,CAAJA;AACD;AALHD,OAAQ,CAARA;AADFF,KAAAA;AASD;;AACD,SAAA,KAAA;AACD","sourcesContent":["import { IParserData } from '@antv/l7-core';\nimport { getImage } from '@antv/l7-utils';\ninterface IImageCfg {\n  extent: [number, number, number, number];\n}\nexport default function image(\n  data: string | string[],\n  cfg: IImageCfg,\n): IParserData {\n  // TODO: 为 extent 赋默认值\n  const { extent = [121.168, 30.2828, 121.384, 30.4219] } = cfg;\n  const images = new Promise((resolve) => {\n    loadData(data, (res: any) => {\n      resolve(res);\n    });\n  });\n  const resultData: IParserData = {\n    originData: data,\n    images,\n    _id: 1,\n    dataArray: [\n      {\n        _id: 0,\n        coordinates: [\n          [extent[0], extent[1]],\n          [extent[2], extent[3]],\n        ],\n      },\n    ],\n  };\n  return resultData;\n}\nfunction loadData(data: string | string[], done: any) {\n  const url = data;\n  const imageDatas: HTMLImageElement[] = [];\n  if (typeof url === 'string') {\n    getImage({ url }, (err: string, img: HTMLImageElement) => {\n      imageDatas.push(img);\n      done(imageDatas);\n    });\n  } else {\n    const imageCount = url.length;\n    let imageindex = 0;\n    url.forEach((item) => {\n      getImage({ url: item }, (err: any, img: HTMLImageElement) => {\n        imageindex++;\n        imageDatas.push(img);\n        if (imageindex === imageCount) {\n          done(imageDatas);\n        }\n      });\n    });\n  }\n  return image;\n}\n"]},"metadata":{},"sourceType":"module"}