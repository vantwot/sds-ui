{"ast":null,"code":"import { FunctionExt } from '../util';\nexport class Events {\n  constructor() {\n    this.listeners = {};\n  }\n\n  on(name, handler, context) {\n    if (handler == null) {\n      return this;\n    }\n\n    if (!this.listeners[name]) {\n      this.listeners[name] = [];\n    }\n\n    const cache = this.listeners[name];\n    cache.push(handler, context);\n    return this;\n  }\n\n  once(name, handler, context) {\n    var _this = this;\n\n    const cb = function () {\n      _this.off(name, cb);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return Private.call([handler, context], args);\n    };\n\n    return this.on(name, cb, this);\n  }\n\n  off(name, handler, context) {\n    // remove all events.\n    if (!(name || handler || context)) {\n      this.listeners = {};\n      return this;\n    }\n\n    const listeners = this.listeners;\n    const names = name ? [name] : Object.keys(listeners);\n    names.forEach(n => {\n      const cache = listeners[n];\n\n      if (!cache) {\n        return;\n      } // remove all events with specified name.\n\n\n      if (!(handler || context)) {\n        delete listeners[n];\n        return;\n      }\n\n      for (let i = cache.length - 2; i >= 0; i -= 2) {\n        if (!(handler && cache[i] !== handler || context && cache[i + 1] !== context)) {\n          cache.splice(i, 2);\n        }\n      }\n    });\n    return this;\n  }\n\n  trigger(name) {\n    let returned = true;\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    if (name !== '*') {\n      const list = this.listeners[name];\n\n      if (list != null) {\n        returned = Private.call([...list], args);\n      }\n    }\n\n    const list = this.listeners['*'];\n\n    if (list != null) {\n      return FunctionExt.toAsyncBoolean([returned, Private.call([...list], [name, ...args])]);\n    }\n\n    return returned;\n  }\n\n  emit(name) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return this.trigger(name, ...args);\n  }\n\n}\nvar Private;\n\n(function (Private) {\n  function call(list, args) {\n    const results = [];\n\n    for (let i = 0; i < list.length; i += 2) {\n      const handler = list[i];\n      const context = list[i + 1];\n      const params = Array.isArray(args) ? args : [args];\n      const ret = FunctionExt.apply(handler, context, params);\n      results.push(ret);\n    }\n\n    return FunctionExt.toAsyncBoolean(results);\n  }\n\n  Private.call = call;\n})(Private || (Private = {}));","map":{"version":3,"sources":["../../src/common/events.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { FunctionExt } from '../util';\nexport class Events {\n    constructor() {\n        this.listeners = {};\n    }\n    on(name, handler, context) {\n        if (handler == null) {\n            return this;\n        }\n        if (!this.listeners[name]) {\n            this.listeners[name] = [];\n        }\n        const cache = this.listeners[name];\n        cache.push(handler, context);\n        return this;\n    }\n    once(name, handler, context) {\n        const cb = (...args) => {\n            this.off(name, cb);\n            return Private.call([handler, context], args);\n        };\n        return this.on(name, cb, this);\n    }\n    off(name, handler, context) {\n        // remove all events.\n        if (!(name || handler || context)) {\n            this.listeners = {};\n            return this;\n        }\n        const listeners = this.listeners;\n        const names = name ? [name] : Object.keys(listeners);\n        names.forEach((n) => {\n            const cache = listeners[n];\n            if (!cache) {\n                return;\n            }\n            // remove all events with specified name.\n            if (!(handler || context)) {\n                delete listeners[n];\n                return;\n            }\n            for (let i = cache.length - 2; i >= 0; i -= 2) {\n                if (!((handler && cache[i] !== handler) ||\n                    (context && cache[i + 1] !== context))) {\n                    cache.splice(i, 2);\n                }\n            }\n        });\n        return this;\n    }\n    trigger(name, ...args) {\n        let returned = true;\n        if (name !== '*') {\n            const list = this.listeners[name];\n            if (list != null) {\n                returned = Private.call([...list], args);\n            }\n        }\n        const list = this.listeners['*'];\n        if (list != null) {\n            return FunctionExt.toAsyncBoolean([\n                returned,\n                Private.call([...list], [name, ...args]),\n            ]);\n        }\n        return returned;\n    }\n    emit(name, ...args) {\n        return this.trigger(name, ...args);\n    }\n}\nvar Private;\n(function (Private) {\n    function call(list, args) {\n        const results = [];\n        for (let i = 0; i < list.length; i += 2) {\n            const handler = list[i];\n            const context = list[i + 1];\n            const params = Array.isArray(args) ? args : [args];\n            const ret = FunctionExt.apply(handler, context, params);\n            results.push(ret);\n        }\n        return FunctionExt.toAsyncBoolean(results);\n    }\n    Private.call = call;\n})(Private || (Private = {}));\n//# sourceMappingURL=events.js.map"]},"metadata":{},"sourceType":"module"}