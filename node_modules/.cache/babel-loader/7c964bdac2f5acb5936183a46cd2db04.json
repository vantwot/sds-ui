{"ast":null,"code":"import React from 'react';\nimport { createModule } from '../module';\nimport { ModelServiceConfig } from '../config';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nexport var ModelServiceRegistry = function ModelServiceRegistry(props) {\n  var config = props.config;\n  /** 获取配置中心 */\n\n  var extensionRegistry = useExtensionRegistry();\n  /** 获取ModelService的配置 */\n\n  var modelServiceConfig = React.useMemo(function () {\n    return config ? config : new ModelServiceConfig();\n  },\n  /* eslint-disable-next-line  */\n  []);\n  React.useEffect(function () {\n    var disposable = extensionRegistry.addCoreModule({\n      config: modelServiceConfig,\n      createModule: createModule\n    });\n    modelServiceConfig.setMountState();\n    return function () {\n      disposable.dispose();\n      modelServiceConfig.dispose();\n    }; // 不要移除：保证 只生执行一次\n    // eslint-disable-next-line\n  }, []);\n  return null;\n};\nModelServiceRegistry.defaultProps = {\n  XFlowModuleType: 'ModelServiceConfig'\n};\nexport var createModelServiceConfig = function createModelServiceConfig(addOptions) {\n  return function (value) {\n    /** bridge config and value */\n    var valueContainer = React.useMemo(function () {\n      return {\n        getValue: function getValue() {\n          return {};\n        }\n      };\n    }, []);\n\n    valueContainer.getValue = function () {\n      return value;\n    };\n\n    var hookConfig = React.useMemo(function () {\n      var config = new ModelServiceConfig();\n      addOptions(config, valueContainer);\n      return config;\n    }, [valueContainer]);\n    return hookConfig;\n  };\n};","map":{"version":3,"sources":["../../../src/model-service/components/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,YAAT,QAA6B,WAA7B;AACA,SAAS,kBAAT,QAAmC,WAAnC;AACA,SAAS,oBAAT,QAAqC,+CAArC;AAOA,OAAO,IAAM,oBAAoB,GAAqB,SAAzC,oBAAyC,CAAA,KAAK,EAAG;AAC5D,MAAQ,MAAR,GAAmB,KAAnB,CAAQ,MAAR;AACA;;AACA,MAAM,iBAAiB,GAAG,oBAAoB,EAA9C;AACA;;AACA,MAAM,kBAAkB,GAAG,KAAK,CAAC,OAAN,CACzB;AAAA,WAAO,MAAM,GAAG,MAAH,GAAY,IAAI,kBAAJ,EAAzB;AAAA,GADyB;AAEzB;AACA,IAHyB,CAA3B;AAMA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAK;AACnB,QAAM,UAAU,GAAG,iBAAiB,CAAC,aAAlB,CAAgC;AACjD,MAAA,MAAM,EAAE,kBADyC;AAEjD,MAAA,YAAY,EAAZ;AAFiD,KAAhC,CAAnB;AAIA,IAAA,kBAAkB,CAAC,aAAnB;AACA,WAAO,YAAK;AACV,MAAA,UAAU,CAAC,OAAX;AACA,MAAA,kBAAkB,CAAC,OAAnB;AACD,KAHD,CANmB,CAUnB;AACA;AACD,GAZD,EAYG,EAZH;AAcA,SAAO,IAAP;AACD,CA1BM;AA4BP,oBAAoB,CAAC,YAArB,GAAoC;AAAE,EAAA,eAAe,EAAE;AAAnB,CAApC;AAMA,OAAO,IAAM,wBAAwB,GACnC,SADW,wBACX,CACE,UADF;AAAA,SAGA,UAAC,KAAD,EAAc;AACZ;AACA,QAAM,cAAc,GAAG,KAAK,CAAC,OAAN,CAAc;AAAA,aAAO;AAAE,QAAA,QAAQ,EAAE;AAAA,iBAAO,EAAP;AAAA;AAAZ,OAAP;AAAA,KAAd,EAAqD,EAArD,CAAvB;;AACA,IAAA,cAAc,CAAC,QAAf,GAA0B;AAAA,aAAM,KAAN;AAAA,KAA1B;;AAEA,QAAM,UAAU,GAAG,KAAK,CAAC,OAAN,CAAc,YAAK;AACpC,UAAM,MAAM,GAAG,IAAI,kBAAJ,EAAf;AACA,MAAA,UAAU,CAAC,MAAD,EAAS,cAAT,CAAV;AACA,aAAO,MAAP;AACD,KAJkB,EAIhB,CAAC,cAAD,CAJgB,CAAnB;AAMA,WAAO,UAAP;AACD,GAfD;AAAA,CADK","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { createModule } from '../module';\nimport { ModelServiceConfig } from '../config';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nexport const ModelServiceRegistry = props => {\n    const { config } = props;\n    /** 获取配置中心 */\n    const extensionRegistry = useExtensionRegistry();\n    /** 获取ModelService的配置 */\n    const modelServiceConfig = React.useMemo(() => (config ? config : new ModelServiceConfig()), \n    /* eslint-disable-next-line  */\n    []);\n    React.useEffect(() => {\n        const disposable = extensionRegistry.addCoreModule({\n            config: modelServiceConfig,\n            createModule,\n        });\n        modelServiceConfig.setMountState();\n        return () => {\n            disposable.dispose();\n            modelServiceConfig.dispose();\n        };\n        // 不要移除：保证 只生执行一次\n        // eslint-disable-next-line\n    }, []);\n    return null;\n};\nModelServiceRegistry.defaultProps = { XFlowModuleType: 'ModelServiceConfig' };\nexport const createModelServiceConfig = (addOptions) => (value) => {\n    /** bridge config and value */\n    const valueContainer = React.useMemo(() => ({ getValue: () => ({}) }), []);\n    valueContainer.getValue = () => value;\n    const hookConfig = React.useMemo(() => {\n        const config = new ModelServiceConfig();\n        addOptions(config, valueContainer);\n        return config;\n    }, [valueContainer]);\n    return hookConfig;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}