{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Map = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar l7_scene_1 = require(\"@antv/l7-scene\");\n\nvar l7_maps_1 = require(\"@antv/l7-maps\");\n\nvar l7_component_1 = require(\"@antv/l7-component\");\n\nvar event_emitter_1 = (0, tslib_1.__importDefault)(require(\"@antv/event-emitter\"));\n\nvar util_1 = require(\"@antv/util\");\n\nvar tooltip_1 = require(\"../../component/tooltip\");\n\nvar legend_1 = require(\"../../component/legend\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar types_1 = require(\"../../types\");\n\nvar layer_group_1 = require(\"../layer/layer-group\");\n\nvar constants_1 = require(\"./constants\");\n\nvar register_1 = require(\"./register\");\n\nvar theme_1 = require(\"../../theme\");\n\nvar util_2 = require(\"../../theme/util\");\n\nvar DEFAULT_OPTIONS = {\n  map: {\n    type: types_1.BaseMapType.Amap\n  },\n  logo: true\n};\n\nvar Map =\n/** @class */\nfunction (_super) {\n  (0, tslib_1.__extends)(Map, _super);\n\n  function Map(options) {\n    var _this = _super.call(this) || this;\n    /**\n     * 是否初始化成功\n     */\n\n\n    _this.inited = false;\n    /**\n     * 是否场景加载完成\n     */\n\n    _this.sceneLoaded = false;\n    /**\n     * 是否所有图层加载完成\n     */\n\n    _this.layersLoaded = false;\n    /**\n     * 是否场景与所有图层加载完成\n     */\n\n    _this.loaded = false;\n    /**\n     * 图层组\n     */\n\n    _this.layerGroup = new layer_group_1.LayerGroup();\n    _this.options = (0, utils_1.deepAssign)({}, _this.getDefaultOptions(), options);\n    _this.lastOptions = _this.options;\n    return _this;\n  }\n  /**\n   * 获取默认配置\n   */\n\n\n  Map.prototype.getDefaultOptions = function () {\n    return Map.DefaultOptions;\n  };\n  /**\n   * 创建 DOM 容器\n   */\n\n\n  Map.prototype.createContainer = function (container) {\n    var _a = this.options,\n        width = _a.width,\n        height = _a.height;\n    var dom = typeof container === 'string' ? document.getElementById(container) : container;\n    dom.style.position || (dom.style.position = 'relative');\n\n    if (width) {\n      dom.style.width || (dom.style.width = \"\".concat(width, \"px\"));\n    }\n\n    if (height) {\n      dom.style.height || (dom.style.height = \"\".concat(height, \"px\"));\n    }\n\n    return dom;\n  };\n  /**\n   * 注册主题\n   */\n\n\n  Map.prototype.createTheme = function () {\n    var theme = (0, util_1.isObject)(this.options.theme) ? (0, utils_1.deepAssign)({}, (0, theme_1.getTheme)('default'), (0, util_2.createTheme)(this.options.theme)) : (0, theme_1.getTheme)(this.options.theme);\n    return theme;\n  };\n  /**\n   * 创建 map 容器\n   */\n\n\n  Map.prototype.createMap = function () {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var mapConfig = this.options.map ? this.options.map : DEFAULT_OPTIONS.map;\n    var type = mapConfig.type,\n        config = (0, tslib_1.__rest)(mapConfig, [\"type\"]);\n    var options = Object.assign({\n      style: this.theme['mapStyle']\n    }, config);\n    return type === types_1.BaseMapType.Amap ? new l7_maps_1.GaodeMap(options) : new l7_maps_1.Mapbox(options);\n  };\n  /**\n   * 创建 scene 实例\n   */\n\n\n  Map.prototype.createScene = function () {\n    var _a = this.options,\n        logo = _a.logo,\n        antialias = _a.antialias,\n        preserveDrawingBuffer = _a.preserveDrawingBuffer;\n    var logoConfig = (0, util_1.isBoolean)(logo) ? {\n      logoVisible: logo\n    } : {\n      logoVisible: logo === null || logo === void 0 ? void 0 : logo.visible,\n      logoPosition: logo === null || logo === void 0 ? void 0 : logo.position\n    };\n    var sceneConfig = Object.assign({\n      // animate,\n      // fitBoundsOptions,\n      // pickBufferScale,\n      // enableMultiPassRenderer,\n      // passes,\n      antialias: antialias,\n      preserveDrawingBuffer: preserveDrawingBuffer\n    }, logoConfig);\n    var map = this.createMap();\n    var scene = new l7_scene_1.Scene((0, tslib_1.__assign)({\n      id: this.container,\n      map: map\n    }, sceneConfig));\n    return scene;\n  };\n  /**\n   * 注册静态资源\n   */\n\n\n  Map.prototype.registerResources = function () {\n    var _this = this;\n\n    if (register_1.IMAGES_CACHE.size) {\n      register_1.IMAGES_CACHE.forEach(function (img, id) {\n        _this.scene.addImage(id, img);\n      });\n    }\n\n    if (register_1.FONT_FACE_CACHE.size) {\n      register_1.FONT_FACE_CACHE.forEach(function (fontPath, fontFamily) {\n        _this.scene.addFontFace(fontFamily, fontPath);\n      });\n    }\n\n    if (register_1.ICON_FONT_CACHE.size) {\n      register_1.ICON_FONT_CACHE.forEach(function (name, fontUnicode) {\n        _this.scene.addIconFont(fontUnicode, name);\n      });\n    }\n  };\n  /**\n   * 更新: 更新配置且重新渲染\n   */\n\n\n  Map.prototype.update = function (options) {\n    this.updateOption(options);\n\n    if (options.map && !(0, util_1.isEqual)(this.lastOptions.map, this.options.map)) {\n      this.updateMap(options.map);\n    }\n\n    this.render();\n  };\n  /**\n   * 更新: 更新配置\n   */\n\n\n  Map.prototype.updateOption = function (options) {\n    this.lastOptions = this.options;\n    this.options = (0, utils_1.deepAssign)({}, this.options, options);\n  };\n  /**\n   * 更新: 地图底图配置\n   */\n\n\n  Map.prototype.updateMap = function (updateMapConfig) {\n    var _a;\n\n    if (!this.scene) return;\n    var style = updateMapConfig.style,\n        center = updateMapConfig.center,\n        zoom = updateMapConfig.zoom,\n        rotation = updateMapConfig.rotation,\n        pitch = updateMapConfig.pitch;\n\n    if (!(0, util_1.isUndefined)(pitch)) {\n      this.scene.setPitch(pitch);\n    }\n\n    if (!(0, util_1.isUndefined)(rotation)) {\n      this.scene.setRotation(rotation);\n    }\n\n    if (style && style !== ((_a = this.lastOptions.map) === null || _a === void 0 ? void 0 : _a.style)) {\n      this.scene.setMapStyle(style);\n    }\n\n    if (zoom && center) {\n      this.scene.setZoomAndCenter(zoom, center);\n    }\n  };\n  /**\n   * 修改容器大小\n   */\n\n\n  Map.prototype.changeSize = function (width, height) {\n    if (this.options.width === width && this.options.height === height) return;\n    this.container.style.width = \"\".concat(width, \"px\");\n    this.container.style.height = \"\".concat(height, \"px\");\n    this.options = Object.assign(this.options, {\n      width: width,\n      height: height\n    });\n  };\n  /**\n   * 事件代理: 绑定事件\n   */\n\n\n  Map.prototype.on = function (name, callback) {\n    this.proxyEventHander('on', name, callback);\n    return this;\n  };\n  /**\n   * 事件代理: 绑定一次事件\n   */\n\n\n  Map.prototype.once = function (name, callback) {\n    this.proxyEventHander('once', name, callback);\n    return this;\n  };\n  /**\n   * 事件代理: 解绑事件\n   */\n\n\n  Map.prototype.off = function (name, callback) {\n    this.proxyEventHander('off', name, callback);\n    return this;\n  };\n  /**\n   * 事件代理: 事件处理\n   */\n\n\n  Map.prototype.proxyEventHander = function (type, name, callback) {\n    var sceneEvent = constants_1.SceneEventList.find(function (event) {\n      return event.adaptation === name;\n    });\n\n    if (sceneEvent) {\n      this.scene[type](sceneEvent.original, callback);\n    } else if (constants_1.MapEventList.indexOf(name) !== -1) {\n      this.scene[type](name, callback);\n    } else if (name.includes('Layer:')) {\n      var _a = (0, tslib_1.__read)(name.split(':'), 2),\n          module_1 = _a[0],\n          eventName = _a[1];\n\n      var hasEventEmitter = this[module_1] && this[module_1][type];\n\n      if (hasEventEmitter && constants_1.LayerEventList.indexOf(eventName) !== -1) {\n        this[module_1][type](eventName, callback);\n      } else {\n        throw new Error(\"No event name \\\"\".concat(name, \"\\\"\"));\n      }\n    } else {\n      _super.prototype[type].call(this, name, callback);\n    }\n  };\n  /**\n   * 获取 scene 实例\n   */\n\n\n  Map.prototype.getScene = function () {\n    return this.scene;\n  };\n  /**\n   * 获取 map 实例\n   */\n\n\n  Map.prototype.getMap = function () {\n    var _a, _b;\n\n    if (((_a = this.options.map) === null || _a === void 0 ? void 0 : _a.type) === types_1.BaseMapType.Amap) {\n      return this.scene.map;\n    } else if (((_b = this.options.map) === null || _b === void 0 ? void 0 : _b.type) === types_1.BaseMapType.Mapbox) {\n      return this.scene.map;\n    } else {\n      return this.scene.map;\n    }\n  };\n  /**\n   * 添加图层\n   */\n\n\n  Map.prototype.addLayer = function (layer) {\n    this.layerGroup.addLayer(layer);\n  };\n  /**\n   * 获取所有图层\n   */\n\n\n  Map.prototype.getLayes = function () {\n    return this.layerGroup.getLayers();\n  };\n  /**\n   * 根据图层名称获取图层\n   */\n\n\n  Map.prototype.getLayerByName = function (name) {\n    return this.layerGroup.getLayerByName(name);\n  };\n  /**\n   * 移除图层\n   */\n\n\n  Map.prototype.removeLayer = function (layer) {\n    this.layerGroup.addLayer(layer);\n  };\n  /**\n   * 移除容器内所有的图层\n   */\n\n\n  Map.prototype.removeAllLayer = function () {\n    this.scene.removeAllLayer();\n  };\n  /**\n   * 地图放大一级\n   */\n\n\n  Map.prototype.zoomIn = function () {\n    this.scene.zoomIn();\n  };\n  /**\n   * 地图缩小一级\n   */\n\n\n  Map.prototype.zoomOut = function () {\n    this.scene.zoomOut();\n  };\n  /**\n   * 设置地图倾角\n   */\n\n\n  Map.prototype.setPitch = function (pitch) {\n    this.scene.setPitch(pitch);\n  };\n  /**\n   * 设置地图缩放范围\n   */\n\n\n  Map.prototype.fitBounds = function (bound) {\n    this.scene.fitBounds(bound);\n  };\n  /**\n   * 初始化组件\n   */\n\n\n  Map.prototype.initComponents = function () {\n    this.initControls();\n    this.initTooltip();\n  };\n  /**\n   * 更新化组件\n   */\n\n\n  Map.prototype.updateComponents = function () {\n    this.updateControls();\n    this.initTooltip();\n  };\n  /**\n   * 初始化控件\n   */\n\n\n  Map.prototype.initControls = function () {\n    var _a = this.options,\n        zoom = _a.zoom,\n        scale = _a.scale,\n        layerMenu = _a.layerMenu,\n        legend = _a.legend;\n    scale && this.addScaleControl(scale);\n    zoom && this.addZoomControl(zoom);\n    layerMenu && this.addLayerMenuControl(layerMenu);\n    legend && this.addLegendControl(legend);\n  };\n  /**\n   * 更新控件\n   */\n\n\n  Map.prototype.updateControls = function () {\n    var _a = this.options,\n        zoom = _a.zoom,\n        scale = _a.scale,\n        layerMenu = _a.layerMenu,\n        legend = _a.legend;\n\n    if (!(0, util_1.isEqual)(this.lastOptions.zoom, zoom)) {\n      zoom ? this.updateZoomControl(zoom) : this.removeZoomControl();\n    }\n\n    if (!(0, util_1.isEqual)(this.lastOptions.scale, scale)) {\n      scale ? this.updateScaleControl(scale) : this.removeScaleControl();\n    }\n\n    if (!(0, util_1.isEqual)(this.lastOptions.layerMenu, layerMenu)) {\n      layerMenu ? this.updateLayerMenuControl(layerMenu) : this.removeLayerMenuControl();\n    }\n\n    if (!(0, util_1.isEqual)(this.lastOptions.legend, legend)) {\n      legend ? this.updateLegendControl(legend) : this.removeLegendControl();\n    }\n  };\n  /**\n   * 添加 zoom 控件\n   */\n\n\n  Map.prototype.addZoomControl = function (options) {\n    if (this.zoomControl) {\n      return;\n    }\n\n    this.zoomControl = new l7_component_1.Zoom(options);\n    this.scene.addControl(this.zoomControl);\n  };\n  /**\n   * 更新 zoom 控件\n   */\n\n\n  Map.prototype.updateZoomControl = function (options) {\n    if (!this.zoomControl) {\n      this.addZoomControl(options);\n      return;\n    }\n\n    this.removeZoomControl();\n    this.addZoomControl(options);\n  };\n  /**\n   * 移除 zoom 控件\n   */\n\n\n  Map.prototype.removeZoomControl = function () {\n    if (this.zoomControl) {\n      this.zoomControl.remove();\n      this.zoomControl = undefined;\n    }\n  };\n  /**\n   * 添加 scale 控件\n   */\n\n\n  Map.prototype.addScaleControl = function (options) {\n    if (this.scaleControl) {\n      return;\n    }\n\n    this.scaleControl = new l7_component_1.Scale(options);\n    this.scene.addControl(this.scaleControl);\n  };\n  /**\n   * 更新 scale 控件\n   */\n\n\n  Map.prototype.updateScaleControl = function (options) {\n    if (!this.scaleControl) {\n      this.addScaleControl(options);\n      return;\n    }\n\n    this.removeScaleControl();\n    this.addScaleControl(options);\n  };\n  /**\n   * 移除 scale 控件\n   */\n\n\n  Map.prototype.removeScaleControl = function () {\n    if (this.scaleControl) {\n      this.scaleControl.remove();\n      this.scaleControl = undefined;\n    }\n  };\n  /**\n   * 添加 layerMenu 控件\n   */\n\n\n  Map.prototype.addLayerMenuControl = function (options) {\n    if (this.layerMenuControl) {\n      return;\n    }\n\n    var baseLayers = {};\n    var overlayers = {};\n    this.layerGroup.getLayers().forEach(function (_a) {\n      var name = _a.name,\n          layer = _a.layer;\n      overlayers[name] = layer;\n    });\n    this.layerMenuControl = new l7_component_1.Layers(Object.assign({}, options, {\n      baseLayers: baseLayers,\n      overlayers: overlayers\n    }));\n    this.scene.addControl(this.layerMenuControl);\n  };\n  /**\n   * 更新 layerMenu 控件\n   */\n\n\n  Map.prototype.updateLayerMenuControl = function (options) {\n    if (!this.layerMenuControl) {\n      this.addLayerMenuControl(options);\n      return;\n    }\n\n    this.removeLayerMenuControl();\n    this.addLayerMenuControl(options);\n  };\n  /**\n   * 移除 layerMenu 控件\n   */\n\n\n  Map.prototype.removeLayerMenuControl = function () {\n    if (this.layerMenuControl) {\n      this.layerMenuControl.remove();\n      this.layerMenuControl = undefined;\n    }\n  };\n  /**\n   * 获取 legend 配置项\n   * 由各图各自实现，不同的图 legend 可能不同\n   */\n\n\n  Map.prototype.getLegendOptions = function () {\n    return {};\n  };\n  /**\n   * 添加 legend 控件\n   */\n\n\n  Map.prototype.addLegendControl = function (options) {\n    if (this.legendControl) {\n      return;\n    }\n\n    var legendTheme = this.theme['components'].legend;\n    var legendOptions = (0, utils_1.deepAssign)({}, this.getLegendOptions(), options);\n    var type = legendOptions.type,\n        position = legendOptions.position,\n        rest = (0, tslib_1.__rest)(legendOptions, [\"type\", \"position\"]);\n    var items = [];\n\n    if (type === 'category') {\n      var options_1 = (0, utils_1.deepAssign)({}, {\n        domStyles: legendTheme.category.domStyles\n      }, rest);\n      items.push({\n        type: type,\n        options: options_1\n      });\n    } else if (type === 'continue') {\n      var options_2 = (0, utils_1.deepAssign)({}, {\n        domStyles: legendTheme.continue.domStyles\n      }, rest);\n      items.push({\n        type: type,\n        options: options_2\n      });\n    }\n\n    if (items.length) {\n      this.legendControl = new legend_1.Legend({\n        position: position,\n        items: items\n      });\n      this.scene.addControl(this.legendControl);\n    }\n  };\n  /**\n   * 更新 legend 控件\n   */\n\n\n  Map.prototype.updateLegendControl = function (options) {\n    if (!this.legendControl) {\n      this.addLegendControl(options);\n      return;\n    }\n\n    this.removeLegendControl();\n    this.addLegendControl(options);\n  };\n  /**\n   * 移除 legend 控件\n   */\n\n\n  Map.prototype.removeLegendControl = function () {\n    if (this.legendControl) {\n      this.legendControl.remove();\n      this.legendControl = undefined;\n    }\n  };\n  /**\n   * 初始化 tooltip\n   */\n\n\n  Map.prototype.initTooltip = function () {\n    var _this = this;\n\n    if (this.tooltip) {\n      this.tooltip.destroy();\n    }\n\n    var tooltip = this.options.tooltip;\n\n    if (tooltip) {\n      var options = (0, utils_1.deepAssign)({}, {\n        domStyles: this.theme['components'].tooltip.domStyles\n      }, tooltip);\n      var interactionLayers = this.layerGroup.getInteractionLayers();\n      this.tooltip = new tooltip_1.Tooltip(this.scene, interactionLayers, options);\n      this.tooltip.on('*', function (event) {\n        return _this.emit(event.type, event);\n      });\n    }\n  };\n  /**\n   * 导出地图图片\n   */\n\n\n  Map.prototype.exportPng = function (type) {\n    return this.scene.exportPng(type);\n  };\n  /**\n   * 销毁\n   */\n\n\n  Map.prototype.destroy = function () {\n    var _a; // TODO: 清空已经绑定其他的事件\n\n\n    _super.prototype.off.call(this, '*');\n\n    this.removeScaleControl();\n    this.removeZoomControl();\n    this.removeLayerMenuControl();\n    this.removeLegendControl();\n    (_a = this.tooltip) === null || _a === void 0 ? void 0 : _a.destroy();\n    this.scene.destroy();\n  };\n  /**\n   * 默认的 options 配置项\n   */\n\n\n  Map.DefaultOptions = DEFAULT_OPTIONS;\n  return Map;\n}(event_emitter_1.default);\n\nexports.Map = Map;","map":{"version":3,"sources":["../../../../src/core/map/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Map = void 0;\nvar tslib_1 = require(\"tslib\");\nvar l7_scene_1 = require(\"@antv/l7-scene\");\nvar l7_maps_1 = require(\"@antv/l7-maps\");\nvar l7_component_1 = require(\"@antv/l7-component\");\nvar event_emitter_1 = (0, tslib_1.__importDefault)(require(\"@antv/event-emitter\"));\nvar util_1 = require(\"@antv/util\");\nvar tooltip_1 = require(\"../../component/tooltip\");\nvar legend_1 = require(\"../../component/legend\");\nvar utils_1 = require(\"../../utils\");\nvar types_1 = require(\"../../types\");\nvar layer_group_1 = require(\"../layer/layer-group\");\nvar constants_1 = require(\"./constants\");\nvar register_1 = require(\"./register\");\nvar theme_1 = require(\"../../theme\");\nvar util_2 = require(\"../../theme/util\");\nvar DEFAULT_OPTIONS = {\n    map: { type: types_1.BaseMapType.Amap },\n    logo: true,\n};\nvar Map = /** @class */ (function (_super) {\n    (0, tslib_1.__extends)(Map, _super);\n    function Map(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * 是否初始化成功\n         */\n        _this.inited = false;\n        /**\n         * 是否场景加载完成\n         */\n        _this.sceneLoaded = false;\n        /**\n         * 是否所有图层加载完成\n         */\n        _this.layersLoaded = false;\n        /**\n         * 是否场景与所有图层加载完成\n         */\n        _this.loaded = false;\n        /**\n         * 图层组\n         */\n        _this.layerGroup = new layer_group_1.LayerGroup();\n        _this.options = (0, utils_1.deepAssign)({}, _this.getDefaultOptions(), options);\n        _this.lastOptions = _this.options;\n        return _this;\n    }\n    /**\n     * 获取默认配置\n     */\n    Map.prototype.getDefaultOptions = function () {\n        return Map.DefaultOptions;\n    };\n    /**\n     * 创建 DOM 容器\n     */\n    Map.prototype.createContainer = function (container) {\n        var _a = this.options, width = _a.width, height = _a.height;\n        var dom = typeof container === 'string' ? document.getElementById(container) : container;\n        dom.style.position || (dom.style.position = 'relative');\n        if (width) {\n            dom.style.width || (dom.style.width = \"\".concat(width, \"px\"));\n        }\n        if (height) {\n            dom.style.height || (dom.style.height = \"\".concat(height, \"px\"));\n        }\n        return dom;\n    };\n    /**\n     * 注册主题\n     */\n    Map.prototype.createTheme = function () {\n        var theme = (0, util_1.isObject)(this.options.theme)\n            ? (0, utils_1.deepAssign)({}, (0, theme_1.getTheme)('default'), (0, util_2.createTheme)(this.options.theme))\n            : (0, theme_1.getTheme)(this.options.theme);\n        return theme;\n    };\n    /**\n     * 创建 map 容器\n     */\n    Map.prototype.createMap = function () {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        var mapConfig = this.options.map ? this.options.map : DEFAULT_OPTIONS.map;\n        var type = mapConfig.type, config = (0, tslib_1.__rest)(mapConfig, [\"type\"]);\n        var options = Object.assign({ style: this.theme['mapStyle'] }, config);\n        return type === types_1.BaseMapType.Amap ? new l7_maps_1.GaodeMap(options) : new l7_maps_1.Mapbox(options);\n    };\n    /**\n     * 创建 scene 实例\n     */\n    Map.prototype.createScene = function () {\n        var _a = this.options, logo = _a.logo, antialias = _a.antialias, preserveDrawingBuffer = _a.preserveDrawingBuffer;\n        var logoConfig = (0, util_1.isBoolean)(logo)\n            ? { logoVisible: logo }\n            : { logoVisible: logo === null || logo === void 0 ? void 0 : logo.visible, logoPosition: logo === null || logo === void 0 ? void 0 : logo.position };\n        var sceneConfig = Object.assign({\n            // animate,\n            // fitBoundsOptions,\n            // pickBufferScale,\n            // enableMultiPassRenderer,\n            // passes,\n            antialias: antialias,\n            preserveDrawingBuffer: preserveDrawingBuffer,\n        }, logoConfig);\n        var map = this.createMap();\n        var scene = new l7_scene_1.Scene((0, tslib_1.__assign)({ id: this.container, map: map }, sceneConfig));\n        return scene;\n    };\n    /**\n     * 注册静态资源\n     */\n    Map.prototype.registerResources = function () {\n        var _this = this;\n        if (register_1.IMAGES_CACHE.size) {\n            register_1.IMAGES_CACHE.forEach(function (img, id) {\n                _this.scene.addImage(id, img);\n            });\n        }\n        if (register_1.FONT_FACE_CACHE.size) {\n            register_1.FONT_FACE_CACHE.forEach(function (fontPath, fontFamily) {\n                _this.scene.addFontFace(fontFamily, fontPath);\n            });\n        }\n        if (register_1.ICON_FONT_CACHE.size) {\n            register_1.ICON_FONT_CACHE.forEach(function (name, fontUnicode) {\n                _this.scene.addIconFont(fontUnicode, name);\n            });\n        }\n    };\n    /**\n     * 更新: 更新配置且重新渲染\n     */\n    Map.prototype.update = function (options) {\n        this.updateOption(options);\n        if (options.map && !(0, util_1.isEqual)(this.lastOptions.map, this.options.map)) {\n            this.updateMap(options.map);\n        }\n        this.render();\n    };\n    /**\n     * 更新: 更新配置\n     */\n    Map.prototype.updateOption = function (options) {\n        this.lastOptions = this.options;\n        this.options = (0, utils_1.deepAssign)({}, this.options, options);\n    };\n    /**\n     * 更新: 地图底图配置\n     */\n    Map.prototype.updateMap = function (updateMapConfig) {\n        var _a;\n        if (!this.scene)\n            return;\n        var style = updateMapConfig.style, center = updateMapConfig.center, zoom = updateMapConfig.zoom, rotation = updateMapConfig.rotation, pitch = updateMapConfig.pitch;\n        if (!(0, util_1.isUndefined)(pitch)) {\n            this.scene.setPitch(pitch);\n        }\n        if (!(0, util_1.isUndefined)(rotation)) {\n            this.scene.setRotation(rotation);\n        }\n        if (style && style !== ((_a = this.lastOptions.map) === null || _a === void 0 ? void 0 : _a.style)) {\n            this.scene.setMapStyle(style);\n        }\n        if (zoom && center) {\n            this.scene.setZoomAndCenter(zoom, center);\n        }\n    };\n    /**\n     * 修改容器大小\n     */\n    Map.prototype.changeSize = function (width, height) {\n        if (this.options.width === width && this.options.height === height)\n            return;\n        this.container.style.width = \"\".concat(width, \"px\");\n        this.container.style.height = \"\".concat(height, \"px\");\n        this.options = Object.assign(this.options, { width: width, height: height });\n    };\n    /**\n     * 事件代理: 绑定事件\n     */\n    Map.prototype.on = function (name, callback) {\n        this.proxyEventHander('on', name, callback);\n        return this;\n    };\n    /**\n     * 事件代理: 绑定一次事件\n     */\n    Map.prototype.once = function (name, callback) {\n        this.proxyEventHander('once', name, callback);\n        return this;\n    };\n    /**\n     * 事件代理: 解绑事件\n     */\n    Map.prototype.off = function (name, callback) {\n        this.proxyEventHander('off', name, callback);\n        return this;\n    };\n    /**\n     * 事件代理: 事件处理\n     */\n    Map.prototype.proxyEventHander = function (type, name, callback) {\n        var sceneEvent = constants_1.SceneEventList.find(function (event) { return event.adaptation === name; });\n        if (sceneEvent) {\n            this.scene[type](sceneEvent.original, callback);\n        }\n        else if (constants_1.MapEventList.indexOf(name) !== -1) {\n            this.scene[type](name, callback);\n        }\n        else if (name.includes('Layer:')) {\n            var _a = (0, tslib_1.__read)(name.split(':'), 2), module_1 = _a[0], eventName = _a[1];\n            var hasEventEmitter = this[module_1] && this[module_1][type];\n            if (hasEventEmitter && constants_1.LayerEventList.indexOf(eventName) !== -1) {\n                this[module_1][type](eventName, callback);\n            }\n            else {\n                throw new Error(\"No event name \\\"\".concat(name, \"\\\"\"));\n            }\n        }\n        else {\n            _super.prototype[type].call(this, name, callback);\n        }\n    };\n    /**\n     * 获取 scene 实例\n     */\n    Map.prototype.getScene = function () {\n        return this.scene;\n    };\n    /**\n     * 获取 map 实例\n     */\n    Map.prototype.getMap = function () {\n        var _a, _b;\n        if (((_a = this.options.map) === null || _a === void 0 ? void 0 : _a.type) === types_1.BaseMapType.Amap) {\n            return this.scene.map;\n        }\n        else if (((_b = this.options.map) === null || _b === void 0 ? void 0 : _b.type) === types_1.BaseMapType.Mapbox) {\n            return this.scene.map;\n        }\n        else {\n            return this.scene.map;\n        }\n    };\n    /**\n     * 添加图层\n     */\n    Map.prototype.addLayer = function (layer) {\n        this.layerGroup.addLayer(layer);\n    };\n    /**\n     * 获取所有图层\n     */\n    Map.prototype.getLayes = function () {\n        return this.layerGroup.getLayers();\n    };\n    /**\n     * 根据图层名称获取图层\n     */\n    Map.prototype.getLayerByName = function (name) {\n        return this.layerGroup.getLayerByName(name);\n    };\n    /**\n     * 移除图层\n     */\n    Map.prototype.removeLayer = function (layer) {\n        this.layerGroup.addLayer(layer);\n    };\n    /**\n     * 移除容器内所有的图层\n     */\n    Map.prototype.removeAllLayer = function () {\n        this.scene.removeAllLayer();\n    };\n    /**\n     * 地图放大一级\n     */\n    Map.prototype.zoomIn = function () {\n        this.scene.zoomIn();\n    };\n    /**\n     * 地图缩小一级\n     */\n    Map.prototype.zoomOut = function () {\n        this.scene.zoomOut();\n    };\n    /**\n     * 设置地图倾角\n     */\n    Map.prototype.setPitch = function (pitch) {\n        this.scene.setPitch(pitch);\n    };\n    /**\n     * 设置地图缩放范围\n     */\n    Map.prototype.fitBounds = function (bound) {\n        this.scene.fitBounds(bound);\n    };\n    /**\n     * 初始化组件\n     */\n    Map.prototype.initComponents = function () {\n        this.initControls();\n        this.initTooltip();\n    };\n    /**\n     * 更新化组件\n     */\n    Map.prototype.updateComponents = function () {\n        this.updateControls();\n        this.initTooltip();\n    };\n    /**\n     * 初始化控件\n     */\n    Map.prototype.initControls = function () {\n        var _a = this.options, zoom = _a.zoom, scale = _a.scale, layerMenu = _a.layerMenu, legend = _a.legend;\n        scale && this.addScaleControl(scale);\n        zoom && this.addZoomControl(zoom);\n        layerMenu && this.addLayerMenuControl(layerMenu);\n        legend && this.addLegendControl(legend);\n    };\n    /**\n     * 更新控件\n     */\n    Map.prototype.updateControls = function () {\n        var _a = this.options, zoom = _a.zoom, scale = _a.scale, layerMenu = _a.layerMenu, legend = _a.legend;\n        if (!(0, util_1.isEqual)(this.lastOptions.zoom, zoom)) {\n            zoom ? this.updateZoomControl(zoom) : this.removeZoomControl();\n        }\n        if (!(0, util_1.isEqual)(this.lastOptions.scale, scale)) {\n            scale ? this.updateScaleControl(scale) : this.removeScaleControl();\n        }\n        if (!(0, util_1.isEqual)(this.lastOptions.layerMenu, layerMenu)) {\n            layerMenu ? this.updateLayerMenuControl(layerMenu) : this.removeLayerMenuControl();\n        }\n        if (!(0, util_1.isEqual)(this.lastOptions.legend, legend)) {\n            legend ? this.updateLegendControl(legend) : this.removeLegendControl();\n        }\n    };\n    /**\n     * 添加 zoom 控件\n     */\n    Map.prototype.addZoomControl = function (options) {\n        if (this.zoomControl) {\n            return;\n        }\n        this.zoomControl = new l7_component_1.Zoom(options);\n        this.scene.addControl(this.zoomControl);\n    };\n    /**\n     * 更新 zoom 控件\n     */\n    Map.prototype.updateZoomControl = function (options) {\n        if (!this.zoomControl) {\n            this.addZoomControl(options);\n            return;\n        }\n        this.removeZoomControl();\n        this.addZoomControl(options);\n    };\n    /**\n     * 移除 zoom 控件\n     */\n    Map.prototype.removeZoomControl = function () {\n        if (this.zoomControl) {\n            this.zoomControl.remove();\n            this.zoomControl = undefined;\n        }\n    };\n    /**\n     * 添加 scale 控件\n     */\n    Map.prototype.addScaleControl = function (options) {\n        if (this.scaleControl) {\n            return;\n        }\n        this.scaleControl = new l7_component_1.Scale(options);\n        this.scene.addControl(this.scaleControl);\n    };\n    /**\n     * 更新 scale 控件\n     */\n    Map.prototype.updateScaleControl = function (options) {\n        if (!this.scaleControl) {\n            this.addScaleControl(options);\n            return;\n        }\n        this.removeScaleControl();\n        this.addScaleControl(options);\n    };\n    /**\n     * 移除 scale 控件\n     */\n    Map.prototype.removeScaleControl = function () {\n        if (this.scaleControl) {\n            this.scaleControl.remove();\n            this.scaleControl = undefined;\n        }\n    };\n    /**\n     * 添加 layerMenu 控件\n     */\n    Map.prototype.addLayerMenuControl = function (options) {\n        if (this.layerMenuControl) {\n            return;\n        }\n        var baseLayers = {};\n        var overlayers = {};\n        this.layerGroup.getLayers().forEach(function (_a) {\n            var name = _a.name, layer = _a.layer;\n            overlayers[name] = layer;\n        });\n        this.layerMenuControl = new l7_component_1.Layers(Object.assign({}, options, { baseLayers: baseLayers, overlayers: overlayers }));\n        this.scene.addControl(this.layerMenuControl);\n    };\n    /**\n     * 更新 layerMenu 控件\n     */\n    Map.prototype.updateLayerMenuControl = function (options) {\n        if (!this.layerMenuControl) {\n            this.addLayerMenuControl(options);\n            return;\n        }\n        this.removeLayerMenuControl();\n        this.addLayerMenuControl(options);\n    };\n    /**\n     * 移除 layerMenu 控件\n     */\n    Map.prototype.removeLayerMenuControl = function () {\n        if (this.layerMenuControl) {\n            this.layerMenuControl.remove();\n            this.layerMenuControl = undefined;\n        }\n    };\n    /**\n     * 获取 legend 配置项\n     * 由各图各自实现，不同的图 legend 可能不同\n     */\n    Map.prototype.getLegendOptions = function () {\n        return {};\n    };\n    /**\n     * 添加 legend 控件\n     */\n    Map.prototype.addLegendControl = function (options) {\n        if (this.legendControl) {\n            return;\n        }\n        var legendTheme = this.theme['components'].legend;\n        var legendOptions = (0, utils_1.deepAssign)({}, this.getLegendOptions(), options);\n        var type = legendOptions.type, position = legendOptions.position, rest = (0, tslib_1.__rest)(legendOptions, [\"type\", \"position\"]);\n        var items = [];\n        if (type === 'category') {\n            var options_1 = (0, utils_1.deepAssign)({}, { domStyles: legendTheme.category.domStyles }, rest);\n            items.push({ type: type, options: options_1 });\n        }\n        else if (type === 'continue') {\n            var options_2 = (0, utils_1.deepAssign)({}, { domStyles: legendTheme.continue.domStyles }, rest);\n            items.push({ type: type, options: options_2 });\n        }\n        if (items.length) {\n            this.legendControl = new legend_1.Legend({ position: position, items: items });\n            this.scene.addControl(this.legendControl);\n        }\n    };\n    /**\n     * 更新 legend 控件\n     */\n    Map.prototype.updateLegendControl = function (options) {\n        if (!this.legendControl) {\n            this.addLegendControl(options);\n            return;\n        }\n        this.removeLegendControl();\n        this.addLegendControl(options);\n    };\n    /**\n     * 移除 legend 控件\n     */\n    Map.prototype.removeLegendControl = function () {\n        if (this.legendControl) {\n            this.legendControl.remove();\n            this.legendControl = undefined;\n        }\n    };\n    /**\n     * 初始化 tooltip\n     */\n    Map.prototype.initTooltip = function () {\n        var _this = this;\n        if (this.tooltip) {\n            this.tooltip.destroy();\n        }\n        var tooltip = this.options.tooltip;\n        if (tooltip) {\n            var options = (0, utils_1.deepAssign)({}, { domStyles: this.theme['components'].tooltip.domStyles }, tooltip);\n            var interactionLayers = this.layerGroup.getInteractionLayers();\n            this.tooltip = new tooltip_1.Tooltip(this.scene, interactionLayers, options);\n            this.tooltip.on('*', function (event) { return _this.emit(event.type, event); });\n        }\n    };\n    /**\n     * 导出地图图片\n     */\n    Map.prototype.exportPng = function (type) {\n        return this.scene.exportPng(type);\n    };\n    /**\n     * 销毁\n     */\n    Map.prototype.destroy = function () {\n        var _a;\n        // TODO: 清空已经绑定其他的事件\n        _super.prototype.off.call(this, '*');\n        this.removeScaleControl();\n        this.removeZoomControl();\n        this.removeLayerMenuControl();\n        this.removeLegendControl();\n        (_a = this.tooltip) === null || _a === void 0 ? void 0 : _a.destroy();\n        this.scene.destroy();\n    };\n    /**\n     * 默认的 options 配置项\n     */\n    Map.DefaultOptions = DEFAULT_OPTIONS;\n    return Map;\n}(event_emitter_1.default));\nexports.Map = Map;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}