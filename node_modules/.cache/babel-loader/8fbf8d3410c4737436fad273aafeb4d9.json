{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { gl } from '@antv/l7-core';\nimport { dataTypeMap, usageMap } from './constants';\n\nvar ReglBuffer = function () {\n  function ReglBuffer(reGl, options) {\n    _classCallCheck(this, ReglBuffer);\n\n    _defineProperty(this, \"buffer\", void 0);\n\n    var data = options.data,\n        usage = options.usage,\n        type = options.type;\n    this.buffer = reGl.buffer({\n      data: data,\n      usage: usageMap[usage || gl.STATIC_DRAW],\n      type: dataTypeMap[type || gl.UNSIGNED_BYTE]\n    });\n  }\n\n  _createClass(ReglBuffer, [{\n    key: \"get\",\n    value: function get() {\n      return this.buffer;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.buffer.destroy();\n    }\n  }, {\n    key: \"subData\",\n    value: function subData(_ref) {\n      var data = _ref.data,\n          offset = _ref.offset;\n      this.buffer.subdata(data, offset);\n    }\n  }]);\n\n  return ReglBuffer;\n}();\n\nexport { ReglBuffer as default };","map":{"version":3,"sources":["../../src/regl/ReglBuffer.ts"],"names":["ReglBuffer","data","usage","type","options","usageMap","gl","dataTypeMap","offset"],"mappings":";;;AAAA,SAAA,EAAA,QAAA,eAAA;AAEA,SAAA,WAAA,EAAA,QAAA,QAAA,aAAA;;IAMqBA,U;AAGnB,WAAA,UAAA,CAAA,IAAA,EAAA,OAAA,EAAoE;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAClE,QAAQC,IAAR,GAA8BG,OAA9B,CAAA,IAAA;AAAA,QAAcF,KAAd,GAA8BE,OAA9B,CAAA,KAAA;AAAA,QAAqBD,IAArB,GAA8BC,OAA9B,CAAA,IAAA;AACA,SAAA,MAAA,GAAc,IAAI,CAAJ,MAAA,CAAY;AACxBH,MAAAA,IAAI,EADoB,IAAA;AAExBC,MAAAA,KAAK,EAAEG,QAAQ,CAACH,KAAK,IAAII,EAAE,CAFH,WAET,CAFS;AAGxBH,MAAAA,IAAI,EAAEI,WAAW,CAACJ,IAAI,IAAIG,EAAE,CAAX,aAAA;AAHO,KAAZ,CAAd;AAMD;;;;WAED,SAAA,GAAA,GAAa;AACX,aAAO,KAAP,MAAA;AACD;;;WAED,SAAA,OAAA,GAAiB;AACf,WAAA,MAAA,CAAA,OAAA;AACD;;;WAED,SAAA,OAAA,CAAA,IAAA,EAMG;AAAA,UALDL,IAKC,GAAA,IAAA,CALDA,IAKC;AAAA,UAJDO,MAIC,GAAA,IAAA,CAJDA,MAIC;AACD,WAAA,MAAA,CAAA,OAAA,CAAA,IAAA,EAAA,MAAA;AACD;;;;;;SA7BkBR,U","sourcesContent":["import { gl, IBuffer, IBufferInitializationOptions } from '@antv/l7-core';\nimport regl from 'l7regl';\nimport { dataTypeMap, usageMap } from './constants';\n\n/**\n * adaptor for regl.Buffer\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md#buffers\n */\nexport default class ReglBuffer implements IBuffer {\n  private buffer: regl.Buffer;\n\n  constructor(reGl: regl.Regl, options: IBufferInitializationOptions) {\n    const { data, usage, type } = options;\n    this.buffer = reGl.buffer({\n      data,\n      usage: usageMap[usage || gl.STATIC_DRAW],\n      type: dataTypeMap[type || gl.UNSIGNED_BYTE],\n      // length: 0,\n    });\n  }\n\n  public get() {\n    return this.buffer;\n  }\n\n  public destroy() {\n    this.buffer.destroy();\n  }\n\n  public subData({\n    data,\n    offset,\n  }: {\n    data: number[] | number[][] | Uint8Array | Uint16Array | Uint32Array;\n    offset: number;\n  }) {\n    this.buffer.subdata(data, offset);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}