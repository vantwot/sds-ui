{"ast":null,"code":"var _jsxFileName = \"/home/manolo/sds-ui/src/components/charts/TinyWordCloudChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\n/* Libraries */\n\nimport { WordCloud } from '@ant-design/charts';\n/* UI Library Components */\n\nimport { Badge } from 'antd';\n/* Utilities */\n\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TinyWordCloudChart = /*#__PURE__*/React.memo(_c = _s(function (_ref) {\n  _s();\n\n  let {\n    data,\n    core\n  } = _ref;\n  const history = useHistory();\n  let config = {\n    data: data,\n    wordField: 'name',\n    weightField: 'products',\n    colorField: 'name',\n    wordStyle: {\n      fontFamily: 'Verdana',\n      fontSize: [10, 22],\n      rotation: 0\n    },\n    height: 140,\n    tooltip: {\n      customContent: (title, datum) => {\n        var _datum$, _datum$2, _datum$3, _datum$3$data, _datum$3$data$datum, _datum$4, _datum$4$data, _datum$4$data$datum, _datum$5, _datum$5$data, _datum$5$data$datum;\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '10px 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Badge, {\n              color: (_datum$ = datum[0]) === null || _datum$ === void 0 ? void 0 : _datum$.color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), (_datum$2 = datum[0]) === null || _datum$2 === void 0 ? void 0 : _datum$2.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Productos: \\u2003 \", (_datum$3 = datum[0]) === null || _datum$3 === void 0 ? void 0 : (_datum$3$data = _datum$3.data) === null || _datum$3$data === void 0 ? void 0 : (_datum$3$data$datum = _datum$3$data.datum) === null || _datum$3$data$datum === void 0 ? void 0 : _datum$3$data$datum.products]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), ((_datum$4 = datum[0]) === null || _datum$4 === void 0 ? void 0 : (_datum$4$data = _datum$4.data) === null || _datum$4$data === void 0 ? void 0 : (_datum$4$data$datum = _datum$4$data.datum) === null || _datum$4$data$datum === void 0 ? void 0 : _datum$4$data$datum.citations) ? /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Citaciones: \\u2003 \", (_datum$5 = datum[0]) === null || _datum$5 === void 0 ? void 0 : (_datum$5$data = _datum$5.data) === null || _datum$5$data === void 0 ? void 0 : (_datum$5$data$datum = _datum$5$data.datum) === null || _datum$5$data$datum === void 0 ? void 0 : _datum$5$data$datum.citations]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this) : '']\n        }, void 0, true);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(WordCloud, { ...config,\n    onReady: plot => {\n      plot.on('plot:click', evt => {\n        if (evt.data) {\n          history.push(`/app/subjects?id=${evt.data.data.datum.id}`);\n          core.setURL(`/app/subjects?id=${evt.data.data.datum.id}`);\n        }\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n}));\n_c2 = TinyWordCloudChart;\nexport default TinyWordCloudChart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TinyWordCloudChart$React.memo\");\n$RefreshReg$(_c2, \"TinyWordCloudChart\");","map":{"version":3,"sources":["/home/manolo/sds-ui/src/components/charts/TinyWordCloudChart.jsx"],"names":["React","WordCloud","Badge","useHistory","TinyWordCloudChart","memo","data","core","history","config","wordField","weightField","colorField","wordStyle","fontFamily","fontSize","rotation","height","tooltip","customContent","title","datum","margin","color","name","products","citations","plot","on","evt","push","id","setURL"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA;;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,kBAAkB,gBAAGJ,KAAK,CAACK,IAAN,SAAW,gBAA0B;AAAA;;AAAA,MAAhB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAgB;AAC9D,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,MAAIM,MAAM,GAAG;AACXH,IAAAA,IAAI,EAAEA,IADK;AAEXI,IAAAA,SAAS,EAAE,MAFA;AAGXC,IAAAA,WAAW,EAAE,UAHF;AAIXC,IAAAA,UAAU,EAAE,MAJD;AAKXC,IAAAA,SAAS,EAAE;AACTC,MAAAA,UAAU,EAAE,SADH;AAETC,MAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAFD;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KALA;AAUXC,IAAAA,MAAM,EAAE,GAVG;AAWXC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAAA;;AAC/B,4BACE;AAAA,kCACE;AAAI,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAAX;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,KAAK,aAAED,KAAK,CAAC,CAAD,CAAP,4CAAE,QAAUE;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADF,cAEGF,KAAK,CAAC,CAAD,CAFR,6CAEG,SAAUG,IAFb;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAA,yDAAuBH,KAAK,CAAC,CAAD,CAA5B,8DAAuB,SAAUf,IAAjC,yEAAuB,cAAgBe,KAAvC,wDAAuB,oBAAuBI,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAMG,aAAAJ,KAAK,CAAC,CAAD,CAAL,uEAAUf,IAAV,uFAAgBe,KAAhB,4EAAuBK,SAAvB,iBACC;AAAA,0DAAwBL,KAAK,CAAC,CAAD,CAA7B,8DAAwB,SAAUf,IAAlC,yEAAwB,cAAgBe,KAAxC,wDAAwB,oBAAuBK,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAGC,EATJ;AAAA,wBADF;AAcD;AAhBM;AAXE,GAAb;AA+BA,sBACE,QAAC,SAAD,OACMjB,MADN;AAEE,IAAA,OAAO,EAAGkB,IAAD,IAAU;AACjBA,MAAAA,IAAI,CAACC,EAAL,CAAQ,YAAR,EAAuBC,GAAD,IAAS;AAC7B,YAAIA,GAAG,CAACvB,IAAR,EAAc;AACZE,UAAAA,OAAO,CAACsB,IAAR,CAAc,oBAAmBD,GAAG,CAACvB,IAAJ,CAASA,IAAT,CAAce,KAAd,CAAoBU,EAAG,EAAxD;AACAxB,UAAAA,IAAI,CAACyB,MAAL,CAAa,oBAAmBH,GAAG,CAACvB,IAAJ,CAASA,IAAT,CAAce,KAAd,CAAoBU,EAAG,EAAvD;AACD;AACF,OALD;AAMD;AATH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA9C0B;AAAA,UACT5B,UADS;AAAA,GAA3B;MAAMC,kB;AAgDN,eAAeA,kBAAf","sourcesContent":["import React from 'react';\n\n/* Libraries */\nimport { WordCloud } from '@ant-design/charts';\n\n/* UI Library Components */\nimport { Badge } from 'antd';\n\n/* Utilities */\nimport { useHistory } from 'react-router-dom';\n\nconst TinyWordCloudChart = React.memo(function ({ data, core }) {\n  const history = useHistory();\n  let config = {\n    data: data,\n    wordField: 'name',\n    weightField: 'products',\n    colorField: 'name',\n    wordStyle: {\n      fontFamily: 'Verdana',\n      fontSize: [10, 22],\n      rotation: 0,\n    },\n    height: 140,\n    tooltip: {\n      customContent: (title, datum) => {\n        return (\n          <>\n            <h3 style={{ margin: '10px 0' }}>\n              <Badge color={datum[0]?.color} />\n              {datum[0]?.name}\n            </h3>\n            <h4>Productos: &emsp; {datum[0]?.data?.datum?.products}</h4>\n            {datum[0]?.data?.datum?.citations ? (\n              <h4>Citaciones: &emsp; {datum[0]?.data?.datum?.citations}</h4>\n            ) : (\n              ''\n            )}\n          </>\n        );\n      },\n    },\n  };\n\n  return (\n    <WordCloud\n      {...config}\n      onReady={(plot) => {\n        plot.on('plot:click', (evt) => {\n          if (evt.data) {\n            history.push(`/app/subjects?id=${evt.data.data.datum.id}`);\n            core.setURL(`/app/subjects?id=${evt.data.data.datum.id}`);\n          }\n        });\n      }}\n    />\n  );\n});\n\nexport default TinyWordCloudChart;\n"]},"metadata":{},"sourceType":"module"}