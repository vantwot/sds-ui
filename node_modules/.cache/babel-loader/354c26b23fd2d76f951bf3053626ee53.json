{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HexbinLayer = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar util_1 = require(\"@antv/util\");\n\nvar l7_layers_1 = require(\"@antv/l7-layers\");\n\nvar plot_layer_1 = require(\"../../core/layer/plot-layer\");\n\nvar adaptor_1 = require(\"./adaptor\");\n\nvar DEFAULT_OPTIONS = {\n  source: {\n    data: [],\n    parser: {\n      type: 'json',\n      x: 'x',\n      y: 'y'\n    },\n    aggregation: {\n      type: 'hexagon',\n      field: '',\n      radius: 15000,\n      method: 'sum'\n    }\n  },\n  shape: 'hexagon',\n  color: '#5FD3A6',\n  style: {\n    coverage: 0.9,\n    angle: 0,\n    opacity: 1.0\n  }\n};\nvar LAYER_OPTIONS_KEYS = ['shape', 'color', 'size', 'style', 'state'];\n\nvar HexbinLayer =\n/** @class */\nfunction (_super) {\n  (0, tslib_1.__extends)(HexbinLayer, _super);\n\n  function HexbinLayer(options) {\n    var _this = _super.call(this, options) || this;\n    /**\n     * 图层类型\n     */\n\n\n    _this.type = plot_layer_1.PlotLayer.LayerType.HexbinLayer;\n    /**\n     * 图层是否具有交互属性\n     */\n\n    _this.interaction = false;\n    var _a = _this.options,\n        name = _a.name,\n        source = _a.source;\n\n    var config = _this.pickLayerConfig(_this.options);\n\n    _this.name = name ? name : (0, util_1.uniqueId)(_this.type);\n    _this.layer = new l7_layers_1.HeatmapLayer((0, tslib_1.__assign)((0, tslib_1.__assign)({}, config), {\n      name: _this.name\n    }));\n\n    _this.mappingLayer(_this.layer, _this.options);\n\n    _this.setSource(source);\n\n    return _this;\n  }\n  /**\n   * 获取默认配置\n   */\n\n\n  HexbinLayer.prototype.getDefaultOptions = function () {\n    return DEFAULT_OPTIONS;\n  };\n\n  HexbinLayer.prototype.mappingLayer = function (layer, options) {\n    (0, adaptor_1.mappingLayer)(layer, options);\n  };\n\n  HexbinLayer.prototype.update = function (options) {\n    _super.prototype.update.call(this, options);\n\n    this.mappingLayer(this.layer, this.options);\n  };\n  /**\n   * 默认配置项\n   */\n\n\n  HexbinLayer.DefaultOptions = DEFAULT_OPTIONS;\n  /**\n   * 图层配置项 Keys\n   */\n\n  HexbinLayer.LayerOptionsKeys = plot_layer_1.PlotLayer.LayerConfigkeys.concat(LAYER_OPTIONS_KEYS);\n  return HexbinLayer;\n}(plot_layer_1.PlotLayer);\n\nexports.HexbinLayer = HexbinLayer;","map":{"version":3,"sources":["../../../../src/layers/hexbin-layer/index.ts"],"names":[],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAMA,IAAM,eAAe,GAAuB;AAC1C,EAAA,MAAM,EAAE;AACN,IAAA,IAAI,EAAE,EADA;AAEN,IAAA,MAAM,EAAE;AACN,MAAA,IAAI,EAAE,MADA;AAEN,MAAA,CAAC,EAAE,GAFG;AAGN,MAAA,CAAC,EAAE;AAHG,KAFF;AAON,IAAA,WAAW,EAAE;AACX,MAAA,IAAI,EAAE,SADK;AAEX,MAAA,KAAK,EAAE,EAFI;AAGX,MAAA,MAAM,EAAE,KAHG;AAIX,MAAA,MAAM,EAAE;AAJG;AAPP,GADkC;AAe1C,EAAA,KAAK,EAAE,SAfmC;AAgB1C,EAAA,KAAK,EAAE,SAhBmC;AAiB1C,EAAA,KAAK,EAAE;AACL,IAAA,QAAQ,EAAE,GADL;AAEL,IAAA,KAAK,EAAE,CAFF;AAGL,IAAA,OAAO,EAAE;AAHJ;AAjBmC,CAA5C;AAuBA,IAAM,kBAAkB,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA2B,OAA3B,EAAoC,OAApC,CAA3B;;AAEA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,GAAA,GAAA,OAAA,CAAA,SAAA,EAAA,WAAA,EAAA,MAAA;;AA0B/B,WAAA,WAAA,CAAY,OAAZ,EAAuC;AAAvC,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAN,KAAc,IADhB;AATA;;AAEG;;;AACI,IAAA,KAAA,CAAA,IAAA,GAAO,YAAA,CAAA,SAAA,CAAU,SAAV,CAAoB,WAA3B;AACP;;AAEG;;AACI,IAAA,KAAA,CAAA,WAAA,GAAc,KAAd;AAIC,QAAA,EAAA,GAAmB,KAAI,CAAC,OAAxB;AAAA,QAAE,IAAI,GAAA,EAAA,CAAA,IAAN;AAAA,QAAQ,MAAM,GAAA,EAAA,CAAA,MAAd;;AACN,QAAM,MAAM,GAAG,KAAI,CAAC,eAAL,CAAqB,KAAI,CAAC,OAA1B,CAAf;;AAEA,IAAA,KAAI,CAAC,IAAL,GAAY,IAAI,GAAG,IAAH,GAAU,CAAA,GAAA,MAAA,CAAA,QAAA,EAAS,KAAI,CAAC,IAAd,CAA1B;AACA,IAAA,KAAI,CAAC,KAAL,GAAa,IAAI,WAAA,CAAA,YAAJ,CAAW,CAAA,GAAA,OAAA,CAAA,QAAA,EAAA,CAAA,GAAA,OAAA,CAAA,QAAA,EAAA,EAAA,EAAM,MAAN,CAAA,EAAY;AAAE,MAAA,IAAI,EAAE,KAAI,CAAC;AAAb,KAAZ,CAAX,CAAb;;AAEA,IAAA,KAAI,CAAC,YAAL,CAAkB,KAAI,CAAC,KAAvB,EAA8B,KAAI,CAAC,OAAnC;;AACA,IAAA,KAAI,CAAC,SAAL,CAAe,MAAf;;;AACD;AAED;;AAEG;;;AACI,EAAA,WAAA,CAAA,SAAA,CAAA,iBAAA,GAAP,YAAA;AACE,WAAO,eAAP;AACD,GAFM;;AAIG,EAAA,WAAA,CAAA,SAAA,CAAA,YAAA,GAAV,UAAuB,KAAvB,EAAsC,OAAtC,EAAiE;AAC/D,KAAA,GAAA,SAAA,CAAA,YAAA,EAAa,KAAb,EAAoB,OAApB;AACD,GAFS;;AAIH,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAP,UAAc,OAAd,EAAkD;AAChD,IAAA,MAAA,CAAA,SAAA,CAAM,MAAN,CAAY,IAAZ,CAAY,IAAZ,EAAa,OAAb;;AAEA,SAAK,YAAL,CAAkB,KAAK,KAAvB,EAA8B,KAAK,OAAnC;AACD,GAJM;AAhDP;;AAEG;;;AACI,EAAA,WAAA,CAAA,cAAA,GAAiB,eAAjB;AACP;;AAEG;;AACI,EAAA,WAAA,CAAA,gBAAA,GAAmB,YAAA,CAAA,SAAA,CAAU,eAAV,CAA0B,MAA1B,CAAiC,kBAAjC,CAAnB;AA8CT,SAAA,WAAA;AAAC,CAtDD,CAAiC,YAAA,CAAA,SAAjC,CAAA;;AAAa,OAAA,CAAA,WAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HexbinLayer = void 0;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar l7_layers_1 = require(\"@antv/l7-layers\");\nvar plot_layer_1 = require(\"../../core/layer/plot-layer\");\nvar adaptor_1 = require(\"./adaptor\");\nvar DEFAULT_OPTIONS = {\n    source: {\n        data: [],\n        parser: {\n            type: 'json',\n            x: 'x',\n            y: 'y',\n        },\n        aggregation: {\n            type: 'hexagon',\n            field: '',\n            radius: 15000,\n            method: 'sum',\n        },\n    },\n    shape: 'hexagon',\n    color: '#5FD3A6',\n    style: {\n        coverage: 0.9,\n        angle: 0,\n        opacity: 1.0,\n    },\n};\nvar LAYER_OPTIONS_KEYS = ['shape', 'color', 'size', 'style', 'state'];\nvar HexbinLayer = /** @class */ (function (_super) {\n    (0, tslib_1.__extends)(HexbinLayer, _super);\n    function HexbinLayer(options) {\n        var _this = _super.call(this, options) || this;\n        /**\n         * 图层类型\n         */\n        _this.type = plot_layer_1.PlotLayer.LayerType.HexbinLayer;\n        /**\n         * 图层是否具有交互属性\n         */\n        _this.interaction = false;\n        var _a = _this.options, name = _a.name, source = _a.source;\n        var config = _this.pickLayerConfig(_this.options);\n        _this.name = name ? name : (0, util_1.uniqueId)(_this.type);\n        _this.layer = new l7_layers_1.HeatmapLayer((0, tslib_1.__assign)((0, tslib_1.__assign)({}, config), { name: _this.name }));\n        _this.mappingLayer(_this.layer, _this.options);\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * 获取默认配置\n     */\n    HexbinLayer.prototype.getDefaultOptions = function () {\n        return DEFAULT_OPTIONS;\n    };\n    HexbinLayer.prototype.mappingLayer = function (layer, options) {\n        (0, adaptor_1.mappingLayer)(layer, options);\n    };\n    HexbinLayer.prototype.update = function (options) {\n        _super.prototype.update.call(this, options);\n        this.mappingLayer(this.layer, this.options);\n    };\n    /**\n     * 默认配置项\n     */\n    HexbinLayer.DefaultOptions = DEFAULT_OPTIONS;\n    /**\n     * 图层配置项 Keys\n     */\n    HexbinLayer.LayerOptionsKeys = plot_layer_1.PlotLayer.LayerConfigkeys.concat(LAYER_OPTIONS_KEYS);\n    return HexbinLayer;\n}(plot_layer_1.PlotLayer));\nexports.HexbinLayer = HexbinLayer;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}