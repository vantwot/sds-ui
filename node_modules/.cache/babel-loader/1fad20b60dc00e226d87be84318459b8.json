{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowEdgeCommands } from '../constant';\nexport var NsHighlightEdge;\n\n(function (NsHighlightEdge) {\n  NsHighlightEdge.command = XFlowEdgeCommands.HIGHLIGHT_EDGE;\n  NsHighlightEdge.hookKey = 'highlightEdge';\n})(NsHighlightEdge || (NsHighlightEdge = {}));\n\nvar HighlightEdgeCommand =\n/*#__PURE__*/\n\n/** 连线高亮 */\nfunction () {\n  function HighlightEdgeCommand() {\n    var _this = this;\n\n    _classCallCheck(this, HighlightEdgeCommand);\n\n    this.execute = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var _this$ctx$getArgs, args, runtimeHook, hooks, result;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$ctx$getArgs = this.ctx.getArgs(), args = _this$ctx$getArgs.args, runtimeHook = _this$ctx$getArgs.hooks;\n                hooks = this.ctx.getHooks();\n                _context2.next = 4;\n                return hooks.highlightEdge.call(args, function (handlerArgs) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var _a, _b, x6Graph, edgeId, strokeColor, strokeWidth, allEdges, highlightEdge, otherEdges, oldAttr;\n\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return this.ctx.getX6Graph();\n\n                          case 2:\n                            x6Graph = _context.sent;\n                            edgeId = handlerArgs.edgeId, strokeColor = handlerArgs.strokeColor, strokeWidth = handlerArgs.strokeWidth;\n                            allEdges = x6Graph.getEdges();\n                            /** 需要高亮的连线 */\n\n                            /** 需要高亮的连线 */\n                            highlightEdge = allEdges.find(function (edge) {\n                              return edge.id === edgeId;\n                            });\n                            /** 不需要高亮的连线 */\n\n                            /** 不需要高亮的连线 */\n                            otherEdges = allEdges.filter(function (edge) {\n                              return edge.id !== edgeId;\n                            });\n\n                            if (!highlightEdge) {\n                              console.error(edgeId, 'this edgeId is not exist');\n                            } else {\n                              oldAttr = highlightEdge.getAttrs();\n\n                              if (((_a = oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line) === null || _a === void 0 ? void 0 : _a.stroke) === strokeColor && ((_b = oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line) === null || _b === void 0 ? void 0 : _b.strokeWidth) === strokeWidth) {\n                                /** 连线已经高亮, 不需要重复操作 */\n                              } else {\n                                /** 高亮选中的连线 */\n                                highlightEdge === null || highlightEdge === void 0 ? void 0 : highlightEdge.setAttrs({\n                                  line: {\n                                    stroke: strokeColor,\n                                    strokeWidth: strokeWidth || 2\n                                  }\n                                });\n                                /** 其余连线取消高亮状态 */\n\n                                /** 其余连线取消高亮状态 */\n                                otherEdges.forEach(function (edge) {\n                                  edge.setAttrs({\n                                    line: oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line\n                                  });\n                                });\n                                /** 高亮的连线默认前置在画布最前方 */\n\n                                /** 高亮的连线默认前置在画布最前方 */\n                                handlerArgs.commandService.executeCommand(XFlowEdgeCommands.FRONT_EDGE.id, {\n                                  edgeId: edgeId\n                                });\n                              }\n                            }\n\n                            return _context.abrupt(\"return\", {});\n\n                          case 9:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, this);\n                  }));\n                }, runtimeHook);\n\n              case 4:\n                result = _context2.sent;\n                this.ctx.setResult(result);\n                return _context2.abrupt(\"return\", this);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    };\n\n    this.undo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.ctx.undo();\n                return _context3.abrupt(\"return\", this);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    };\n\n    this.redo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.ctx.isUndoable) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.execute();\n\n              case 3:\n                return _context4.abrupt(\"return\", this);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    };\n  }\n\n  _createClass(HighlightEdgeCommand, [{\n    key: \"init\",\n    value: function init() {\n      this.ctx = this.contextProvider();\n    }\n  }, {\n    key: \"isUndoable\",\n    value: function isUndoable() {\n      return this.ctx.isUndoable();\n    }\n  }]);\n\n  return HighlightEdgeCommand;\n}();\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], HighlightEdgeCommand.prototype, \"contextProvider\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], HighlightEdgeCommand.prototype, \"init\", null);\n\nHighlightEdgeCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsHighlightEdge.command.id\n  }\n})\n/** 连线高亮 */\n], HighlightEdgeCommand);\nexport { HighlightEdgeCommand };","map":{"version":3,"sources":["../../../src/command-contributions/edge/edge-highlight.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowEdgeCommands } from '../constant';\nexport var NsHighlightEdge;\n(function (NsHighlightEdge) {\n    NsHighlightEdge.command = XFlowEdgeCommands.HIGHLIGHT_EDGE;\n    NsHighlightEdge.hookKey = 'highlightEdge';\n})(NsHighlightEdge || (NsHighlightEdge = {}));\nlet HighlightEdgeCommand = \n/** 连线高亮 */\nclass HighlightEdgeCommand {\n    constructor() {\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const { args, hooks: runtimeHook } = this.ctx.getArgs();\n            const hooks = this.ctx.getHooks();\n            const result = yield hooks.highlightEdge.call(args, (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                const x6Graph = yield this.ctx.getX6Graph();\n                const { edgeId, strokeColor, strokeWidth } = handlerArgs;\n                const allEdges = x6Graph.getEdges();\n                /** 需要高亮的连线 */\n                const highlightEdge = allEdges.find(edge => edge.id === edgeId);\n                /** 不需要高亮的连线 */\n                const otherEdges = allEdges.filter(edge => edge.id !== edgeId);\n                if (!highlightEdge) {\n                    console.error(edgeId, 'this edgeId is not exist');\n                }\n                else {\n                    const oldAttr = highlightEdge.getAttrs();\n                    if (((_a = oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line) === null || _a === void 0 ? void 0 : _a.stroke) === strokeColor && ((_b = oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line) === null || _b === void 0 ? void 0 : _b.strokeWidth) === strokeWidth) {\n                        /** 连线已经高亮, 不需要重复操作 */\n                    }\n                    else {\n                        /** 高亮选中的连线 */\n                        highlightEdge === null || highlightEdge === void 0 ? void 0 : highlightEdge.setAttrs({\n                            line: {\n                                stroke: strokeColor,\n                                strokeWidth: strokeWidth || 2,\n                            },\n                        });\n                        /** 其余连线取消高亮状态 */\n                        otherEdges.forEach(edge => {\n                            edge.setAttrs({\n                                line: oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line,\n                            });\n                        });\n                        /** 高亮的连线默认前置在画布最前方 */\n                        handlerArgs.commandService.executeCommand(XFlowEdgeCommands.FRONT_EDGE.id, {\n                            edgeId,\n                        });\n                    }\n                }\n                return {};\n            }), runtimeHook);\n            this.ctx.setResult(result);\n            return this;\n        });\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            this.ctx.undo();\n            return this;\n        });\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.ctx.isUndoable) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    init() {\n        this.ctx = this.contextProvider();\n    }\n    isUndoable() {\n        return this.ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], HighlightEdgeCommand.prototype, \"contextProvider\", void 0);\n__decorate([\n    postConstruct(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], HighlightEdgeCommand.prototype, \"init\", null);\nHighlightEdgeCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsHighlightEdge.command.id },\n    })\n    /** 连线高亮 */\n], HighlightEdgeCommand);\nexport { HighlightEdgeCommand };\n//# sourceMappingURL=edge-highlight.js.map"]},"metadata":{},"sourceType":"module"}