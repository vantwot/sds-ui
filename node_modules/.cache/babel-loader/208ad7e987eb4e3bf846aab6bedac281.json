{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Widget } from '../common';\nimport { Dom } from '../../util';\nimport { Angle, Point } from '../../geometry';\nexport var Knob = /*#__PURE__*/function (_Widget) {\n  _inherits(Knob, _Widget);\n\n  var _super = _createSuper(Knob);\n\n  function Knob() {\n    _classCallCheck(this, Knob);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Knob, [{\n    key: \"node\",\n    get: function get() {\n      return this.cell;\n    }\n  }, {\n    key: \"metadata\",\n    get: function get() {\n      var meta = this.cell.prop('knob');\n\n      if (Array.isArray(meta)) {\n        if (this.options.index != null) {\n          return meta[this.options.index];\n        }\n\n        return null;\n      }\n\n      return meta;\n    }\n  }, {\n    key: \"init\",\n    value: function init(options) {\n      this.options = Object.assign({}, options);\n      this.render();\n      this.startListening();\n    }\n  }, {\n    key: \"startListening\",\n    value: function startListening() {\n      this.delegateEvents({\n        mousedown: 'onMouseDown',\n        touchstart: 'onMouseDown'\n      });\n      this.model.on('*', this.update, this);\n      this.graph.on('scale', this.update, this);\n      this.graph.on('translate', this.update, this);\n      this.model.on('reseted', this.remove, this);\n      this.node.on('removed', this.remove, this);\n      this.view.on('node:resize:mousedown', this.onTransform, this);\n      this.view.on('node:rotate:mousedown', this.onTransform, this);\n      this.view.on('node:resize:mouseup', this.onTransformed, this);\n      this.view.on('node:rotate:mouseup', this.onTransformed, this);\n      this.view.on('cell:knob:mousedown', this.onKnobMouseDown, this);\n      this.view.on('cell:knob:mouseup', this.onKnobMouseUp, this);\n\n      _get(_getPrototypeOf(Knob.prototype), \"startListening\", this).call(this);\n    }\n  }, {\n    key: \"stopListening\",\n    value: function stopListening() {\n      this.undelegateEvents();\n      this.model.off('*', this.update, this);\n      this.graph.off('scale', this.update, this);\n      this.graph.off('translate', this.update, this);\n      this.model.off('reseted', this.remove, this);\n      this.node.off('removed', this.remove, this);\n      this.view.off('node:resize:mousedown', this.onTransform, this);\n      this.view.off('node:rotate:mousedown', this.onTransform, this);\n      this.view.off('node:resize:mouseup', this.onTransformed, this);\n      this.view.off('node:rotate:mouseup', this.onTransformed, this);\n      this.view.off('cell:knob:mousedown', this.onKnobMouseDown, this);\n      this.view.off('cell:knob:mouseup', this.onKnobMouseUp, this);\n\n      _get(_getPrototypeOf(Knob.prototype), \"stopListening\", this).call(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.container = document.createElement('div');\n      Dom.addClass(this.container, this.prefixClassName('widget-knob'));\n\n      if (this.options.className) {\n        Dom.addClass(this.container, this.options.className);\n      }\n\n      this.view.addClass(Private.KNOB);\n      this.graph.container.appendChild(this.container);\n      this.update();\n      return this;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      this.view.removeClass(Private.KNOB);\n      return _get(_getPrototypeOf(Knob.prototype), \"remove\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.metadata) {\n        var _this$metadata = this.metadata,\n            update = _this$metadata.update,\n            position = _this$metadata.position;\n        var args = {\n          knob: this,\n          cell: this.cell,\n          node: this.node\n        };\n\n        if (position) {\n          var pos = position.call(this.graph, Object.assign({}, args));\n\n          if (pos) {\n            var ctm = this.graph.matrix();\n            var bbox = this.node.getBBox();\n            var angle = Angle.normalize(this.node.getAngle());\n            var local = Point.create(pos);\n\n            if (angle !== 0) {\n              local.rotate(-angle, {\n                x: bbox.width / 2,\n                y: bbox.height / 2\n              });\n            }\n\n            local.translate(bbox).scale(ctm.a, ctm.d).translate(ctm.e, ctm.f);\n            this.container.style.left = \"\".concat(local.x, \"px\");\n            this.container.style.top = \"\".concat(local.y, \"px\");\n          }\n        }\n\n        if (update) {\n          update.call(this.graph, Object.assign({}, args));\n        }\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.container.style.display = 'none';\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.container.style.display = '';\n    }\n  }, {\n    key: \"onTransform\",\n    value: function onTransform() {\n      this.hide();\n    }\n  }, {\n    key: \"onTransformed\",\n    value: function onTransformed() {\n      this.show();\n    }\n  }, {\n    key: \"onKnobMouseDown\",\n    value: function onKnobMouseDown(_ref) {\n      var knob = _ref.knob;\n\n      if (this.cid !== knob.cid) {\n        this.hide();\n      }\n    }\n  }, {\n    key: \"onKnobMouseUp\",\n    value: function onKnobMouseUp() {\n      this.show();\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(name, evt) {\n      if (this.view) {\n        var e = this.view.normalizeEvent(evt);\n        var localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        this.view.notify(\"cell:\".concat(name), {\n          e: e,\n          view: this.view,\n          node: this.node,\n          cell: this.cell,\n          x: localPoint.x,\n          y: localPoint.y,\n          knob: this\n        });\n\n        if (this.cell.isNode()) {\n          this.view.notify(\"node:\".concat(name), {\n            e: e,\n            view: this.view,\n            node: this.node,\n            cell: this.cell,\n            x: localPoint.x,\n            y: localPoint.y,\n            knob: this\n          });\n        } else if (this.cell.isEdge()) {\n          this.view.notify(\"edge:\".concat(name), {\n            e: e,\n            view: this.view,\n            edge: this.cell,\n            cell: this.cell,\n            x: localPoint.x,\n            y: localPoint.y,\n            knob: this\n          });\n        }\n      }\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(e) {\n      e.stopPropagation();\n      this.setEventData(e, {\n        knobbing: false,\n        originX: e.clientX,\n        originY: e.clientY,\n        clientX: e.clientX,\n        clientY: e.clientY\n      });\n      this.graph.view.undelegateEvents();\n      this.delegateDocumentEvents(Private.documentEvents, e.data);\n\n      if (this.metadata && this.metadata.onMouseDown) {\n        this.metadata.onMouseDown.call(this.graph, {\n          e: e,\n          data: this.getEventData(e),\n          knob: this,\n          cell: this.cell,\n          node: this.node\n        });\n      }\n\n      this.notify('knob:mousedown', e);\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(e) {\n      var data = this.getEventData(e);\n      var view = this.graph.findViewByCell(this.node);\n\n      if (!data.knobbing) {\n        data.knobbing = true;\n\n        if (view) {\n          view.addClass(Private.KNOBBING);\n          this.notify('knob', e);\n        }\n\n        this.model.startBatch('knob', {\n          cid: this.cid\n        });\n      }\n\n      data.clientX = e.clientX;\n      data.clientY = e.clientY;\n\n      if (this.metadata && this.metadata.onMouseMove) {\n        var ctm = this.graph.matrix();\n        var dx = (e.clientX - data.originX) / ctm.a;\n        var dy = (e.clientY - data.originY) / ctm.d;\n        var angle = this.node.getAngle();\n        var delta = new Point(dx, dy).rotate(angle);\n        this.metadata.onMouseMove.call(this.graph, {\n          e: e,\n          data: data,\n          deltaX: delta.x,\n          deltaY: delta.y,\n          knob: this,\n          cell: this.cell,\n          node: this.node\n        });\n      }\n\n      this.notify('knobbing', e);\n      this.notify('knob:mousemove', e);\n    }\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp(e) {\n      this.undelegateDocumentEvents();\n      this.graph.view.delegateEvents();\n      var data = this.getEventData(e);\n      var view = this.graph.findViewByCell(this.node);\n\n      if (data.knobbing) {\n        if (view) {\n          view.removeClass(Private.KNOBBING);\n        }\n\n        if (this.metadata && this.metadata.onMouseUp) {\n          this.metadata.onMouseUp.call(this.graph, {\n            e: e,\n            data: data,\n            knob: this,\n            cell: this.cell,\n            node: this.node\n          });\n        }\n\n        this.model.stopBatch('knob', {\n          cid: this.cid\n        });\n        this.notify('knobbed', e);\n      }\n\n      this.notify('knob:mouseup', e);\n    }\n  }]);\n\n  return Knob;\n}(Widget);\nvar Private;\n\n(function (Private) {\n  Private.KNOB = 'has-widget-knob';\n  Private.KNOBBING = 'node-knobbing';\n  Private.documentEvents = {\n    mousemove: 'onMouseMove',\n    touchmove: 'onMouseMove',\n    mouseup: 'onMouseUp',\n    touchend: 'onMouseUp'\n  };\n})(Private || (Private = {}));","map":{"version":3,"sources":["../../../src/addon/knob/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Widget } from '../common';\nimport { Dom } from '../../util';\nimport { Angle, Point } from '../../geometry';\nexport class Knob extends Widget {\n    get node() {\n        return this.cell;\n    }\n    get metadata() {\n        const meta = this.cell.prop('knob');\n        if (Array.isArray(meta)) {\n            if (this.options.index != null) {\n                return meta[this.options.index];\n            }\n            return null;\n        }\n        return meta;\n    }\n    init(options) {\n        this.options = Object.assign({}, options);\n        this.render();\n        this.startListening();\n    }\n    startListening() {\n        this.delegateEvents({\n            mousedown: 'onMouseDown',\n            touchstart: 'onMouseDown',\n        });\n        this.model.on('*', this.update, this);\n        this.graph.on('scale', this.update, this);\n        this.graph.on('translate', this.update, this);\n        this.model.on('reseted', this.remove, this);\n        this.node.on('removed', this.remove, this);\n        this.view.on('node:resize:mousedown', this.onTransform, this);\n        this.view.on('node:rotate:mousedown', this.onTransform, this);\n        this.view.on('node:resize:mouseup', this.onTransformed, this);\n        this.view.on('node:rotate:mouseup', this.onTransformed, this);\n        this.view.on('cell:knob:mousedown', this.onKnobMouseDown, this);\n        this.view.on('cell:knob:mouseup', this.onKnobMouseUp, this);\n        super.startListening();\n    }\n    stopListening() {\n        this.undelegateEvents();\n        this.model.off('*', this.update, this);\n        this.graph.off('scale', this.update, this);\n        this.graph.off('translate', this.update, this);\n        this.model.off('reseted', this.remove, this);\n        this.node.off('removed', this.remove, this);\n        this.view.off('node:resize:mousedown', this.onTransform, this);\n        this.view.off('node:rotate:mousedown', this.onTransform, this);\n        this.view.off('node:resize:mouseup', this.onTransformed, this);\n        this.view.off('node:rotate:mouseup', this.onTransformed, this);\n        this.view.off('cell:knob:mousedown', this.onKnobMouseDown, this);\n        this.view.off('cell:knob:mouseup', this.onKnobMouseUp, this);\n        super.stopListening();\n    }\n    render() {\n        this.container = document.createElement('div');\n        Dom.addClass(this.container, this.prefixClassName('widget-knob'));\n        if (this.options.className) {\n            Dom.addClass(this.container, this.options.className);\n        }\n        this.view.addClass(Private.KNOB);\n        this.graph.container.appendChild(this.container);\n        this.update();\n        return this;\n    }\n    remove() {\n        this.view.removeClass(Private.KNOB);\n        return super.remove();\n    }\n    update() {\n        if (this.metadata) {\n            const { update, position } = this.metadata;\n            const args = {\n                knob: this,\n                cell: this.cell,\n                node: this.node,\n            };\n            if (position) {\n                const pos = position.call(this.graph, Object.assign({}, args));\n                if (pos) {\n                    const ctm = this.graph.matrix();\n                    const bbox = this.node.getBBox();\n                    const angle = Angle.normalize(this.node.getAngle());\n                    const local = Point.create(pos);\n                    if (angle !== 0) {\n                        local.rotate(-angle, { x: bbox.width / 2, y: bbox.height / 2 });\n                    }\n                    local.translate(bbox).scale(ctm.a, ctm.d).translate(ctm.e, ctm.f);\n                    this.container.style.left = `${local.x}px`;\n                    this.container.style.top = `${local.y}px`;\n                }\n            }\n            if (update) {\n                update.call(this.graph, Object.assign({}, args));\n            }\n        }\n    }\n    hide() {\n        this.container.style.display = 'none';\n    }\n    show() {\n        this.container.style.display = '';\n    }\n    onTransform() {\n        this.hide();\n    }\n    onTransformed() {\n        this.show();\n    }\n    onKnobMouseDown({ knob }) {\n        if (this.cid !== knob.cid) {\n            this.hide();\n        }\n    }\n    onKnobMouseUp() {\n        this.show();\n    }\n    notify(name, evt) {\n        if (this.view) {\n            const e = this.view.normalizeEvent(evt);\n            const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n            this.view.notify(`cell:${name}`, {\n                e,\n                view: this.view,\n                node: this.node,\n                cell: this.cell,\n                x: localPoint.x,\n                y: localPoint.y,\n                knob: this,\n            });\n            if (this.cell.isNode()) {\n                this.view.notify(`node:${name}`, {\n                    e,\n                    view: this.view,\n                    node: this.node,\n                    cell: this.cell,\n                    x: localPoint.x,\n                    y: localPoint.y,\n                    knob: this,\n                });\n            }\n            else if (this.cell.isEdge()) {\n                this.view.notify(`edge:${name}`, {\n                    e,\n                    view: this.view,\n                    edge: this.cell,\n                    cell: this.cell,\n                    x: localPoint.x,\n                    y: localPoint.y,\n                    knob: this,\n                });\n            }\n        }\n    }\n    onMouseDown(e) {\n        e.stopPropagation();\n        this.setEventData(e, {\n            knobbing: false,\n            originX: e.clientX,\n            originY: e.clientY,\n            clientX: e.clientX,\n            clientY: e.clientY,\n        });\n        this.graph.view.undelegateEvents();\n        this.delegateDocumentEvents(Private.documentEvents, e.data);\n        if (this.metadata && this.metadata.onMouseDown) {\n            this.metadata.onMouseDown.call(this.graph, {\n                e,\n                data: this.getEventData(e),\n                knob: this,\n                cell: this.cell,\n                node: this.node,\n            });\n        }\n        this.notify('knob:mousedown', e);\n    }\n    onMouseMove(e) {\n        const data = this.getEventData(e);\n        const view = this.graph.findViewByCell(this.node);\n        if (!data.knobbing) {\n            data.knobbing = true;\n            if (view) {\n                view.addClass(Private.KNOBBING);\n                this.notify('knob', e);\n            }\n            this.model.startBatch('knob', { cid: this.cid });\n        }\n        data.clientX = e.clientX;\n        data.clientY = e.clientY;\n        if (this.metadata && this.metadata.onMouseMove) {\n            const ctm = this.graph.matrix();\n            const dx = (e.clientX - data.originX) / ctm.a;\n            const dy = (e.clientY - data.originY) / ctm.d;\n            const angle = this.node.getAngle();\n            const delta = new Point(dx, dy).rotate(angle);\n            this.metadata.onMouseMove.call(this.graph, {\n                e,\n                data,\n                deltaX: delta.x,\n                deltaY: delta.y,\n                knob: this,\n                cell: this.cell,\n                node: this.node,\n            });\n        }\n        this.notify('knobbing', e);\n        this.notify('knob:mousemove', e);\n    }\n    onMouseUp(e) {\n        this.undelegateDocumentEvents();\n        this.graph.view.delegateEvents();\n        const data = this.getEventData(e);\n        const view = this.graph.findViewByCell(this.node);\n        if (data.knobbing) {\n            if (view) {\n                view.removeClass(Private.KNOBBING);\n            }\n            if (this.metadata && this.metadata.onMouseUp) {\n                this.metadata.onMouseUp.call(this.graph, {\n                    e,\n                    data,\n                    knob: this,\n                    cell: this.cell,\n                    node: this.node,\n                });\n            }\n            this.model.stopBatch('knob', { cid: this.cid });\n            this.notify('knobbed', e);\n        }\n        this.notify('knob:mouseup', e);\n    }\n}\nvar Private;\n(function (Private) {\n    Private.KNOB = 'has-widget-knob';\n    Private.KNOBBING = 'node-knobbing';\n    Private.documentEvents = {\n        mousemove: 'onMouseMove',\n        touchmove: 'onMouseMove',\n        mouseup: 'onMouseUp',\n        touchend: 'onMouseUp',\n    };\n})(Private || (Private = {}));\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}