{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deepAssign = void 0; // 最大比对层级\n\nvar MAX_MIX_LEVEL = 5;\nvar toString = new Object().toString;\n\nvar isType = function isType(value, type) {\n  return toString.call(value) === '[object ' + type + ']';\n};\n\nvar isArray = function isArray(value) {\n  return isType(value, 'Array');\n};\n\nvar isObjectLike = function isObjectLike(value) {\n  /**\n   * isObjectLike({}) => true\n   * isObjectLike([1, 2, 3]) => true\n   * isObjectLike(Function) => false\n   */\n  return typeof value === 'object' && value !== null;\n};\n\nvar isPlainObject = function isPlainObject(value) {\n  /**\n   * isObjectLike(new Foo) => false\n   * isObjectLike([1, 2, 3]) => false\n   * isObjectLike({ x: 0, y: 0 }) => true\n   */\n  if (!isObjectLike(value) || !isType(value, 'Object')) {\n    return false;\n  }\n\n  var proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n};\n\nvar deep = function deep(target, source, level, maxLevel) {\n  level = level || 0;\n  maxLevel = maxLevel || MAX_MIX_LEVEL;\n\n  for (var key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      var value = source[key];\n\n      if (!value) {\n        // null 、 undefined 等情况直接赋值\n        target[key] = value;\n      } else {\n        if (isPlainObject(value)) {\n          if (!isPlainObject(target[key])) {\n            target[key] = {};\n          }\n\n          if (level < maxLevel) {\n            deep(target[key], value, level + 1, maxLevel);\n          } else {\n            // 层级过深直接赋值，性能问题\n            target[key] = source[key];\n          }\n        } else if (isArray(value)) {\n          target[key] = [];\n          target[key] = target[key].concat(value);\n        } else {\n          target[key] = value;\n        }\n      }\n    }\n  }\n};\n/**\n * deepAssign 对象深度合并\n * deepAssign 功能类似 deepMix\n * 不同点在于 deepAssign 会将 null undefined 等类型直接覆盖给 source\n */\n\n\nvar deepAssign = function deepAssign(target) {\n  var sources = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    sources[_i - 1] = arguments[_i];\n  }\n\n  for (var i = 0; i < sources.length; i += 1) {\n    deep(target, sources[i]);\n  }\n\n  return target;\n};\n\nexports.deepAssign = deepAssign;","map":{"version":3,"sources":["../../../src/utils/deep-assign.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deepAssign = void 0;\n// 最大比对层级\nvar MAX_MIX_LEVEL = 5;\nvar toString = new Object().toString;\nvar isType = function (value, type) { return toString.call(value) === '[object ' + type + ']'; };\nvar isArray = function (value) {\n    return isType(value, 'Array');\n};\nvar isObjectLike = function (value) {\n    /**\n     * isObjectLike({}) => true\n     * isObjectLike([1, 2, 3]) => true\n     * isObjectLike(Function) => false\n     */\n    return typeof value === 'object' && value !== null;\n};\nvar isPlainObject = function (value) {\n    /**\n     * isObjectLike(new Foo) => false\n     * isObjectLike([1, 2, 3]) => false\n     * isObjectLike({ x: 0, y: 0 }) => true\n     */\n    if (!isObjectLike(value) || !isType(value, 'Object')) {\n        return false;\n    }\n    var proto = value;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(value) === proto;\n};\nvar deep = function (target, source, level, maxLevel) {\n    level = level || 0;\n    maxLevel = maxLevel || MAX_MIX_LEVEL;\n    for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            var value = source[key];\n            if (!value) {\n                // null 、 undefined 等情况直接赋值\n                target[key] = value;\n            }\n            else {\n                if (isPlainObject(value)) {\n                    if (!isPlainObject(target[key])) {\n                        target[key] = {};\n                    }\n                    if (level < maxLevel) {\n                        deep(target[key], value, level + 1, maxLevel);\n                    }\n                    else {\n                        // 层级过深直接赋值，性能问题\n                        target[key] = source[key];\n                    }\n                }\n                else if (isArray(value)) {\n                    target[key] = [];\n                    target[key] = target[key].concat(value);\n                }\n                else {\n                    target[key] = value;\n                }\n            }\n        }\n    }\n};\n/**\n * deepAssign 对象深度合并\n * deepAssign 功能类似 deepMix\n * 不同点在于 deepAssign 会将 null undefined 等类型直接覆盖给 source\n */\nvar deepAssign = function (target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    for (var i = 0; i < sources.length; i += 1) {\n        deep(target, sources[i]);\n    }\n    return target;\n};\nexports.deepAssign = deepAssign;\n//# sourceMappingURL=deep-assign.js.map"]},"metadata":{},"sourceType":"script"}