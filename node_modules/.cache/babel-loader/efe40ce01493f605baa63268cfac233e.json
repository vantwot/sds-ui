{"ast":null,"code":"import _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { NodeView } from '../../view';\nimport { getName, createShape } from './util';\nvar viewName = getName('text');\nexport var Text = /*#__PURE__*/function (_createShape) {\n  _inherits(Text, _createShape);\n\n  var _super = _createSuper(Text);\n\n  function Text() {\n    _classCallCheck(this, Text);\n\n    return _super.apply(this, arguments);\n  }\n\n  return Text;\n}(createShape('text', {\n  view: viewName,\n  attrs: {\n    text: {\n      fontSize: 18,\n      fill: '#000000',\n      stroke: null,\n      refX: 0.5,\n      refY: 0.5\n    }\n  }\n}, {\n  noText: true\n}));\n\n(function (Text) {\n  var View = /*#__PURE__*/function (_NodeView) {\n    _inherits(View, _NodeView);\n\n    var _super2 = _createSuper(View);\n\n    function View() {\n      _classCallCheck(this, View);\n\n      return _super2.apply(this, arguments);\n    }\n\n    _createClass(View, [{\n      key: \"confirmUpdate\",\n      value: function confirmUpdate(flag) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        var ret = _get(_getPrototypeOf(View.prototype), \"confirmUpdate\", this).call(this, flag, options);\n\n        if (this.hasAction(ret, 'scale')) {\n          this.resize();\n          ret = this.removeAction(ret, 'scale');\n        }\n\n        return ret;\n      }\n    }]);\n\n    return View;\n  }(NodeView);\n\n  Text.View = View;\n  View.config({\n    actions: {\n      attrs: ['scale']\n    }\n  });\n  NodeView.registry.register(viewName, View);\n})(Text || (Text = {}));","map":{"version":3,"sources":["../../../src/shape/basic/text.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,QAAT,QAAyB,YAAzB;AACA,SAAS,OAAT,EAAkB,WAAlB,QAAqC,QAArC;AAEA,IAAM,QAAQ,GAAG,OAAO,CAAC,MAAD,CAAxB;AAEA,WAAa,IAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAA0B,WAAW,CACnC,MADmC,EAEnC;AACE,EAAA,IAAI,EAAE,QADR;AAEE,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EAAE;AACJ,MAAA,QAAQ,EAAE,EADN;AAEJ,MAAA,IAAI,EAAE,SAFF;AAGJ,MAAA,MAAM,EAAE,IAHJ;AAIJ,MAAA,IAAI,EAAE,GAJF;AAKJ,MAAA,IAAI,EAAE;AALF;AADD;AAFT,CAFmC,EAcnC;AAAE,EAAA,MAAM,EAAE;AAAV,CAdmC,CAArC;;AAiBA,CAAA,UAAiB,IAAjB,EAAqB;AAAA,MACN,IADM;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,aAEjB,uBAAc,IAAd,EAA6C;AAAA,YAAjB,OAAiB,uEAAF,EAAE;;AAC3C,YAAI,GAAG,2EAAuB,IAAvB,EAA6B,OAA7B,CAAP;;AACA,YAAI,KAAK,SAAL,CAAe,GAAf,EAAoB,OAApB,CAAJ,EAAkC;AAChC,eAAK,MAAL;AACA,UAAA,GAAG,GAAG,KAAK,YAAL,CAAkB,GAAlB,EAAuB,OAAvB,CAAN;AACD;;AACD,eAAO,GAAP;AACD;AATgB;;AAAA;AAAA,IACO,QADP;;AACN,EAAA,IAAA,CAAA,IAAA,GAAI,IAAJ;AAWb,EAAA,IAAI,CAAC,MAAL,CAAY;AACV,IAAA,OAAO,EAAE;AACP,MAAA,KAAK,EAAE,CAAC,OAAD;AADA;AADC,GAAZ;AAMA,EAAA,QAAQ,CAAC,QAAT,CAAkB,QAAlB,CAA2B,QAA3B,EAAqC,IAArC;AACD,CAnBD,EAAiB,IAAI,KAAJ,IAAI,GAAA,EAAA,CAArB","sourceRoot":"","sourcesContent":["import { NodeView } from '../../view';\nimport { getName, createShape } from './util';\nconst viewName = getName('text');\nexport class Text extends createShape('text', {\n    view: viewName,\n    attrs: {\n        text: {\n            fontSize: 18,\n            fill: '#000000',\n            stroke: null,\n            refX: 0.5,\n            refY: 0.5,\n        },\n    },\n}, { noText: true }) {\n}\n(function (Text) {\n    class View extends NodeView {\n        confirmUpdate(flag, options = {}) {\n            let ret = super.confirmUpdate(flag, options);\n            if (this.hasAction(ret, 'scale')) {\n                this.resize();\n                ret = this.removeAction(ret, 'scale');\n            }\n            return ret;\n        }\n    }\n    Text.View = View;\n    View.config({\n        actions: {\n            attrs: ['scale'],\n        },\n    });\n    NodeView.registry.register(viewName, View);\n})(Text || (Text = {}));\n//# sourceMappingURL=text.js.map"]},"metadata":{},"sourceType":"module"}