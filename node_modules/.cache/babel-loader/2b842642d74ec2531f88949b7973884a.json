{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _merge from \"lodash/merge\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { $window, DOM, isMini } from '@antv/l7-utils';\nimport Camera from './camera';\n\nfunction loadStyles(css, doc) {\n  var isMiniAli = typeof my !== 'undefined' && !!my && typeof my.showToast === 'function';\n  var isWeChatMiniProgram = typeof wx !== 'undefined' && wx !== null && (typeof wx.request !== 'undefined' || typeof wx.miniProgram !== 'undefined');\n\n  if (isMiniAli || isWeChatMiniProgram) {\n    return;\n  }\n\n  if (!doc) doc = document;\n\n  if (!doc) {\n    return;\n  }\n\n  var head = doc.head || doc.getElementsByTagName('head')[0];\n\n  if (!head) {\n    head = doc.createElement('head');\n    var body = doc.body || doc.getElementsByTagName('body')[0];\n\n    if (body) {\n      body.parentNode.insertBefore(head, body);\n    } else {\n      doc.documentElement.appendChild(head);\n    }\n  }\n\n  var style = doc.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(doc.createTextNode(css));\n  }\n\n  head.appendChild(style);\n  return style;\n}\n\nloadStyles(\".l7-map {\\n  font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;\\n  overflow: hidden;\\n  position: relative;\\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n}\\n\\n.l7-canvas {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\\n\\n.l7-map:-webkit-full-screen {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.l7-canary {\\n  background-color: salmon;\\n}\\n\\n.l7-canvas-container.l7-interactive,\\n.l7-ctrl-group button.l7-ctrl-compass {\\n  cursor: -webkit-grab;\\n  cursor: grab;\\n  -moz-user-select: none;\\n  -webkit-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n\\n.l7-canvas-container.l7-interactive.l7-track-pointer {\\n  cursor: pointer;\\n}\\n\\n.l7-canvas-container.l7-interactive:active,\\n.l7-ctrl-group button.l7-ctrl-compass:active {\\n  cursor: -webkit-grabbing;\\n  cursor: grabbing;\\n}\\n\\n.l7-canvas-container.l7-touch-zoom-rotate,\\n.l7-canvas-container.l7-touch-zoom-rotate .l7-canvas {\\n  -ms-touch-action: pan-x pan-y;\\n      touch-action: pan-x pan-y;\\n}\\n\\n.l7-canvas-container.l7-touch-drag-pan,\\n.l7-canvas-container.l7-touch-drag-pan .l7-canvas {\\n  -ms-touch-action: pinch-zoom;\\n      touch-action: pinch-zoom;\\n}\\n\\n.l7-canvas-container.l7-touch-zoom-rotate.l7-touch-drag-pan,\\n.l7-canvas-container.l7-touch-zoom-rotate.l7-touch-drag-pan .l7-canvas {\\n  -ms-touch-action: none;\\n      touch-action: none;\\n}\\n\\n.l7-ctrl-top-left,\\n.l7-ctrl-top-right,\\n.l7-ctrl-bottom-left,\\n.l7-ctrl-bottom-right { position: absolute; pointer-events: none; z-index: 2; }\\n.l7-ctrl-top-left     { top: 0; left: 0; }\\n.l7-ctrl-top-right    { top: 0; right: 0; }\\n.l7-ctrl-bottom-left  { bottom: 0; left: 0; }\\n.l7-ctrl-bottom-right { right: 0; bottom: 0; }\\n\\n.l7-ctrl {\\n  clear: both;\\n  pointer-events: auto;\\n\\n  /* workaround for a Safari bug https://github.com/mapbox/mapbox-gl-js/issues/8185 */\\n  -webkit-transform: translate(0, 0);\\n          transform: translate(0, 0);\\n}\\n.l7-ctrl-top-left .l7-ctrl     { margin: 10px 0 0 10px; float: left; }\\n.l7-ctrl-top-right .l7-ctrl    { margin: 10px 10px 0 0; float: right; }\\n.l7-ctrl-bottom-left .l7-ctrl  { margin: 0 0 10px 10px; float: left; }\\n.l7-ctrl-bottom-right .l7-ctrl { margin: 0 10px 10px 0; float: right; }\\n\\n\\n.l7-crosshair,\\n.l7-crosshair .l7-interactive,\\n.l7-crosshair .l7-interactive:active {\\n    cursor: crosshair;\\n}\\n\\n.l7-boxzoom {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    width: 0;\\n    height: 0;\\n    background: #fff;\\n    border: 2px dotted #202020;\\n    opacity: 0.5;\\n    z-index: 10;\\n}\\n\");\nimport LngLat from './geo/lng_lat';\nimport LngLatBounds from './geo/lng_lat_bounds';\nimport Point from './geo/point';\nimport HandlerManager from './handler/handler_manager';\nimport Hash from './hash';\nimport { renderframe } from './util';\nimport { PerformanceUtils } from './utils/performance';\nimport TaskQueue from './utils/task_queue';\nvar defaultMinZoom = -2;\nvar defaultMaxZoom = 22;\nvar defaultMinPitch = 0;\nvar defaultMaxPitch = 60;\nvar DefaultOptions = {\n  hash: false,\n  zoom: -1,\n  center: [112, 32],\n  pitch: 0,\n  bearing: 0,\n  interactive: true,\n  minZoom: defaultMinZoom,\n  maxZoom: defaultMaxZoom,\n  minPitch: defaultMinPitch,\n  maxPitch: defaultMaxPitch,\n  scrollZoom: true,\n  boxZoom: true,\n  dragRotate: true,\n  dragPan: true,\n  keyboard: true,\n  doubleClickZoom: true,\n  touchZoomRotate: true,\n  touchPitch: true,\n  bearingSnap: 7,\n  clickTolerance: 3,\n  pitchWithRotate: true,\n  trackResize: true,\n  renderWorldCopies: true\n};\nexport var Map = function (_Camera) {\n  _inherits(Map, _Camera);\n\n  var _super = _createSuper(Map);\n\n  function Map(options) {\n    var _this;\n\n    _classCallCheck(this, Map);\n\n    _this = _super.call(this, _merge({}, DefaultOptions, options));\n\n    _defineProperty(_assertThisInitialized(_this), \"doubleClickZoom\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"dragRotate\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"dragPan\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"touchZoomRotate\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollZoom\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"keyboard\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"touchPitch\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"boxZoom\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"handlers\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"canvas\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"canvasContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTaskQueue\", new TaskQueue());\n\n    _defineProperty(_assertThisInitialized(_this), \"frame\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"trackResize\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"hash\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onWindowOnline\", function () {\n      _this.update();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onWindowResize\", function (event) {\n      if (_this.trackResize) {\n        _this.resize({\n          originalEvent: event\n        }).update();\n      }\n    });\n\n    if (isMini) {\n      _this.initMiniContainer();\n    } else {\n      _this.initContainer();\n    }\n\n    _this.resize();\n\n    _this.handlers = new HandlerManager(_assertThisInitialized(_this), _this.options);\n\n    if (typeof window !== 'undefined') {\n      window.addEventListener('online', _this.onWindowOnline, false);\n      window.addEventListener('resize', _this.onWindowResize, false);\n      window.addEventListener('orientationchange', _this.onWindowResize, false);\n    }\n\n    if (!isMini) {\n      var hashName = typeof options.hash === 'string' && options.hash || undefined;\n\n      if (options.hash) {\n        _this.hash = new Hash(hashName).addTo(_assertThisInitialized(_this));\n      }\n    }\n\n    if (!_this.hash || !_this.hash.onHashChange()) {\n      _this.jumpTo({\n        center: options.center,\n        zoom: options.zoom,\n        bearing: options.bearing,\n        pitch: options.pitch\n      });\n\n      if (options.bounds) {\n        _this.resize();\n\n        _this.fitBounds(options.bounds, _merge({}, options.fitBoundsOptions, {\n          duration: 0\n        }));\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(Map, [{\n    key: \"resize\",\n    value: function resize(eventData) {\n      var dimensions = this.containerDimensions();\n      var width = dimensions[0];\n      var height = dimensions[1];\n      this.transform.resize(width, height);\n\n      if (!isMini) {\n        return this;\n      }\n\n      var fireMoving = !this.moving;\n\n      if (fireMoving) {\n        this.stop();\n        this.emit('movestart', new $window.Event('movestart', eventData));\n        this.emit('move', new $window.Event('move', eventData));\n      }\n\n      this.emit('resize', new $window.Event('resize', eventData));\n\n      if (fireMoving) {\n        this.emit('moveend', new $window.Event('moveend', eventData));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      return this.container;\n    }\n  }, {\n    key: \"getCanvas\",\n    value: function getCanvas() {\n      return this.canvas;\n    }\n  }, {\n    key: \"getCanvasContainer\",\n    value: function getCanvasContainer() {\n      return this.canvasContainer;\n    }\n  }, {\n    key: \"project\",\n    value: function project(lngLat) {\n      return this.transform.locationPoint(LngLat.convert(lngLat));\n    }\n  }, {\n    key: \"unproject\",\n    value: function unproject(point) {\n      return this.transform.pointLocation(Point.convert(point));\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this.transform.getBounds();\n    }\n  }, {\n    key: \"getMaxBounds\",\n    value: function getMaxBounds() {\n      return this.transform.getMaxBounds();\n    }\n  }, {\n    key: \"setMaxBounds\",\n    value: function setMaxBounds(bounds) {\n      this.transform.setMaxBounds(LngLatBounds.convert(bounds));\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(style) {\n      return;\n    }\n  }, {\n    key: \"setMinZoom\",\n    value: function setMinZoom(minZoom) {\n      minZoom = minZoom === null || minZoom === undefined ? defaultMinZoom : minZoom;\n\n      if (minZoom >= defaultMinZoom && minZoom <= this.transform.maxZoom) {\n        this.transform.minZoom = minZoom;\n\n        if (this.getZoom() < minZoom) {\n          this.setZoom(minZoom);\n        }\n\n        return this;\n      } else {\n        throw new Error(\"minZoom must be between \".concat(defaultMinZoom, \" and the current maxZoom, inclusive\"));\n      }\n    }\n  }, {\n    key: \"getMinZoom\",\n    value: function getMinZoom() {\n      return this.transform.minZoom;\n    }\n  }, {\n    key: \"setMaxZoom\",\n    value: function setMaxZoom(maxZoom) {\n      maxZoom = maxZoom === null || maxZoom === undefined ? defaultMaxZoom : maxZoom;\n\n      if (maxZoom >= this.transform.minZoom) {\n        this.transform.maxZoom = maxZoom;\n\n        if (this.getZoom() > maxZoom) {\n          this.setZoom(maxZoom);\n        }\n\n        return this;\n      } else {\n        throw new Error('maxZoom must be greater than the current minZoom');\n      }\n    }\n  }, {\n    key: \"getMaxZoom\",\n    value: function getMaxZoom() {\n      return this.transform.maxZoom;\n    }\n  }, {\n    key: \"setMinPitch\",\n    value: function setMinPitch(minPitch) {\n      minPitch = minPitch === null || minPitch === undefined ? defaultMinPitch : minPitch;\n\n      if (minPitch < defaultMinPitch) {\n        throw new Error(\"minPitch must be greater than or equal to \".concat(defaultMinPitch));\n      }\n\n      if (minPitch >= defaultMinPitch && minPitch <= this.transform.maxPitch) {\n        this.transform.minPitch = minPitch;\n\n        if (this.getPitch() < minPitch) {\n          this.setPitch(minPitch);\n        }\n\n        return this;\n      } else {\n        throw new Error(\"minPitch must be between \".concat(defaultMinPitch, \" and the current maxPitch, inclusive\"));\n      }\n    }\n  }, {\n    key: \"getMinPitch\",\n    value: function getMinPitch() {\n      return this.transform.minPitch;\n    }\n  }, {\n    key: \"setMaxPitch\",\n    value: function setMaxPitch(maxPitch) {\n      maxPitch = maxPitch === null || maxPitch === undefined ? defaultMaxPitch : maxPitch;\n\n      if (maxPitch > defaultMaxPitch) {\n        throw new Error(\"maxPitch must be less than or equal to \".concat(defaultMaxPitch));\n      }\n\n      if (maxPitch >= this.transform.minPitch) {\n        this.transform.maxPitch = maxPitch;\n\n        if (this.getPitch() > maxPitch) {\n          this.setPitch(maxPitch);\n        }\n\n        return this;\n      } else {\n        throw new Error('maxPitch must be greater than the current minPitch');\n      }\n    }\n  }, {\n    key: \"getMaxPitch\",\n    value: function getMaxPitch() {\n      return this.transform.maxPitch;\n    }\n  }, {\n    key: \"getRenderWorldCopies\",\n    value: function getRenderWorldCopies() {\n      return this.transform.renderWorldCopies;\n    }\n  }, {\n    key: \"setRenderWorldCopies\",\n    value: function setRenderWorldCopies(renderWorldCopies) {\n      this.transform.renderWorldCopies = !!renderWorldCopies;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.frame) {\n        this.frame.cancel();\n        this.frame = null;\n      }\n\n      this.renderTaskQueue.clear();\n    }\n  }, {\n    key: \"requestRenderFrame\",\n    value: function requestRenderFrame(cb) {\n      this.update();\n      return this.renderTaskQueue.add(cb);\n    }\n  }, {\n    key: \"cancelRenderFrame\",\n    value: function cancelRenderFrame(id) {\n      return this.renderTaskQueue.remove(id);\n    }\n  }, {\n    key: \"triggerRepaint\",\n    value: function triggerRepaint() {\n      var _this2 = this;\n\n      if (!this.frame) {\n        this.frame = renderframe(function (paintStartTimeStamp) {\n          PerformanceUtils.frame(paintStartTimeStamp);\n          _this2.frame = null;\n\n          _this2.update(paintStartTimeStamp);\n        });\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(time) {\n      var _this3 = this;\n\n      if (!this.frame) {\n        this.frame = renderframe(function (paintStartTimeStamp) {\n          PerformanceUtils.frame(paintStartTimeStamp);\n          _this3.frame = null;\n\n          _this3.renderTaskQueue.run(time);\n        });\n      }\n    }\n  }, {\n    key: \"initContainer\",\n    value: function initContainer() {\n      if (typeof this.options.container === 'string') {\n        this.container = window.document.getElementById(this.options.container);\n\n        if (!this.container) {\n          throw new Error(\"Container '\".concat(this.options.container, \"' not found.\"));\n        }\n      } else if (this.options.container instanceof HTMLElement) {\n        this.container = this.options.container;\n      } else {\n        throw new Error(\"Invalid type: 'container' must be a String or HTMLElement.\");\n      }\n\n      var container = this.container;\n      container.classList.add('l7-map');\n      var canvasContainer = this.canvasContainer = DOM.create('div', 'l7-canvas-container', container);\n\n      if (this.options.interactive) {\n        canvasContainer.classList.add('l7-interactive');\n      }\n    }\n  }, {\n    key: \"initMiniContainer\",\n    value: function initMiniContainer() {\n      this.container = this.options.canvas;\n      this.canvasContainer = this.container;\n    }\n  }, {\n    key: \"containerDimensions\",\n    value: function containerDimensions() {\n      var width = 0;\n      var height = 0;\n\n      if (this.container) {\n        if (isMini) {\n          width = this.container.width / $window.devicePixelRatio;\n          height = this.container.height / $window.devicePixelRatio;\n        } else {\n          width = this.container.clientWidth;\n          height = this.container.clientHeight;\n        }\n      }\n\n      return [width, height];\n    }\n  }]);\n\n  return Map;\n}(Camera);","map":{"version":3,"sources":["../src/map.ts"],"names":["defaultMinZoom","defaultMaxZoom","defaultMinPitch","defaultMaxPitch","DefaultOptions","hash","zoom","center","pitch","bearing","interactive","minZoom","maxZoom","minPitch","maxPitch","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate","touchPitch","bearingSnap","clickTolerance","pitchWithRotate","trackResize","renderWorldCopies","Map","window","hashName","options","duration","dimensions","width","height","fireMoving","$window","LngLat","Point","LngLatBounds","renderframe","PerformanceUtils","container","canvasContainer","DOM","originalEvent","event"],"mappings":"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","sourcesContent":["import { $window, DOM, isMini } from '@antv/l7-utils';\nimport { merge } from 'lodash';\nimport Camera from './camera';\nimport './css/l7.css';\nimport LngLat, { LngLatLike } from './geo/lng_lat';\nimport LngLatBounds, { LngLatBoundsLike } from './geo/lng_lat_bounds';\n// @ts-ignore\nimport Point, { PointLike } from './geo/point';\nimport BoxZoomHandler from './handler/box_zoom';\nimport HandlerManager from './handler/handler_manager';\nimport KeyboardHandler from './handler/keyboard';\n\nimport ScrollZoomHandler from './handler/scroll_zoom';\nimport DoubleClickZoomHandler from './handler/shim/dblclick_zoom';\nimport DragPanHandler from './handler/shim/drag_pan';\nimport DragRotateHandler from './handler/shim/drag_rotate';\nimport TouchZoomRotateHandler from './handler/shim/touch_zoom_rotate';\nimport { TouchPitchHandler } from './handler/touch';\nimport Hash from './hash';\nimport { IMapOptions } from './interface';\nimport { renderframe } from './util';\nimport { PerformanceUtils } from './utils/performance';\nimport TaskQueue, { TaskID } from './utils/task_queue';\ntype CallBack = (_: number) => void;\nconst defaultMinZoom = -2;\nconst defaultMaxZoom = 22;\n\n// the default values, but also the valid range\nconst defaultMinPitch = 0;\nconst defaultMaxPitch = 60;\n\nconst DefaultOptions: IMapOptions = {\n  hash: false,\n  zoom: -1,\n  center: [112, 32],\n  pitch: 0,\n  bearing: 0,\n  interactive: true,\n  minZoom: defaultMinZoom,\n  maxZoom: defaultMaxZoom,\n  minPitch: defaultMinPitch,\n  maxPitch: defaultMaxPitch,\n  scrollZoom: true,\n  boxZoom: true,\n  dragRotate: true,\n  dragPan: true,\n  keyboard: true,\n  doubleClickZoom: true,\n  touchZoomRotate: true,\n  touchPitch: true,\n  bearingSnap: 7,\n  clickTolerance: 3,\n  pitchWithRotate: true,\n  trackResize: true,\n  renderWorldCopies: true,\n};\nexport class Map extends Camera {\n  public doubleClickZoom: DoubleClickZoomHandler;\n  public dragRotate: DragRotateHandler;\n  public dragPan: DragPanHandler;\n  public touchZoomRotate: TouchZoomRotateHandler;\n  public scrollZoom: ScrollZoomHandler;\n  public keyboard: KeyboardHandler;\n  public touchPitch: TouchPitchHandler;\n  public boxZoom: BoxZoomHandler;\n  public handlers: HandlerManager;\n\n  private container: HTMLElement;\n  private canvas: HTMLCanvasElement;\n  private canvasContainer: HTMLElement;\n  private renderTaskQueue: TaskQueue = new TaskQueue();\n  private frame: { cancel: () => void } | null;\n  private trackResize: boolean = true;\n  private hash: Hash | undefined;\n  constructor(options: Partial<IMapOptions>) {\n    super(merge({}, DefaultOptions, options));\n    if (isMini) {\n      this.initMiniContainer();\n    } else {\n      this.initContainer();\n    }\n\n    this.resize();\n    this.handlers = new HandlerManager(this, this.options);\n\n    if (typeof window !== 'undefined') {\n      window.addEventListener('online', this.onWindowOnline, false);\n      window.addEventListener('resize', this.onWindowResize, false);\n      window.addEventListener('orientationchange', this.onWindowResize, false);\n    }\n\n    if (!isMini) {\n      const hashName =\n        (typeof options.hash === 'string' && options.hash) || undefined;\n      if (options.hash) {\n        this.hash = new Hash(hashName).addTo(this) as Hash;\n      }\n    }\n\n    // don't set position from options if set through hash\n    if (!this.hash || !this.hash.onHashChange()) {\n      this.jumpTo({\n        center: options.center,\n        zoom: options.zoom,\n        bearing: options.bearing,\n        pitch: options.pitch,\n      });\n\n      if (options.bounds) {\n        this.resize();\n        this.fitBounds(\n          options.bounds,\n          merge({}, options.fitBoundsOptions, { duration: 0 }),\n        );\n      }\n    }\n  }\n\n  public resize(eventData?: any) {\n    const dimensions = this.containerDimensions();\n    const width = dimensions[0];\n    const height = dimensions[1];\n\n    this.transform.resize(width, height);\n    if (!isMini) {\n      return this;\n    }\n    const fireMoving = !this.moving;\n    if (fireMoving) {\n      this.stop();\n      this.emit('movestart', new $window.Event('movestart', eventData));\n      this.emit('move', new $window.Event('move', eventData));\n    }\n\n    this.emit('resize', new $window.Event('resize', eventData));\n\n    if (fireMoving) {\n      this.emit('moveend', new $window.Event('moveend', eventData));\n    }\n\n    return this;\n  }\n\n  public getContainer() {\n    return this.container;\n  }\n\n  public getCanvas() {\n    return this.canvas;\n  }\n\n  public getCanvasContainer() {\n    return this.canvasContainer;\n  }\n\n  public project(lngLat: LngLatLike) {\n    return this.transform.locationPoint(LngLat.convert(lngLat));\n  }\n\n  public unproject(point: PointLike) {\n    return this.transform.pointLocation(Point.convert(point));\n  }\n\n  public getBounds(): LngLatBounds {\n    return this.transform.getBounds();\n  }\n\n  public getMaxBounds(): LngLatBounds | null {\n    return this.transform.getMaxBounds();\n  }\n\n  public setMaxBounds(bounds: LngLatBoundsLike) {\n    this.transform.setMaxBounds(LngLatBounds.convert(bounds));\n  }\n\n  public setStyle(style: any) {\n    return;\n  }\n  public setMinZoom(minZoom?: number) {\n    minZoom =\n      minZoom === null || minZoom === undefined ? defaultMinZoom : minZoom;\n    if (minZoom >= defaultMinZoom && minZoom <= this.transform.maxZoom) {\n      this.transform.minZoom = minZoom;\n      if (this.getZoom() < minZoom) {\n        this.setZoom(minZoom);\n      }\n\n      return this;\n    } else {\n      throw new Error(\n        `minZoom must be between ${defaultMinZoom} and the current maxZoom, inclusive`,\n      );\n    }\n  }\n\n  public getMinZoom() {\n    return this.transform.minZoom;\n  }\n\n  public setMaxZoom(maxZoom?: number) {\n    maxZoom =\n      maxZoom === null || maxZoom === undefined ? defaultMaxZoom : maxZoom;\n\n    if (maxZoom >= this.transform.minZoom) {\n      this.transform.maxZoom = maxZoom;\n      if (this.getZoom() > maxZoom) {\n        this.setZoom(maxZoom);\n      }\n\n      return this;\n    } else {\n      throw new Error('maxZoom must be greater than the current minZoom');\n    }\n  }\n  public getMaxZoom() {\n    return this.transform.maxZoom;\n  }\n\n  public setMinPitch(minPitch?: number) {\n    minPitch =\n      minPitch === null || minPitch === undefined ? defaultMinPitch : minPitch;\n\n    if (minPitch < defaultMinPitch) {\n      throw new Error(\n        `minPitch must be greater than or equal to ${defaultMinPitch}`,\n      );\n    }\n\n    if (minPitch >= defaultMinPitch && minPitch <= this.transform.maxPitch) {\n      this.transform.minPitch = minPitch;\n      if (this.getPitch() < minPitch) {\n        this.setPitch(minPitch);\n      }\n\n      return this;\n    } else {\n      throw new Error(\n        `minPitch must be between ${defaultMinPitch} and the current maxPitch, inclusive`,\n      );\n    }\n  }\n\n  public getMinPitch() {\n    return this.transform.minPitch;\n  }\n\n  public setMaxPitch(maxPitch?: number) {\n    maxPitch =\n      maxPitch === null || maxPitch === undefined ? defaultMaxPitch : maxPitch;\n\n    if (maxPitch > defaultMaxPitch) {\n      throw new Error(\n        `maxPitch must be less than or equal to ${defaultMaxPitch}`,\n      );\n    }\n\n    if (maxPitch >= this.transform.minPitch) {\n      this.transform.maxPitch = maxPitch;\n      if (this.getPitch() > maxPitch) {\n        this.setPitch(maxPitch);\n      }\n\n      return this;\n    } else {\n      throw new Error('maxPitch must be greater than the current minPitch');\n    }\n  }\n\n  public getMaxPitch() {\n    return this.transform.maxPitch;\n  }\n\n  public getRenderWorldCopies() {\n    return this.transform.renderWorldCopies;\n  }\n\n  public setRenderWorldCopies(renderWorldCopies?: boolean) {\n    this.transform.renderWorldCopies = !!renderWorldCopies;\n  }\n\n  public remove() {\n    if (this.frame) {\n      this.frame.cancel();\n      this.frame = null;\n    }\n    this.renderTaskQueue.clear();\n  }\n\n  public requestRenderFrame(cb: CallBack): TaskID {\n    this.update();\n    return this.renderTaskQueue.add(cb);\n  }\n\n  public cancelRenderFrame(id: TaskID) {\n    return this.renderTaskQueue.remove(id);\n  }\n\n  public triggerRepaint() {\n    if (!this.frame) {\n      this.frame = renderframe((paintStartTimeStamp: number) => {\n        PerformanceUtils.frame(paintStartTimeStamp);\n        this.frame = null;\n        this.update(paintStartTimeStamp);\n      });\n    }\n  }\n\n  public update(time?: number) {\n    if (!this.frame) {\n      this.frame = renderframe((paintStartTimeStamp: number) => {\n        PerformanceUtils.frame(paintStartTimeStamp);\n        this.frame = null;\n        this.renderTaskQueue.run(time);\n      });\n    }\n  }\n\n  private initContainer() {\n    if (typeof this.options.container === 'string') {\n      this.container = window.document.getElementById(\n        this.options.container,\n      ) as HTMLElement;\n      if (!this.container) {\n        throw new Error(`Container '${this.options.container}' not found.`);\n      }\n    } else if (this.options.container instanceof HTMLElement) {\n      this.container = this.options.container;\n    } else {\n      throw new Error(\n        \"Invalid type: 'container' must be a String or HTMLElement.\",\n      );\n    }\n\n    const container = this.container;\n    container.classList.add('l7-map');\n\n    const canvasContainer = (this.canvasContainer = DOM.create(\n      'div',\n      'l7-canvas-container',\n      container,\n    ));\n    if (this.options.interactive) {\n      canvasContainer.classList.add('l7-interactive');\n    }\n  }\n\n  /**\n   * 小程序环境构建容器\n   */\n  private initMiniContainer() {\n    this.container = this.options.canvas as HTMLCanvasElement;\n    this.canvasContainer = this.container;\n  }\n\n  private containerDimensions(): [number, number] {\n    let width = 0;\n    let height = 0;\n    if (this.container) {\n      if (isMini) {\n        width =\n          (this.container as HTMLCanvasElement).width /\n          $window.devicePixelRatio;\n        height =\n          (this.container as HTMLCanvasElement).height /\n          $window.devicePixelRatio;\n      } else {\n        width = this.container.clientWidth;\n        height = this.container.clientHeight;\n      }\n    }\n    return [width, height];\n  }\n\n  private onWindowOnline = () => {\n    this.update();\n  };\n\n  private onWindowResize = (event: Event) => {\n    if (this.trackResize) {\n      this.resize({ originalEvent: event }).update();\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}