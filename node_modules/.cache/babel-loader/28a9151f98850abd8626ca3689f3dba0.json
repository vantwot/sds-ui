{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGroupCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nimport { XFlowNodeCommands } from '../constant';\nexport var NsAddGroup;\n\n(function (NsAddGroup) {\n  /** Command: 用于注册named factory */\n  NsAddGroup.command = XFlowGroupCommands.ADD_GROUP;\n  /** hookName */\n\n  NsAddGroup.hookKey = 'addGroup';\n  NsAddGroup.GROUP_PADDING = 12;\n  NsAddGroup.GROUP_HEADER_HEIGHT = 40;\n})(NsAddGroup || (NsAddGroup = {}));\n\nvar AddGroupCommand =\n/*#__PURE__*/\n\n/** 创建节点命令 */\nfunction () {\n  function AddGroupCommand() {\n    var _this = this;\n\n    _classCallCheck(this, AddGroupCommand);\n\n    this.getBBox = function (node, nodeConfig, graph) {\n      var _nodeConfig$groupHead = nodeConfig.groupHeaderHeight,\n          groupHeaderHeight = _nodeConfig$groupHead === void 0 ? NsAddGroup.GROUP_HEADER_HEIGHT : _nodeConfig$groupHead,\n          _nodeConfig$groupPadd = nodeConfig.groupPadding,\n          groupPadding = _nodeConfig$groupPadd === void 0 ? NsAddGroup.GROUP_PADDING : _nodeConfig$groupPadd;\n      var bbox = graph.getCellsBBox(node.children);\n      bbox.moveAndExpand({\n        x: -groupPadding,\n        y: -(groupPadding + groupHeaderHeight),\n        width: groupPadding * 2,\n        height: groupPadding * 2 + groupHeaderHeight\n      });\n      return bbox;\n    };\n    /** 执行Cmd */\n\n\n    this.execute = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var ctx, _ctx$getArgs, args, runtimeHook, hooks, result;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                ctx = this.contextProvider();\n                _ctx$getArgs = ctx.getArgs(), args = _ctx$getArgs.args, runtimeHook = _ctx$getArgs.hooks;\n                hooks = ctx.getHooks();\n                _context3.next = 5;\n                return hooks.addGroup.call(args, function (handlerArgs) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                    var _this3 = this;\n\n                    var nodeConfig, createGroupService, cellFactory, commandService, graph, res, _res$contextProvider$, groupCell, groupId, groupChildren, groupBBox;\n\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            nodeConfig = handlerArgs.nodeConfig, createGroupService = handlerArgs.createService, cellFactory = handlerArgs.cellFactory, commandService = handlerArgs.commandService;\n                            _context2.next = 3;\n                            return ctx.getX6Graph();\n\n                          case 3:\n                            graph = _context2.sent;\n                            _context2.next = 6;\n                            return commandService.executeCommand(XFlowNodeCommands.ADD_NODE.id, {\n                              cellFactory: cellFactory,\n                              createNodeService: createGroupService,\n                              nodeConfig: nodeConfig\n                            });\n\n                          case 6:\n                            res = _context2.sent;\n                            _res$contextProvider$ = res.contextProvider().getResult(), groupCell = _res$contextProvider$.nodeCell;\n                            groupId = groupCell.id;\n                            groupChildren = nodeConfig.groupChildren;\n\n                            if (groupChildren.length) {\n                              groupChildren.forEach(function (nodeId) {\n                                var child = graph.getCellById(nodeId);\n\n                                if (child) {\n                                  child.setData(Object.assign(Object.assign({}, child.getData()), {\n                                    group: groupId,\n                                    isCollapsed: false\n                                  }));\n                                  child.prop('group', groupId);\n                                  groupCell.addChild(child);\n                                  graph.unselect(child);\n                                }\n                              });\n                              groupBBox = this.getBBox(groupCell, nodeConfig, graph);\n                              groupCell.position(groupBBox.x, groupBBox.y);\n                              groupCell.size(groupBBox.width, groupBBox.height);\n                              groupCell.setZIndex(0);\n                              groupCell.prop('isGroup', true);\n                              groupCell.setData(Object.assign(Object.assign({}, groupCell.getData()), {\n                                width: groupBBox.width,\n                                height: groupBBox.height,\n                                groupChildrenSize: {\n                                  width: groupBBox.width,\n                                  height: groupBBox.height\n                                },\n                                x: groupBBox.x,\n                                y: groupBBox.y,\n                                isGroup: true\n                              }));\n                              graph.select(groupCell);\n                            }\n\n                            if (!nodeConfig.isCollapsed) {\n                              _context2.next = 14;\n                              break;\n                            }\n\n                            _context2.next = 14;\n                            return commandService.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\n                              nodeId: nodeConfig.id,\n                              isCollapsed: nodeConfig.isCollapsed\n                            });\n\n                          case 14:\n                            /** add undo: delete node */\n                            ctx.addUndo(Disposable.create(function () {\n                              return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                                  while (1) {\n                                    switch (_context.prev = _context.next) {\n                                      case 0:\n                                        commandService.executeCommand(XFlowGroupCommands.DEL_GROUP.id, {\n                                          nodeConfig: nodeConfig\n                                        });\n\n                                      case 1:\n                                      case \"end\":\n                                        return _context.stop();\n                                    }\n                                  }\n                                }, _callee);\n                              }));\n                            }));\n                            return _context2.abrupt(\"return\", {\n                              nodeConfig: nodeConfig,\n                              nodeCell: groupCell\n                            });\n\n                          case 16:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, this);\n                  }));\n                }, runtimeHook);\n\n              case 5:\n                result = _context3.sent;\n                ctx.setResult(result);\n                return _context3.abrupt(\"return\", this);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    };\n    /** undo cmd */\n\n\n    this.undo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var ctx;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                ctx = this.contextProvider();\n\n                if (this.isUndoable()) {\n                  ctx.undo();\n                }\n\n                return _context4.abrupt(\"return\", this);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    };\n    /** redo cmd */\n\n\n    this.redo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this.isUndoable()) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                _context5.next = 3;\n                return this.execute();\n\n              case 3:\n                return _context5.abrupt(\"return\", this);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    };\n  }\n\n  _createClass(AddGroupCommand, [{\n    key: \"isUndoable\",\n    value: function isUndoable() {\n      var ctx = this.contextProvider();\n      return ctx.isUndoable();\n    }\n  }]);\n\n  return AddGroupCommand;\n}();\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], AddGroupCommand.prototype, \"contextProvider\", void 0);\n\nAddGroupCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsAddGroup.command.id\n  }\n})\n/** 创建节点命令 */\n], AddGroupCommand);\nexport { AddGroupCommand };","map":{"version":3,"sources":["../../../src/command-contributions/group/group-add.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGroupCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nimport { XFlowNodeCommands } from '../constant';\nexport var NsAddGroup;\n(function (NsAddGroup) {\n    /** Command: 用于注册named factory */\n    NsAddGroup.command = XFlowGroupCommands.ADD_GROUP;\n    /** hookName */\n    NsAddGroup.hookKey = 'addGroup';\n    NsAddGroup.GROUP_PADDING = 12;\n    NsAddGroup.GROUP_HEADER_HEIGHT = 40;\n})(NsAddGroup || (NsAddGroup = {}));\nlet AddGroupCommand = \n/** 创建节点命令 */\nclass AddGroupCommand {\n    constructor() {\n        this.getBBox = (node, nodeConfig, graph) => {\n            const { groupHeaderHeight = NsAddGroup.GROUP_HEADER_HEIGHT, groupPadding = NsAddGroup.GROUP_PADDING, } = nodeConfig;\n            const bbox = graph.getCellsBBox(node.children);\n            bbox.moveAndExpand({\n                x: -groupPadding,\n                y: -(groupPadding + groupHeaderHeight),\n                width: groupPadding * 2,\n                height: groupPadding * 2 + groupHeaderHeight,\n            });\n            return bbox;\n        };\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            const { args, hooks: runtimeHook } = ctx.getArgs();\n            const hooks = ctx.getHooks();\n            const result = yield hooks.addGroup.call(args, (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                const { nodeConfig, createService: createGroupService, cellFactory, commandService, } = handlerArgs;\n                const graph = yield ctx.getX6Graph();\n                const res = yield commandService.executeCommand(XFlowNodeCommands.ADD_NODE.id, {\n                    cellFactory,\n                    createNodeService: createGroupService,\n                    nodeConfig,\n                });\n                const { nodeCell: groupCell } = res\n                    .contextProvider()\n                    .getResult();\n                const { id: groupId } = groupCell;\n                const { groupChildren } = nodeConfig;\n                if (groupChildren.length) {\n                    groupChildren.forEach(nodeId => {\n                        const child = graph.getCellById(nodeId);\n                        if (child) {\n                            child.setData(Object.assign(Object.assign({}, child.getData()), { group: groupId, isCollapsed: false }));\n                            child.prop('group', groupId);\n                            groupCell.addChild(child);\n                            graph.unselect(child);\n                        }\n                    });\n                    const groupBBox = this.getBBox(groupCell, nodeConfig, graph);\n                    groupCell.position(groupBBox.x, groupBBox.y);\n                    groupCell.size(groupBBox.width, groupBBox.height);\n                    groupCell.setZIndex(0);\n                    groupCell.prop('isGroup', true);\n                    groupCell.setData(Object.assign(Object.assign({}, groupCell.getData()), { width: groupBBox.width, height: groupBBox.height, groupChildrenSize: { width: groupBBox.width, height: groupBBox.height }, x: groupBBox.x, y: groupBBox.y, isGroup: true }));\n                    graph.select(groupCell);\n                }\n                if (nodeConfig.isCollapsed) {\n                    yield commandService.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\n                        nodeId: nodeConfig.id,\n                        isCollapsed: nodeConfig.isCollapsed,\n                    });\n                }\n                /** add undo: delete node */\n                ctx.addUndo(Disposable.create(() => __awaiter(this, void 0, void 0, function* () {\n                    commandService.executeCommand(XFlowGroupCommands.DEL_GROUP.id, {\n                        nodeConfig,\n                    });\n                })));\n                return { nodeConfig: nodeConfig, nodeCell: groupCell };\n            }), runtimeHook);\n            ctx.setResult(result);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            if (this.isUndoable()) {\n                ctx.undo();\n            }\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.isUndoable()) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    isUndoable() {\n        const ctx = this.contextProvider();\n        return ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], AddGroupCommand.prototype, \"contextProvider\", void 0);\nAddGroupCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsAddGroup.command.id },\n    })\n    /** 创建节点命令 */\n], AddGroupCommand);\nexport { AddGroupCommand };\n//# sourceMappingURL=group-add.js.map"]},"metadata":{},"sourceType":"module"}