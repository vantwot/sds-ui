{"ast":null,"code":"/* eslint-disable no-bitwise */\n\n/**\n * Return a simple hash code from a string.\n * Source from: https://github.com/sindresorhus/fnv1a/blob/master/index.js#L25\n */\nexport function hashcode(str) {\n  var hash = 2166136261;\n  var isUnicoded = false;\n  var string = str;\n\n  for (var i = 0, ii = string.length; i < ii; i += 1) {\n    var characterCode = string.charCodeAt(i); // Non-ASCII characters trigger the Unicode escape logic\n\n    if (characterCode > 0x7f && !isUnicoded) {\n      string = unescape(encodeURIComponent(string));\n      characterCode = string.charCodeAt(i);\n      isUnicoded = true;\n    }\n\n    hash ^= characterCode;\n    hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n  }\n\n  return hash >>> 0;\n}","map":{"version":3,"sources":["../../../src/util/string/hashcode.ts"],"names":[],"mappings":"AAAA;;AAEA;;;AAGG;AACH,OAAM,SAAU,QAAV,CAAmB,GAAnB,EAA8B;AAClC,MAAI,IAAI,GAAG,UAAX;AACA,MAAI,UAAU,GAAG,KAAjB;AACA,MAAI,MAAM,GAAG,GAAb;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,MAAM,CAAC,MAA5B,EAAoC,CAAC,GAAG,EAAxC,EAA4C,CAAC,IAAI,CAAjD,EAAoD;AAClD,QAAI,aAAa,GAAG,MAAM,CAAC,UAAP,CAAkB,CAAlB,CAApB,CADkD,CAGlD;;AACA,QAAI,aAAa,GAAG,IAAhB,IAAwB,CAAC,UAA7B,EAAyC;AACvC,MAAA,MAAM,GAAG,QAAQ,CAAC,kBAAkB,CAAC,MAAD,CAAnB,CAAjB;AACA,MAAA,aAAa,GAAG,MAAM,CAAC,UAAP,CAAkB,CAAlB,CAAhB;AACA,MAAA,UAAU,GAAG,IAAb;AACD;;AAED,IAAA,IAAI,IAAI,aAAR;AACA,IAAA,IAAI,IAAI,CAAC,IAAI,IAAI,CAAT,KAAe,IAAI,IAAI,CAAvB,KAA6B,IAAI,IAAI,CAArC,KAA2C,IAAI,IAAI,CAAnD,KAAyD,IAAI,IAAI,EAAjE,CAAR;AACD;;AAED,SAAO,IAAI,KAAK,CAAhB;AACD","sourceRoot":"","sourcesContent":["/* eslint-disable no-bitwise */\n/**\n * Return a simple hash code from a string.\n * Source from: https://github.com/sindresorhus/fnv1a/blob/master/index.js#L25\n */\nexport function hashcode(str) {\n    let hash = 2166136261;\n    let isUnicoded = false;\n    let string = str;\n    for (let i = 0, ii = string.length; i < ii; i += 1) {\n        let characterCode = string.charCodeAt(i);\n        // Non-ASCII characters trigger the Unicode escape logic\n        if (characterCode > 0x7f && !isUnicoded) {\n            string = unescape(encodeURIComponent(string));\n            characterCode = string.charCodeAt(i);\n            isUnicoded = true;\n        }\n        hash ^= characterCode;\n        hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n    }\n    return hash >>> 0;\n}\n//# sourceMappingURL=hashcode.js.map"]},"metadata":{},"sourceType":"module"}