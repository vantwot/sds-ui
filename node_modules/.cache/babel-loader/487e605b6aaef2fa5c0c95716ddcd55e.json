{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { useXFlowApp, createComponentModel, DisposableCollection } from '@antv/xflow-core';\nimport React from 'react';\nexport var useToolbarModel = function useToolbarModel(props) {\n  var config = props.config;\n  var modelId = config.moduleId;\n  var app = useXFlowApp();\n\n  var _createComponentModel = createComponentModel({\n    name: modelId,\n    layout: props.layout,\n    mainGroups: [],\n    extraGroups: [],\n    customRender: null\n  }),\n      _createComponentModel2 = _slicedToArray(_createComponentModel, 4),\n      state = _createComponentModel2[0],\n      setState = _createComponentModel2[1],\n      toolbarModel = _createComponentModel2[2],\n      isModelReady = _createComponentModel2[3];\n  /** 注册全局的model */\n\n\n  React.useEffect(function () {\n    var toDispose = new DisposableCollection();\n    var deferredModel = app.modelService.findDeferredModel(modelId);\n\n    if (!deferredModel) {\n      var _config$getConfig = config.getConfig(),\n          toolbarCustomRender = _config$getConfig.toolbarCustomRender,\n          toolbarModelService = _config$getConfig.toolbarModelService;\n\n      var d = app.modelService.registerModel({\n        id: modelId,\n        modelFactory: function modelFactory() {\n          return toolbarModel;\n        },\n        watchChange: function watchChange(self) {\n          return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var updateCustomRender;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (!toolbarModelService) {\n                      _context.next = 3;\n                      break;\n                    }\n\n                    _context.next = 3;\n                    return toolbarModelService(self, app.modelService, toDispose);\n\n                  case 3:\n                    if (!toolbarCustomRender) {\n                      _context.next = 7;\n                      break;\n                    }\n\n                    updateCustomRender = function updateCustomRender(customRender) {\n                      self.setValue(function (m) {\n                        return m.customRender = customRender;\n                      });\n                    };\n\n                    _context.next = 7;\n                    return toolbarCustomRender(app.modelService, updateCustomRender);\n\n                  case 7:\n                    return _context.abrupt(\"return\", toDispose);\n\n                  case 8:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n        }\n      });\n      toDispose.push(d);\n    }\n\n    return function () {\n      toDispose.dispose();\n    };\n    /* eslint-disable-next-line  */\n  }, []);\n  return {\n    isModelReady: isModelReady,\n    state: state,\n    setState: setState,\n    toolbarModel: toolbarModel\n  };\n};","map":{"version":3,"sources":["../../src/canvas-toolbar/service.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,WAAT,EAAsB,oBAAtB,EAA4C,oBAA5C,QAAwE,kBAAxE;AACA,OAAO,KAAP,MAAkB,OAAlB;AASA,OAAO,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,KAAD,EAAyB;AACtD,MAAQ,MAAR,GAAmB,KAAnB,CAAQ,MAAR;AACA,MAAM,OAAO,GAAG,MAAM,CAAC,QAAvB;AACA,MAAM,GAAG,GAAG,WAAW,EAAvB;;AAEA,8BAAsD,oBAAoB,CACxE;AACE,IAAA,IAAI,EAAE,OADR;AAEE,IAAA,MAAM,EAAE,KAAK,CAAC,MAFhB;AAGE,IAAA,UAAU,EAAE,EAHd;AAIE,IAAA,WAAW,EAAE,EAJf;AAKE,IAAA,YAAY,EAAE;AALhB,GADwE,CAA1E;AAAA;AAAA,MAAO,KAAP;AAAA,MAAc,QAAd;AAAA,MAAwB,YAAxB;AAAA,MAAsC,YAAtC;AASA;;;AACA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAK;AACnB,QAAM,SAAS,GAAG,IAAI,oBAAJ,EAAlB;AACA,QAAM,aAAa,GAAG,GAAG,CAAC,YAAJ,CAAiB,iBAAjB,CAAmC,OAAnC,CAAtB;;AACA,QAAI,CAAC,aAAL,EAAoB;AAClB,8BAAqD,MAAM,CAAC,SAAP,EAArD;AAAA,UAAQ,mBAAR,qBAAQ,mBAAR;AAAA,UAA6B,mBAA7B,qBAA6B,mBAA7B;;AACA,UAAM,CAAC,GAAG,GAAG,CAAC,YAAJ,CAAiB,aAAjB,CAAsD;AAC9D,QAAA,EAAE,EAAE,OAD0D;AAE9D,QAAA,YAAY,EAAE;AAAA,iBAAM,YAAN;AAAA,SAFgD;AAG9D,QAAA,WAAW,EAAE,qBAAM,IAAN;AAAA,iBAAa,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACpB,mBADoB;AAAA;AAAA;AAAA;;AAAA;AAEtB,2BAAM,mBAAmB,CAAC,IAAD,EAAO,GAAG,CAAC,YAAX,EAAyB,SAAzB,CAAzB;;AAFsB;AAAA,yBAIpB,mBAJoB;AAAA;AAAA;AAAA;;AAKhB,oBAAA,kBALgB,GAKK,SAArB,kBAAqB,CAAA,YAAY,EAAG;AACxC,sBAAA,IAAI,CAAC,QAAL,CAAc,UAAA,CAAC;AAAA,+BAAK,CAAC,CAAC,YAAF,GAAiB,YAAtB;AAAA,uBAAf;AACD,qBAPqB;;AAAA;AAQtB,2BAAM,mBAAmB,CAAC,GAAG,CAAC,YAAL,EAAmB,kBAAnB,CAAzB;;AARsB;AAAA,qDAUjB,SAViB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAA,EAAb;AAAA;AAHiD,OAAtD,CAAV;AAgBA,MAAA,SAAS,CAAC,IAAV,CAAe,CAAf;AACD;;AACD,WAAO,YAAK;AACV,MAAA,SAAS,CAAC,OAAV;AACD,KAFD;AAGA;AACD,GA3BD,EA2BG,EA3BH;AA6BA,SAAO;AAAE,IAAA,YAAY,EAAZ,YAAF;AAAgB,IAAA,KAAK,EAAL,KAAhB;AAAuB,IAAA,QAAQ,EAAR,QAAvB;AAAiC,IAAA,YAAY,EAAZ;AAAjC,GAAP;AACD,CA7CM","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { useXFlowApp, createComponentModel, DisposableCollection } from '@antv/xflow-core';\nimport React from 'react';\nexport const useToolbarModel = (props) => {\n    const { config } = props;\n    const modelId = config.moduleId;\n    const app = useXFlowApp();\n    const [state, setState, toolbarModel, isModelReady] = createComponentModel({\n        name: modelId,\n        layout: props.layout,\n        mainGroups: [],\n        extraGroups: [],\n        customRender: null,\n    });\n    /** 注册全局的model */\n    React.useEffect(() => {\n        const toDispose = new DisposableCollection();\n        const deferredModel = app.modelService.findDeferredModel(modelId);\n        if (!deferredModel) {\n            const { toolbarCustomRender, toolbarModelService } = config.getConfig();\n            const d = app.modelService.registerModel({\n                id: modelId,\n                modelFactory: () => toolbarModel,\n                watchChange: (self) => __awaiter(void 0, void 0, void 0, function* () {\n                    if (toolbarModelService) {\n                        yield toolbarModelService(self, app.modelService, toDispose);\n                    }\n                    if (toolbarCustomRender) {\n                        const updateCustomRender = customRender => {\n                            self.setValue(m => (m.customRender = customRender));\n                        };\n                        yield toolbarCustomRender(app.modelService, updateCustomRender);\n                    }\n                    return toDispose;\n                }),\n            });\n            toDispose.push(d);\n        }\n        return () => {\n            toDispose.dispose();\n        };\n        /* eslint-disable-next-line  */\n    }, []);\n    return { isModelReady, state, setState, toolbarModel };\n};\n//# sourceMappingURL=service.js.map"]},"metadata":{},"sourceType":"module"}