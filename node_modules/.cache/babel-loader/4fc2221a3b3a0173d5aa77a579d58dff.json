{"ast":null,"code":"import React from 'react';\nimport { createModule } from '../module';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nimport { KeybindingConfig } from '../config';\nexport var KeyBindings = function KeyBindings(props) {\n  var config = props.config;\n  /** 获取配置中心 */\n\n  var extensionRegistry = useExtensionRegistry();\n  /** 获取ContextService的配置 */\n\n  var keybindingConfig = React.useMemo(function () {\n    return config ? config : new KeybindingConfig();\n  }, [config]);\n  React.useEffect(function () {\n    var disposable = extensionRegistry.addCoreModule({\n      config: keybindingConfig,\n      createModule: createModule\n    });\n    /** resolve */\n\n    keybindingConfig.setMountState();\n    return function () {\n      disposable.dispose();\n      keybindingConfig.dispose();\n    };\n  }, [extensionRegistry, keybindingConfig]);\n  return null;\n};\nexport var createKeybindingConfig = function createKeybindingConfig(addOptions) {\n  return function (value) {\n    /** bridge config and value */\n    var valueContainer = React.useMemo(function () {\n      return {\n        getValue: function getValue() {\n          return {};\n        }\n      };\n    }, []);\n\n    valueContainer.getValue = function () {\n      return value;\n    };\n\n    var hookConfig = React.useMemo(function () {\n      var config = new KeybindingConfig();\n      addOptions(config, valueContainer);\n      return config;\n    }, [valueContainer]);\n    return hookConfig;\n  };\n};","map":{"version":3,"sources":["../../../src/keybinding/components/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,YAAT,QAA6B,WAA7B;AACA,SAAS,oBAAT,QAAqC,+CAArC;AACA,SAAS,gBAAT,QAAiC,WAAjC;AAQA,OAAO,IAAM,WAAW,GAAqB,SAAhC,WAAgC,CAAA,KAAK,EAAG;AACnD,MAAQ,MAAR,GAAmB,KAAnB,CAAQ,MAAR;AACA;;AACA,MAAM,iBAAiB,GAAG,oBAAoB,EAA9C;AAEA;;AACA,MAAM,gBAAgB,GAAG,KAAK,CAAC,OAAN,CACvB;AAAA,WAAO,MAAM,GAAG,MAAH,GAAY,IAAI,gBAAJ,EAAzB;AAAA,GADuB,EAEvB,CAAC,MAAD,CAFuB,CAAzB;AAKA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAK;AACnB,QAAM,UAAU,GAAG,iBAAiB,CAAC,aAAlB,CAAgC;AACjD,MAAA,MAAM,EAAE,gBADyC;AAEjD,MAAA,YAAY,EAAZ;AAFiD,KAAhC,CAAnB;AAIA;;AACA,IAAA,gBAAgB,CAAC,aAAjB;AACA,WAAO,YAAK;AACV,MAAA,UAAU,CAAC,OAAX;AACA,MAAA,gBAAgB,CAAC,OAAjB;AACD,KAHD;AAID,GAXD,EAWG,CAAC,iBAAD,EAAoB,gBAApB,CAXH;AAaA,SAAO,IAAP;AACD,CAzBM;AA+BP,OAAO,IAAM,sBAAsB,GACjC,SADW,sBACX,CACE,UADF;AAAA,SAGA,UAAC,KAAD,EAAc;AACZ;AACA,QAAM,cAAc,GAAG,KAAK,CAAC,OAAN,CAAc;AAAA,aAAO;AAAE,QAAA,QAAQ,EAAE;AAAA,iBAAO,EAAP;AAAA;AAAZ,OAAP;AAAA,KAAd,EAAqD,EAArD,CAAvB;;AACA,IAAA,cAAc,CAAC,QAAf,GAA0B;AAAA,aAAM,KAAN;AAAA,KAA1B;;AAEA,QAAM,UAAU,GAAG,KAAK,CAAC,OAAN,CAAc,YAAK;AACpC,UAAM,MAAM,GAAG,IAAI,gBAAJ,EAAf;AACA,MAAA,UAAU,CAAC,MAAD,EAAS,cAAT,CAAV;AACA,aAAO,MAAP;AACD,KAJkB,EAIhB,CAAC,cAAD,CAJgB,CAAnB;AAMA,WAAO,UAAP;AACD,GAfD;AAAA,CADK","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { createModule } from '../module';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nimport { KeybindingConfig } from '../config';\nexport const KeyBindings = props => {\n    const { config } = props;\n    /** 获取配置中心 */\n    const extensionRegistry = useExtensionRegistry();\n    /** 获取ContextService的配置 */\n    const keybindingConfig = React.useMemo(() => (config ? config : new KeybindingConfig()), [config]);\n    React.useEffect(() => {\n        const disposable = extensionRegistry.addCoreModule({\n            config: keybindingConfig,\n            createModule,\n        });\n        /** resolve */\n        keybindingConfig.setMountState();\n        return () => {\n            disposable.dispose();\n            keybindingConfig.dispose();\n        };\n    }, [extensionRegistry, keybindingConfig]);\n    return null;\n};\nexport const createKeybindingConfig = (addOptions) => (value) => {\n    /** bridge config and value */\n    const valueContainer = React.useMemo(() => ({ getValue: () => ({}) }), []);\n    valueContainer.getValue = () => value;\n    const hookConfig = React.useMemo(() => {\n        const config = new KeybindingConfig();\n        addOptions(config, valueContainer);\n        return config;\n    }, [valueContainer]);\n    return hookConfig;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}