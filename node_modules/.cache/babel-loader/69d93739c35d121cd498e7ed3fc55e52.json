{"ast":null,"code":"import React from 'react';\nimport { useXFlowApp } from '@antv/xflow-core';\nimport { ToolbarConfig } from './config';\nimport { XFlowToolbar } from './render-components';\nexport const CanvasToolbar = props => {\n  const app = useXFlowApp();\n  const hasApp = !!app;\n  /** 获取ContextMenu的配置 */\n\n  const contextMenuConfig = React.useMemo(() => props.config ? props.config : new ToolbarConfig(), [props.config]);\n\n  if (!hasApp) {\n    return null;\n  }\n\n  return React.createElement(XFlowToolbar, Object.assign({}, props, {\n    config: contextMenuConfig\n  }));\n};\nexport const createToolbarConfig = addOptions => value => {\n  /** bridge config and value */\n  const proxy = React.useMemo(() => ({\n    getValue: () => ({})\n  }), []);\n\n  proxy.getValue = () => value;\n  /** 生成config */\n\n\n  const toolbarConfig = React.useMemo(() => {\n    const config = new ToolbarConfig();\n    addOptions(config, proxy);\n    return config;\n  }, [proxy]);\n  return toolbarConfig;\n};","map":{"version":3,"sources":["../../src/canvas-toolbar/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,WAAT,QAA4B,kBAA5B;AACA,SAAS,aAAT,QAA8B,UAA9B;AACA,SAAS,YAAT,QAA6B,qBAA7B;AAGA,OAAO,MAAM,aAAa,GAA4B,KAAK,IAAG;AAC5D,QAAM,GAAG,GAAG,WAAW,EAAvB;AACA,QAAM,MAAM,GAAG,CAAC,CAAC,GAAjB;AACA;;AACA,QAAM,iBAAiB,GAAG,KAAK,CAAC,OAAN,CACxB,MAAO,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,MAArB,GAA8B,IAAI,aAAJ,EADb,EAExB,CAAC,KAAK,CAAC,MAAP,CAFwB,CAA1B;;AAKA,MAAI,CAAC,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,SAAO,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,MAAM,EAAE;AAAV,GAAV,CAAb,CAAP;AACD,CAdM;AAqBP,OAAO,MAAM,mBAAmB,GACJ,UAA1B,IACC,KAAD,IAAc;AACZ;AACA,QAAM,KAAK,GAAG,KAAK,CAAC,OAAN,CAAc,OAAO;AAAE,IAAA,QAAQ,EAAE,OAAO,EAAP;AAAZ,GAAP,CAAd,EAAqD,EAArD,CAAd;;AACA,EAAA,KAAK,CAAC,QAAN,GAAiB,MAAM,KAAvB;AACA;;;AACA,QAAM,aAAa,GAAG,KAAK,CAAC,OAAN,CAAc,MAAK;AACvC,UAAM,MAAM,GAAG,IAAI,aAAJ,EAAf;AACA,IAAA,UAAU,CAAC,MAAD,EAAS,KAAT,CAAV;AACA,WAAO,MAAP;AACD,GAJqB,EAInB,CAAC,KAAD,CAJmB,CAAtB;AAMA,SAAO,aAAP;AACD,CAdI","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { useXFlowApp } from '@antv/xflow-core';\nimport { ToolbarConfig } from './config';\nimport { XFlowToolbar } from './render-components';\nexport const CanvasToolbar = props => {\n    const app = useXFlowApp();\n    const hasApp = !!app;\n    /** 获取ContextMenu的配置 */\n    const contextMenuConfig = React.useMemo(() => (props.config ? props.config : new ToolbarConfig()), [props.config]);\n    if (!hasApp) {\n        return null;\n    }\n    return React.createElement(XFlowToolbar, Object.assign({}, props, { config: contextMenuConfig }));\n};\nexport const createToolbarConfig = (addOptions) => (value) => {\n    /** bridge config and value */\n    const proxy = React.useMemo(() => ({ getValue: () => ({}) }), []);\n    proxy.getValue = () => value;\n    /** 生成config */\n    const toolbarConfig = React.useMemo(() => {\n        const config = new ToolbarConfig();\n        addOptions(config, proxy);\n        return config;\n    }, [proxy]);\n    return toolbarConfig;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}