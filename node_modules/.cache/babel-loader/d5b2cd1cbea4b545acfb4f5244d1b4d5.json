{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { injectable, inject, postConstruct } from 'mana-syringe';\nimport { DisposableCollection } from '../common/disposable';\nimport { IGraphProvider } from '../xflow-main/graph/graph-provider';\nimport { IModelService, MODELS } from '../model-service';\nimport { IHookService } from '../hooks';\nimport { IGraphCommandService } from '../command/interface';\nlet CmdContext = class CmdContext {\n  constructor() {\n    var _this = this;\n\n    /** undos 存在这里 */\n    this.toDispose = new DisposableCollection();\n    /** command handler的runtimeHook */\n\n    this.runtimeHooks = [];\n    /** 获取 x6 实例 */\n\n    this.getX6Graph = () => __awaiter(this, void 0, void 0, function* () {\n      if (this.graph) return this.graph;\n      const graphInstance = yield this.graphProvider.getGraphInstance();\n      this.graph = graphInstance;\n      return graphInstance;\n    });\n    /** 获取 graph */\n\n\n    this.getGraphConfig = () => __awaiter(this, void 0, void 0, function* () {\n      return this.graphProvider.getGraphOptions();\n    });\n\n    this.getGraphMeta = () => __awaiter(this, void 0, void 0, function* () {\n      const service = this.getModelService();\n      const meta = this.graphMeta || (yield MODELS.GRAPH_META.useValue(service));\n      return meta;\n    });\n    /** 设置参数 */\n\n\n    this.setArgs = function (args) {\n      let runtimeHooks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      _this.args = args;\n      _this.runtimeHooks = runtimeHooks;\n      return {\n        args,\n        hooks: runtimeHooks\n      };\n    };\n    /** 获取参数 */\n\n\n    this.getArgs = () => {\n      /** 注入graph meta */\n      const args = Object.assign(Object.assign({}, this.args), {\n        graphMeta: this.graphMeta,\n        modelService: this.getModelService(),\n        commandService: this.getCommands(),\n        getX6Graph: this.getX6Graph,\n        getGraphConfig: this.getGraphConfig\n      });\n      return {\n        args: args,\n        hooks: this.runtimeHooks\n      };\n    };\n    /** 设置执行结果 */\n\n\n    this.setResult = result => {\n      this.result = result;\n      return this.result;\n    };\n    /** 获取执行结果 */\n\n\n    this.getResult = () => {\n      return this.result;\n    };\n    /** hooks */\n\n\n    this.getHooks = () => {\n      return this.hookService.hookProvider();\n    };\n    /** 获取Command Service */\n\n\n    this.getCommands = () => {\n      return this.commandService;\n    };\n    /** 获取Context Service */\n\n\n    this.getModelService = () => {\n      return this.modelService;\n    };\n    /** 添加undo */\n\n\n    this.addUndo = disposable => {\n      if (!Array.isArray(disposable)) {\n        return this.addUndo([disposable]);\n      }\n\n      this.toDispose.pushAll(disposable);\n    };\n    /** 执行undo */\n\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      yield this.toDispose.dispose();\n    });\n    /** 是否可以执行undo */\n\n\n    this.isUndoable = () => {\n      return !this.toDispose.disposed;\n    };\n    /** 获取 toDispose */\n\n\n    this.getDisposables = () => this.toDispose;\n    /** 设置的共享变量 可以在command间共享 */\n\n\n    this.setGlobal = (key, value) => {\n      this.commandService.setGlobal(key, value);\n    };\n    /** 获取共享变量 */\n\n\n    this.getGlobal = key => {\n      return this.commandService.getGlobal(key);\n    };\n  }\n\n  init() {\n    this.getGraphMeta().then(meta => {\n      this.graphMeta = meta;\n    });\n  }\n\n};\n\n__decorate([inject(IGraphProvider), __metadata(\"design:type\", Object)], CmdContext.prototype, \"graphProvider\", void 0);\n\n__decorate([inject(IHookService), __metadata(\"design:type\", Object)], CmdContext.prototype, \"hookService\", void 0);\n\n__decorate([inject(IGraphCommandService), __metadata(\"design:type\", Object)], CmdContext.prototype, \"commandService\", void 0);\n\n__decorate([inject(IModelService), __metadata(\"design:type\", Object)], CmdContext.prototype, \"modelService\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], CmdContext.prototype, \"init\", null);\n\nCmdContext = __decorate([injectable()], CmdContext);\nexport { CmdContext };","map":{"version":3,"sources":["../../src/command-contributions/cmd-context.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { injectable, inject, postConstruct } from 'mana-syringe';\nimport { DisposableCollection } from '../common/disposable';\nimport { IGraphProvider } from '../xflow-main/graph/graph-provider';\nimport { IModelService, MODELS } from '../model-service';\nimport { IHookService } from '../hooks';\nimport { IGraphCommandService } from '../command/interface';\nlet CmdContext = class CmdContext {\n    constructor() {\n        /** undos 存在这里 */\n        this.toDispose = new DisposableCollection();\n        /** command handler的runtimeHook */\n        this.runtimeHooks = [];\n        /** 获取 x6 实例 */\n        this.getX6Graph = () => __awaiter(this, void 0, void 0, function* () {\n            if (this.graph)\n                return this.graph;\n            const graphInstance = yield this.graphProvider.getGraphInstance();\n            this.graph = graphInstance;\n            return graphInstance;\n        });\n        /** 获取 graph */\n        this.getGraphConfig = () => __awaiter(this, void 0, void 0, function* () {\n            return this.graphProvider.getGraphOptions();\n        });\n        this.getGraphMeta = () => __awaiter(this, void 0, void 0, function* () {\n            const service = this.getModelService();\n            const meta = this.graphMeta || (yield MODELS.GRAPH_META.useValue(service));\n            return meta;\n        });\n        /** 设置参数 */\n        this.setArgs = (args, runtimeHooks = []) => {\n            this.args = args;\n            this.runtimeHooks = runtimeHooks;\n            return { args, hooks: runtimeHooks };\n        };\n        /** 获取参数 */\n        this.getArgs = () => {\n            /** 注入graph meta */\n            const args = Object.assign(Object.assign({}, this.args), { graphMeta: this.graphMeta, modelService: this.getModelService(), commandService: this.getCommands(), getX6Graph: this.getX6Graph, getGraphConfig: this.getGraphConfig });\n            return { args: args, hooks: this.runtimeHooks };\n        };\n        /** 设置执行结果 */\n        this.setResult = (result) => {\n            this.result = result;\n            return this.result;\n        };\n        /** 获取执行结果 */\n        this.getResult = () => {\n            return this.result;\n        };\n        /** hooks */\n        this.getHooks = () => {\n            return this.hookService.hookProvider();\n        };\n        /** 获取Command Service */\n        this.getCommands = () => {\n            return this.commandService;\n        };\n        /** 获取Context Service */\n        this.getModelService = () => {\n            return this.modelService;\n        };\n        /** 添加undo */\n        this.addUndo = (disposable) => {\n            if (!Array.isArray(disposable)) {\n                return this.addUndo([disposable]);\n            }\n            this.toDispose.pushAll(disposable);\n        };\n        /** 执行undo */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            yield this.toDispose.dispose();\n        });\n        /** 是否可以执行undo */\n        this.isUndoable = () => {\n            return !this.toDispose.disposed;\n        };\n        /** 获取 toDispose */\n        this.getDisposables = () => this.toDispose;\n        /** 设置的共享变量 可以在command间共享 */\n        this.setGlobal = (key, value) => {\n            this.commandService.setGlobal(key, value);\n        };\n        /** 获取共享变量 */\n        this.getGlobal = (key) => {\n            return this.commandService.getGlobal(key);\n        };\n    }\n    init() {\n        this.getGraphMeta().then(meta => {\n            this.graphMeta = meta;\n        });\n    }\n};\n__decorate([\n    inject(IGraphProvider),\n    __metadata(\"design:type\", Object)\n], CmdContext.prototype, \"graphProvider\", void 0);\n__decorate([\n    inject(IHookService),\n    __metadata(\"design:type\", Object)\n], CmdContext.prototype, \"hookService\", void 0);\n__decorate([\n    inject(IGraphCommandService),\n    __metadata(\"design:type\", Object)\n], CmdContext.prototype, \"commandService\", void 0);\n__decorate([\n    inject(IModelService),\n    __metadata(\"design:type\", Object)\n], CmdContext.prototype, \"modelService\", void 0);\n__decorate([\n    postConstruct(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], CmdContext.prototype, \"init\", null);\nCmdContext = __decorate([\n    injectable()\n], CmdContext);\nexport { CmdContext };\n//# sourceMappingURL=cmd-context.js.map"]},"metadata":{},"sourceType":"module"}