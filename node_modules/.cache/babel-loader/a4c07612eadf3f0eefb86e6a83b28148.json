{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { MODELS } from '../../model-service';\nimport { XFlowGraphCommands } from '../constant';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nexport var NsGraphSaveData;\n\n(function (NsGraphSaveData) {\n  /** Command Id: 用于注册named factory */\n  NsGraphSaveData.command = XFlowGraphCommands.SAVE_GRAPH_DATA;\n  /** hookName */\n\n  NsGraphSaveData.hookKey = 'saveGrpahData';\n})(NsGraphSaveData || (NsGraphSaveData = {}));\n\nvar GraphSaveDataCommand =\n/*#__PURE__*/\n\n/** 创建节点命令 */\nfunction () {\n  function GraphSaveDataCommand() {\n    var _this = this;\n\n    _classCallCheck(this, GraphSaveDataCommand);\n\n    /** 执行Cmd */\n    this.execute = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var ctx, args, hooks;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                ctx = this.ctx;\n                args = ctx.getArgs();\n                hooks = ctx.getHooks();\n                /** 执行hooks */\n\n                _context2.next = 5;\n                return hooks.saveGrpahData.call(\n                /** 执行hooks pipeline处理args */\n                args.args,\n                /** 执行 callback */\n                function (handlerArgs) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var saveGraphDataService, includeAttrs, x6Graph, x6Nodes, x6Edges, nodes, edges, graphData, graphMeta, result;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            saveGraphDataService = handlerArgs.saveGraphDataService, includeAttrs = handlerArgs.includeAttrs;\n                            _context.next = 3;\n                            return ctx.getX6Graph();\n\n                          case 3:\n                            x6Graph = _context.sent;\n                            x6Nodes = x6Graph.getNodes();\n                            x6Edges = x6Graph.getEdges();\n                            nodes = x6Nodes.map(function (node) {\n                              var data = node.getData();\n                              var position = node.position();\n                              var size = node.size();\n                              var model = Object.assign(Object.assign(Object.assign({\n                                id: node.id\n                              }, data), position), size);\n\n                              if (includeAttrs) {\n                                model.attrs = node.getAttrs();\n                              }\n\n                              return model;\n                            });\n                            edges = x6Edges.map(function (edge) {\n                              var data = edge.getData();\n                              var model = Object.assign({\n                                id: edge.id\n                              }, data);\n\n                              if (includeAttrs) {\n                                model.attrs = edge.getAttrs();\n                              }\n\n                              return model;\n                            });\n                            graphData = {\n                              nodes: nodes,\n                              edges: edges\n                            };\n                            _context.next = 11;\n                            return MODELS.GRAPH_META.useValue(ctx.getModelService());\n\n                          case 11:\n                            graphMeta = _context.sent;\n\n                            if (!saveGraphDataService) {\n                              _context.next = 17;\n                              break;\n                            }\n\n                            _context.next = 15;\n                            return saveGraphDataService(graphMeta, graphData);\n\n                          case 15:\n                            result = _context.sent;\n\n                            /** 设置结果 */\n                            if (result) {\n                              this.ctx.setResult(result);\n                            }\n\n                          case 17:\n                            return _context.abrupt(\"return\", {});\n\n                          case 18:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, this);\n                  }));\n                },\n                /** 外部的 hook */\n                args.hooks);\n\n              case 5:\n                return _context2.abrupt(\"return\", this);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    };\n    /** undo cmd */\n\n\n    this.undo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.ctx.undo();\n                return _context3.abrupt(\"return\", this);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    };\n    /** redo cmd */\n\n\n    this.redo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.ctx.isUndoable) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.execute();\n\n              case 3:\n                return _context4.abrupt(\"return\", this);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    };\n  }\n\n  _createClass(GraphSaveDataCommand, [{\n    key: \"init\",\n    value: function init() {\n      this.ctx = this.contextProvider();\n    }\n    /** isUndoable */\n\n  }, {\n    key: \"isUndoable\",\n    value: function isUndoable() {\n      return this.ctx.isUndoable();\n    }\n  }]);\n\n  return GraphSaveDataCommand;\n}();\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphSaveDataCommand.prototype, \"contextProvider\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], GraphSaveDataCommand.prototype, \"init\", null);\n\nGraphSaveDataCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsGraphSaveData.command.id\n  }\n})\n/** 创建节点命令 */\n], GraphSaveDataCommand);\nexport { GraphSaveDataCommand };","map":{"version":3,"sources":["../../../src/command-contributions/graph/graph-save-data.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { MODELS } from '../../model-service';\nimport { XFlowGraphCommands } from '../constant';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nexport var NsGraphSaveData;\n(function (NsGraphSaveData) {\n    /** Command Id: 用于注册named factory */\n    NsGraphSaveData.command = XFlowGraphCommands.SAVE_GRAPH_DATA;\n    /** hookName */\n    NsGraphSaveData.hookKey = 'saveGrpahData';\n})(NsGraphSaveData || (NsGraphSaveData = {}));\nlet GraphSaveDataCommand = \n/** 创建节点命令 */\nclass GraphSaveDataCommand {\n    constructor() {\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.ctx;\n            const args = ctx.getArgs();\n            const hooks = ctx.getHooks();\n            /** 执行hooks */\n            yield hooks.saveGrpahData.call(\n            /** 执行hooks pipeline处理args */\n            args.args, \n            /** 执行 callback */\n            (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                const { saveGraphDataService, includeAttrs } = handlerArgs;\n                const x6Graph = yield ctx.getX6Graph();\n                const x6Nodes = x6Graph.getNodes();\n                const x6Edges = x6Graph.getEdges();\n                const nodes = x6Nodes.map(node => {\n                    const data = node.getData();\n                    const position = node.position();\n                    const size = node.size();\n                    const model = Object.assign(Object.assign(Object.assign({ id: node.id }, data), position), size);\n                    if (includeAttrs) {\n                        model.attrs = node.getAttrs();\n                    }\n                    return model;\n                });\n                const edges = x6Edges.map(edge => {\n                    const data = edge.getData();\n                    const model = Object.assign({ id: edge.id }, data);\n                    if (includeAttrs) {\n                        model.attrs = edge.getAttrs();\n                    }\n                    return model;\n                });\n                const graphData = { nodes, edges };\n                const graphMeta = yield MODELS.GRAPH_META.useValue(ctx.getModelService());\n                /** 执行 service */\n                if (saveGraphDataService) {\n                    const result = yield saveGraphDataService(graphMeta, graphData);\n                    /** 设置结果 */\n                    if (result) {\n                        this.ctx.setResult(result);\n                    }\n                }\n                return {};\n            }), \n            /** 外部的 hook */\n            args.hooks);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            this.ctx.undo();\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.ctx.isUndoable) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    init() {\n        this.ctx = this.contextProvider();\n    }\n    /** isUndoable */\n    isUndoable() {\n        return this.ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], GraphSaveDataCommand.prototype, \"contextProvider\", void 0);\n__decorate([\n    postConstruct(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], GraphSaveDataCommand.prototype, \"init\", null);\nGraphSaveDataCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsGraphSaveData.command.id },\n    })\n    /** 创建节点命令 */\n], GraphSaveDataCommand);\nexport { GraphSaveDataCommand };\n//# sourceMappingURL=graph-save-data.js.map"]},"metadata":{},"sourceType":"module"}