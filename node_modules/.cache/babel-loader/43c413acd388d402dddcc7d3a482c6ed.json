{"ast":null,"code":"import _slicedToArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { NumberExt } from '../util/number';\nexport var Color = /*#__PURE__*/function () {\n  function Color(color, g, b, a) {\n    _classCallCheck(this, Color);\n\n    if (color == null) {\n      return this.set(255, 255, 255, 1);\n    }\n\n    if (typeof color === 'number') {\n      return this.set(color, g, b, a);\n    }\n\n    if (typeof color === 'string') {\n      return Color.fromString(color) || this;\n    }\n\n    if (Array.isArray(color)) {\n      return this.set(color);\n    }\n\n    this.set(color.r, color.g, color.b, color.a == null ? 1 : color.a);\n  }\n\n  _createClass(Color, [{\n    key: \"blend\",\n    value: function blend(start, end, weight) {\n      this.set(start.r + (end.r - start.r) * weight, start.g + (end.g - start.g) * weight, start.b + (end.b - start.b) * weight, start.a + (end.a - start.a) * weight);\n    }\n  }, {\n    key: \"lighten\",\n    value: function lighten(amount) {\n      var rgba = Color.lighten(this.toArray(), amount);\n      this.r = rgba[0];\n      this.g = rgba[1];\n      this.b = rgba[2];\n      this.a = rgba[3];\n    }\n  }, {\n    key: \"darken\",\n    value: function darken(amount) {\n      this.lighten(-amount);\n    }\n  }, {\n    key: \"set\",\n    value: function set(arg0, arg1, arg2, arg3) {\n      var r = Array.isArray(arg0) ? arg0[0] : arg0;\n      var g = Array.isArray(arg0) ? arg0[1] : arg1;\n      var b = Array.isArray(arg0) ? arg0[2] : arg2;\n      var a = Array.isArray(arg0) ? arg0[3] : arg3;\n      this.r = Math.round(NumberExt.clamp(r, 0, 255));\n      this.g = Math.round(NumberExt.clamp(g, 0, 255));\n      this.b = Math.round(NumberExt.clamp(b, 0, 255));\n      this.a = a == null ? 1 : NumberExt.clamp(a, 0, 1);\n      return this;\n    }\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      var _this = this;\n\n      var hex = ['r', 'g', 'b'].map(function (key) {\n        var str = _this[key].toString(16);\n\n        return str.length < 2 ? \"0\".concat(str) : str;\n      });\n      return \"#\".concat(hex.join(''));\n    }\n  }, {\n    key: \"toRGBA\",\n    value: function toRGBA() {\n      return this.toArray();\n    }\n  }, {\n    key: \"toHSLA\",\n    value: function toHSLA() {\n      return Color.rgba2hsla(this.r, this.g, this.b, this.a);\n    }\n  }, {\n    key: \"toCSS\",\n    value: function toCSS(ignoreAlpha) {\n      var rgb = \"\".concat(this.r, \",\").concat(this.g, \",\").concat(this.b, \",\");\n      return ignoreAlpha ? \"rgb(\".concat(rgb, \")\") : \"rgba(\".concat(rgb, \",\").concat(this.a, \")\");\n    }\n  }, {\n    key: \"toGrey\",\n    value: function toGrey() {\n      return Color.makeGrey(Math.round((this.r + this.g + this.b) / 3), this.a);\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return [this.r, this.g, this.b, this.a];\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.toCSS();\n    }\n  }]);\n\n  return Color;\n}();\n\n(function (Color) {\n  function fromArray(arr) {\n    return new Color(arr);\n  }\n\n  Color.fromArray = fromArray;\n\n  function fromHex(color) {\n    return new Color([].concat(_toConsumableArray(hex2rgb(color)), [1]));\n  }\n\n  Color.fromHex = fromHex;\n\n  function fromRGBA(color) {\n    var matches = color.toLowerCase().match(/^rgba?\\(([\\s.,0-9]+)\\)/);\n\n    if (matches) {\n      var arr = matches[1].split(/\\s*,\\s*/).map(function (v) {\n        return parseInt(v, 10);\n      });\n      return new Color(arr);\n    }\n\n    return null;\n  }\n\n  Color.fromRGBA = fromRGBA;\n\n  function hue2rgb(m1, m2, h) {\n    if (h < 0) {\n      ++h; // eslint-disable-line\n    }\n\n    if (h > 1) {\n      --h; // eslint-disable-line\n    }\n\n    var h6 = 6 * h;\n\n    if (h6 < 1) {\n      return m1 + (m2 - m1) * h6;\n    }\n\n    if (2 * h < 1) {\n      return m2;\n    }\n\n    if (3 * h < 2) {\n      return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n    }\n\n    return m1;\n  }\n\n  function fromHSLA(color) {\n    var matches = color.toLowerCase().match(/^hsla?\\(([\\s.,0-9]+)\\)/);\n\n    if (matches) {\n      var arr = matches[2].split(/\\s*,\\s*/);\n      var h = (parseFloat(arr[0]) % 360 + 360) % 360 / 360;\n      var s = parseFloat(arr[1]) / 100;\n      var l = parseFloat(arr[2]) / 100;\n      var a = arr[3] == null ? 1 : parseInt(arr[3], 10);\n      return new Color(hsla2rgba(h, s, l, a));\n    }\n\n    return null;\n  }\n\n  Color.fromHSLA = fromHSLA;\n\n  function fromString(color) {\n    if (color.startsWith('#')) {\n      return fromHex(color);\n    }\n\n    if (color.startsWith('rgb')) {\n      return fromRGBA(color);\n    }\n\n    var preset = Color.named[color];\n\n    if (preset) {\n      return fromHex(preset);\n    }\n\n    return fromHSLA(color);\n  }\n\n  Color.fromString = fromString;\n\n  function makeGrey(g, a) {\n    return Color.fromArray([g, g, g, a]);\n  }\n\n  Color.makeGrey = makeGrey;\n\n  function rgba2hsla(arg0, arg1, arg2, arg3) {\n    var r = Array.isArray(arg0) ? arg0[0] : arg0;\n    var g = Array.isArray(arg0) ? arg0[1] : arg1;\n    var b = Array.isArray(arg0) ? arg0[2] : arg2;\n    var a = Array.isArray(arg0) ? arg0[3] : arg3;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var l = (max + min) / 2;\n    var h = 0;\n    var s = 0;\n\n    if (min !== max) {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          h = (b - r) / d + 2;\n          break;\n\n        case b:\n          h = (r - g) / d + 4;\n          break;\n\n        default:\n          break;\n      }\n\n      h /= 6;\n    }\n\n    return [h, s, l, a == null ? 1 : a];\n  }\n\n  Color.rgba2hsla = rgba2hsla;\n\n  function hsla2rgba(arg0, arg1, arg2, arg3) {\n    var h = Array.isArray(arg0) ? arg0[0] : arg0;\n    var s = Array.isArray(arg0) ? arg0[1] : arg1;\n    var l = Array.isArray(arg0) ? arg0[2] : arg2;\n    var a = Array.isArray(arg0) ? arg0[3] : arg3;\n    var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n    var m1 = 2 * l - m2;\n    return [hue2rgb(m1, m2, h + 1 / 3) * 256, hue2rgb(m1, m2, h) * 256, hue2rgb(m1, m2, h - 1 / 3) * 256, a == null ? 1 : a];\n  }\n\n  Color.hsla2rgba = hsla2rgba;\n\n  function random(ignoreAlpha) {\n    return new Color(Math.round(Math.random() * 256), Math.round(Math.random() * 256), Math.round(Math.random() * 256), ignoreAlpha ? undefined : parseFloat(Math.random().toFixed(2)));\n  }\n\n  Color.random = random;\n\n  function randomHex() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n\n    for (var i = 0; i < 6; i += 1) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  }\n\n  Color.randomHex = randomHex;\n\n  function randomRGBA(ignoreAlpha) {\n    return random(ignoreAlpha).toString();\n  }\n\n  Color.randomRGBA = randomRGBA;\n\n  function invert(color, bw) {\n    if (typeof color === 'string') {\n      var pound = color[0] === '#';\n\n      var _hex2rgb = hex2rgb(color),\n          _hex2rgb2 = _slicedToArray(_hex2rgb, 3),\n          _r = _hex2rgb2[0],\n          _g = _hex2rgb2[1],\n          _b = _hex2rgb2[2];\n\n      if (bw) {\n        // http://stackoverflow.com/a/3943023/112731\n        return _r * 0.299 + _g * 0.587 + _b * 0.114 > 186 ? '#000000' : '#ffffff';\n      }\n\n      return \"\".concat(pound ? '#' : '').concat(rgb2hex(255 - _r, 255 - _g, 255 - _b));\n    }\n\n    var r = color[0];\n    var g = color[1];\n    var b = color[2];\n    var a = color[3];\n\n    if (bw) {\n      return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? [0, 0, 0, a] : [255, 255, 255, a];\n    }\n\n    return [255 - r, 255 - g, 255 - b, a];\n  }\n\n  Color.invert = invert;\n\n  function hex2rgb(hex) {\n    var color = hex.indexOf('#') === 0 ? hex : \"#\".concat(hex);\n    var val = Number(\"0x\".concat(color.substr(1)));\n\n    if (!(color.length === 4 || color.length === 7) || Number.isNaN(val)) {\n      throw new Error('Invalid hex color.');\n    }\n\n    var bits = color.length === 4 ? 4 : 8;\n    var mask = (1 << bits) - 1;\n    var bgr = ['b', 'g', 'r'].map(function () {\n      var c = val & mask;\n      val >>= bits;\n      return bits === 4 ? 17 * c : c;\n    });\n    return [bgr[2], bgr[1], bgr[0]];\n  }\n\n  function rgb2hex(r, g, b) {\n    var pad = function pad(hex) {\n      return hex.length < 2 ? \"0\".concat(hex) : hex;\n    };\n\n    return \"\".concat(pad(r.toString(16))).concat(pad(g.toString(16))).concat(pad(b.toString(16)));\n  }\n\n  function lighten(color, amt) {\n    return lum(color, amt);\n  }\n\n  Color.lighten = lighten;\n\n  function darken(color, amt) {\n    return lum(color, -amt);\n  }\n\n  Color.darken = darken;\n\n  function lum(color, amt) {\n    if (typeof color === 'string') {\n      var pound = color[0] === '#';\n      var num = parseInt(pound ? color.substr(1) : color, 16);\n      var r = NumberExt.clamp((num >> 16) + amt, 0, 255);\n      var g = NumberExt.clamp((num >> 8 & 0x00ff) + amt, 0, 255);\n      var b = NumberExt.clamp((num & 0x0000ff) + amt, 0, 255);\n      return \"\".concat(pound ? '#' : '').concat((b | g << 8 | r << 16).toString(16));\n    }\n\n    var hex = rgb2hex(color[0], color[1], color[2]);\n    var arr = hex2rgb(lum(hex, amt));\n    return [arr[0], arr[1], arr[2], color[3]];\n  }\n})(Color || (Color = {}));\n\n(function (Color) {\n  Color.named = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    burntsienna: '#ea7e5d',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n})(Color || (Color = {}));","map":{"version":3,"sources":["../../src/common/color.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { NumberExt } from '../util/number';\nexport class Color {\n    constructor(color, g, b, a) {\n        if (color == null) {\n            return this.set(255, 255, 255, 1);\n        }\n        if (typeof color === 'number') {\n            return this.set(color, g, b, a);\n        }\n        if (typeof color === 'string') {\n            return Color.fromString(color) || this;\n        }\n        if (Array.isArray(color)) {\n            return this.set(color);\n        }\n        this.set(color.r, color.g, color.b, color.a == null ? 1 : color.a);\n    }\n    blend(start, end, weight) {\n        this.set(start.r + (end.r - start.r) * weight, start.g + (end.g - start.g) * weight, start.b + (end.b - start.b) * weight, start.a + (end.a - start.a) * weight);\n    }\n    lighten(amount) {\n        const rgba = Color.lighten(this.toArray(), amount);\n        this.r = rgba[0];\n        this.g = rgba[1];\n        this.b = rgba[2];\n        this.a = rgba[3];\n    }\n    darken(amount) {\n        this.lighten(-amount);\n    }\n    set(arg0, arg1, arg2, arg3) {\n        const r = Array.isArray(arg0) ? arg0[0] : arg0;\n        const g = Array.isArray(arg0) ? arg0[1] : arg1;\n        const b = Array.isArray(arg0) ? arg0[2] : arg2;\n        const a = Array.isArray(arg0) ? arg0[3] : arg3;\n        this.r = Math.round(NumberExt.clamp(r, 0, 255));\n        this.g = Math.round(NumberExt.clamp(g, 0, 255));\n        this.b = Math.round(NumberExt.clamp(b, 0, 255));\n        this.a = a == null ? 1 : NumberExt.clamp(a, 0, 1);\n        return this;\n    }\n    toHex() {\n        const hex = ['r', 'g', 'b'].map((key) => {\n            const str = this[key].toString(16);\n            return str.length < 2 ? `0${str}` : str;\n        });\n        return `#${hex.join('')}`;\n    }\n    toRGBA() {\n        return this.toArray();\n    }\n    toHSLA() {\n        return Color.rgba2hsla(this.r, this.g, this.b, this.a);\n    }\n    toCSS(ignoreAlpha) {\n        const rgb = `${this.r},${this.g},${this.b},`;\n        return ignoreAlpha ? `rgb(${rgb})` : `rgba(${rgb},${this.a})`;\n    }\n    toGrey() {\n        return Color.makeGrey(Math.round((this.r + this.g + this.b) / 3), this.a);\n    }\n    toArray() {\n        return [this.r, this.g, this.b, this.a];\n    }\n    toString() {\n        return this.toCSS();\n    }\n}\n(function (Color) {\n    function fromArray(arr) {\n        return new Color(arr);\n    }\n    Color.fromArray = fromArray;\n    function fromHex(color) {\n        return new Color([...hex2rgb(color), 1]);\n    }\n    Color.fromHex = fromHex;\n    function fromRGBA(color) {\n        const matches = color.toLowerCase().match(/^rgba?\\(([\\s.,0-9]+)\\)/);\n        if (matches) {\n            const arr = matches[1].split(/\\s*,\\s*/).map((v) => parseInt(v, 10));\n            return new Color(arr);\n        }\n        return null;\n    }\n    Color.fromRGBA = fromRGBA;\n    function hue2rgb(m1, m2, h) {\n        if (h < 0) {\n            ++h; // eslint-disable-line\n        }\n        if (h > 1) {\n            --h; // eslint-disable-line\n        }\n        const h6 = 6 * h;\n        if (h6 < 1) {\n            return m1 + (m2 - m1) * h6;\n        }\n        if (2 * h < 1) {\n            return m2;\n        }\n        if (3 * h < 2) {\n            return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n        }\n        return m1;\n    }\n    function fromHSLA(color) {\n        const matches = color.toLowerCase().match(/^hsla?\\(([\\s.,0-9]+)\\)/);\n        if (matches) {\n            const arr = matches[2].split(/\\s*,\\s*/);\n            const h = (((parseFloat(arr[0]) % 360) + 360) % 360) / 360;\n            const s = parseFloat(arr[1]) / 100;\n            const l = parseFloat(arr[2]) / 100;\n            const a = arr[3] == null ? 1 : parseInt(arr[3], 10);\n            return new Color(hsla2rgba(h, s, l, a));\n        }\n        return null;\n    }\n    Color.fromHSLA = fromHSLA;\n    function fromString(color) {\n        if (color.startsWith('#')) {\n            return fromHex(color);\n        }\n        if (color.startsWith('rgb')) {\n            return fromRGBA(color);\n        }\n        const preset = Color.named[color];\n        if (preset) {\n            return fromHex(preset);\n        }\n        return fromHSLA(color);\n    }\n    Color.fromString = fromString;\n    function makeGrey(g, a) {\n        return Color.fromArray([g, g, g, a]);\n    }\n    Color.makeGrey = makeGrey;\n    function rgba2hsla(arg0, arg1, arg2, arg3) {\n        const r = Array.isArray(arg0) ? arg0[0] : arg0;\n        const g = Array.isArray(arg0) ? arg0[1] : arg1;\n        const b = Array.isArray(arg0) ? arg0[2] : arg2;\n        const a = Array.isArray(arg0) ? arg0[3] : arg3;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        const l = (max + min) / 2;\n        let h = 0;\n        let s = 0;\n        if (min !== max) {\n            const d = max - min;\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch (max) {\n                case r:\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / d + 2;\n                    break;\n                case b:\n                    h = (r - g) / d + 4;\n                    break;\n                default:\n                    break;\n            }\n            h /= 6;\n        }\n        return [h, s, l, a == null ? 1 : a];\n    }\n    Color.rgba2hsla = rgba2hsla;\n    function hsla2rgba(arg0, arg1, arg2, arg3) {\n        const h = Array.isArray(arg0) ? arg0[0] : arg0;\n        const s = Array.isArray(arg0) ? arg0[1] : arg1;\n        const l = Array.isArray(arg0) ? arg0[2] : arg2;\n        const a = Array.isArray(arg0) ? arg0[3] : arg3;\n        const m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        const m1 = 2 * l - m2;\n        return [\n            hue2rgb(m1, m2, h + 1 / 3) * 256,\n            hue2rgb(m1, m2, h) * 256,\n            hue2rgb(m1, m2, h - 1 / 3) * 256,\n            a == null ? 1 : a,\n        ];\n    }\n    Color.hsla2rgba = hsla2rgba;\n    function random(ignoreAlpha) {\n        return new Color(Math.round(Math.random() * 256), Math.round(Math.random() * 256), Math.round(Math.random() * 256), ignoreAlpha ? undefined : parseFloat(Math.random().toFixed(2)));\n    }\n    Color.random = random;\n    function randomHex() {\n        const letters = '0123456789ABCDEF';\n        let color = '#';\n        for (let i = 0; i < 6; i += 1) {\n            color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n    }\n    Color.randomHex = randomHex;\n    function randomRGBA(ignoreAlpha) {\n        return random(ignoreAlpha).toString();\n    }\n    Color.randomRGBA = randomRGBA;\n    function invert(color, bw) {\n        if (typeof color === 'string') {\n            const pound = color[0] === '#';\n            const [r, g, b] = hex2rgb(color);\n            if (bw) {\n                // http://stackoverflow.com/a/3943023/112731\n                return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? '#000000' : '#ffffff';\n            }\n            return `${pound ? '#' : ''}${rgb2hex(255 - r, 255 - g, 255 - b)}`;\n        }\n        const r = color[0];\n        const g = color[1];\n        const b = color[2];\n        const a = color[3];\n        if (bw) {\n            return r * 0.299 + g * 0.587 + b * 0.114 > 186\n                ? [0, 0, 0, a]\n                : [255, 255, 255, a];\n        }\n        return [255 - r, 255 - g, 255 - b, a];\n    }\n    Color.invert = invert;\n    function hex2rgb(hex) {\n        const color = hex.indexOf('#') === 0 ? hex : `#${hex}`;\n        let val = Number(`0x${color.substr(1)}`);\n        if (!(color.length === 4 || color.length === 7) || Number.isNaN(val)) {\n            throw new Error('Invalid hex color.');\n        }\n        const bits = color.length === 4 ? 4 : 8;\n        const mask = (1 << bits) - 1;\n        const bgr = ['b', 'g', 'r'].map(() => {\n            const c = val & mask;\n            val >>= bits;\n            return bits === 4 ? 17 * c : c;\n        });\n        return [bgr[2], bgr[1], bgr[0]];\n    }\n    function rgb2hex(r, g, b) {\n        const pad = (hex) => (hex.length < 2 ? `0${hex}` : hex);\n        return `${pad(r.toString(16))}${pad(g.toString(16))}${pad(b.toString(16))}`;\n    }\n    function lighten(color, amt) {\n        return lum(color, amt);\n    }\n    Color.lighten = lighten;\n    function darken(color, amt) {\n        return lum(color, -amt);\n    }\n    Color.darken = darken;\n    function lum(color, amt) {\n        if (typeof color === 'string') {\n            const pound = color[0] === '#';\n            const num = parseInt(pound ? color.substr(1) : color, 16);\n            const r = NumberExt.clamp((num >> 16) + amt, 0, 255);\n            const g = NumberExt.clamp(((num >> 8) & 0x00ff) + amt, 0, 255);\n            const b = NumberExt.clamp((num & 0x0000ff) + amt, 0, 255);\n            return `${pound ? '#' : ''}${(b | (g << 8) | (r << 16)).toString(16)}`;\n        }\n        const hex = rgb2hex(color[0], color[1], color[2]);\n        const arr = hex2rgb(lum(hex, amt));\n        return [arr[0], arr[1], arr[2], color[3]];\n    }\n})(Color || (Color = {}));\n(function (Color) {\n    Color.named = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        burntsienna: '#ea7e5d',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32',\n    };\n})(Color || (Color = {}));\n//# sourceMappingURL=color.js.map"]},"metadata":{},"sourceType":"module"}