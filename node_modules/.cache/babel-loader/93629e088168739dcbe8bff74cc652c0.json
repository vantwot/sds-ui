{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React from 'react';\nimport { useExtensionRegistry } from '@antv/xflow-core';\nimport { createFlowchartExtensionModule } from '../module';\nimport './index.less';\nexport const FlowchartExtension = () => {\n  /** 获取扩展Registry */\n  const extensionRegistry = useExtensionRegistry();\n  const config = React.useMemo(() => ({\n    CONFIG_TYPE: 'FLOWCHART_EXTENSION',\n    getConfig: () => __awaiter(void 0, void 0, void 0, function* () {})\n  }), []);\n  React.useEffect(() => {\n    /** 注册 extension 到 Registry */\n    const disposable = extensionRegistry.addExtension({\n      config: config,\n      createModule: createFlowchartExtensionModule\n    });\n    /** 添加 classname */\n\n    extensionRegistry.addContainerClassNames('flowchart-extension-container');\n    return () => {\n      disposable.dispose();\n    };\n  }, [config, extensionRegistry]);\n  return null;\n};","map":{"version":3,"sources":["../../../../src/flowchart-canvas/extension/components/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,oBAAT,QAAqC,kBAArC;AACA,SAAS,8BAAT,QAA+C,WAA/C;AACA,OAAO,cAAP;AAEA,OAAO,MAAM,kBAAkB,GAAiB,MAAK;AACnD;AACA,QAAM,iBAAiB,GAAG,oBAAoB,EAA9C;AACA,QAAM,MAAM,GAAG,KAAK,CAAC,OAAN,CACb,OAAO;AACL,IAAA,WAAW,EAAE,qBADR;AAEL,IAAA,SAAS,EAAE,MAAW,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA,CAAG,CAAH;AAFjB,GAAP,CADa,EAKb,EALa,CAAf;AAOA,EAAA,KAAK,CAAC,SAAN,CAAgB,MAAK;AACnB;AACA,UAAM,UAAU,GAAG,iBAAiB,CAAC,YAAlB,CAA+B;AAChD,MAAA,MAAM,EAAE,MADwC;AAEhD,MAAA,YAAY,EAAE;AAFkC,KAA/B,CAAnB;AAIA;;AACA,IAAA,iBAAiB,CAAC,sBAAlB,CAAyC,+BAAzC;AAEA,WAAO,MAAK;AACV,MAAA,UAAU,CAAC,OAAX;AACD,KAFD;AAGD,GAZD,EAYG,CAAC,MAAD,EAAS,iBAAT,CAZH;AAcA,SAAO,IAAP;AACD,CAzBM","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from 'react';\nimport { useExtensionRegistry } from '@antv/xflow-core';\nimport { createFlowchartExtensionModule } from '../module';\nimport './index.less';\nexport const FlowchartExtension = () => {\n    /** 获取扩展Registry */\n    const extensionRegistry = useExtensionRegistry();\n    const config = React.useMemo(() => ({\n        CONFIG_TYPE: 'FLOWCHART_EXTENSION',\n        getConfig: () => __awaiter(void 0, void 0, void 0, function* () { }),\n    }), []);\n    React.useEffect(() => {\n        /** 注册 extension 到 Registry */\n        const disposable = extensionRegistry.addExtension({\n            config: config,\n            createModule: createFlowchartExtensionModule,\n        });\n        /** 添加 classname */\n        extensionRegistry.addContainerClassNames('flowchart-extension-container');\n        return () => {\n            disposable.dispose();\n        };\n    }, [config, extensionRegistry]);\n    return null;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}