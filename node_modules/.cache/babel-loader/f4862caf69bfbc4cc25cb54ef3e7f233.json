{"ast":null,"code":"import React from 'react';\nimport { XFLOW_PREFIX_CLS } from '../../constants';\n/** xflow classname prefix context */\n\nclass ConfigProvider {\n  constructor() {\n    this.xflowPrefixCls = XFLOW_PREFIX_CLS;\n\n    this.getXflowPrefixCls = pkgName => {\n      return `${this.xflowPrefixCls}-${pkgName}`;\n    };\n\n    this.setXflowPrefixCls = prefixCls => {\n      return this.xflowPrefixCls = prefixCls;\n    };\n  }\n\n}\n\nexport const XFlowConfigProviderContext = React.createContext({\n  configProvider: null\n});\nexport const useConfigContext = () => {\n  return React.useContext(XFlowConfigProviderContext);\n};\nexport const useXflowPrefixCls = pkgName => {\n  const ctx = useConfigContext();\n  return React.useMemo(() => {\n    if (ctx.configProvider) {\n      return ctx.configProvider.getXflowPrefixCls(pkgName);\n    }\n\n    return `${XFLOW_PREFIX_CLS}-${pkgName}`;\n    /* eslint-disable-next-line  */\n  }, [pkgName]);\n};","map":{"version":3,"sources":["../../../src/xflow-main/components/global-config-context.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,gBAAT,QAAiC,iBAAjC;AAEA;;AACA,MAAM,cAAN,CAAoB;AAApB,EAAA,WAAA,GAAA;AACU,SAAA,cAAA,GAAyB,gBAAzB;;AAER,SAAA,iBAAA,GAAqB,OAAD,IAAoB;AACtC,aAAO,GAAG,KAAK,cAAc,IAAI,OAAO,EAAxC;AACD,KAFD;;AAIA,SAAA,iBAAA,GAAqB,SAAD,IAAsB;AACxC,aAAQ,KAAK,cAAL,GAAsB,SAA9B;AACD,KAFD;AAGD;;AAVmB;;AAgBpB,OAAO,MAAM,0BAA0B,GAAG,KAAK,CAAC,aAAN,CAA8B;AACtE,EAAA,cAAc,EAAE;AADsD,CAA9B,CAAnC;AAIP,OAAO,MAAM,gBAAgB,GAAG,MAAK;AACnC,SAAO,KAAK,CAAC,UAAN,CAAiB,0BAAjB,CAAP;AACD,CAFM;AAIP,OAAO,MAAM,iBAAiB,GAAI,OAAD,IAAoB;AACnD,QAAM,GAAG,GAAG,gBAAgB,EAA5B;AACA,SAAO,KAAK,CAAC,OAAN,CAAc,MAAK;AACxB,QAAI,GAAG,CAAC,cAAR,EAAwB;AACtB,aAAO,GAAG,CAAC,cAAJ,CAAmB,iBAAnB,CAAqC,OAArC,CAAP;AACD;;AACD,WAAO,GAAG,gBAAgB,IAAI,OAAO,EAArC;AACA;AACD,GANM,EAMJ,CAAC,OAAD,CANI,CAAP;AAOD,CATM","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { XFLOW_PREFIX_CLS } from '../../constants';\n/** xflow classname prefix context */\nclass ConfigProvider {\n    constructor() {\n        this.xflowPrefixCls = XFLOW_PREFIX_CLS;\n        this.getXflowPrefixCls = (pkgName) => {\n            return `${this.xflowPrefixCls}-${pkgName}`;\n        };\n        this.setXflowPrefixCls = (prefixCls) => {\n            return (this.xflowPrefixCls = prefixCls);\n        };\n    }\n}\nexport const XFlowConfigProviderContext = React.createContext({\n    configProvider: null,\n});\nexport const useConfigContext = () => {\n    return React.useContext(XFlowConfigProviderContext);\n};\nexport const useXflowPrefixCls = (pkgName) => {\n    const ctx = useConfigContext();\n    return React.useMemo(() => {\n        if (ctx.configProvider) {\n            return ctx.configProvider.getXflowPrefixCls(pkgName);\n        }\n        return `${XFLOW_PREFIX_CLS}-${pkgName}`;\n        /* eslint-disable-next-line  */\n    }, [pkgName]);\n};\n//# sourceMappingURL=global-config-context.js.map"]},"metadata":{},"sourceType":"module"}