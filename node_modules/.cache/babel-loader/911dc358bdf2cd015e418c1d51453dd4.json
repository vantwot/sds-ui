{"ast":null,"code":"import { getString, getNumber } from './util';\nexport function outline() {\n  let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const color = getString(args.color, 'blue');\n  const width = getNumber(args.width, 1);\n  const margin = getNumber(args.margin, 2);\n  const opacity = getNumber(args.opacity, 1);\n  const innerRadius = margin;\n  const outerRadius = margin + width;\n  return `\n    <filter>\n      <feFlood flood-color=\"${color}\" flood-opacity=\"${opacity}\" result=\"colored\"/>\n      <feMorphology in=\"SourceAlpha\" result=\"morphedOuter\" operator=\"dilate\" radius=\"${outerRadius}\" />\n      <feMorphology in=\"SourceAlpha\" result=\"morphedInner\" operator=\"dilate\" radius=\"${innerRadius}\" />\n      <feComposite result=\"morphedOuterColored\" in=\"colored\" in2=\"morphedOuter\" operator=\"in\"/>\n      <feComposite operator=\"xor\" in=\"morphedOuterColored\" in2=\"morphedInner\" result=\"outline\"/>\n      <feMerge>\n        <feMergeNode in=\"outline\"/>\n        <feMergeNode in=\"SourceGraphic\"/>\n      </feMerge>\n    </filter>\n  `.trim();\n}","map":{"version":3,"sources":["../../../src/registry/filter/outline.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,EAAoB,SAApB,QAAqC,QAArC;AAqBA,OAAM,SAAU,OAAV,GAAwC;AAAA,MAAtB,IAAsB,uEAAF,EAAE;AAC5C,QAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,KAAN,EAAa,MAAb,CAAvB;AACA,QAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,KAAN,EAAa,CAAb,CAAvB;AACA,QAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAN,EAAc,CAAd,CAAxB;AACA,QAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,OAAN,EAAe,CAAf,CAAzB;AAEA,QAAM,WAAW,GAAG,MAApB;AACA,QAAM,WAAW,GAAG,MAAM,GAAG,KAA7B;AAEA,SAAO;;8BAEqB,KAAK,oBAAoB,OAAO;uFACyB,WAAW;uFACX,WAAW;;;;;;;;AAQ/F,GAZM,CAYL,IAZK,EAAP;AAaD","sourceRoot":"","sourcesContent":["import { getString, getNumber } from './util';\nexport function outline(args = {}) {\n    const color = getString(args.color, 'blue');\n    const width = getNumber(args.width, 1);\n    const margin = getNumber(args.margin, 2);\n    const opacity = getNumber(args.opacity, 1);\n    const innerRadius = margin;\n    const outerRadius = margin + width;\n    return `\n    <filter>\n      <feFlood flood-color=\"${color}\" flood-opacity=\"${opacity}\" result=\"colored\"/>\n      <feMorphology in=\"SourceAlpha\" result=\"morphedOuter\" operator=\"dilate\" radius=\"${outerRadius}\" />\n      <feMorphology in=\"SourceAlpha\" result=\"morphedInner\" operator=\"dilate\" radius=\"${innerRadius}\" />\n      <feComposite result=\"morphedOuterColored\" in=\"colored\" in2=\"morphedOuter\" operator=\"in\"/>\n      <feComposite operator=\"xor\" in=\"morphedOuterColored\" in2=\"morphedInner\" result=\"outline\"/>\n      <feMerge>\n        <feMergeNode in=\"outline\"/>\n        <feMergeNode in=\"SourceGraphic\"/>\n      </feMerge>\n    </filter>\n  `.trim();\n}\n//# sourceMappingURL=outline.js.map"]},"metadata":{},"sourceType":"module"}