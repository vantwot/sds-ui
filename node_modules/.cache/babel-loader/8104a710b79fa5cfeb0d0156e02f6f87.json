{"ast":null,"code":"export var node2Json = function node2Json(cell) {\n  var children = cell.getChildren();\n  var size = cell.getSize();\n  var data = cell.getData() || {};\n  var position = cell.getPosition();\n  var groupId = cell.getParentId();\n  var isCollapsed = data.isCollapsed;\n  var groupCollapsedSize = data.groupCollapsedSize || (isCollapsed ? size : null);\n  return Object.assign(Object.assign({}, data), {\n    id: cell.id,\n    width: size.width,\n    height: size.height,\n    x: position.x,\n    y: position.y,\n    group: groupId,\n    groupChildren: children ? children.map(function (child) {\n      return child.id;\n    }) : null,\n    groupCollapsedSize: groupCollapsedSize\n  });\n};\nexport var edge2Json = function edge2Json(cell) {\n  var data = cell.getData() || {};\n  return Object.assign({\n    id: cell.id\n  }, data);\n};\nexport var cellsToJson = function cellsToJson(cells) {\n  var nodes = [];\n  var edges = [];\n\n  var cell2Json = function cell2Json(cell) {\n    if (cell.isNode()) {\n      nodes.push(node2Json(cell));\n    }\n\n    if (cell.isEdge()) {\n      edges.push(edge2Json(cell));\n    }\n  };\n\n  cells.map(function (cell) {\n    return cell2Json(cell);\n  });\n  return {\n    nodes: nodes,\n    edges: edges\n  };\n};","map":{"version":3,"sources":["../../src/common/graph-utils.ts"],"names":[],"mappings":"AAGA,OAAO,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,IAAD,EAAe;AACtC,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAL,EAAjB;AACA,MAAM,IAAI,GAAG,IAAI,CAAC,OAAL,EAAb;AACA,MAAM,IAAI,GAAG,IAAI,CAAC,OAAL,MAAwC,EAArD;AACA,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAL,EAAjB;AACA,MAAM,OAAO,GAAG,IAAI,CAAC,WAAL,EAAhB;AACA,MAAQ,WAAR,GAAwB,IAAxB,CAAQ,WAAR;AACA,MAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAL,KAA4B,WAAW,GAAG,IAAH,GAAU,IAAjD,CAA3B;AACA,SAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,IADL,CAAA,EACS;AACP,IAAA,EAAE,EAAE,IAAI,CAAC,EADF;AAEP,IAAA,KAAK,EAAE,IAAI,CAAC,KAFL;AAGP,IAAA,MAAM,EAAE,IAAI,CAAC,MAHN;AAIP,IAAA,CAAC,EAAE,QAAQ,CAAC,CAJL;AAKP,IAAA,CAAC,EAAE,QAAQ,CAAC,CALL;AAMP,IAAA,KAAK,EAAE,OANA;AAOP,IAAA,aAAa,EAAE,QAAQ,GAAG,QAAQ,CAAC,GAAT,CAAa,UAAA,KAAK;AAAA,aAAI,KAAK,CAAC,EAAV;AAAA,KAAlB,CAAH,GAAqC,IAPrD;AAQP,IAAA,kBAAkB,EAAlB;AARO,GADT,CAAA;AAWD,CAnBM;AAqBP,OAAO,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,IAAD,EAAe;AACtC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAL,MAAuB,EAApC;AACA,SAAA,MAAA,CAAA,MAAA,CAAA;AACE,IAAA,EAAE,EAAE,IAAI,CAAC;AADX,GAAA,EAEK,IAFL,CAAA;AAID,CANM;AAQP,OAAO,IAAM,WAAW,GAAG,SAAd,WAAc,CAAC,KAAD,EAAmC;AAC5D,MAAM,KAAK,GAA0B,EAArC;AACA,MAAM,KAAK,GAA0B,EAArC;;AAEA,MAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,IAAD,EAAe;AAC/B,QAAI,IAAI,CAAC,MAAL,EAAJ,EAAmB;AACjB,MAAA,KAAK,CAAC,IAAN,CAAW,SAAS,CAAC,IAAD,CAApB;AACD;;AACD,QAAI,IAAI,CAAC,MAAL,EAAJ,EAAmB;AACjB,MAAA,KAAK,CAAC,IAAN,CAAW,SAAS,CAAC,IAAD,CAApB;AACD;AACF,GAPD;;AAQA,EAAA,KAAK,CAAC,GAAN,CAAU,UAAA,IAAI,EAAG;AACf,WAAO,SAAS,CAAC,IAAD,CAAhB;AACD,GAFD;AAIA,SAAO;AACL,IAAA,KAAK,EAAL,KADK;AAEL,IAAA,KAAK,EAAL;AAFK,GAAP;AAID,CApBM","sourceRoot":"","sourcesContent":["export const node2Json = (cell) => {\n    const children = cell.getChildren();\n    const size = cell.getSize();\n    const data = cell.getData() || {};\n    const position = cell.getPosition();\n    const groupId = cell.getParentId();\n    const { isCollapsed } = data;\n    const groupCollapsedSize = data.groupCollapsedSize || (isCollapsed ? size : null);\n    return Object.assign(Object.assign({}, data), { id: cell.id, width: size.width, height: size.height, x: position.x, y: position.y, group: groupId, groupChildren: children ? children.map(child => child.id) : null, groupCollapsedSize });\n};\nexport const edge2Json = (cell) => {\n    const data = cell.getData() || {};\n    return Object.assign({ id: cell.id }, data);\n};\nexport const cellsToJson = (cells) => {\n    const nodes = [];\n    const edges = [];\n    const cell2Json = (cell) => {\n        if (cell.isNode()) {\n            nodes.push(node2Json(cell));\n        }\n        if (cell.isEdge()) {\n            edges.push(edge2Json(cell));\n        }\n    };\n    cells.map(cell => {\n        return cell2Json(cell);\n    });\n    return {\n        nodes,\n        edges,\n    };\n};\n//# sourceMappingURL=graph-utils.js.map"]},"metadata":{},"sourceType":"module"}