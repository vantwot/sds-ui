{"ast":null,"code":"import { getCanvas } from './register';\nvar lastTime = 0;\nvar id = 0;\n\nfunction hack(cb) {\n  var now = Date.now();\n  var nextTime = Math.max(lastTime + 23, now);\n  id = setTimeout(function () {\n    cb(lastTime = nextTime);\n  }, nextTime - now);\n  return id;\n}\n\nfunction requestAnimationFrame(cb) {\n  var canvas = getCanvas();\n\n  if (canvas.requestAnimationFrame) {\n    return canvas.requestAnimationFrame(cb);\n  } else {\n    return hack(cb);\n  }\n}\n\nfunction cancelAnimationFrame(id) {\n  var canvas = getCanvas();\n\n  if (canvas.cancelAnimationFrame) {\n    return canvas.cancelAnimationFrame(id);\n  } else {\n    return clearTimeout(id);\n  }\n}\n\nexport { requestAnimationFrame, cancelAnimationFrame };","map":{"version":3,"sources":["../../src/mini-adapter/requestAnimationFrame.ts"],"names":["lastTime","id","now","Date","nextTime","Math","setTimeout","cb","canvas","getCanvas","hack","clearTimeout"],"mappings":"AAEA,SAAA,SAAA,QAAA,YAAA;AAEA,IAAIA,QAAa,GAAjB,CAAA;AACA,IAAIC,EAAO,GAAX,CAAA;;AAEA,SAAA,IAAA,CAAA,EAAA,EAAkB;AAChB,MAAMC,GAAG,GAAGC,IAAI,CAAhB,GAAYA,EAAZ;AAEA,MAAMC,QAAQ,GAAGC,IAAI,CAAJA,GAAAA,CAASL,QAAQ,GAAjBK,EAAAA,EAAjB,GAAiBA,CAAjB;AAEAJ,EAAAA,EAAE,GAAGK,UAAU,CAAC,YAAM;AACpBC,IAAAA,EAAE,CAAEP,QAAQ,GAAZO,QAAE,CAAFA;AADa,GAAA,EAEZH,QAAQ,GAFXH,GAAe,CAAfA;AAIA,SAAA,EAAA;AACD;;AAED,SAAA,qBAAA,CAAA,EAAA,EAAmC;AACjC,MAAMO,MAAM,GAAGC,SAAf,EAAA;;AACA,MAAID,MAAM,CAAV,qBAAA,EAAkC;AAChC,WAAOA,MAAM,CAANA,qBAAAA,CAAP,EAAOA,CAAP;AADF,GAAA,MAEO;AACL,WAAOE,IAAI,CAAX,EAAW,CAAX;AACD;AACF;;AAED,SAAA,oBAAA,CAAA,EAAA,EAAkC;AAChC,MAAMF,MAAM,GAAGC,SAAf,EAAA;;AACA,MAAID,MAAM,CAAV,oBAAA,EAAiC;AAC/B,WAAOA,MAAM,CAANA,oBAAAA,CAAP,EAAOA,CAAP;AADF,GAAA,MAEO;AACL,WAAOG,YAAY,CAAnB,EAAmB,CAAnB;AACD;AACF;;AAED,SAAA,qBAAA,EAAA,oBAAA","sourcesContent":["// @ts-nocheck\n// tslint:disable\nimport { getCanvas } from './register';\n\nlet lastTime: any = 0;\nlet id: any = 0;\n\nfunction hack(cb) {\n  const now = Date.now();\n\n  const nextTime = Math.max(lastTime + 23, now);\n\n  id = setTimeout(() => {\n    cb((lastTime = nextTime));\n  }, nextTime - now);\n\n  return id;\n}\n\nfunction requestAnimationFrame(cb) {\n  const canvas = getCanvas();\n  if (canvas.requestAnimationFrame) {\n    return canvas.requestAnimationFrame(cb);\n  } else {\n    return hack(cb);\n  }\n}\n\nfunction cancelAnimationFrame(id) {\n  const canvas = getCanvas();\n  if (canvas.cancelAnimationFrame) {\n    return canvas.cancelAnimationFrame(id);\n  } else {\n    return clearTimeout(id);\n  }\n}\n\nexport { requestAnimationFrame, cancelAnimationFrame };\n"]},"metadata":{},"sourceType":"module"}