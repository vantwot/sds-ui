{"ast":null,"code":"import _objectSpread from\"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';/* Components */import DocumentModal from'../DocumentModal';/* Libraries */import{AreaMap}from'@ant-design/charts';/* Utilities */import{APIRequest}from'../../apis/api';/* UI Library Components */import{Modal,Spin}from'antd';import{jsx as _jsx}from\"react/jsx-runtime\";var BogotaMapChart=function BogotaMapChart(_ref){var _ref$height=_ref.height,height=_ref$height===void 0?600:_ref$height;var _APIRequest=APIRequest('/app/home'),_APIRequest2=_slicedToArray(_APIRequest,1),state=_APIRequest2[0];var docInfo=function docInfo(e){if(e.feature.properties.article.title.length>0){Modal.info({width:'1200px',title:/*#__PURE__*/_jsx(\"p\",{className:\"map--modal-title\",children:e.feature.properties.article.title}),icon:null,okText:'Cerrar',maskClosable:true,content:/*#__PURE__*/_jsx(DocumentModal,{documentID:e.feature.properties.article.id}),onOk:function onOk(){}});}else Modal.info({width:'1200px',title:/*#__PURE__*/_jsx(\"p\",{className:\"map--modal-title\",children:\"No hay art\\xEDculos disponibles para esta localidad\"}),icon:null,okText:'Cerrar',maskClosable:true,content:'',onOk:function onOk(){}});};if(state.isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"spin--container\",children:/*#__PURE__*/_jsx(Spin,{size:\"large\"})});}if(state.isError){return null;}var config={map:{type:'mapbox',style:'blank'},source:{data:state.data.data,parser:{type:'geojson'}},autoFit:true,color:'#90cedc',style:{opacity:1,stroke:'#f0f2f5',lineWidth:2},state:{active:{fill:'#4abfdc',stroke:'white',lineWidth:3}},tooltip:{anchor:'top-right',offsets:[60,-20],items:[{field:'article.title',alias:'Artículo:'}]},label:{visible:true,field:'loc',style:{fill:'#000',opacity:0.9,fontSize:11,stroke:'#fff',strokeWidth:1.5,textAllowOverlap:true,padding:[10,10]}},legend:{type:'category',position:'topright',title:'Haz click sobre una localidad para visualizar un artículo de forma aleatoria'}};var plotEvents=function plotEvents(plot){plot.on('areaLayer:click',function(e){return docInfo(e);});};return/*#__PURE__*/_jsx(\"div\",{className:\"map--chart\",children:/*#__PURE__*/_jsx(\"div\",{style:{height:height,margin:'5px'},children:/*#__PURE__*/_jsx(AreaMap,_objectSpread(_objectSpread({},config),{},{onReady:function onReady(plot){plotEvents(plot);}}))})});};export default BogotaMapChart;","map":{"version":3,"sources":["/home/manolo/sds-ui/src/components/charts/BogotaMapChart.jsx"],"names":["React","DocumentModal","AreaMap","APIRequest","Modal","Spin","BogotaMapChart","height","state","docInfo","e","feature","properties","article","title","length","info","width","icon","okText","maskClosable","content","id","onOk","isLoading","isError","config","map","type","style","source","data","parser","autoFit","color","opacity","stroke","lineWidth","active","fill","tooltip","anchor","offsets","items","field","alias","label","visible","fontSize","strokeWidth","textAllowOverlap","padding","legend","position","plotEvents","plot","on","margin"],"mappings":"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","sourcesContent":["import React from 'react';\n\n/* Components */\nimport DocumentModal from '../DocumentModal';\n\n/* Libraries */\nimport { AreaMap } from '@ant-design/charts';\n\n/* Utilities */\nimport { APIRequest } from '../../apis/api';\n\n/* UI Library Components */\nimport { Modal, Spin } from 'antd';\n\nconst BogotaMapChart = ({ height = 600 }) => {\n  const [state] = APIRequest('/app/home');\n  const docInfo = (e) => {\n    if (e.feature.properties.article.title.length > 0) {\n      Modal.info({\n        width: '1200px',\n        title: (\n          <p className=\"map--modal-title\">\n            {e.feature.properties.article.title}\n          </p>\n        ),\n        icon: null,\n        okText: 'Cerrar',\n        maskClosable: true,\n        content: <DocumentModal documentID={e.feature.properties.article.id} />,\n        onOk() {},\n      });\n    } else\n      Modal.info({\n        width: '1200px',\n        title: (\n          <p className=\"map--modal-title\">\n            No hay artículos disponibles para esta localidad\n          </p>\n        ),\n        icon: null,\n        okText: 'Cerrar',\n        maskClosable: true,\n        content: '',\n        onOk() {},\n      });\n  };\n\n  if (state.isLoading) {\n    return (\n      <div className=\"spin--container\">\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n  if (state.isError) {\n    return null;\n  }\n\n  const config = {\n    map: {\n      type: 'mapbox',\n      style: 'blank',\n    },\n    source: {\n      data: state.data.data,\n      parser: {\n        type: 'geojson',\n      },\n    },\n    autoFit: true,\n    color: '#90cedc',\n    style: {\n      opacity: 1,\n      stroke: '#f0f2f5',\n      lineWidth: 2,\n    },\n    state: {\n      active: { fill: '#4abfdc', stroke: 'white', lineWidth: 3 },\n    },\n    tooltip: {\n      anchor: 'top-right',\n      offsets: [60, -20],\n      items: [{ field: 'article.title', alias: 'Artículo:' }],\n    },\n    label: {\n      visible: true,\n      field: 'loc',\n      style: {\n        fill: '#000',\n        opacity: 0.9,\n        fontSize: 11,\n        stroke: '#fff',\n        strokeWidth: 1.5,\n        textAllowOverlap: true,\n        padding: [10, 10],\n      },\n    },\n    legend: {\n      type: 'category',\n      position: 'topright',\n      title:\n        'Haz click sobre una localidad para visualizar un artículo de forma aleatoria',\n    },\n  };\n\n  const plotEvents = (plot) => {\n    plot.on('areaLayer:click', (e) => docInfo(e));\n  };\n\n  return (\n    <div className=\"map--chart\">\n      <div style={{ height: height, margin: '5px' }}>\n        <AreaMap\n          {...config}\n          onReady={(plot) => {\n            plotEvents(plot);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default BogotaMapChart;\n"]},"metadata":{},"sourceType":"module"}