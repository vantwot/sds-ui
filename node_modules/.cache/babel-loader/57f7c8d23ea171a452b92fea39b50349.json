{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport React, { useCallback, useContext } from 'react';\nimport { XFlowGraphCommands, MODELS, XFlowNodeCommands, XFlowEdgeCommands, usePanelContext, FormItemWrapper } from '@antv/xflow';\nimport AppContext from '../../context';\nimport { onConfigChange } from '../../util';\nimport useAsync from './useAsync';\nexport var FormWrapper = function (props) {\n  var controlSchema = props.controlSchema,\n      children = props.children,\n      _a = props.type,\n      type = _a === void 0 ? 'node' : _a;\n\n  var _b = usePanelContext(),\n      commandService = _b.commandService,\n      modelService = _b.modelService;\n\n  var flowchartId = useContext(AppContext).flowchartId;\n  var getSelectNode = useCallback(function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , MODELS.SELECTED_NODE.useValue(modelService)];\n\n          case 1:\n            data = _a.sent().data;\n            return [2\n            /*return*/\n            , data];\n        }\n      });\n    });\n  }, [props]);\n  var getSelectEdge = useCallback(function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var cell, data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , MODELS.SELECTED_CELL.useValue(modelService)];\n\n          case 1:\n            cell = _a.sent();\n            data = cell.getData();\n            return [2\n            /*return*/\n            , __assign({\n              id: cell.id\n            }, data)];\n        }\n      });\n    });\n  }, [props]);\n\n  var _c = useAsync(type === 'edge' ? getSelectEdge : getSelectNode),\n      data = _c.data,\n      loading = _c.loading;\n\n  React.useEffect(function () {\n    commandService.executeCommand(XFlowGraphCommands.SAVE_GRAPH_DATA.id, {\n      saveGraphDataService: function (meta, graph) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            return [2\n            /*return*/\n            , {\n              err: null,\n              data: graph,\n              meta: meta\n            }];\n          });\n        });\n      }\n    });\n  }, [props]);\n\n  var updateNode = function (value) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var currentNodeData, nodeConfig;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , getSelectNode()];\n\n          case 1:\n            currentNodeData = _a.sent();\n            nodeConfig = __assign(__assign({}, currentNodeData), value);\n            return [4\n            /*yield*/\n            , commandService.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {\n              nodeConfig: nodeConfig\n            })];\n\n          case 2:\n            _a.sent();\n\n            onConfigChange({\n              type: 'update:node',\n              config: nodeConfig\n            }, flowchartId);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  var updateEdge = function (value, type, key) {\n    if (type === void 0) {\n      type = 'line';\n    }\n\n    return __awaiter(void 0, void 0, void 0, function () {\n      var currentEdgeData, edgeConfig;\n\n      var _a;\n\n      var _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , getSelectEdge()];\n\n          case 1:\n            currentEdgeData = _c.sent();\n            edgeConfig = __assign(__assign(__assign({}, currentEdgeData), key ? value[key] : value), {\n              attrs: __assign(__assign({}, currentEdgeData.attrs), (_a = {}, _a[type] = __assign(__assign({}, (_b = currentEdgeData.attrs) === null || _b === void 0 ? void 0 : _b[type]), key ? value[key] : value), _a))\n            });\n            return [4\n            /*yield*/\n            , commandService.executeCommand(XFlowEdgeCommands.UPDATE_EDGE.id, {\n              edgeConfig: edgeConfig\n            })];\n\n          case 2:\n            _c.sent();\n\n            onConfigChange({\n              type: 'update:edge',\n              config: edgeConfig\n            }, flowchartId);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  var updateGroup = function (value) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var currentGroupData, nodeConfig;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , getSelectNode()];\n\n          case 1:\n            currentGroupData = _a.sent();\n            nodeConfig = __assign(__assign({}, currentGroupData), value);\n            return [4\n            /*yield*/\n            , commandService.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {\n              nodeConfig: nodeConfig\n            })];\n\n          case 2:\n            _a.sent();\n\n            onConfigChange({\n              type: 'update:group',\n              config: nodeConfig\n            }, flowchartId);\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  if (loading) {\n    return null;\n  }\n\n  return React.createElement(FormItemWrapper, {\n    schema: controlSchema\n  }, function () {\n    return children(__assign({}, data), {\n      updateNode: updateNode,\n      updateEdge: updateEdge,\n      updateGroup: updateGroup\n    });\n  });\n};","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@ant-design/flowchart/es/components/editor-panel/form-wrapper.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","React","useCallback","useContext","XFlowGraphCommands","MODELS","XFlowNodeCommands","XFlowEdgeCommands","usePanelContext","FormItemWrapper","AppContext","onConfigChange","useAsync","FormWrapper","props","controlSchema","children","_a","type","_b","commandService","modelService","flowchartId","getSelectNode","data","SELECTED_NODE","useValue","getSelectEdge","cell","SELECTED_CELL","getData","id","_c","loading","useEffect","executeCommand","SAVE_GRAPH_DATA","saveGraphDataService","meta","graph","err","updateNode","currentNodeData","nodeConfig","UPDATE_NODE","config","updateEdge","key","currentEdgeData","edgeConfig","attrs","UPDATE_EDGE","updateGroup","currentGroupData","createElement","schema"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport React, { useCallback, useContext } from 'react';\nimport { XFlowGraphCommands, MODELS, XFlowNodeCommands, XFlowEdgeCommands, usePanelContext, FormItemWrapper, } from '@antv/xflow';\nimport AppContext from '../../context';\nimport { onConfigChange } from '../../util';\nimport useAsync from './useAsync';\nexport var FormWrapper = function (props) {\n    var controlSchema = props.controlSchema, children = props.children, _a = props.type, type = _a === void 0 ? 'node' : _a;\n    var _b = usePanelContext(), commandService = _b.commandService, modelService = _b.modelService;\n    var flowchartId = useContext(AppContext).flowchartId;\n    var getSelectNode = useCallback(function () { return __awaiter(void 0, void 0, void 0, function () {\n        var data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, MODELS.SELECTED_NODE.useValue(modelService)];\n                case 1:\n                    data = (_a.sent()).data;\n                    return [2 /*return*/, data];\n            }\n        });\n    }); }, [props]);\n    var getSelectEdge = useCallback(function () { return __awaiter(void 0, void 0, void 0, function () {\n        var cell, data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, MODELS.SELECTED_CELL.useValue(modelService)];\n                case 1:\n                    cell = _a.sent();\n                    data = cell.getData();\n                    return [2 /*return*/, __assign({ id: cell.id }, data)];\n            }\n        });\n    }); }, [props]);\n    var _c = useAsync(type === 'edge' ? getSelectEdge : getSelectNode), data = _c.data, loading = _c.loading;\n    React.useEffect(function () {\n        commandService.executeCommand(XFlowGraphCommands.SAVE_GRAPH_DATA.id, {\n            saveGraphDataService: function (meta, graph) { return __awaiter(void 0, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    return [2 /*return*/, { err: null, data: graph, meta: meta }];\n                });\n            }); },\n        });\n    }, [props]);\n    var updateNode = function (value) { return __awaiter(void 0, void 0, void 0, function () {\n        var currentNodeData, nodeConfig;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getSelectNode()];\n                case 1:\n                    currentNodeData = _a.sent();\n                    nodeConfig = __assign(__assign({}, currentNodeData), value);\n                    return [4 /*yield*/, commandService.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {\n                            nodeConfig: nodeConfig,\n                        })];\n                case 2:\n                    _a.sent();\n                    onConfigChange({ type: 'update:node', config: nodeConfig }, flowchartId);\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n    var updateEdge = function (value, type, key) {\n        if (type === void 0) { type = 'line'; }\n        return __awaiter(void 0, void 0, void 0, function () {\n            var currentEdgeData, edgeConfig;\n            var _a;\n            var _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, getSelectEdge()];\n                    case 1:\n                        currentEdgeData = _c.sent();\n                        edgeConfig = __assign(__assign(__assign({}, currentEdgeData), (key ? value[key] : value)), { attrs: __assign(__assign({}, currentEdgeData.attrs), (_a = {}, _a[type] = __assign(__assign({}, (_b = currentEdgeData.attrs) === null || _b === void 0 ? void 0 : _b[type]), (key ? value[key] : value)), _a)) });\n                        return [4 /*yield*/, commandService.executeCommand(XFlowEdgeCommands.UPDATE_EDGE.id, { edgeConfig: edgeConfig })];\n                    case 2:\n                        _c.sent();\n                        onConfigChange({ type: 'update:edge', config: edgeConfig }, flowchartId);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    var updateGroup = function (value) { return __awaiter(void 0, void 0, void 0, function () {\n        var currentGroupData, nodeConfig;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getSelectNode()];\n                case 1:\n                    currentGroupData = _a.sent();\n                    nodeConfig = __assign(__assign({}, currentGroupData), value);\n                    return [4 /*yield*/, commandService.executeCommand(XFlowNodeCommands.UPDATE_NODE.id, {\n                            nodeConfig: nodeConfig,\n                        })];\n                case 2:\n                    _a.sent();\n                    onConfigChange({ type: 'update:group', config: nodeConfig }, flowchartId);\n                    return [2 /*return*/];\n            }\n        });\n    }); };\n    if (loading) {\n        return null;\n    }\n    return (React.createElement(FormItemWrapper, { schema: controlSchema }, function () {\n        return children(__assign({}, data), { updateNode: updateNode, updateEdge: updateEdge, updateGroup: updateGroup });\n    }));\n};\n"]},"metadata":{},"sourceType":"module"}