{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { ObjectExt, FunctionExt } from '../../util';\nimport { Rectangle } from '../../geometry';\nimport { Widget, Handle } from '../common';\nimport { NodePreset } from './node-preset';\nimport { EdgePreset } from './edge-preset';\nexport var Halo = /*#__PURE__*/function (_Widget) {\n  _inherits(Halo, _Widget);\n\n  var _super = _createSuper(Halo);\n\n  function Halo() {\n    _classCallCheck(this, Halo);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Halo, [{\n    key: \"type\",\n    get: function get() {\n      return this.options.type || 'surround';\n    }\n  }, {\n    key: \"handleOptions\",\n    get: function get() {\n      return this.options;\n    }\n  }, {\n    key: \"init\",\n    value: function init(options) {\n      this.options = ObjectExt.merge(Halo.defaultOptions, this.cell.isNode() ? new NodePreset(this).getPresets() : this.cell.isEdge() ? new EdgePreset(this).getPresets() : null, options);\n      this.render();\n      this.initHandles();\n      this.update();\n      this.startListening();\n    }\n  }, {\n    key: \"startListening\",\n    value: function startListening() {\n      var model = this.model;\n      var graph = this.graph;\n      var cell = this.view.cell;\n      cell.on('removed', this.remove, this);\n      model.on('reseted', this.remove, this);\n      graph.on('halo:destroy', this.remove, this);\n      model.on('*', this.update, this);\n      graph.on('scale', this.update, this);\n      graph.on('translate', this.update, this);\n\n      _get(_getPrototypeOf(Halo.prototype), \"startListening\", this).call(this);\n    }\n  }, {\n    key: \"stopListening\",\n    value: function stopListening() {\n      var model = this.model;\n      var graph = this.graph;\n      var cell = this.view.cell;\n      this.undelegateEvents();\n      cell.off('removed', this.remove, this);\n      model.off('reseted', this.remove, this);\n      graph.off('halo:destroy', this.remove, this);\n      model.off('*', this.update, this);\n      graph.off('scale', this.update, this);\n      graph.off('translate', this.update, this);\n\n      _get(_getPrototypeOf(Halo.prototype), \"stopListening\", this).call(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var options = this.options;\n      var cls = this.prefixClassName('widget-halo');\n      this.view.addClass(Private.NODE_CLS);\n      this.container = document.createElement('div');\n      this.$container = this.$(this.container).addClass(cls).attr('data-shape', this.view.cell.shape);\n\n      if (options.className) {\n        this.$container.addClass(options.className);\n      }\n\n      this.$handleContainer = this.$('<div/>').addClass(\"\".concat(cls, \"-handles\")).appendTo(this.container);\n      this.$content = this.$('<div/>').addClass(\"\".concat(cls, \"-content\")).appendTo(this.container);\n      this.$container.appendTo(this.graph.container);\n      return this;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      this.stopBatch();\n      this.view.removeClass(Private.NODE_CLS);\n      return _get(_getPrototypeOf(Halo.prototype), \"remove\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.isRendered()) {\n        this.updateContent();\n        var bbox = this.getBBox();\n        var tinyThreshold = this.options.tinyThreshold || 0;\n        var smallThreshold = this.options.smallThreshold || 0;\n        this.$handleContainer.toggleClass(\"\".concat(this.handleClassName, \"-tiny\"), bbox.width < tinyThreshold && bbox.height < tinyThreshold);\n        var className = \"\".concat(this.handleClassName, \"-small\");\n        this.$handleContainer.toggleClass(className, !this.$handleContainer.hasClass(className) && bbox.width < smallThreshold && bbox.height < smallThreshold);\n        this.$container.css({\n          width: bbox.width,\n          height: bbox.height,\n          left: bbox.x,\n          top: bbox.y\n        });\n\n        if (this.hasHandle('unlink')) {\n          this.toggleUnlink();\n        }\n\n        if (this.type === 'surround' || this.type === 'toolbar') {\n          if (this.hasHandle('fork')) {\n            this.toggleFork();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"updateContent\",\n    value: function updateContent() {\n      var content = this.options.content;\n\n      if (typeof content === 'function') {\n        var ret = FunctionExt.call(content, this, this.view, this.$content[0]);\n\n        if (ret) {\n          this.$content.html(ret);\n        }\n      } else if (content) {\n        this.$content.html(content);\n      } else {\n        this.$content.remove();\n      }\n    }\n  }, {\n    key: \"getBBox\",\n    value: function getBBox() {\n      var view = this.view;\n      var bbox = this.options.bbox;\n      var rect = typeof bbox === 'function' ? FunctionExt.call(bbox, this, view) : bbox;\n      return Rectangle.create(Object.assign({\n        x: 0,\n        y: 0,\n        width: 1,\n        height: 1\n      }, rect));\n    }\n  }, {\n    key: \"removeCell\",\n    value: function removeCell() {\n      this.cell.remove();\n    }\n  }, {\n    key: \"toggleFork\",\n    value: function toggleFork() {\n      var cell = this.view.cell.clone();\n      var view = this.graph.hook.createCellView(cell);\n      var valid = this.graph.hook.validateConnection(this.view, null, view, null, 'target');\n      this.$handleContainer.children('.fork').toggleClass('hidden', !valid);\n      view.remove();\n    }\n  }, {\n    key: \"toggleUnlink\",\n    value: function toggleUnlink() {\n      var hasEdges = this.model.getConnectedEdges(this.view.cell).length > 0;\n      this.$handleContainer.children('.unlink').toggleClass('hidden', !hasEdges);\n    } // #region batch\n\n  }, {\n    key: \"startBatch\",\n    value: function startBatch() {\n      this.model.startBatch('halo', {\n        halo: this.cid\n      });\n    }\n  }, {\n    key: \"stopBatch\",\n    value: function stopBatch() {\n      if (this.model.hasActiveBatch('halo')) {\n        this.model.stopBatch('halo', {\n          halo: this.cid\n        });\n      }\n    }\n  }]);\n\n  return Halo;\n}(Widget);\n\n(function (Halo) {\n  Halo.defaultOptions = {\n    type: 'surround',\n    clearAll: true,\n    clearOnBlankMouseDown: true,\n    useCellGeometry: false,\n    clone: function clone(cell) {\n      return cell.clone().removeZIndex();\n    }\n  };\n})(Halo || (Halo = {}));\n\nObject.getOwnPropertyNames(Handle.prototype).forEach(function (name) {\n  if (name !== 'constructor') {\n    Object.defineProperty(Halo.prototype, name, Object.getOwnPropertyDescriptor(Handle.prototype, name));\n  }\n});\nvar Private;\n\n(function (Private) {\n  Private.NODE_CLS = 'has-widget-halo';\n})(Private || (Private = {}));","map":{"version":3,"sources":["../../../src/addon/halo/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { ObjectExt, FunctionExt } from '../../util';\nimport { Rectangle } from '../../geometry';\nimport { Widget, Handle } from '../common';\nimport { NodePreset } from './node-preset';\nimport { EdgePreset } from './edge-preset';\nexport class Halo extends Widget {\n    get type() {\n        return this.options.type || 'surround';\n    }\n    get handleOptions() {\n        return this.options;\n    }\n    init(options) {\n        this.options = ObjectExt.merge(Halo.defaultOptions, this.cell.isNode()\n            ? new NodePreset(this).getPresets()\n            : this.cell.isEdge()\n                ? new EdgePreset(this).getPresets()\n                : null, options);\n        this.render();\n        this.initHandles();\n        this.update();\n        this.startListening();\n    }\n    startListening() {\n        const model = this.model;\n        const graph = this.graph;\n        const cell = this.view.cell;\n        cell.on('removed', this.remove, this);\n        model.on('reseted', this.remove, this);\n        graph.on('halo:destroy', this.remove, this);\n        model.on('*', this.update, this);\n        graph.on('scale', this.update, this);\n        graph.on('translate', this.update, this);\n        super.startListening();\n    }\n    stopListening() {\n        const model = this.model;\n        const graph = this.graph;\n        const cell = this.view.cell;\n        this.undelegateEvents();\n        cell.off('removed', this.remove, this);\n        model.off('reseted', this.remove, this);\n        graph.off('halo:destroy', this.remove, this);\n        model.off('*', this.update, this);\n        graph.off('scale', this.update, this);\n        graph.off('translate', this.update, this);\n        super.stopListening();\n    }\n    render() {\n        const options = this.options;\n        const cls = this.prefixClassName('widget-halo');\n        this.view.addClass(Private.NODE_CLS);\n        this.container = document.createElement('div');\n        this.$container = this.$(this.container)\n            .addClass(cls)\n            .attr('data-shape', this.view.cell.shape);\n        if (options.className) {\n            this.$container.addClass(options.className);\n        }\n        this.$handleContainer = this.$('<div/>')\n            .addClass(`${cls}-handles`)\n            .appendTo(this.container);\n        this.$content = this.$('<div/>')\n            .addClass(`${cls}-content`)\n            .appendTo(this.container);\n        this.$container.appendTo(this.graph.container);\n        return this;\n    }\n    remove() {\n        this.stopBatch();\n        this.view.removeClass(Private.NODE_CLS);\n        return super.remove();\n    }\n    update() {\n        if (this.isRendered()) {\n            this.updateContent();\n            const bbox = this.getBBox();\n            const tinyThreshold = this.options.tinyThreshold || 0;\n            const smallThreshold = this.options.smallThreshold || 0;\n            this.$handleContainer.toggleClass(`${this.handleClassName}-tiny`, bbox.width < tinyThreshold && bbox.height < tinyThreshold);\n            const className = `${this.handleClassName}-small`;\n            this.$handleContainer.toggleClass(className, !this.$handleContainer.hasClass(className) &&\n                bbox.width < smallThreshold &&\n                bbox.height < smallThreshold);\n            this.$container.css({\n                width: bbox.width,\n                height: bbox.height,\n                left: bbox.x,\n                top: bbox.y,\n            });\n            if (this.hasHandle('unlink')) {\n                this.toggleUnlink();\n            }\n            if (this.type === 'surround' || this.type === 'toolbar') {\n                if (this.hasHandle('fork')) {\n                    this.toggleFork();\n                }\n            }\n        }\n    }\n    updateContent() {\n        const content = this.options.content;\n        if (typeof content === 'function') {\n            const ret = FunctionExt.call(content, this, this.view, this.$content[0]);\n            if (ret) {\n                this.$content.html(ret);\n            }\n        }\n        else if (content) {\n            this.$content.html(content);\n        }\n        else {\n            this.$content.remove();\n        }\n    }\n    getBBox() {\n        const view = this.view;\n        const bbox = this.options.bbox;\n        const rect = typeof bbox === 'function' ? FunctionExt.call(bbox, this, view) : bbox;\n        return Rectangle.create(Object.assign({ x: 0, y: 0, width: 1, height: 1 }, rect));\n    }\n    removeCell() {\n        this.cell.remove();\n    }\n    toggleFork() {\n        const cell = this.view.cell.clone();\n        const view = this.graph.hook.createCellView(cell);\n        const valid = this.graph.hook.validateConnection(this.view, null, view, null, 'target');\n        this.$handleContainer.children('.fork').toggleClass('hidden', !valid);\n        view.remove();\n    }\n    toggleUnlink() {\n        const hasEdges = this.model.getConnectedEdges(this.view.cell).length > 0;\n        this.$handleContainer.children('.unlink').toggleClass('hidden', !hasEdges);\n    }\n    // #region batch\n    startBatch() {\n        this.model.startBatch('halo', {\n            halo: this.cid,\n        });\n    }\n    stopBatch() {\n        if (this.model.hasActiveBatch('halo')) {\n            this.model.stopBatch('halo', {\n                halo: this.cid,\n            });\n        }\n    }\n}\n(function (Halo) {\n    Halo.defaultOptions = {\n        type: 'surround',\n        clearAll: true,\n        clearOnBlankMouseDown: true,\n        useCellGeometry: false,\n        clone: (cell) => cell.clone().removeZIndex(),\n    };\n})(Halo || (Halo = {}));\nObject.getOwnPropertyNames(Handle.prototype).forEach((name) => {\n    if (name !== 'constructor') {\n        Object.defineProperty(Halo.prototype, name, Object.getOwnPropertyDescriptor(Handle.prototype, name));\n    }\n});\nvar Private;\n(function (Private) {\n    Private.NODE_CLS = 'has-widget-halo';\n})(Private || (Private = {}));\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}