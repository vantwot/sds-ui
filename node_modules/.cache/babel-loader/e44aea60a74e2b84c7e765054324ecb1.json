{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { HookHub } from '@antv/xflow-hook';\nimport { XFlowNodeCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nexport var NsMoveNode;\n\n(function (NsMoveNode) {\n  /** Command: 用于注册named factory */\n  NsMoveNode.command = XFlowNodeCommands.MOVE_NODE;\n  /** hookName */\n\n  NsMoveNode.hookKey = 'moveNode';\n  /** 创建 hook */\n\n  NsMoveNode.createHook = () => {\n    return new HookHub();\n  };\n})(NsMoveNode || (NsMoveNode = {}));\n\nlet MoveNodeCommand =\n/** 创建节点命令 */\nclass MoveNodeCommand {\n  constructor() {\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n      const {\n        args,\n        hooks: runtimeHook\n      } = ctx.getArgs();\n      const hooks = ctx.getHooks();\n      const result = yield hooks.moveNode.call(args, handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const {\n          nodePositionService\n        } = handlerArgs;\n        /** nodePositionService 返回false时不更新position */\n\n        if (nodePositionService) {\n          const canDel = yield nodePositionService(handlerArgs);\n          if (!canDel) return {\n            err: 'service rejected'\n          };\n        }\n\n        const {\n          dx = 0,\n          dy = 0,\n          x,\n          y,\n          duration = 150\n        } = handlerArgs.position;\n        const x6Graph = yield ctx.getX6Graph();\n        const node = x6Graph.getCellById(handlerArgs.id);\n\n        if (node) {\n          let nextX = x;\n          let nextY = y;\n          const {\n            x: preX,\n            y: preY\n          } = node.position();\n\n          let undo = () => {\n            node.position(preX, preY, {\n              silent: false\n            });\n          };\n\n          if (dx || dy) {\n            nextX = dx + preX;\n            nextY = dy + preY;\n            node.translate(dx, dy, {\n              transition: {\n                duration\n              }\n            });\n\n            undo = () => node.translate(-dx, -dy, {\n              transition: {\n                duration\n              }\n            });\n          } else {\n            node.position(nextX, nextY, {\n              silent: false\n            });\n          }\n          /** add undo  */\n\n\n          ctx.addUndo(Disposable.create(() => {\n            undo();\n          }));\n          return {\n            err: null,\n            nextX,\n            nextY\n          };\n        }\n      }), runtimeHook);\n      ctx.setResult(result);\n      return this;\n    });\n    /** undo cmd */\n\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n\n      if (this.isUndoable()) {\n        ctx.undo();\n      }\n\n      return this;\n    });\n    /** redo cmd */\n\n\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.isUndoable()) {\n        yield this.execute();\n      }\n\n      return this;\n    });\n  }\n\n  isUndoable() {\n    const ctx = this.contextProvider();\n    return ctx.isUndoable();\n  }\n\n};\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], MoveNodeCommand.prototype, \"contextProvider\", void 0);\n\nMoveNodeCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsMoveNode.command.id\n  }\n})\n/** 创建节点命令 */\n], MoveNodeCommand);\nexport { MoveNodeCommand };","map":{"version":3,"sources":["../../../src/command-contributions/node/node-move.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { HookHub } from '@antv/xflow-hook';\nimport { XFlowNodeCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nexport var NsMoveNode;\n(function (NsMoveNode) {\n    /** Command: 用于注册named factory */\n    NsMoveNode.command = XFlowNodeCommands.MOVE_NODE;\n    /** hookName */\n    NsMoveNode.hookKey = 'moveNode';\n    /** 创建 hook */\n    NsMoveNode.createHook = () => {\n        return new HookHub();\n    };\n})(NsMoveNode || (NsMoveNode = {}));\nlet MoveNodeCommand = \n/** 创建节点命令 */\nclass MoveNodeCommand {\n    constructor() {\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            const { args, hooks: runtimeHook } = ctx.getArgs();\n            const hooks = ctx.getHooks();\n            const result = yield hooks.moveNode.call(args, (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                const { nodePositionService } = handlerArgs;\n                /** nodePositionService 返回false时不更新position */\n                if (nodePositionService) {\n                    const canDel = yield nodePositionService(handlerArgs);\n                    if (!canDel)\n                        return { err: 'service rejected' };\n                }\n                const { dx = 0, dy = 0, x, y, duration = 150 } = handlerArgs.position;\n                const x6Graph = yield ctx.getX6Graph();\n                const node = x6Graph.getCellById(handlerArgs.id);\n                if (node) {\n                    let nextX = x;\n                    let nextY = y;\n                    const { x: preX, y: preY } = node.position();\n                    let undo = () => {\n                        node.position(preX, preY, { silent: false });\n                    };\n                    if (dx || dy) {\n                        nextX = dx + preX;\n                        nextY = dy + preY;\n                        node.translate(dx, dy, { transition: { duration } });\n                        undo = () => node.translate(-dx, -dy, { transition: { duration } });\n                    }\n                    else {\n                        node.position(nextX, nextY, { silent: false });\n                    }\n                    /** add undo  */\n                    ctx.addUndo(Disposable.create(() => {\n                        undo();\n                    }));\n                    return { err: null, nextX, nextY };\n                }\n            }), runtimeHook);\n            ctx.setResult(result);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            if (this.isUndoable()) {\n                ctx.undo();\n            }\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.isUndoable()) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    isUndoable() {\n        const ctx = this.contextProvider();\n        return ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], MoveNodeCommand.prototype, \"contextProvider\", void 0);\nMoveNodeCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsMoveNode.command.id },\n    })\n    /** 创建节点命令 */\n], MoveNodeCommand);\nexport { MoveNodeCommand };\n//# sourceMappingURL=node-move.js.map"]},"metadata":{},"sourceType":"module"}