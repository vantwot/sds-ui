{"ast":null,"code":"import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\nexport const DatetimePicker = props => {\n  const {\n    className,\n    style,\n    disabled,\n    value,\n    onChange\n  } = props;\n  const [innerValue, setInnerValue] = useState(value ? moment(value) : undefined);\n  const mountedRef = useRef(false);\n  useEffect(() => {\n    if (!mountedRef.current) {\n      mountedRef.current = true;\n      return;\n    }\n\n    const valueMoment = moment(value);\n\n    if (valueMoment.isValid()) {\n      setInnerValue(valueMoment);\n    }\n  }, [value]);\n  const onChangeMoment = useCallback((_, dateString) => {\n    const nextMoment = moment(dateString);\n    setInnerValue(nextMoment.isValid() ? nextMoment : undefined);\n\n    if (typeof onChange === 'function') {\n      onChange(nextMoment.isValid() ? nextMoment.format('YYYY-MM-DD HH:mm:ss') : '');\n    }\n  }, [onChange]);\n  return React.createElement(DatePicker, {\n    showTime: true,\n    allowClear: true,\n    className: className,\n    style: style,\n    disabled: disabled,\n    value: innerValue,\n    onChange: onChangeMoment\n  });\n};","map":{"version":3,"sources":["../../../../../src/canvas-json-schema-form/schema-form/control-map/datetime/datetime-picker.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,IAAgB,SAAhB,EAA2B,MAA3B,EAAmC,QAAnC,EAA6C,WAA7C,QAAgE,OAAhE;AACA,SAAS,UAAT,QAA2B,MAA3B;AACA,OAAO,MAAP,MAAmB,QAAnB;AAUA,OAAO,MAAM,cAAc,GAAoB,KAAK,IAAG;AACrD,QAAM;AAAE,IAAA,SAAF;AAAa,IAAA,KAAb;AAAoB,IAAA,QAApB;AAA8B,IAAA,KAA9B;AAAqC,IAAA;AAArC,MAAkD,KAAxD;AACA,QAAM,CAAC,UAAD,EAAa,aAAb,IAA8B,QAAQ,CAC1C,KAAK,GAAG,MAAM,CAAC,KAAD,CAAT,GAAmB,SADkB,CAA5C;AAGA,QAAM,UAAU,GAAG,MAAM,CAAU,KAAV,CAAzB;AAEA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,CAAC,UAAU,CAAC,OAAhB,EAAyB;AACvB,MAAA,UAAU,CAAC,OAAX,GAAqB,IAArB;AACA;AACD;;AACD,UAAM,WAAW,GAAG,MAAM,CAAC,KAAD,CAA1B;;AACA,QAAI,WAAW,CAAC,OAAZ,EAAJ,EAA2B;AACzB,MAAA,aAAa,CAAC,WAAD,CAAb;AACD;AACF,GATQ,EASN,CAAC,KAAD,CATM,CAAT;AAWA,QAAM,cAAc,GAAG,WAAW,CAChC,CAAC,CAAD,EAAS,UAAT,KAA+B;AAC7B,UAAM,UAAU,GAAG,MAAM,CAAC,UAAD,CAAzB;AACA,IAAA,aAAa,CAAC,UAAU,CAAC,OAAX,KAAuB,UAAvB,GAAoC,SAArC,CAAb;;AACA,QAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAClC,MAAA,QAAQ,CAAC,UAAU,CAAC,OAAX,KAAuB,UAAU,CAAC,MAAX,CAAkB,qBAAlB,CAAvB,GAAkE,EAAnE,CAAR;AACD;AACF,GAP+B,EAQhC,CAAC,QAAD,CARgC,CAAlC;AAWA,SACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,QAAQ,EAAA,IADC;AAET,IAAA,UAAU,EAAA,IAFD;AAGT,IAAA,SAAS,EAAE,SAHF;AAIT,IAAA,KAAK,EAAE,KAJE;AAKT,IAAA,QAAQ,EAAE,QALD;AAMT,IAAA,KAAK,EAAE,UANE;AAOT,IAAA,QAAQ,EAAE;AAPD,GAAX,CADF;AAWD,CAxCM","sourceRoot":"","sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\nexport const DatetimePicker = props => {\n    const { className, style, disabled, value, onChange } = props;\n    const [innerValue, setInnerValue] = useState(value ? moment(value) : undefined);\n    const mountedRef = useRef(false);\n    useEffect(() => {\n        if (!mountedRef.current) {\n            mountedRef.current = true;\n            return;\n        }\n        const valueMoment = moment(value);\n        if (valueMoment.isValid()) {\n            setInnerValue(valueMoment);\n        }\n    }, [value]);\n    const onChangeMoment = useCallback((_, dateString) => {\n        const nextMoment = moment(dateString);\n        setInnerValue(nextMoment.isValid() ? nextMoment : undefined);\n        if (typeof onChange === 'function') {\n            onChange(nextMoment.isValid() ? nextMoment.format('YYYY-MM-DD HH:mm:ss') : '');\n        }\n    }, [onChange]);\n    return (React.createElement(DatePicker, { showTime: true, allowClear: true, className: className, style: style, disabled: disabled, value: innerValue, onChange: onChangeMoment }));\n};\n//# sourceMappingURL=datetime-picker.js.map"]},"metadata":{},"sourceType":"module"}