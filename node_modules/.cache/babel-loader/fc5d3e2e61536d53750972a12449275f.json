{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { FunctionExt, ObjectExt } from '../util';\nimport { Model } from '../model/model';\nimport { CellView } from '../view/cell';\nimport { NodeView } from '../view/node';\nimport { EdgeView } from '../view/edge';\nimport { Knob } from '../addon/knob';\nimport { MiniMap } from '../addon/minimap';\nimport { Snapline } from '../addon/snapline';\nimport { Scroller } from '../addon/scroller';\nimport { Selection } from '../addon/selection';\nimport { Clipboard } from '../addon/clipboard';\nimport { Transform } from '../addon/transform';\nimport { HTML } from '../shape/standard/html';\nimport { Edge as StandardEdge } from '../shape/standard/edge';\nimport { Base } from './base';\nimport { Options } from './options';\nimport { Renderer } from './renderer';\nimport { GraphView } from './view';\nimport { DefsManager } from './defs';\nimport { GridManager } from './grid';\nimport { CoordManager } from './coord';\nimport { SnaplineManager } from './snapline';\nimport { ScrollerManager } from './scroller';\nimport { ClipboardManager } from './clipboard';\nimport { HighlightManager } from './highlight';\nimport { TransformManager } from './transform';\nimport { SelectionManager } from './selection';\nimport { BackgroundManager } from './background';\nimport { HistoryManager } from './history';\nimport { MiniMapManager } from './minimap';\nimport { Keyboard } from './keyboard';\nimport { MouseWheel } from './mousewheel';\nimport { PrintManager } from './print';\nimport { FormatManager } from './format';\nimport { KnobManager } from './knob';\nimport { PanningManager } from './panning';\nimport { SizeManager } from './size';\nvar Decorator;\n\n(function (Decorator) {\n  function hook(nullable, hookName) {\n    return function (target, methodName, descriptor) {\n      var raw = descriptor.value;\n      var name = hookName || methodName;\n\n      descriptor.value = function () {\n        var hook = this.options[name];\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (hook != null) {\n          this.getNativeValue = raw.bind.apply(raw, [this].concat(args));\n          var ret = FunctionExt.call.apply(FunctionExt, [hook, this.graph].concat(args));\n          this.getNativeValue = null;\n\n          if (ret != null || nullable === true && ret === null) {\n            return ret;\n          }\n        }\n\n        return raw.call.apply(raw, [this].concat(args));\n      };\n    };\n  }\n\n  Decorator.hook = hook;\n\n  function after(hookName) {\n    return function (target, methodName, descriptor) {\n      var raw = descriptor.value;\n      var name = hookName || methodName;\n\n      descriptor.value = function () {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        var ret = raw.call.apply(raw, [this].concat(args));\n        var hook = this.options[name];\n\n        if (hook != null) {\n          ret = FunctionExt.call.apply(FunctionExt, [hook, this.graph].concat(args)) && ret;\n        }\n\n        return ret;\n      };\n    };\n  }\n\n  Decorator.after = after;\n})(Decorator || (Decorator = {}));\n\nexport var Hook = /*#__PURE__*/function (_Base) {\n  _inherits(Hook, _Base);\n\n  var _super = _createSuper(Hook);\n\n  function Hook() {\n    _classCallCheck(this, Hook);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Hook, [{\n    key: \"createModel\",\n    value: function createModel() {\n      if (this.options.model) {\n        return this.options.model;\n      }\n\n      var model = new Model();\n      model.graph = this.graph;\n      return model;\n    }\n  }, {\n    key: \"createView\",\n    value: function createView() {\n      return new GraphView(this.graph);\n    }\n  }, {\n    key: \"createRenderer\",\n    value: function createRenderer() {\n      return new Renderer(this.graph);\n    }\n  }, {\n    key: \"createDefsManager\",\n    value: function createDefsManager() {\n      return new DefsManager(this.graph);\n    }\n  }, {\n    key: \"createGridManager\",\n    value: function createGridManager() {\n      return new GridManager(this.graph);\n    }\n  }, {\n    key: \"createCoordManager\",\n    value: function createCoordManager() {\n      return new CoordManager(this.graph);\n    }\n  }, {\n    key: \"createKnobManager\",\n    value: function createKnobManager() {\n      return new KnobManager(this.graph);\n    }\n  }, {\n    key: \"createTransform\",\n    value: function createTransform(node, widgetOptions) {\n      var options = this.getTransformOptions(node);\n\n      if (options.resizable || options.rotatable) {\n        return new Transform(Object.assign(Object.assign({\n          node: node,\n          graph: this.graph\n        }, options), widgetOptions));\n      }\n\n      if (options.clearAll) {\n        Transform.removeInstances(this.graph);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"createKnob\",\n    value: function createKnob(node, widgetOptions) {\n      var _this = this;\n\n      var options = Options.parseOptionGroup(this.graph, node, this.options.knob);\n      var localOptions = Object.assign(Object.assign({}, options), widgetOptions);\n\n      if (localOptions.clearAll) {\n        Knob.removeInstances(this.graph);\n      }\n\n      localOptions.clearAll = false;\n      var knob = node.prop('knob');\n      var widgets = [];\n      var meta = Array.isArray(knob) ? knob : [knob];\n      meta.forEach(function (knob, index) {\n        if (knob) {\n          if (knob.enabled === false) {\n            return;\n          }\n\n          if (typeof knob.enabled === 'function' && knob.enabled.call(_this.graph, node) === false) {\n            return;\n          }\n        } else {\n          return;\n        }\n\n        if (options.enabled) {\n          widgets.push(new Knob(Object.assign({\n            node: node,\n            index: index,\n            graph: _this.graph\n          }, localOptions)));\n        }\n      });\n      return widgets;\n    }\n  }, {\n    key: \"getTransformOptions\",\n    value: function getTransformOptions(node) {\n      var resizing = Options.parseOptionGroup(this.graph, node, this.options.resizing);\n      var rotating = Options.parseOptionGroup(this.graph, node, this.options.rotating);\n      var transforming = Options.parseOptionGroup(this.graph, node, this.options.transforming);\n      var options = Object.assign(Object.assign({}, transforming), {\n        resizable: resizing.enabled,\n        minWidth: resizing.minWidth,\n        maxWidth: resizing.maxWidth,\n        minHeight: resizing.minHeight,\n        maxHeight: resizing.maxHeight,\n        orthogonalResizing: resizing.orthogonal,\n        restrictedResizing: resizing.restrict != null ? resizing.restrict : resizing.restricted,\n        autoScrollOnResizing: resizing.autoScroll,\n        preserveAspectRatio: resizing.preserveAspectRatio,\n        allowReverse: resizing.allowReverse,\n        rotatable: rotating.enabled,\n        rotateGrid: rotating.grid\n      });\n      return options;\n    }\n  }, {\n    key: \"createTransformManager\",\n    value: function createTransformManager() {\n      return new TransformManager(this.graph);\n    }\n  }, {\n    key: \"createHighlightManager\",\n    value: function createHighlightManager() {\n      return new HighlightManager(this.graph);\n    }\n  }, {\n    key: \"createBackgroundManager\",\n    value: function createBackgroundManager() {\n      return new BackgroundManager(this.graph);\n    }\n  }, {\n    key: \"createClipboard\",\n    value: function createClipboard() {\n      return new Clipboard();\n    }\n  }, {\n    key: \"createClipboardManager\",\n    value: function createClipboardManager() {\n      return new ClipboardManager(this.graph);\n    }\n  }, {\n    key: \"createSnapline\",\n    value: function createSnapline() {\n      return new Snapline(Object.assign({\n        graph: this.graph\n      }, this.options.snapline));\n    }\n  }, {\n    key: \"createSnaplineManager\",\n    value: function createSnaplineManager() {\n      return new SnaplineManager(this.graph);\n    }\n  }, {\n    key: \"createSelection\",\n    value: function createSelection() {\n      return new Selection(Object.assign({\n        graph: this.graph\n      }, this.options.selecting));\n    }\n  }, {\n    key: \"createSelectionManager\",\n    value: function createSelectionManager() {\n      return new SelectionManager(this.graph);\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"allowRubberband\",\n    value: function allowRubberband(e) {\n      return true;\n    }\n  }, {\n    key: \"createHistoryManager\",\n    value: function createHistoryManager() {\n      return new HistoryManager(Object.assign({\n        graph: this.graph\n      }, this.options.history));\n    }\n  }, {\n    key: \"createScroller\",\n    value: function createScroller() {\n      if (this.options.scroller.enabled) {\n        return new Scroller(Object.assign({\n          graph: this.graph\n        }, this.options.scroller));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"createScrollerManager\",\n    value: function createScrollerManager() {\n      return new ScrollerManager(this.graph);\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"allowPanning\",\n    value: function allowPanning(e) {\n      return true;\n    }\n  }, {\n    key: \"createMiniMap\",\n    value: function createMiniMap() {\n      var _a = this.options.minimap,\n          enabled = _a.enabled,\n          options = __rest(_a, [\"enabled\"]);\n\n      if (enabled) {\n        return new MiniMap(Object.assign({\n          graph: this.graph\n        }, options));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"createMiniMapManager\",\n    value: function createMiniMapManager() {\n      return new MiniMapManager(this.graph);\n    }\n  }, {\n    key: \"createKeyboard\",\n    value: function createKeyboard() {\n      return new Keyboard(Object.assign({\n        graph: this.graph\n      }, this.options.keyboard));\n    }\n  }, {\n    key: \"createMouseWheel\",\n    value: function createMouseWheel() {\n      return new MouseWheel(Object.assign({\n        graph: this.graph\n      }, this.options.mousewheel));\n    }\n  }, {\n    key: \"createPrintManager\",\n    value: function createPrintManager() {\n      return new PrintManager(this.graph);\n    }\n  }, {\n    key: \"createFormatManager\",\n    value: function createFormatManager() {\n      return new FormatManager(this.graph);\n    }\n  }, {\n    key: \"createPanningManager\",\n    value: function createPanningManager() {\n      return new PanningManager(this.graph);\n    }\n  }, {\n    key: \"createSizeManager\",\n    value: function createSizeManager() {\n      return new SizeManager(this.graph);\n    }\n  }, {\n    key: \"allowConnectToBlank\",\n    value: function allowConnectToBlank(edge) {\n      var options = this.options.connecting;\n      var allowBlank = options.allowBlank != null ? options.allowBlank : options.dangling;\n\n      if (typeof allowBlank !== 'function') {\n        return !!allowBlank;\n      }\n\n      var edgeView = this.graph.findViewByCell(edge);\n      var sourceCell = edge.getSourceCell();\n      var targetCell = edge.getTargetCell();\n      var sourceView = this.graph.findViewByCell(sourceCell);\n      var targetView = this.graph.findViewByCell(targetCell);\n      return FunctionExt.call(allowBlank, this.graph, {\n        edge: edge,\n        edgeView: edgeView,\n        sourceCell: sourceCell,\n        targetCell: targetCell,\n        sourceView: sourceView,\n        targetView: targetView,\n        sourcePort: edge.getSourcePortId(),\n        targetPort: edge.getTargetPortId(),\n        sourceMagnet: edgeView.sourceMagnet,\n        targetMagnet: edgeView.targetMagnet\n      });\n    }\n  }, {\n    key: \"validateEdge\",\n    value: function validateEdge(edge, type, initialTerminal) {\n      if (!this.allowConnectToBlank(edge)) {\n        var sourceId = edge.getSourceCellId();\n        var targetId = edge.getTargetCellId();\n\n        if (!(sourceId && targetId)) {\n          return false;\n        }\n      }\n\n      var validate = this.options.connecting.validateEdge;\n\n      if (validate) {\n        return FunctionExt.call(validate, this.graph, {\n          edge: edge,\n          type: type,\n          previous: initialTerminal\n        });\n      }\n\n      return true;\n    }\n  }, {\n    key: \"validateMagnet\",\n    value: function validateMagnet(cellView, magnet, e) {\n      if (magnet.getAttribute('magnet') !== 'passive') {\n        var validate = this.options.connecting.validateMagnet;\n\n        if (validate) {\n          return FunctionExt.call(validate, this.graph, {\n            e: e,\n            magnet: magnet,\n            view: cellView,\n            cell: cellView.cell\n          });\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getDefaultEdge\",\n    value: function getDefaultEdge(sourceView, sourceMagnet) {\n      var edge;\n      var create = this.options.connecting.createEdge;\n\n      if (create) {\n        edge = FunctionExt.call(create, this.graph, {\n          sourceMagnet: sourceMagnet,\n          sourceView: sourceView,\n          sourceCell: sourceView.cell\n        });\n      }\n\n      if (edge == null) {\n        edge = new StandardEdge();\n      }\n\n      return edge;\n    }\n  }, {\n    key: \"validateConnection\",\n    value: function validateConnection(sourceView, sourceMagnet, targetView, targetMagnet, terminalType, edgeView, candidateTerminal) {\n      var _this2 = this;\n\n      var options = this.options.connecting;\n      var allowLoop = options.allowLoop;\n      var allowNode = options.allowNode;\n      var allowEdge = options.allowEdge;\n      var allowPort = options.allowPort;\n      var allowMulti = options.allowMulti != null ? options.allowMulti : options.multi;\n      var validate = options.validateConnection;\n      var edge = edgeView ? edgeView.cell : null;\n      var terminalView = terminalType === 'target' ? targetView : sourceView;\n      var terminalMagnet = terminalType === 'target' ? targetMagnet : sourceMagnet;\n      var valid = true;\n\n      var doValidate = function doValidate(validate) {\n        var sourcePort = terminalType === 'source' ? candidateTerminal ? candidateTerminal.port : null : edge ? edge.getSourcePortId() : null;\n        var targetPort = terminalType === 'target' ? candidateTerminal ? candidateTerminal.port : null : edge ? edge.getTargetPortId() : null;\n        return FunctionExt.call(validate, _this2.graph, {\n          edge: edge,\n          edgeView: edgeView,\n          sourceView: sourceView,\n          targetView: targetView,\n          sourcePort: sourcePort,\n          targetPort: targetPort,\n          sourceMagnet: sourceMagnet,\n          targetMagnet: targetMagnet,\n          sourceCell: sourceView ? sourceView.cell : null,\n          targetCell: targetView ? targetView.cell : null,\n          type: terminalType\n        });\n      };\n\n      if (allowLoop != null) {\n        if (typeof allowLoop === 'boolean') {\n          if (!allowLoop && sourceView === targetView) {\n            valid = false;\n          }\n        } else {\n          valid = doValidate(allowLoop);\n        }\n      }\n\n      if (valid && allowPort != null) {\n        if (typeof allowPort === 'boolean') {\n          if (!allowPort && terminalMagnet) {\n            valid = false;\n          }\n        } else {\n          valid = doValidate(allowPort);\n        }\n      }\n\n      if (valid && allowEdge != null) {\n        if (typeof allowEdge === 'boolean') {\n          if (!allowEdge && EdgeView.isEdgeView(terminalView)) {\n            valid = false;\n          }\n        } else {\n          valid = doValidate(allowEdge);\n        }\n      }\n\n      if (valid && allowNode != null) {\n        if (typeof allowNode === 'boolean') {\n          if (!allowNode && terminalView != null) {\n            if (NodeView.isNodeView(terminalView) && terminalMagnet == null) {\n              valid = false;\n            }\n          }\n        } else {\n          valid = doValidate(allowNode);\n        }\n      }\n\n      if (valid && allowMulti != null && edgeView) {\n        var _edge = edgeView.cell;\n        var source = terminalType === 'source' ? candidateTerminal : _edge.getSource();\n        var target = terminalType === 'target' ? candidateTerminal : _edge.getTarget();\n        var terminalCell = candidateTerminal ? this.graph.getCellById(candidateTerminal.cell) : null;\n\n        if (source && target && source.cell && target.cell && terminalCell) {\n          if (typeof allowMulti === 'function') {\n            valid = doValidate(allowMulti);\n          } else {\n            var connectedEdges = this.model.getConnectedEdges(terminalCell, {\n              outgoing: terminalType === 'source',\n              incoming: terminalType === 'target'\n            });\n\n            if (connectedEdges.length) {\n              if (allowMulti === 'withPort') {\n                var exist = connectedEdges.some(function (link) {\n                  var s = link.getSource();\n                  var t = link.getTarget();\n                  return s && t && s.cell === source.cell && t.cell === target.cell && s.port != null && s.port === source.port && t.port != null && t.port === target.port;\n                });\n\n                if (exist) {\n                  valid = false;\n                }\n              } else if (!allowMulti) {\n                var _exist = connectedEdges.some(function (link) {\n                  var s = link.getSource();\n                  var t = link.getTarget();\n                  return s && t && s.cell === source.cell && t.cell === target.cell;\n                });\n\n                if (_exist) {\n                  valid = false;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (valid && validate != null) {\n        valid = doValidate(validate);\n      }\n\n      return valid;\n    }\n  }, {\n    key: \"getRestrictArea\",\n    value: function getRestrictArea(view) {\n      var restrict = this.options.translating.restrict;\n      var area = typeof restrict === 'function' ? FunctionExt.call(restrict, this.graph, view) : restrict;\n\n      if (typeof area === 'number') {\n        return this.graph.transform.getGraphArea().inflate(area);\n      }\n\n      if (area === true) {\n        return this.graph.transform.getGraphArea();\n      }\n\n      return area || null;\n    }\n  }, {\n    key: \"onViewUpdated\",\n    value: function onViewUpdated(view, flag, options) {\n      if (flag & Renderer.FLAG_INSERT || options.mounting) {\n        return;\n      }\n\n      this.graph.renderer.requestConnectedEdgesUpdate(view, options);\n    }\n  }, {\n    key: \"onViewPostponed\",\n    value: function onViewPostponed(view, flag, options) {\n      return this.graph.renderer.forcePostponedViewUpdate(view, flag);\n    }\n  }, {\n    key: \"getCellView\",\n    value: function getCellView(cell) {\n      return null;\n    }\n  }, {\n    key: \"createCellView\",\n    value: function createCellView(cell) {\n      var options = {\n        graph: this.graph\n      };\n      var ctor = this.getCellView(cell);\n\n      if (ctor) {\n        return new ctor(cell, options); // eslint-disable-line new-cap\n      }\n\n      var view = cell.view;\n\n      if (view != null && typeof view === 'string') {\n        var def = CellView.registry.get(view);\n\n        if (def) {\n          return new def(cell, options); // eslint-disable-line new-cap\n        }\n\n        return CellView.registry.onNotFound(view);\n      }\n\n      if (cell.isNode()) {\n        return new NodeView(cell, options);\n      }\n\n      if (cell.isEdge()) {\n        return new EdgeView(cell, options);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getHTMLComponent\",\n    value: function getHTMLComponent(node) {\n      var ret = node.getHTML();\n\n      if (typeof ret === 'string') {\n        ret = HTML.componentRegistry.get(ret) || ret;\n      }\n\n      if (ObjectExt.isPlainObject(ret)) {\n        ret = ret.render;\n      }\n\n      if (typeof ret === 'function') {\n        return FunctionExt.call(ret, this.graph, node);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"shouldUpdateHTMLComponent\",\n    value: function shouldUpdateHTMLComponent(node) {\n      var html = node.getHTML();\n\n      if (typeof html === 'string') {\n        html = HTML.componentRegistry.get(html) || html;\n      }\n\n      if (ObjectExt.isPlainObject(html)) {\n        var shouldUpdate = html.shouldComponentUpdate;\n\n        if (typeof shouldUpdate === 'function') {\n          return FunctionExt.call(shouldUpdate, this.graph, node);\n        }\n\n        return !!shouldUpdate;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"onEdgeLabelRendered\",\n    value: function onEdgeLabelRendered(args) {} // eslint-disable-line\n\n  }, {\n    key: \"onPortRendered\",\n    value: function onPortRendered(args) {} // eslint-disable-line\n\n  }, {\n    key: \"onToolItemCreated\",\n    value: function onToolItemCreated(args) {} // eslint-disable-line\n\n  }]);\n\n  return Hook;\n}(Base);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createModel\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createView\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createRenderer\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createDefsManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createGridManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createCoordManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createKnobManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createTransform\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createKnob\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createTransformManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createHighlightManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createBackgroundManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createClipboard\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createClipboardManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createSnapline\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createSnaplineManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createSelection\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createSelectionManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"allowRubberband\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createHistoryManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createScroller\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createScrollerManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"allowPanning\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createMiniMap\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createMiniMapManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createKeyboard\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createMouseWheel\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createPrintManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createFormatManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createPanningManager\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"createSizeManager\", null);\n\n__decorate([Decorator.after()], Hook.prototype, \"onViewUpdated\", null);\n\n__decorate([Decorator.after()], Hook.prototype, \"onViewPostponed\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"getCellView\", null);\n\n__decorate([Decorator.hook(true)], Hook.prototype, \"createCellView\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"getHTMLComponent\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"shouldUpdateHTMLComponent\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"onEdgeLabelRendered\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"onPortRendered\", null);\n\n__decorate([Decorator.hook()], Hook.prototype, \"onToolItemCreated\", null);","map":{"version":3,"sources":["../../src/graph/hook.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { FunctionExt, ObjectExt } from '../util';\nimport { Model } from '../model/model';\nimport { CellView } from '../view/cell';\nimport { NodeView } from '../view/node';\nimport { EdgeView } from '../view/edge';\nimport { Knob } from '../addon/knob';\nimport { MiniMap } from '../addon/minimap';\nimport { Snapline } from '../addon/snapline';\nimport { Scroller } from '../addon/scroller';\nimport { Selection } from '../addon/selection';\nimport { Clipboard } from '../addon/clipboard';\nimport { Transform } from '../addon/transform';\nimport { HTML } from '../shape/standard/html';\nimport { Edge as StandardEdge } from '../shape/standard/edge';\nimport { Base } from './base';\nimport { Options } from './options';\nimport { Renderer } from './renderer';\nimport { GraphView } from './view';\nimport { DefsManager } from './defs';\nimport { GridManager } from './grid';\nimport { CoordManager } from './coord';\nimport { SnaplineManager } from './snapline';\nimport { ScrollerManager } from './scroller';\nimport { ClipboardManager } from './clipboard';\nimport { HighlightManager } from './highlight';\nimport { TransformManager } from './transform';\nimport { SelectionManager } from './selection';\nimport { BackgroundManager } from './background';\nimport { HistoryManager } from './history';\nimport { MiniMapManager } from './minimap';\nimport { Keyboard } from './keyboard';\nimport { MouseWheel } from './mousewheel';\nimport { PrintManager } from './print';\nimport { FormatManager } from './format';\nimport { KnobManager } from './knob';\nimport { PanningManager } from './panning';\nimport { SizeManager } from './size';\nvar Decorator;\n(function (Decorator) {\n    function hook(nullable, hookName) {\n        return (target, methodName, descriptor) => {\n            const raw = descriptor.value;\n            const name = hookName || methodName;\n            descriptor.value = function (...args) {\n                const hook = this.options[name];\n                if (hook != null) {\n                    this.getNativeValue = raw.bind(this, ...args);\n                    const ret = FunctionExt.call(hook, this.graph, ...args);\n                    this.getNativeValue = null;\n                    if (ret != null || (nullable === true && ret === null)) {\n                        return ret;\n                    }\n                }\n                return raw.call(this, ...args);\n            };\n        };\n    }\n    Decorator.hook = hook;\n    function after(hookName) {\n        return (target, methodName, descriptor) => {\n            const raw = descriptor.value;\n            const name = hookName || methodName;\n            descriptor.value = function (...args) {\n                let ret = raw.call(this, ...args);\n                const hook = this.options[name];\n                if (hook != null) {\n                    ret = FunctionExt.call(hook, this.graph, ...args) && ret;\n                }\n                return ret;\n            };\n        };\n    }\n    Decorator.after = after;\n})(Decorator || (Decorator = {}));\nexport class Hook extends Base {\n    createModel() {\n        if (this.options.model) {\n            return this.options.model;\n        }\n        const model = new Model();\n        model.graph = this.graph;\n        return model;\n    }\n    createView() {\n        return new GraphView(this.graph);\n    }\n    createRenderer() {\n        return new Renderer(this.graph);\n    }\n    createDefsManager() {\n        return new DefsManager(this.graph);\n    }\n    createGridManager() {\n        return new GridManager(this.graph);\n    }\n    createCoordManager() {\n        return new CoordManager(this.graph);\n    }\n    createKnobManager() {\n        return new KnobManager(this.graph);\n    }\n    createTransform(node, widgetOptions) {\n        const options = this.getTransformOptions(node);\n        if (options.resizable || options.rotatable) {\n            return new Transform(Object.assign(Object.assign({ node, graph: this.graph }, options), widgetOptions));\n        }\n        if (options.clearAll) {\n            Transform.removeInstances(this.graph);\n        }\n        return null;\n    }\n    createKnob(node, widgetOptions) {\n        const options = Options.parseOptionGroup(this.graph, node, this.options.knob);\n        const localOptions = Object.assign(Object.assign({}, options), widgetOptions);\n        if (localOptions.clearAll) {\n            Knob.removeInstances(this.graph);\n        }\n        localOptions.clearAll = false;\n        const knob = node.prop('knob');\n        const widgets = [];\n        const meta = Array.isArray(knob) ? knob : [knob];\n        meta.forEach((knob, index) => {\n            if (knob) {\n                if (knob.enabled === false) {\n                    return;\n                }\n                if (typeof knob.enabled === 'function' &&\n                    knob.enabled.call(this.graph, node) === false) {\n                    return;\n                }\n            }\n            else {\n                return;\n            }\n            if (options.enabled) {\n                widgets.push(new Knob(Object.assign({ node,\n                    index, graph: this.graph }, localOptions)));\n            }\n        });\n        return widgets;\n    }\n    getTransformOptions(node) {\n        const resizing = Options.parseOptionGroup(this.graph, node, this.options.resizing);\n        const rotating = Options.parseOptionGroup(this.graph, node, this.options.rotating);\n        const transforming = Options.parseOptionGroup(this.graph, node, this.options.transforming);\n        const options = Object.assign(Object.assign({}, transforming), { resizable: resizing.enabled, minWidth: resizing.minWidth, maxWidth: resizing.maxWidth, minHeight: resizing.minHeight, maxHeight: resizing.maxHeight, orthogonalResizing: resizing.orthogonal, restrictedResizing: resizing.restrict != null ? resizing.restrict : resizing.restricted, autoScrollOnResizing: resizing.autoScroll, preserveAspectRatio: resizing.preserveAspectRatio, allowReverse: resizing.allowReverse, rotatable: rotating.enabled, rotateGrid: rotating.grid });\n        return options;\n    }\n    createTransformManager() {\n        return new TransformManager(this.graph);\n    }\n    createHighlightManager() {\n        return new HighlightManager(this.graph);\n    }\n    createBackgroundManager() {\n        return new BackgroundManager(this.graph);\n    }\n    createClipboard() {\n        return new Clipboard();\n    }\n    createClipboardManager() {\n        return new ClipboardManager(this.graph);\n    }\n    createSnapline() {\n        return new Snapline(Object.assign({ graph: this.graph }, this.options.snapline));\n    }\n    createSnaplineManager() {\n        return new SnaplineManager(this.graph);\n    }\n    createSelection() {\n        return new Selection(Object.assign({ graph: this.graph }, this.options.selecting));\n    }\n    createSelectionManager() {\n        return new SelectionManager(this.graph);\n    }\n    // eslint-disable-next-line\n    allowRubberband(e) {\n        return true;\n    }\n    createHistoryManager() {\n        return new HistoryManager(Object.assign({ graph: this.graph }, this.options.history));\n    }\n    createScroller() {\n        if (this.options.scroller.enabled) {\n            return new Scroller(Object.assign({ graph: this.graph }, this.options.scroller));\n        }\n        return null;\n    }\n    createScrollerManager() {\n        return new ScrollerManager(this.graph);\n    }\n    // eslint-disable-next-line\n    allowPanning(e) {\n        return true;\n    }\n    createMiniMap() {\n        const _a = this.options.minimap, { enabled } = _a, options = __rest(_a, [\"enabled\"]);\n        if (enabled) {\n            return new MiniMap(Object.assign({ graph: this.graph }, options));\n        }\n        return null;\n    }\n    createMiniMapManager() {\n        return new MiniMapManager(this.graph);\n    }\n    createKeyboard() {\n        return new Keyboard(Object.assign({ graph: this.graph }, this.options.keyboard));\n    }\n    createMouseWheel() {\n        return new MouseWheel(Object.assign({ graph: this.graph }, this.options.mousewheel));\n    }\n    createPrintManager() {\n        return new PrintManager(this.graph);\n    }\n    createFormatManager() {\n        return new FormatManager(this.graph);\n    }\n    createPanningManager() {\n        return new PanningManager(this.graph);\n    }\n    createSizeManager() {\n        return new SizeManager(this.graph);\n    }\n    allowConnectToBlank(edge) {\n        const options = this.options.connecting;\n        const allowBlank = options.allowBlank != null ? options.allowBlank : options.dangling;\n        if (typeof allowBlank !== 'function') {\n            return !!allowBlank;\n        }\n        const edgeView = this.graph.findViewByCell(edge);\n        const sourceCell = edge.getSourceCell();\n        const targetCell = edge.getTargetCell();\n        const sourceView = this.graph.findViewByCell(sourceCell);\n        const targetView = this.graph.findViewByCell(targetCell);\n        return FunctionExt.call(allowBlank, this.graph, {\n            edge,\n            edgeView,\n            sourceCell,\n            targetCell,\n            sourceView,\n            targetView,\n            sourcePort: edge.getSourcePortId(),\n            targetPort: edge.getTargetPortId(),\n            sourceMagnet: edgeView.sourceMagnet,\n            targetMagnet: edgeView.targetMagnet,\n        });\n    }\n    validateEdge(edge, type, initialTerminal) {\n        if (!this.allowConnectToBlank(edge)) {\n            const sourceId = edge.getSourceCellId();\n            const targetId = edge.getTargetCellId();\n            if (!(sourceId && targetId)) {\n                return false;\n            }\n        }\n        const validate = this.options.connecting.validateEdge;\n        if (validate) {\n            return FunctionExt.call(validate, this.graph, {\n                edge,\n                type,\n                previous: initialTerminal,\n            });\n        }\n        return true;\n    }\n    validateMagnet(cellView, magnet, e) {\n        if (magnet.getAttribute('magnet') !== 'passive') {\n            const validate = this.options.connecting.validateMagnet;\n            if (validate) {\n                return FunctionExt.call(validate, this.graph, {\n                    e,\n                    magnet,\n                    view: cellView,\n                    cell: cellView.cell,\n                });\n            }\n            return true;\n        }\n        return false;\n    }\n    getDefaultEdge(sourceView, sourceMagnet) {\n        let edge;\n        const create = this.options.connecting.createEdge;\n        if (create) {\n            edge = FunctionExt.call(create, this.graph, {\n                sourceMagnet,\n                sourceView,\n                sourceCell: sourceView.cell,\n            });\n        }\n        if (edge == null) {\n            edge = new StandardEdge();\n        }\n        return edge;\n    }\n    validateConnection(sourceView, sourceMagnet, targetView, targetMagnet, terminalType, edgeView, candidateTerminal) {\n        const options = this.options.connecting;\n        const allowLoop = options.allowLoop;\n        const allowNode = options.allowNode;\n        const allowEdge = options.allowEdge;\n        const allowPort = options.allowPort;\n        const allowMulti = options.allowMulti != null ? options.allowMulti : options.multi;\n        const validate = options.validateConnection;\n        const edge = edgeView ? edgeView.cell : null;\n        const terminalView = terminalType === 'target' ? targetView : sourceView;\n        const terminalMagnet = terminalType === 'target' ? targetMagnet : sourceMagnet;\n        let valid = true;\n        const doValidate = (validate) => {\n            const sourcePort = terminalType === 'source'\n                ? candidateTerminal\n                    ? candidateTerminal.port\n                    : null\n                : edge\n                    ? edge.getSourcePortId()\n                    : null;\n            const targetPort = terminalType === 'target'\n                ? candidateTerminal\n                    ? candidateTerminal.port\n                    : null\n                : edge\n                    ? edge.getTargetPortId()\n                    : null;\n            return FunctionExt.call(validate, this.graph, {\n                edge,\n                edgeView,\n                sourceView,\n                targetView,\n                sourcePort,\n                targetPort,\n                sourceMagnet,\n                targetMagnet,\n                sourceCell: sourceView ? sourceView.cell : null,\n                targetCell: targetView ? targetView.cell : null,\n                type: terminalType,\n            });\n        };\n        if (allowLoop != null) {\n            if (typeof allowLoop === 'boolean') {\n                if (!allowLoop && sourceView === targetView) {\n                    valid = false;\n                }\n            }\n            else {\n                valid = doValidate(allowLoop);\n            }\n        }\n        if (valid && allowPort != null) {\n            if (typeof allowPort === 'boolean') {\n                if (!allowPort && terminalMagnet) {\n                    valid = false;\n                }\n            }\n            else {\n                valid = doValidate(allowPort);\n            }\n        }\n        if (valid && allowEdge != null) {\n            if (typeof allowEdge === 'boolean') {\n                if (!allowEdge && EdgeView.isEdgeView(terminalView)) {\n                    valid = false;\n                }\n            }\n            else {\n                valid = doValidate(allowEdge);\n            }\n        }\n        if (valid && allowNode != null) {\n            if (typeof allowNode === 'boolean') {\n                if (!allowNode && terminalView != null) {\n                    if (NodeView.isNodeView(terminalView) && terminalMagnet == null) {\n                        valid = false;\n                    }\n                }\n            }\n            else {\n                valid = doValidate(allowNode);\n            }\n        }\n        if (valid && allowMulti != null && edgeView) {\n            const edge = edgeView.cell;\n            const source = terminalType === 'source'\n                ? candidateTerminal\n                : edge.getSource();\n            const target = terminalType === 'target'\n                ? candidateTerminal\n                : edge.getTarget();\n            const terminalCell = candidateTerminal\n                ? this.graph.getCellById(candidateTerminal.cell)\n                : null;\n            if (source && target && source.cell && target.cell && terminalCell) {\n                if (typeof allowMulti === 'function') {\n                    valid = doValidate(allowMulti);\n                }\n                else {\n                    const connectedEdges = this.model.getConnectedEdges(terminalCell, {\n                        outgoing: terminalType === 'source',\n                        incoming: terminalType === 'target',\n                    });\n                    if (connectedEdges.length) {\n                        if (allowMulti === 'withPort') {\n                            const exist = connectedEdges.some((link) => {\n                                const s = link.getSource();\n                                const t = link.getTarget();\n                                return (s &&\n                                    t &&\n                                    s.cell === source.cell &&\n                                    t.cell === target.cell &&\n                                    s.port != null &&\n                                    s.port === source.port &&\n                                    t.port != null &&\n                                    t.port === target.port);\n                            });\n                            if (exist) {\n                                valid = false;\n                            }\n                        }\n                        else if (!allowMulti) {\n                            const exist = connectedEdges.some((link) => {\n                                const s = link.getSource();\n                                const t = link.getTarget();\n                                return (s && t && s.cell === source.cell && t.cell === target.cell);\n                            });\n                            if (exist) {\n                                valid = false;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (valid && validate != null) {\n            valid = doValidate(validate);\n        }\n        return valid;\n    }\n    getRestrictArea(view) {\n        const restrict = this.options.translating.restrict;\n        const area = typeof restrict === 'function'\n            ? FunctionExt.call(restrict, this.graph, view)\n            : restrict;\n        if (typeof area === 'number') {\n            return this.graph.transform.getGraphArea().inflate(area);\n        }\n        if (area === true) {\n            return this.graph.transform.getGraphArea();\n        }\n        return area || null;\n    }\n    onViewUpdated(view, flag, options) {\n        if (flag & Renderer.FLAG_INSERT || options.mounting) {\n            return;\n        }\n        this.graph.renderer.requestConnectedEdgesUpdate(view, options);\n    }\n    onViewPostponed(view, flag, options) {\n        return this.graph.renderer.forcePostponedViewUpdate(view, flag);\n    }\n    getCellView(cell) {\n        return null;\n    }\n    createCellView(cell) {\n        const options = { graph: this.graph };\n        const ctor = this.getCellView(cell);\n        if (ctor) {\n            return new ctor(cell, options); // eslint-disable-line new-cap\n        }\n        const view = cell.view;\n        if (view != null && typeof view === 'string') {\n            const def = CellView.registry.get(view);\n            if (def) {\n                return new def(cell, options); // eslint-disable-line new-cap\n            }\n            return CellView.registry.onNotFound(view);\n        }\n        if (cell.isNode()) {\n            return new NodeView(cell, options);\n        }\n        if (cell.isEdge()) {\n            return new EdgeView(cell, options);\n        }\n        return null;\n    }\n    getHTMLComponent(node) {\n        let ret = node.getHTML();\n        if (typeof ret === 'string') {\n            ret = HTML.componentRegistry.get(ret) || ret;\n        }\n        if (ObjectExt.isPlainObject(ret)) {\n            ret = ret.render;\n        }\n        if (typeof ret === 'function') {\n            return FunctionExt.call(ret, this.graph, node);\n        }\n        return ret;\n    }\n    shouldUpdateHTMLComponent(node) {\n        let html = node.getHTML();\n        if (typeof html === 'string') {\n            html = HTML.componentRegistry.get(html) || html;\n        }\n        if (ObjectExt.isPlainObject(html)) {\n            const shouldUpdate = html\n                .shouldComponentUpdate;\n            if (typeof shouldUpdate === 'function') {\n                return FunctionExt.call(shouldUpdate, this.graph, node);\n            }\n            return !!shouldUpdate;\n        }\n        return false;\n    }\n    onEdgeLabelRendered(args) { } // eslint-disable-line\n    onPortRendered(args) { } // eslint-disable-line\n    onToolItemCreated(args) { } // eslint-disable-line\n}\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createModel\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createView\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createRenderer\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createDefsManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createGridManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createCoordManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createKnobManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createTransform\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createKnob\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createTransformManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createHighlightManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createBackgroundManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createClipboard\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createClipboardManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createSnapline\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createSnaplineManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createSelection\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createSelectionManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"allowRubberband\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createHistoryManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createScroller\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createScrollerManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"allowPanning\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createMiniMap\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createMiniMapManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createKeyboard\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createMouseWheel\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createPrintManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createFormatManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createPanningManager\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"createSizeManager\", null);\n__decorate([\n    Decorator.after()\n], Hook.prototype, \"onViewUpdated\", null);\n__decorate([\n    Decorator.after()\n], Hook.prototype, \"onViewPostponed\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"getCellView\", null);\n__decorate([\n    Decorator.hook(true)\n], Hook.prototype, \"createCellView\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"getHTMLComponent\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"shouldUpdateHTMLComponent\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"onEdgeLabelRendered\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"onPortRendered\", null);\n__decorate([\n    Decorator.hook()\n], Hook.prototype, \"onToolItemCreated\", null);\n//# sourceMappingURL=hook.js.map"]},"metadata":{},"sourceType":"module"}