{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { Deferred } from '../common/deferred';\nimport { Disposable } from '../common/disposable';\nexport var NsModelServiceConfig;\n\n(function (NsModelServiceConfig) {\n  NsModelServiceConfig.CONFIG_TYPE = 'MODEL_SERVICE_CONFIG';\n})(NsModelServiceConfig || (NsModelServiceConfig = {}));\n\nconst dispoableNoop = () => Disposable.create(() => {});\n\nexport class ModelServiceConfig {\n  constructor() {\n    /** CONFIG_TYPE */\n    this.CONFIG_TYPE = NsModelServiceConfig.CONFIG_TYPE;\n    /** 外部注册context的方法 */\n\n    this.registerModelFn = dispoableNoop;\n    /** CONFIG_TYPE */\n\n    this.isMounted = new Deferred();\n\n    this.registerModel = registerModel => {\n      this.registerModelFn = registerModel;\n    };\n\n    this.setMountState = () => {\n      this.isMounted.resolve(true);\n    };\n\n    this.getConfig = () => __awaiter(this, void 0, void 0, function* () {\n      yield this.isMounted.promise;\n      return {\n        CONFIG_TYPE: this.CONFIG_TYPE,\n        modelRegisterFunc: this.registerModelFn || dispoableNoop\n      };\n    });\n\n    this.dispose = () => {\n      this.registerModelFn = dispoableNoop;\n      this.isMounted = new Deferred();\n    };\n  }\n\n}","map":{"version":3,"sources":["../../src/model-service/config.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,QAAT,QAAyB,oBAAzB;AACA,SAAS,UAAT,QAA2B,sBAA3B;AAIA,OAAM,IAAW,oBAAX;;AAAN,CAAA,UAAiB,oBAAjB,EAAqC;AACtB,EAAA,oBAAA,CAAA,WAAA,GAAc,sBAAd;AACd,CAFD,EAAiB,oBAAoB,KAApB,oBAAoB,GAAA,EAAA,CAArC;;AAIA,MAAM,aAAa,GAAG,MAAM,UAAU,CAAC,MAAX,CAAkB,MAAK,CAAG,CAA1B,CAA5B;;AAEA,OAAM,MAAO,kBAAP,CAAyB;AAA/B,EAAA,WAAA,GAAA;AACE;AACS,SAAA,WAAA,GAAc,oBAAoB,CAAC,WAAnC;AAET;;AACQ,SAAA,eAAA,GAA2C,aAA3C;AAER;;AACQ,SAAA,SAAA,GAAY,IAAI,QAAJ,EAAZ;;AAER,SAAA,aAAA,GAAiB,aAAD,IAA0C;AACxD,WAAK,eAAL,GAAuB,aAAvB;AACD,KAFD;;AAIA,SAAA,aAAA,GAAgB,MAAK;AACnB,WAAK,SAAL,CAAe,OAAf,CAAuB,IAAvB;AACD,KAFD;;AAIA,SAAA,SAAA,GAAY,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACrB,YAAM,KAAK,SAAL,CAAe,OAArB;AACA,aAAO;AACL,QAAA,WAAW,EAAE,KAAK,WADb;AAEL,QAAA,iBAAiB,EAAE,KAAK,eAAL,IAAwB;AAFtC,OAAP;AAID,KANsB,CAAvB;;AAQA,SAAA,OAAA,GAAU,MAAK;AACb,WAAK,eAAL,GAAuB,aAAvB;AACA,WAAK,SAAL,GAAiB,IAAI,QAAJ,EAAjB;AACD,KAHD;AAID;;AA9B8B","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Deferred } from '../common/deferred';\nimport { Disposable } from '../common/disposable';\nexport var NsModelServiceConfig;\n(function (NsModelServiceConfig) {\n    NsModelServiceConfig.CONFIG_TYPE = 'MODEL_SERVICE_CONFIG';\n})(NsModelServiceConfig || (NsModelServiceConfig = {}));\nconst dispoableNoop = () => Disposable.create(() => { });\nexport class ModelServiceConfig {\n    constructor() {\n        /** CONFIG_TYPE */\n        this.CONFIG_TYPE = NsModelServiceConfig.CONFIG_TYPE;\n        /** 外部注册context的方法 */\n        this.registerModelFn = dispoableNoop;\n        /** CONFIG_TYPE */\n        this.isMounted = new Deferred();\n        this.registerModel = (registerModel) => {\n            this.registerModelFn = registerModel;\n        };\n        this.setMountState = () => {\n            this.isMounted.resolve(true);\n        };\n        this.getConfig = () => __awaiter(this, void 0, void 0, function* () {\n            yield this.isMounted.promise;\n            return {\n                CONFIG_TYPE: this.CONFIG_TYPE,\n                modelRegisterFunc: this.registerModelFn || dispoableNoop,\n            };\n        });\n        this.dispose = () => {\n            this.registerModelFn = dispoableNoop;\n            this.isMounted = new Deferred();\n        };\n    }\n}\n//# sourceMappingURL=config.js.map"]},"metadata":{},"sourceType":"module"}