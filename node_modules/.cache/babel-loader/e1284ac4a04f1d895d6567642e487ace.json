{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { ObjectExt } from '../util';\nimport { Rectangle } from '../geometry';\nimport { Background } from '../registry';\nimport { Base } from './base';\nexport class BackgroundManager extends Base {\n  get elem() {\n    return this.view.background;\n  }\n\n  init() {\n    this.startListening();\n\n    if (this.options.background) {\n      this.draw(this.options.background);\n    }\n  }\n\n  startListening() {\n    this.graph.on('scale', this.update, this);\n    this.graph.on('translate', this.update, this);\n  }\n\n  stopListening() {\n    this.graph.off('scale', this.update, this);\n    this.graph.off('translate', this.update, this);\n  }\n\n  updateBackgroundImage() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let backgroundSize = options.size || 'auto auto';\n    let backgroundPosition = options.position || 'center';\n    const scale = this.graph.transform.getScale();\n    const ts = this.graph.translate(); // backgroundPosition\n\n    if (typeof backgroundPosition === 'object') {\n      const x = ts.tx + scale.sx * (backgroundPosition.x || 0);\n      const y = ts.ty + scale.sy * (backgroundPosition.y || 0);\n      backgroundPosition = `${x}px ${y}px`;\n    } // backgroundSize\n\n\n    if (typeof backgroundSize === 'object') {\n      backgroundSize = Rectangle.fromSize(backgroundSize).scale(scale.sx, scale.sy);\n      backgroundSize = `${backgroundSize.width}px ${backgroundSize.height}px`;\n    }\n\n    this.elem.style.backgroundSize = backgroundSize;\n    this.elem.style.backgroundPosition = backgroundPosition;\n  }\n\n  drawBackgroundImage(img) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!(img instanceof HTMLImageElement)) {\n      this.elem.style.backgroundImage = '';\n      return;\n    } // draw multiple times to show the last image\n\n\n    const cache = this.optionsCache;\n\n    if (cache && cache.image !== options.image) {\n      return;\n    }\n\n    let uri;\n    const opacity = options.opacity;\n    const backgroundSize = options.size;\n    let backgroundRepeat = options.repeat || 'no-repeat';\n    const pattern = Background.registry.get(backgroundRepeat);\n\n    if (typeof pattern === 'function') {\n      const quality = options.quality || 1;\n      img.width *= quality;\n      img.height *= quality;\n      const canvas = pattern(img, options);\n\n      if (!(canvas instanceof HTMLCanvasElement)) {\n        throw new Error('Background pattern must return an HTML Canvas instance');\n      }\n\n      uri = canvas.toDataURL('image/png'); // `repeat` was changed in pattern function\n\n      if (options.repeat && backgroundRepeat !== options.repeat) {\n        backgroundRepeat = options.repeat;\n      } else {\n        backgroundRepeat = 'repeat';\n      }\n\n      if (typeof backgroundSize === 'object') {\n        // recalculate the tile size if an object passed in\n        backgroundSize.width *= canvas.width / img.width;\n        backgroundSize.height *= canvas.height / img.height;\n      } else if (backgroundSize === undefined) {\n        // calcule the tile size if no provided\n        options.size = {\n          width: canvas.width / quality,\n          height: canvas.height / quality\n        };\n      }\n    } else {\n      uri = img.src;\n\n      if (backgroundSize === undefined) {\n        options.size = {\n          width: img.width,\n          height: img.height\n        };\n      }\n    }\n\n    if (cache != null && typeof options.size === 'object' && options.image === cache.image && options.repeat === cache.repeat && options.quality === cache.quality) {\n      cache.size = ObjectExt.clone(options.size);\n    }\n\n    const style = this.elem.style;\n    style.backgroundImage = `url(${uri})`;\n    style.backgroundRepeat = backgroundRepeat;\n    style.opacity = opacity == null || opacity >= 1 ? '' : `${opacity}`;\n    this.updateBackgroundImage(options);\n  }\n\n  updateBackgroundColor(color) {\n    this.elem.style.backgroundColor = color || '';\n  }\n\n  updateBackgroundOptions(options) {\n    this.graph.options.background = options;\n  }\n\n  update() {\n    if (this.optionsCache) {\n      this.updateBackgroundImage(this.optionsCache);\n    }\n  }\n\n  draw(options) {\n    const opts = options || {};\n    this.updateBackgroundOptions(options);\n    this.updateBackgroundColor(opts.color);\n\n    if (opts.image) {\n      this.optionsCache = ObjectExt.clone(opts);\n      const img = document.createElement('img');\n\n      img.onload = () => this.drawBackgroundImage(img, options);\n\n      img.setAttribute('crossorigin', 'anonymous');\n      img.src = opts.image;\n    } else {\n      this.drawBackgroundImage(null);\n      this.optionsCache = null;\n    }\n  }\n\n  clear() {\n    this.draw();\n  }\n\n  dispose() {\n    this.clear();\n    this.stopListening();\n  }\n\n}\n\n__decorate([Base.dispose()], BackgroundManager.prototype, \"dispose\", null);","map":{"version":3,"sources":["../../src/graph/background.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,SAAT,QAA0B,SAA1B;AACA,SAAS,SAAT,QAA0B,aAA1B;AACA,SAAS,UAAT,QAA2B,aAA3B;AACA,SAAS,IAAT,QAAqB,QAArB;AAEA,OAAM,MAAO,iBAAP,SAAiC,IAAjC,CAAqC;AAGvB,MAAJ,IAAI,GAAA;AAChB,WAAO,KAAK,IAAL,CAAU,UAAjB;AACD;;AAES,EAAA,IAAI,GAAA;AACZ,SAAK,cAAL;;AACA,QAAI,KAAK,OAAL,CAAa,UAAjB,EAA6B;AAC3B,WAAK,IAAL,CAAU,KAAK,OAAL,CAAa,UAAvB;AACD;AACF;;AAES,EAAA,cAAc,GAAA;AACtB,SAAK,KAAL,CAAW,EAAX,CAAc,OAAd,EAAuB,KAAK,MAA5B,EAAoC,IAApC;AACA,SAAK,KAAL,CAAW,EAAX,CAAc,WAAd,EAA2B,KAAK,MAAhC,EAAwC,IAAxC;AACD;;AAES,EAAA,aAAa,GAAA;AACrB,SAAK,KAAL,CAAW,GAAX,CAAe,OAAf,EAAwB,KAAK,MAA7B,EAAqC,IAArC;AACA,SAAK,KAAL,CAAW,GAAX,CAAe,WAAf,EAA4B,KAAK,MAAjC,EAAyC,IAAzC;AACD;;AAES,EAAA,qBAAqB,GAAwC;AAAA,QAAvC,OAAuC,uEAAF,EAAE;AACrE,QAAI,cAAc,GAAQ,OAAO,CAAC,IAAR,IAAgB,WAA1C;AACA,QAAI,kBAAkB,GAAQ,OAAO,CAAC,QAAR,IAAoB,QAAlD;AAEA,UAAM,KAAK,GAAG,KAAK,KAAL,CAAW,SAAX,CAAqB,QAArB,EAAd;AACA,UAAM,EAAE,GAAG,KAAK,KAAL,CAAW,SAAX,EAAX,CALqE,CAOrE;;AACA,QAAI,OAAO,kBAAP,KAA8B,QAAlC,EAA4C;AAC1C,YAAM,CAAC,GAAG,EAAE,CAAC,EAAH,GAAQ,KAAK,CAAC,EAAN,IAAY,kBAAkB,CAAC,CAAnB,IAAwB,CAApC,CAAlB;AACA,YAAM,CAAC,GAAG,EAAE,CAAC,EAAH,GAAQ,KAAK,CAAC,EAAN,IAAY,kBAAkB,CAAC,CAAnB,IAAwB,CAApC,CAAlB;AACA,MAAA,kBAAkB,GAAG,GAAG,CAAC,MAAM,CAAC,IAAhC;AACD,KAZoE,CAcrE;;;AACA,QAAI,OAAO,cAAP,KAA0B,QAA9B,EAAwC;AACtC,MAAA,cAAc,GAAG,SAAS,CAAC,QAAV,CAAmB,cAAnB,EAAmC,KAAnC,CACf,KAAK,CAAC,EADS,EAEf,KAAK,CAAC,EAFS,CAAjB;AAIA,MAAA,cAAc,GAAG,GAAG,cAAc,CAAC,KAAK,MAAM,cAAc,CAAC,MAAM,IAAnE;AACD;;AAED,SAAK,IAAL,CAAU,KAAV,CAAgB,cAAhB,GAAiC,cAAjC;AACA,SAAK,IAAL,CAAU,KAAV,CAAgB,kBAAhB,GAAqC,kBAArC;AACD;;AAES,EAAA,mBAAmB,CAC3B,GAD2B,EAEY;AAAA,QAAvC,OAAuC,uEAAF,EAAE;;AAEvC,QAAI,EAAE,GAAG,YAAY,gBAAjB,CAAJ,EAAwC;AACtC,WAAK,IAAL,CAAU,KAAV,CAAgB,eAAhB,GAAkC,EAAlC;AACA;AACD,KALsC,CAOvC;;;AACA,UAAM,KAAK,GAAG,KAAK,YAAnB;;AACA,QAAI,KAAK,IAAI,KAAK,CAAC,KAAN,KAAgB,OAAO,CAAC,KAArC,EAA4C;AAC1C;AACD;;AAED,QAAI,GAAJ;AACA,UAAM,OAAO,GAAG,OAAO,CAAC,OAAxB;AACA,UAAM,cAAc,GAAQ,OAAO,CAAC,IAApC;AACA,QAAI,gBAAgB,GAAG,OAAO,CAAC,MAAR,IAAkB,WAAzC;AAEA,UAAM,OAAO,GAAG,UAAU,CAAC,QAAX,CAAoB,GAApB,CAAwB,gBAAxB,CAAhB;;AACA,QAAI,OAAO,OAAP,KAAmB,UAAvB,EAAmC;AACjC,YAAM,OAAO,GAAI,OAAkC,CAAC,OAAnC,IAA8C,CAA/D;AACA,MAAA,GAAG,CAAC,KAAJ,IAAa,OAAb;AACA,MAAA,GAAG,CAAC,MAAJ,IAAc,OAAd;AACA,YAAM,MAAM,GAAG,OAAO,CAAC,GAAD,EAAM,OAAN,CAAtB;;AACA,UAAI,EAAE,MAAM,YAAY,iBAApB,CAAJ,EAA4C;AAC1C,cAAM,IAAI,KAAJ,CACJ,wDADI,CAAN;AAGD;;AAED,MAAA,GAAG,GAAG,MAAM,CAAC,SAAP,CAAiB,WAAjB,CAAN,CAXiC,CAajC;;AACA,UAAI,OAAO,CAAC,MAAR,IAAkB,gBAAgB,KAAK,OAAO,CAAC,MAAnD,EAA2D;AACzD,QAAA,gBAAgB,GAAG,OAAO,CAAC,MAA3B;AACD,OAFD,MAEO;AACL,QAAA,gBAAgB,GAAG,QAAnB;AACD;;AAED,UAAI,OAAO,cAAP,KAA0B,QAA9B,EAAwC;AACtC;AACA,QAAA,cAAc,CAAC,KAAf,IAAwB,MAAM,CAAC,KAAP,GAAe,GAAG,CAAC,KAA3C;AACA,QAAA,cAAc,CAAC,MAAf,IAAyB,MAAM,CAAC,MAAP,GAAgB,GAAG,CAAC,MAA7C;AACD,OAJD,MAIO,IAAI,cAAc,KAAK,SAAvB,EAAkC;AACvC;AACA,QAAA,OAAO,CAAC,IAAR,GAAe;AACb,UAAA,KAAK,EAAE,MAAM,CAAC,KAAP,GAAe,OADT;AAEb,UAAA,MAAM,EAAE,MAAM,CAAC,MAAP,GAAgB;AAFX,SAAf;AAID;AACF,KA/BD,MA+BO;AACL,MAAA,GAAG,GAAG,GAAG,CAAC,GAAV;;AACA,UAAI,cAAc,KAAK,SAAvB,EAAkC;AAChC,QAAA,OAAO,CAAC,IAAR,GAAe;AACb,UAAA,KAAK,EAAE,GAAG,CAAC,KADE;AAEb,UAAA,MAAM,EAAE,GAAG,CAAC;AAFC,SAAf;AAID;AACF;;AAED,QACE,KAAK,IAAI,IAAT,IACA,OAAO,OAAO,CAAC,IAAf,KAAwB,QADxB,IAEA,OAAO,CAAC,KAAR,KAAkB,KAAK,CAAC,KAFxB,IAGA,OAAO,CAAC,MAAR,KAAmB,KAAK,CAAC,MAHzB,IAIC,OAAkC,CAAC,OAAnC,KACE,KAAgC,CAAC,OANtC,EAOE;AACA,MAAA,KAAK,CAAC,IAAN,GAAa,SAAS,CAAC,KAAV,CAAgB,OAAO,CAAC,IAAxB,CAAb;AACD;;AAED,UAAM,KAAK,GAAG,KAAK,IAAL,CAAU,KAAxB;AACA,IAAA,KAAK,CAAC,eAAN,GAAwB,OAAO,GAAG,GAAlC;AACA,IAAA,KAAK,CAAC,gBAAN,GAAyB,gBAAzB;AACA,IAAA,KAAK,CAAC,OAAN,GAAgB,OAAO,IAAI,IAAX,IAAmB,OAAO,IAAI,CAA9B,GAAkC,EAAlC,GAAuC,GAAG,OAAO,EAAjE;AAEA,SAAK,qBAAL,CAA2B,OAA3B;AACD;;AAES,EAAA,qBAAqB,CAAC,KAAD,EAAsB;AACnD,SAAK,IAAL,CAAU,KAAV,CAAgB,eAAhB,GAAkC,KAAK,IAAI,EAA3C;AACD;;AAES,EAAA,uBAAuB,CAAC,OAAD,EAAoC;AACnE,SAAK,KAAL,CAAW,OAAX,CAAmB,UAAnB,GAAgC,OAAhC;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,QAAI,KAAK,YAAT,EAAuB;AACrB,WAAK,qBAAL,CAA2B,KAAK,YAAhC;AACD;AACF;;AAED,EAAA,IAAI,CAAC,OAAD,EAAoC;AACtC,UAAM,IAAI,GAAG,OAAO,IAAI,EAAxB;AACA,SAAK,uBAAL,CAA6B,OAA7B;AACA,SAAK,qBAAL,CAA2B,IAAI,CAAC,KAAhC;;AAEA,QAAI,IAAI,CAAC,KAAT,EAAgB;AACd,WAAK,YAAL,GAAoB,SAAS,CAAC,KAAV,CAAgB,IAAhB,CAApB;AACA,YAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAZ;;AACA,MAAA,GAAG,CAAC,MAAJ,GAAa,MAAM,KAAK,mBAAL,CAAyB,GAAzB,EAA8B,OAA9B,CAAnB;;AACA,MAAA,GAAG,CAAC,YAAJ,CAAiB,aAAjB,EAAgC,WAAhC;AACA,MAAA,GAAG,CAAC,GAAJ,GAAU,IAAI,CAAC,KAAf;AACD,KAND,MAMO;AACL,WAAK,mBAAL,CAAyB,IAAzB;AACA,WAAK,YAAL,GAAoB,IAApB;AACD;AACF;;AAED,EAAA,KAAK,GAAA;AACH,SAAK,IAAL;AACD;;AAGD,EAAA,OAAO,GAAA;AACL,SAAK,KAAL;AACA,SAAK,aAAL;AACD;;AA3KwC;;AAwKzC,UAAA,CAAA,CADC,IAAI,CAAC,OAAL,EACD,CAAA,E,2BAAA,E,SAAA,EAGC,IAHD,CAAA","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ObjectExt } from '../util';\nimport { Rectangle } from '../geometry';\nimport { Background } from '../registry';\nimport { Base } from './base';\nexport class BackgroundManager extends Base {\n    get elem() {\n        return this.view.background;\n    }\n    init() {\n        this.startListening();\n        if (this.options.background) {\n            this.draw(this.options.background);\n        }\n    }\n    startListening() {\n        this.graph.on('scale', this.update, this);\n        this.graph.on('translate', this.update, this);\n    }\n    stopListening() {\n        this.graph.off('scale', this.update, this);\n        this.graph.off('translate', this.update, this);\n    }\n    updateBackgroundImage(options = {}) {\n        let backgroundSize = options.size || 'auto auto';\n        let backgroundPosition = options.position || 'center';\n        const scale = this.graph.transform.getScale();\n        const ts = this.graph.translate();\n        // backgroundPosition\n        if (typeof backgroundPosition === 'object') {\n            const x = ts.tx + scale.sx * (backgroundPosition.x || 0);\n            const y = ts.ty + scale.sy * (backgroundPosition.y || 0);\n            backgroundPosition = `${x}px ${y}px`;\n        }\n        // backgroundSize\n        if (typeof backgroundSize === 'object') {\n            backgroundSize = Rectangle.fromSize(backgroundSize).scale(scale.sx, scale.sy);\n            backgroundSize = `${backgroundSize.width}px ${backgroundSize.height}px`;\n        }\n        this.elem.style.backgroundSize = backgroundSize;\n        this.elem.style.backgroundPosition = backgroundPosition;\n    }\n    drawBackgroundImage(img, options = {}) {\n        if (!(img instanceof HTMLImageElement)) {\n            this.elem.style.backgroundImage = '';\n            return;\n        }\n        // draw multiple times to show the last image\n        const cache = this.optionsCache;\n        if (cache && cache.image !== options.image) {\n            return;\n        }\n        let uri;\n        const opacity = options.opacity;\n        const backgroundSize = options.size;\n        let backgroundRepeat = options.repeat || 'no-repeat';\n        const pattern = Background.registry.get(backgroundRepeat);\n        if (typeof pattern === 'function') {\n            const quality = options.quality || 1;\n            img.width *= quality;\n            img.height *= quality;\n            const canvas = pattern(img, options);\n            if (!(canvas instanceof HTMLCanvasElement)) {\n                throw new Error('Background pattern must return an HTML Canvas instance');\n            }\n            uri = canvas.toDataURL('image/png');\n            // `repeat` was changed in pattern function\n            if (options.repeat && backgroundRepeat !== options.repeat) {\n                backgroundRepeat = options.repeat;\n            }\n            else {\n                backgroundRepeat = 'repeat';\n            }\n            if (typeof backgroundSize === 'object') {\n                // recalculate the tile size if an object passed in\n                backgroundSize.width *= canvas.width / img.width;\n                backgroundSize.height *= canvas.height / img.height;\n            }\n            else if (backgroundSize === undefined) {\n                // calcule the tile size if no provided\n                options.size = {\n                    width: canvas.width / quality,\n                    height: canvas.height / quality,\n                };\n            }\n        }\n        else {\n            uri = img.src;\n            if (backgroundSize === undefined) {\n                options.size = {\n                    width: img.width,\n                    height: img.height,\n                };\n            }\n        }\n        if (cache != null &&\n            typeof options.size === 'object' &&\n            options.image === cache.image &&\n            options.repeat === cache.repeat &&\n            options.quality ===\n                cache.quality) {\n            cache.size = ObjectExt.clone(options.size);\n        }\n        const style = this.elem.style;\n        style.backgroundImage = `url(${uri})`;\n        style.backgroundRepeat = backgroundRepeat;\n        style.opacity = opacity == null || opacity >= 1 ? '' : `${opacity}`;\n        this.updateBackgroundImage(options);\n    }\n    updateBackgroundColor(color) {\n        this.elem.style.backgroundColor = color || '';\n    }\n    updateBackgroundOptions(options) {\n        this.graph.options.background = options;\n    }\n    update() {\n        if (this.optionsCache) {\n            this.updateBackgroundImage(this.optionsCache);\n        }\n    }\n    draw(options) {\n        const opts = options || {};\n        this.updateBackgroundOptions(options);\n        this.updateBackgroundColor(opts.color);\n        if (opts.image) {\n            this.optionsCache = ObjectExt.clone(opts);\n            const img = document.createElement('img');\n            img.onload = () => this.drawBackgroundImage(img, options);\n            img.setAttribute('crossorigin', 'anonymous');\n            img.src = opts.image;\n        }\n        else {\n            this.drawBackgroundImage(null);\n            this.optionsCache = null;\n        }\n    }\n    clear() {\n        this.draw();\n    }\n    dispose() {\n        this.clear();\n        this.stopListening();\n    }\n}\n__decorate([\n    Base.dispose()\n], BackgroundManager.prototype, \"dispose\", null);\n//# sourceMappingURL=background.js.map"]},"metadata":{},"sourceType":"module"}