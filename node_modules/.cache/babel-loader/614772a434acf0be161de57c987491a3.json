{"ast":null,"code":"import React from 'react';\nimport { createModule } from '../module';\nimport { ModelServiceConfig } from '../config';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nexport const ModelServiceRegistry = props => {\n  const {\n    config\n  } = props;\n  /** 获取配置中心 */\n\n  const extensionRegistry = useExtensionRegistry();\n  /** 获取ModelService的配置 */\n\n  const modelServiceConfig = React.useMemo(() => config ? config : new ModelServiceConfig(),\n  /* eslint-disable-next-line  */\n  []);\n  React.useEffect(() => {\n    const disposable = extensionRegistry.addCoreModule({\n      config: modelServiceConfig,\n      createModule\n    });\n    modelServiceConfig.setMountState();\n    return () => {\n      disposable.dispose();\n      modelServiceConfig.dispose();\n    }; // 不要移除：保证 只生执行一次\n    // eslint-disable-next-line\n  }, []);\n  return null;\n};\nModelServiceRegistry.defaultProps = {\n  XFlowModuleType: 'ModelServiceConfig'\n};\nexport const createModelServiceConfig = addOptions => value => {\n  /** bridge config and value */\n  const valueContainer = React.useMemo(() => ({\n    getValue: () => ({})\n  }), []);\n\n  valueContainer.getValue = () => value;\n\n  const hookConfig = React.useMemo(() => {\n    const config = new ModelServiceConfig();\n    addOptions(config, valueContainer);\n    return config;\n  }, [valueContainer]);\n  return hookConfig;\n};","map":{"version":3,"sources":["../../../src/model-service/components/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,YAAT,QAA6B,WAA7B;AACA,SAAS,kBAAT,QAAmC,WAAnC;AACA,SAAS,oBAAT,QAAqC,+CAArC;AAOA,OAAO,MAAM,oBAAoB,GAAqB,KAAK,IAAG;AAC5D,QAAM;AAAE,IAAA;AAAF,MAAa,KAAnB;AACA;;AACA,QAAM,iBAAiB,GAAG,oBAAoB,EAA9C;AACA;;AACA,QAAM,kBAAkB,GAAG,KAAK,CAAC,OAAN,CACzB,MAAO,MAAM,GAAG,MAAH,GAAY,IAAI,kBAAJ,EADA;AAEzB;AACA,IAHyB,CAA3B;AAMA,EAAA,KAAK,CAAC,SAAN,CAAgB,MAAK;AACnB,UAAM,UAAU,GAAG,iBAAiB,CAAC,aAAlB,CAAgC;AACjD,MAAA,MAAM,EAAE,kBADyC;AAEjD,MAAA;AAFiD,KAAhC,CAAnB;AAIA,IAAA,kBAAkB,CAAC,aAAnB;AACA,WAAO,MAAK;AACV,MAAA,UAAU,CAAC,OAAX;AACA,MAAA,kBAAkB,CAAC,OAAnB;AACD,KAHD,CANmB,CAUnB;AACA;AACD,GAZD,EAYG,EAZH;AAcA,SAAO,IAAP;AACD,CA1BM;AA4BP,oBAAoB,CAAC,YAArB,GAAoC;AAAE,EAAA,eAAe,EAAE;AAAnB,CAApC;AAMA,OAAO,MAAM,wBAAwB,GAEjC,UADF,IAGC,KAAD,IAAc;AACZ;AACA,QAAM,cAAc,GAAG,KAAK,CAAC,OAAN,CAAc,OAAO;AAAE,IAAA,QAAQ,EAAE,OAAO,EAAP;AAAZ,GAAP,CAAd,EAAqD,EAArD,CAAvB;;AACA,EAAA,cAAc,CAAC,QAAf,GAA0B,MAAM,KAAhC;;AAEA,QAAM,UAAU,GAAG,KAAK,CAAC,OAAN,CAAc,MAAK;AACpC,UAAM,MAAM,GAAG,IAAI,kBAAJ,EAAf;AACA,IAAA,UAAU,CAAC,MAAD,EAAS,cAAT,CAAV;AACA,WAAO,MAAP;AACD,GAJkB,EAIhB,CAAC,cAAD,CAJgB,CAAnB;AAMA,SAAO,UAAP;AACD,CAhBI","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { createModule } from '../module';\nimport { ModelServiceConfig } from '../config';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nexport const ModelServiceRegistry = props => {\n    const { config } = props;\n    /** 获取配置中心 */\n    const extensionRegistry = useExtensionRegistry();\n    /** 获取ModelService的配置 */\n    const modelServiceConfig = React.useMemo(() => (config ? config : new ModelServiceConfig()), \n    /* eslint-disable-next-line  */\n    []);\n    React.useEffect(() => {\n        const disposable = extensionRegistry.addCoreModule({\n            config: modelServiceConfig,\n            createModule,\n        });\n        modelServiceConfig.setMountState();\n        return () => {\n            disposable.dispose();\n            modelServiceConfig.dispose();\n        };\n        // 不要移除：保证 只生执行一次\n        // eslint-disable-next-line\n    }, []);\n    return null;\n};\nModelServiceRegistry.defaultProps = { XFlowModuleType: 'ModelServiceConfig' };\nexport const createModelServiceConfig = (addOptions) => (value) => {\n    /** bridge config and value */\n    const valueContainer = React.useMemo(() => ({ getValue: () => ({}) }), []);\n    valueContainer.getValue = () => value;\n    const hookConfig = React.useMemo(() => {\n        const config = new ModelServiceConfig();\n        addOptions(config, valueContainer);\n        return config;\n    }, [valueContainer]);\n    return hookConfig;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}