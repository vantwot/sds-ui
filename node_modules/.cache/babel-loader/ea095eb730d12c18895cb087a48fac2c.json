{"ast":null,"code":"var _jsxFileName = \"/home/manolo/sds-ui/src/components/charts/PieChart.jsx\";\nimport React from 'react';\n/* Libraries */\n\nimport { Pie } from '@ant-design/charts';\n/* UI Library Components */\n\nimport { Card, Empty } from 'antd';\n/* Componentes */\n\nimport InfoButton from '../infoButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PieChart = _ref => {\n  let {\n    data,\n    title,\n    type = 'openAccess',\n    core\n  } = _ref;\n  const bgColor = {\n    hybrid: '#6448ff',\n    green: '#25ff76',\n    gold: '#ffc03c',\n    closed: '#b4b4b4',\n    bronze: '#f3663f'\n  };\n  const labels = {\n    hybrid: 'Híbrido',\n    green: 'Verde',\n    gold: 'Dorado',\n    closed: 'Cerrado',\n    bronze: 'Bronce'\n  };\n  let config_a = {\n    appendPadding: 20,\n    data: data,\n    angleField: 'value',\n    colorField: 'type',\n    pieStyle: {\n      lineWidth: 3\n    },\n    radius: 1,\n    innerRadius: 0.4,\n    label: {\n      type: 'spider',\n      content: '{value} / {percentage}'\n    },\n    interactions: [{\n      type: 'element-active'\n    }]\n  };\n  let config_b = {\n    appendPadding: 20,\n    data: data,\n    angleField: 'value',\n    colorField: 'type',\n    color: _ref2 => {\n      let {\n        type\n      } = _ref2;\n      return bgColor[type];\n    },\n    pieStyle: {\n      lineWidth: 3\n    },\n    radius: 1,\n    innerRadius: 0.4,\n    tooltip: {\n      formatter: datum => {\n        return {\n          name: labels[datum.type],\n          value: datum.value + (datum.value === 1 ? ' Producto' : ' Productos')\n        };\n      }\n    },\n    label: {\n      type: 'spider',\n      content: '{value} Productos, {percentage}'\n    },\n    interactions: [{\n      type: 'element-active'\n    }],\n    legend: {\n      itemName: {\n        formatter: item => labels[item]\n      }\n    }\n  };\n  let config = type === 'openAccess' ? config_b : config_a;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    size: \"small\",\n    title: title,\n    headStyle: {\n      backgroundColor: '#003e65',\n      color: 'white'\n    },\n    bodyStyle: {\n      padding: '10px',\n      height: '420px'\n    },\n    hoverable: true,\n    extra: /*#__PURE__*/_jsxDEV(InfoButton, {\n      title: title,\n      type: type,\n      core: core\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 14\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: data.length > 0 ? /*#__PURE__*/_jsxDEV(Pie, { ...config\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Empty, {\n        image: Empty.PRESENTED_IMAGE_SIMPLE,\n        description: \"Datos insuficientes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PieChart;\nexport default PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["/home/manolo/sds-ui/src/components/charts/PieChart.jsx"],"names":["React","Pie","Card","Empty","InfoButton","PieChart","data","title","type","core","bgColor","hybrid","green","gold","closed","bronze","labels","config_a","appendPadding","angleField","colorField","pieStyle","lineWidth","radius","innerRadius","label","content","interactions","config_b","color","tooltip","formatter","datum","name","value","legend","itemName","item","config","backgroundColor","padding","height","length","PRESENTED_IMAGE_SIMPLE"],"mappings":"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","sourcesContent":["import React from 'react';\n\n/* Libraries */\nimport { Pie } from '@ant-design/charts';\n\n/* UI Library Components */\nimport { Card, Empty } from 'antd';\n\n/* Componentes */\nimport InfoButton from '../infoButton';\n\nconst PieChart = ({ data, title, type = 'openAccess', core }) => {\n  const bgColor = {\n    hybrid: '#6448ff',\n    green: '#25ff76',\n    gold: '#ffc03c',\n    closed: '#b4b4b4',\n    bronze: '#f3663f',\n  };\n\n  const labels = {\n    hybrid: 'Híbrido',\n    green: 'Verde',\n    gold: 'Dorado',\n    closed: 'Cerrado',\n    bronze: 'Bronce',\n  };\n\n  let config_a = {\n    appendPadding: 20,\n    data: data,\n    angleField: 'value',\n    colorField: 'type',\n    pieStyle: { lineWidth: 3 },\n    radius: 1,\n    innerRadius: 0.4,\n    label: {\n      type: 'spider',\n      content: '{value} / {percentage}',\n    },\n    interactions: [{ type: 'element-active' }],\n  };\n\n  let config_b = {\n    appendPadding: 20,\n    data: data,\n    angleField: 'value',\n    colorField: 'type',\n    color: ({ type }) => {\n      return bgColor[type];\n    },\n    pieStyle: { lineWidth: 3 },\n    radius: 1,\n    innerRadius: 0.4,\n    tooltip: {\n      formatter: (datum) => {\n        return {\n          name: labels[datum.type],\n          value: datum.value + (datum.value === 1 ? ' Producto' : ' Productos'),\n        };\n      },\n    },\n    label: {\n      type: 'spider',\n      content: '{value} Productos, {percentage}',\n    },\n    interactions: [{ type: 'element-active' }],\n    legend: {\n      itemName: {\n        formatter: (item) => labels[item],\n      },\n    },\n  };\n\n  let config = type === 'openAccess' ? config_b : config_a;\n\n  return (\n    <Card\n      size=\"small\"\n      title={title}\n      headStyle={{ backgroundColor: '#003e65', color: 'white' }}\n      bodyStyle={{ padding: '10px', height: '420px' }}\n      hoverable\n      extra={<InfoButton title={title} type={type} core={core} />}\n    >\n      <div className=\"chart\">\n        {data.length > 0 ? (\n          <Pie {...config} />\n        ) : (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description=\"Datos insuficientes\"\n          />\n        )}\n      </div>\n    </Card>\n  );\n};\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}