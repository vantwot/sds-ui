{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Rectangle } from '../geometry';\nimport { NumberExt, JQuery, Dom, Unit, Vector } from '../util';\nimport { Base } from './base';\nexport var PrintManager = /*#__PURE__*/function (_Base) {\n  _inherits(PrintManager, _Base);\n\n  var _super = _createSuper(PrintManager);\n\n  function PrintManager() {\n    _classCallCheck(this, PrintManager);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PrintManager, [{\n    key: \"show\",\n    value: function show() {\n      var _this = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var localOptions = Object.assign(Object.assign({}, PrintManager.defaultOptions), options);\n      var $pages = this.createPrintPages(localOptions);\n      localOptions.ready($pages, function ($pages) {\n        return _this.showPrintWindow($pages, localOptions);\n      }, {\n        sheetSize: this.getSheetSize(localOptions)\n      });\n    }\n  }, {\n    key: \"className\",\n    get: function get() {\n      return this.view.prefixClassName('graph-print');\n    }\n  }, {\n    key: \"showPrintWindow\",\n    value: function showPrintWindow($pages, options) {\n      var _this2 = this;\n\n      if ($pages) {\n        var $body = JQuery(document.body);\n        var $container = JQuery(this.view.container);\n        var bodyClassName = this.view.prefixClassName('graph-printing');\n        $body.addClass(bodyClassName);\n        var $detached = $container.children().detach();\n        $pages.forEach(function ($page) {\n          $page.removeClass(\"\".concat(_this2.className, \"-preview\")).addClass(\"\".concat(_this2.className, \"-ready\")).appendTo($body);\n        });\n        var ret = false;\n\n        var cb = function cb() {\n          if (!ret) {\n            ret = true;\n            $body.removeClass(bodyClassName);\n            $pages.forEach(function ($page) {\n              return $page.remove();\n            });\n            $container.append($detached);\n            JQuery(\"#\".concat(_this2.styleSheetId)).remove();\n\n            _this2.graph.trigger('after:print', options);\n\n            JQuery(window).off('afterprint', cb);\n          }\n        };\n\n        JQuery(window).one('afterprint', cb);\n        setTimeout(cb, 200);\n        window.print();\n      }\n    }\n  }, {\n    key: \"createPrintPage\",\n    value: function createPrintPage(pageArea, options) {\n      this.graph.trigger('before:print', options);\n      var $page = JQuery('<div/>').addClass(this.className);\n      var $wrap = JQuery('<div/>').addClass(this.view.prefixClassName('graph-print-inner')).css('position', 'relative');\n\n      if (options.size) {\n        $page.addClass(\"\".concat(this.className, \"-size-\").concat(options.size));\n      }\n\n      var vSVG = Vector.create(this.view.svg).clone();\n      var vStage = vSVG.findOne(\".\".concat(this.view.prefixClassName('graph-svg-stage')));\n      $wrap.append(vSVG.node);\n      var sheetSize = this.getSheetSize(options);\n      var graphArea = this.graph.transform.getGraphArea();\n      var s = this.graph.transform.getScale();\n      var ts = this.graph.translate();\n      var matrix = Dom.createSVGMatrix().translate(ts.tx / s.sx, ts.ty / s.sy);\n      var info = this.getPageInfo(graphArea, pageArea, sheetSize);\n      var scale = info.scale;\n      var bbox = info.bbox;\n      $wrap.css({\n        left: 0,\n        top: 0\n      });\n      vSVG.attr({\n        width: bbox.width * scale,\n        height: bbox.height * scale,\n        style: 'position:relative',\n        viewBox: [bbox.x, bbox.y, bbox.width, bbox.height].join(' ')\n      });\n      vStage.attr('transform', Dom.matrixToTransformString(matrix));\n      $page.append($wrap);\n      $page.addClass(\"\".concat(this.className, \"-preview\"));\n      return {\n        $page: $page,\n        sheetSize: sheetSize\n      };\n    }\n  }, {\n    key: \"createPrintPages\",\n    value: function createPrintPages(options) {\n      var _this3 = this;\n\n      var ret;\n      var area = this.getPrintArea(options);\n      var $pages = [];\n\n      if (options.page) {\n        var pageSize = this.getPageSize(area, options.page);\n        var pageAreas = this.getPageAreas(area, pageSize);\n        pageAreas.forEach(function (pageArea) {\n          ret = _this3.createPrintPage(pageArea, options);\n          $pages.push(ret.$page);\n        });\n      } else {\n        ret = this.createPrintPage(area, options);\n        $pages.push(ret.$page);\n      }\n\n      if (ret) {\n        var size = {\n          width: ret.sheetSize.cssWidth,\n          height: ret.sheetSize.cssHeight\n        };\n        this.updatePrintStyle(size, options);\n      }\n\n      return $pages;\n    }\n  }, {\n    key: \"styleSheetId\",\n    get: function get() {\n      return this.view.prefixClassName('graph-print-style');\n    }\n  }, {\n    key: \"updatePrintStyle\",\n    value: function updatePrintStyle(size, options) {\n      var sizeCSS = Object.keys(size).reduce(function (memo, key) {\n        return \"\".concat(memo, \" \").concat(key, \":\").concat(size[key], \";\");\n      }, '');\n      var margin = NumberExt.normalizeSides(options.margin);\n      var marginUnit = options.marginUnit || '';\n      var sheetUnit = options.sheetUnit || '';\n      var css = \"\\n      @media print {\\n        .\".concat(this.className, \".\").concat(this.className, \"-ready {\\n          \").concat(sizeCSS, \"\\n        }\\n\\n        @page {\\n          margin:\\n          \").concat([margin.top + marginUnit, margin.right + marginUnit, margin.bottom + marginUnit, margin.left + marginUnit].join(' '), \";\\n          size: \").concat(options.sheet.width + sheetUnit, \" \").concat(options.sheet.height + sheetUnit, \";\\n\\n        .\").concat(this.className, \".\").concat(this.className, \"-preview {\\n          \").concat(sizeCSS, \"\\n        }\\n      }\");\n      var id = this.styleSheetId;\n      var $style = JQuery(\"#\".concat(id));\n\n      if ($style.length) {\n        $style.html(css);\n      } else {\n        JQuery('head').append(\"'<style type=\\\"text/css\\\" id=\\\"\".concat(id, \"\\\">\").concat(css, \"</style>'\"));\n      }\n    }\n  }, {\n    key: \"getPrintArea\",\n    value: function getPrintArea(options) {\n      var area = options.area;\n\n      if (!area) {\n        var padding = NumberExt.normalizeSides(options.padding);\n        area = this.graph.getContentArea().moveAndExpand({\n          x: -padding.left,\n          y: -padding.top,\n          width: padding.left + padding.right,\n          height: padding.top + padding.bottom\n        });\n      }\n\n      return area;\n    }\n  }, {\n    key: \"getPageSize\",\n    value: function getPageSize(area, poster) {\n      if (typeof poster === 'object') {\n        var raw = poster;\n        var page = {\n          width: raw.width,\n          height: raw.height\n        };\n\n        if (page.width == null) {\n          page.width = Math.ceil(area.width / (raw.columns || 1));\n        }\n\n        if (page.height == null) {\n          page.height = Math.ceil(area.height / (raw.rows || 1));\n        }\n\n        return page;\n      }\n\n      return {\n        width: area.width,\n        height: area.height\n      };\n    }\n  }, {\n    key: \"getPageAreas\",\n    value: function getPageAreas(area, pageSize) {\n      var pages = [];\n      var width = pageSize.width;\n      var height = pageSize.height;\n\n      for (var w = 0, n = 0; w < area.height && n < 200; w += height, n += 1) {\n        for (var h = 0, m = 0; h < area.width && m < 200; h += width, m += 1) {\n          pages.push(new Rectangle(area.x + h, area.y + w, width, height));\n        }\n      }\n\n      return pages;\n    }\n  }, {\n    key: \"getSheetSize\",\n    value: function getSheetSize(options) {\n      var sheet = options.sheet;\n      var margin = NumberExt.normalizeSides(options.margin);\n      var marginUnit = options.marginUnit || '';\n      var sheetUnit = options.sheetUnit || '';\n      var cssWidth = // eslint-disable-next-line\n      \"calc(\".concat(sheet.width).concat(sheetUnit, \" - \").concat(margin.left + margin.right).concat(marginUnit, \")\");\n      var cssHeight = // eslint-disable-next-line\n      \"calc(\".concat(sheet.height).concat(sheetUnit, \" - \").concat(margin.top + margin.bottom).concat(marginUnit, \")\");\n      var ret = Unit.measure(cssWidth, cssHeight);\n      return {\n        cssWidth: cssWidth,\n        cssHeight: cssHeight,\n        width: ret.width,\n        height: ret.height\n      };\n    }\n  }, {\n    key: \"getPageInfo\",\n    value: function getPageInfo(graphArea, pageArea, sheetSize) {\n      var bbox = new Rectangle(pageArea.x - graphArea.x, pageArea.y - graphArea.y, pageArea.width, pageArea.height);\n      var pageRatio = bbox.width / bbox.height;\n      var graphRatio = sheetSize.width / sheetSize.height;\n      return {\n        bbox: bbox,\n        scale: graphRatio < pageRatio ? sheetSize.width / bbox.width : sheetSize.height / bbox.height,\n        fitHorizontal: graphRatio < pageRatio\n      };\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {}\n  }]);\n\n  return PrintManager;\n}(Base);\n\n__decorate([Base.dispose()], PrintManager.prototype, \"dispose\", null);\n\n(function (PrintManager) {\n  PrintManager.defaultOptions = {\n    page: false,\n    sheet: {\n      width: 210,\n      height: 297\n    },\n    sheetUnit: 'mm',\n    margin: 0.4,\n    marginUnit: 'in',\n    padding: 5,\n    ready: function ready($pages, readyToPrint) {\n      return readyToPrint($pages);\n    }\n  };\n})(PrintManager || (PrintManager = {}));","map":{"version":3,"sources":["../../src/graph/print.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Rectangle } from '../geometry';\nimport { NumberExt, JQuery, Dom, Unit, Vector } from '../util';\nimport { Base } from './base';\nexport class PrintManager extends Base {\n    show(options = {}) {\n        const localOptions = Object.assign(Object.assign({}, PrintManager.defaultOptions), options);\n        const $pages = this.createPrintPages(localOptions);\n        localOptions.ready($pages, ($pages) => this.showPrintWindow($pages, localOptions), {\n            sheetSize: this.getSheetSize(localOptions),\n        });\n    }\n    get className() {\n        return this.view.prefixClassName('graph-print');\n    }\n    showPrintWindow($pages, options) {\n        if ($pages) {\n            const $body = JQuery(document.body);\n            const $container = JQuery(this.view.container);\n            const bodyClassName = this.view.prefixClassName('graph-printing');\n            $body.addClass(bodyClassName);\n            const $detached = $container.children().detach();\n            $pages.forEach(($page) => {\n                $page\n                    .removeClass(`${this.className}-preview`)\n                    .addClass(`${this.className}-ready`)\n                    .appendTo($body);\n            });\n            let ret = false;\n            const cb = () => {\n                if (!ret) {\n                    ret = true;\n                    $body.removeClass(bodyClassName);\n                    $pages.forEach(($page) => $page.remove());\n                    $container.append($detached);\n                    JQuery(`#${this.styleSheetId}`).remove();\n                    this.graph.trigger('after:print', options);\n                    JQuery(window).off('afterprint', cb);\n                }\n            };\n            JQuery(window).one('afterprint', cb);\n            setTimeout(cb, 200);\n            window.print();\n        }\n    }\n    createPrintPage(pageArea, options) {\n        this.graph.trigger('before:print', options);\n        const $page = JQuery('<div/>').addClass(this.className);\n        const $wrap = JQuery('<div/>')\n            .addClass(this.view.prefixClassName('graph-print-inner'))\n            .css('position', 'relative');\n        if (options.size) {\n            $page.addClass(`${this.className}-size-${options.size}`);\n        }\n        const vSVG = Vector.create(this.view.svg).clone();\n        const vStage = vSVG.findOne(`.${this.view.prefixClassName('graph-svg-stage')}`);\n        $wrap.append(vSVG.node);\n        const sheetSize = this.getSheetSize(options);\n        const graphArea = this.graph.transform.getGraphArea();\n        const s = this.graph.transform.getScale();\n        const ts = this.graph.translate();\n        const matrix = Dom.createSVGMatrix().translate(ts.tx / s.sx, ts.ty / s.sy);\n        const info = this.getPageInfo(graphArea, pageArea, sheetSize);\n        const scale = info.scale;\n        const bbox = info.bbox;\n        $wrap.css({\n            left: 0,\n            top: 0,\n        });\n        vSVG.attr({\n            width: bbox.width * scale,\n            height: bbox.height * scale,\n            style: 'position:relative',\n            viewBox: [bbox.x, bbox.y, bbox.width, bbox.height].join(' '),\n        });\n        vStage.attr('transform', Dom.matrixToTransformString(matrix));\n        $page.append($wrap);\n        $page.addClass(`${this.className}-preview`);\n        return {\n            $page,\n            sheetSize,\n        };\n    }\n    createPrintPages(options) {\n        let ret;\n        const area = this.getPrintArea(options);\n        const $pages = [];\n        if (options.page) {\n            const pageSize = this.getPageSize(area, options.page);\n            const pageAreas = this.getPageAreas(area, pageSize);\n            pageAreas.forEach((pageArea) => {\n                ret = this.createPrintPage(pageArea, options);\n                $pages.push(ret.$page);\n            });\n        }\n        else {\n            ret = this.createPrintPage(area, options);\n            $pages.push(ret.$page);\n        }\n        if (ret) {\n            const size = {\n                width: ret.sheetSize.cssWidth,\n                height: ret.sheetSize.cssHeight,\n            };\n            this.updatePrintStyle(size, options);\n        }\n        return $pages;\n    }\n    get styleSheetId() {\n        return this.view.prefixClassName('graph-print-style');\n    }\n    updatePrintStyle(size, options) {\n        const sizeCSS = Object.keys(size).reduce((memo, key) => `${memo} ${key}:${size[key]};`, '');\n        const margin = NumberExt.normalizeSides(options.margin);\n        const marginUnit = options.marginUnit || '';\n        const sheetUnit = options.sheetUnit || '';\n        const css = `\n      @media print {\n        .${this.className}.${this.className}-ready {\n          ${sizeCSS}\n        }\n\n        @page {\n          margin:\n          ${[\n            margin.top + marginUnit,\n            margin.right + marginUnit,\n            margin.bottom + marginUnit,\n            margin.left + marginUnit,\n        ].join(' ')};\n          size: ${options.sheet.width + sheetUnit} ${options.sheet.height + sheetUnit};\n\n        .${this.className}.${this.className}-preview {\n          ${sizeCSS}\n        }\n      }`;\n        const id = this.styleSheetId;\n        const $style = JQuery(`#${id}`);\n        if ($style.length) {\n            $style.html(css);\n        }\n        else {\n            JQuery('head').append(`'<style type=\"text/css\" id=\"${id}\">${css}</style>'`);\n        }\n    }\n    getPrintArea(options) {\n        let area = options.area;\n        if (!area) {\n            const padding = NumberExt.normalizeSides(options.padding);\n            area = this.graph.getContentArea().moveAndExpand({\n                x: -padding.left,\n                y: -padding.top,\n                width: padding.left + padding.right,\n                height: padding.top + padding.bottom,\n            });\n        }\n        return area;\n    }\n    getPageSize(area, poster) {\n        if (typeof poster === 'object') {\n            const raw = poster;\n            const page = {\n                width: raw.width,\n                height: raw.height,\n            };\n            if (page.width == null) {\n                page.width = Math.ceil(area.width / (raw.columns || 1));\n            }\n            if (page.height == null) {\n                page.height = Math.ceil(area.height / (raw.rows || 1));\n            }\n            return page;\n        }\n        return {\n            width: area.width,\n            height: area.height,\n        };\n    }\n    getPageAreas(area, pageSize) {\n        const pages = [];\n        const width = pageSize.width;\n        const height = pageSize.height;\n        for (let w = 0, n = 0; w < area.height && n < 200; w += height, n += 1) {\n            for (let h = 0, m = 0; h < area.width && m < 200; h += width, m += 1) {\n                pages.push(new Rectangle(area.x + h, area.y + w, width, height));\n            }\n        }\n        return pages;\n    }\n    getSheetSize(options) {\n        const sheet = options.sheet;\n        const margin = NumberExt.normalizeSides(options.margin);\n        const marginUnit = options.marginUnit || '';\n        const sheetUnit = options.sheetUnit || '';\n        const cssWidth = \n        // eslint-disable-next-line\n        `calc(${sheet.width}${sheetUnit} - ${margin.left + margin.right}${marginUnit})`;\n        const cssHeight = \n        // eslint-disable-next-line\n        `calc(${sheet.height}${sheetUnit} - ${margin.top + margin.bottom}${marginUnit})`;\n        const ret = Unit.measure(cssWidth, cssHeight);\n        return {\n            cssWidth,\n            cssHeight,\n            width: ret.width,\n            height: ret.height,\n        };\n    }\n    getPageInfo(graphArea, pageArea, sheetSize) {\n        const bbox = new Rectangle(pageArea.x - graphArea.x, pageArea.y - graphArea.y, pageArea.width, pageArea.height);\n        const pageRatio = bbox.width / bbox.height;\n        const graphRatio = sheetSize.width / sheetSize.height;\n        return {\n            bbox,\n            scale: graphRatio < pageRatio\n                ? sheetSize.width / bbox.width\n                : sheetSize.height / bbox.height,\n            fitHorizontal: graphRatio < pageRatio,\n        };\n    }\n    dispose() { }\n}\n__decorate([\n    Base.dispose()\n], PrintManager.prototype, \"dispose\", null);\n(function (PrintManager) {\n    PrintManager.defaultOptions = {\n        page: false,\n        sheet: {\n            width: 210,\n            height: 297,\n        },\n        sheetUnit: 'mm',\n        margin: 0.4,\n        marginUnit: 'in',\n        padding: 5,\n        ready: ($pages, readyToPrint) => readyToPrint($pages),\n    };\n})(PrintManager || (PrintManager = {}));\n//# sourceMappingURL=print.js.map"]},"metadata":{},"sourceType":"module"}