{"ast":null,"code":"import React,{useEffect,useRef}from'react';import ReactDOM from'react-dom';/* UI Library Components */import{Card}from'antd';/* Componentes */import InfoButton from'../infoButton';/* Libraries */import G6 from'@antv/g6';import{jsx as _jsx}from\"react/jsx-runtime\";var GraphChart=function GraphChart(_ref){var data=_ref.data,title=_ref.title,_ref$height=_ref.height,height=_ref$height===void 0?622:_ref$height;var ref=useRef(null);var _window=window,innerWidth=_window.innerWidth;useEffect(function(){var graph=null;if(!graph){var _data$nodes;graph=new G6.Graph({container:ReactDOM.findDOMNode(ref.current),width:innerWidth>1400?1346:innerWidth-53,height:600,modes:{default:[{type:'zoom-canvas',enableOptimize:true,optimizeZoom:0.9},{type:'drag-canvas',enableOptimize:true},{type:'tooltip',formatText:function formatText(model){return\"Grado: \".concat(model.degree);}},{type:'edge-tooltip',formatText:function formatText(model){return\"\".concat(model.coauthorships,\" \").concat(model.coauthorships>1?'coautorías':'coautoría');}}]},layout:{type:(data===null||data===void 0?void 0:(_data$nodes=data.nodes)===null||_data$nodes===void 0?void 0:_data$nodes.length)>220?'forceAtlas2':'gForce',preventOverlap:true},defaultNode:{style:{stroke:'#00A283',fill:'#00E4A9',fillOpacity:0.6},labelCfg:{style:{fontSize:8},position:'bottom',offset:1}},defaultEdge:{style:{stroke:'#e8e7e3'}}});}graph.data(data);graph.render();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[data]);return/*#__PURE__*/_jsx(Card,{size:\"small\",title:title,headStyle:{backgroundColor:'#003e65',color:'white'},bodyStyle:{padding:'10px',height:height},extra:/*#__PURE__*/_jsx(InfoButton,{title:title,type:'graph'}),children:/*#__PURE__*/_jsx(\"div\",{className:\"chart\",children:/*#__PURE__*/_jsx(\"div\",{ref:ref})})});};export default GraphChart;","map":{"version":3,"sources":["/home/manolo/sds-ui/src/components/charts/GraphChart.jsx"],"names":["React","useEffect","useRef","ReactDOM","Card","InfoButton","G6","GraphChart","data","title","height","ref","window","innerWidth","graph","Graph","container","findDOMNode","current","width","modes","default","type","enableOptimize","optimizeZoom","formatText","model","degree","coauthorships","layout","nodes","length","preventOverlap","defaultNode","style","stroke","fill","fillOpacity","labelCfg","fontSize","position","offset","defaultEdge","render","backgroundColor","color","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\n/* UI Library Components */\nimport { Card } from 'antd';\n\n/* Componentes */\nimport InfoButton from '../infoButton';\n\n/* Libraries */\nimport G6 from '@antv/g6';\n\nconst GraphChart = ({ data, title, height = 622 }) => {\n  const ref = useRef(null);\n  const { innerWidth } = window;\n\n  useEffect(() => {\n    let graph = null;\n    if (!graph) {\n      graph = new G6.Graph({\n        container: ReactDOM.findDOMNode(ref.current),\n        width: innerWidth > 1400 ? 1346 : innerWidth - 53,\n        height: 600,\n        modes: {\n          default: [\n            {\n              type: 'zoom-canvas',\n              enableOptimize: true,\n              optimizeZoom: 0.9,\n            },\n            {\n              type: 'drag-canvas',\n              enableOptimize: true,\n            },\n            {\n              type: 'tooltip',\n              formatText(model) {\n                return `Grado: ${model.degree}`;\n              },\n            },\n            {\n              type: 'edge-tooltip',\n              formatText(model) {\n                return `${model.coauthorships} ${\n                  model.coauthorships > 1 ? 'coautorías' : 'coautoría'\n                }`;\n              },\n            },\n          ],\n        },\n        layout: {\n          type: data?.nodes?.length > 220 ? 'forceAtlas2' : 'gForce',\n          preventOverlap: true,\n        },\n        defaultNode: {\n          style: { stroke: '#00A283', fill: '#00E4A9', fillOpacity: 0.6 },\n          labelCfg: {\n            style: { fontSize: 8 },\n            position: 'bottom',\n            offset: 1,\n          },\n        },\n        defaultEdge: {\n          style: {\n            stroke: '#e8e7e3',\n          },\n        },\n      });\n    }\n    graph.data(data);\n    graph.render();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return (\n    <Card\n      size=\"small\"\n      title={title}\n      headStyle={{ backgroundColor: '#003e65', color: 'white' }}\n      bodyStyle={{ padding: '10px', height: height }}\n      extra={<InfoButton title={title} type={'graph'} />}\n    >\n      <div className=\"chart\">\n        <div ref={ref}></div>\n      </div>\n    </Card>\n  );\n};\n\nexport default GraphChart;\n"]},"metadata":{},"sourceType":"module"}