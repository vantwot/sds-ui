{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Geometry } from '../geometry';\nexport var Segment = /*#__PURE__*/function (_Geometry) {\n  _inherits(Segment, _Geometry);\n\n  var _super = _createSuper(Segment);\n\n  function Segment() {\n    var _this;\n\n    _classCallCheck(this, Segment);\n\n    _this = _super.apply(this, arguments);\n    _this.isVisible = true;\n    _this.isSegment = true;\n    _this.isSubpathStart = false;\n    return _this;\n  }\n\n  _createClass(Segment, [{\n    key: \"end\",\n    get: function get() {\n      return this.endPoint;\n    }\n  }, {\n    key: \"start\",\n    get: function get() {\n      if (this.previousSegment == null) {\n        throw new Error('Missing previous segment. (This segment cannot be the ' + 'first segment of a path, or segment has not yet been ' + 'added to a path.)');\n      }\n\n      return this.previousSegment.end;\n    }\n  }, {\n    key: \"closestPointT\",\n    value: function closestPointT(p, options) {\n      if (this.closestPointNormalizedLength) {\n        return this.closestPointNormalizedLength(p);\n      }\n\n      throw new Error('Neither `closestPointT` nor `closestPointNormalizedLength` method is implemented.');\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"lengthAtT\",\n    value: function lengthAtT(t, options) {\n      if (t <= 0) {\n        return 0;\n      }\n\n      var length = this.length();\n\n      if (t >= 1) {\n        return length;\n      }\n\n      return length * t;\n    }\n  }, {\n    key: \"divideAtT\",\n    value: function divideAtT(t) {\n      if (this.divideAt) {\n        return this.divideAt(t);\n      }\n\n      throw new Error('Neither `divideAtT` nor `divideAt` method is implemented.');\n    }\n  }, {\n    key: \"pointAtT\",\n    value: function pointAtT(t) {\n      if (this.pointAt) {\n        return this.pointAt(t);\n      }\n\n      throw new Error('Neither `pointAtT` nor `pointAt` method is implemented.');\n    }\n  }, {\n    key: \"tangentAtT\",\n    value: function tangentAtT(t) {\n      if (this.tangentAt) {\n        return this.tangentAt(t);\n      }\n\n      throw new Error('Neither `tangentAtT` nor `tangentAt` method is implemented.');\n    }\n  }]);\n\n  return Segment;\n}(Geometry);","map":{"version":3,"sources":["../../../src/geometry/path/segment.ts"],"names":[],"mappings":";;;;AAGA,SAAS,QAAT,QAAyB,aAAzB;AAEA,WAAsB,OAAtB;AAAA;;AAAA;;AAAA,qBAAA;AAAA;;AAAA;;;AACE,UAAA,SAAA,GAAY,IAAZ;AACA,UAAA,SAAA,GAAY,IAAZ;AACA,UAAA,cAAA,GAAiB,KAAjB;AAHF;AA0HC;;AA1HD;AAAA;AAAA,SASE,eAAO;AACL,aAAO,KAAK,QAAZ;AACD;AAXH;AAAA;AAAA,SAaE,eAAS;AACP,UAAI,KAAK,eAAL,IAAwB,IAA5B,EAAkC;AAChC,cAAM,IAAI,KAAJ,CACJ,2DACE,uDADF,GAEE,mBAHE,CAAN;AAKD;;AAED,aAAO,KAAK,eAAL,CAAqB,GAA5B;AACD;AAvBH;AAAA;AAAA,WAqCE,uBACE,CADF,EAEE,OAFF,EAE2B;AAEzB,UAAI,KAAK,4BAAT,EAAuC;AACrC,eAAO,KAAK,4BAAL,CAAkC,CAAlC,CAAP;AACD;;AAED,YAAM,IAAI,KAAJ,CACJ,mFADI,CAAN;AAGD,KAhDH,CAwDE;;AAxDF;AAAA;AAAA,WAyDE,mBAAU,CAAV,EAAqB,OAArB,EAA8C;AAC5C,UAAI,CAAC,IAAI,CAAT,EAAY;AACV,eAAO,CAAP;AACD;;AAED,UAAM,MAAM,GAAG,KAAK,MAAL,EAAf;;AACA,UAAI,CAAC,IAAI,CAAT,EAAY;AACV,eAAO,MAAP;AACD;;AAED,aAAO,MAAM,GAAG,CAAhB;AACD;AApEH;AAAA;AAAA,WAgFE,mBAAU,CAAV,EAAmB;AACjB,UAAI,KAAK,QAAT,EAAmB;AACjB,eAAO,KAAK,QAAL,CAAc,CAAd,CAAP;AACD;;AAED,YAAM,IAAI,KAAJ,CAAU,2DAAV,CAAN;AACD;AAtFH;AAAA;AAAA,WA8FE,kBAAS,CAAT,EAAkB;AAChB,UAAI,KAAK,OAAT,EAAkB;AAChB,eAAO,KAAK,OAAL,CAAa,CAAb,CAAP;AACD;;AAED,YAAM,IAAI,KAAJ,CAAU,yDAAV,CAAN;AACD;AApGH;AAAA;AAAA,WA6GE,oBAAW,CAAX,EAAoB;AAClB,UAAI,KAAK,SAAT,EAAoB;AAClB,eAAO,KAAK,SAAL,CAAe,CAAf,CAAP;AACD;;AAED,YAAM,IAAI,KAAJ,CACJ,6DADI,CAAN;AAGD;AArHH;;AAAA;AAAA,EAAsC,QAAtC","sourceRoot":"","sourcesContent":["import { Geometry } from '../geometry';\nexport class Segment extends Geometry {\n    constructor() {\n        super(...arguments);\n        this.isVisible = true;\n        this.isSegment = true;\n        this.isSubpathStart = false;\n    }\n    get end() {\n        return this.endPoint;\n    }\n    get start() {\n        if (this.previousSegment == null) {\n            throw new Error('Missing previous segment. (This segment cannot be the ' +\n                'first segment of a path, or segment has not yet been ' +\n                'added to a path.)');\n        }\n        return this.previousSegment.end;\n    }\n    closestPointT(p, options) {\n        if (this.closestPointNormalizedLength) {\n            return this.closestPointNormalizedLength(p);\n        }\n        throw new Error('Neither `closestPointT` nor `closestPointNormalizedLength` method is implemented.');\n    }\n    // eslint-disable-next-line\n    lengthAtT(t, options) {\n        if (t <= 0) {\n            return 0;\n        }\n        const length = this.length();\n        if (t >= 1) {\n            return length;\n        }\n        return length * t;\n    }\n    divideAtT(t) {\n        if (this.divideAt) {\n            return this.divideAt(t);\n        }\n        throw new Error('Neither `divideAtT` nor `divideAt` method is implemented.');\n    }\n    pointAtT(t) {\n        if (this.pointAt) {\n            return this.pointAt(t);\n        }\n        throw new Error('Neither `pointAtT` nor `pointAt` method is implemented.');\n    }\n    tangentAtT(t) {\n        if (this.tangentAt) {\n            return this.tangentAt(t);\n        }\n        throw new Error('Neither `tangentAtT` nor `tangentAt` method is implemented.');\n    }\n}\n//# sourceMappingURL=segment.js.map"]},"metadata":{},"sourceType":"module"}