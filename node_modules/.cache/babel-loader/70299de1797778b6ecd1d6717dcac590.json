{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowEdgeCommands } from '../constant';\nexport var NsHighlightEdge;\n\n(function (NsHighlightEdge) {\n  NsHighlightEdge.command = XFlowEdgeCommands.HIGHLIGHT_EDGE;\n  NsHighlightEdge.hookKey = 'highlightEdge';\n})(NsHighlightEdge || (NsHighlightEdge = {}));\n\nlet HighlightEdgeCommand =\n/** 连线高亮 */\nclass HighlightEdgeCommand {\n  constructor() {\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const {\n        args,\n        hooks: runtimeHook\n      } = this.ctx.getArgs();\n      const hooks = this.ctx.getHooks();\n      const result = yield hooks.highlightEdge.call(args, handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n\n        const x6Graph = yield this.ctx.getX6Graph();\n        const {\n          edgeId,\n          strokeColor,\n          strokeWidth\n        } = handlerArgs;\n        const allEdges = x6Graph.getEdges();\n        /** 需要高亮的连线 */\n\n        const highlightEdge = allEdges.find(edge => edge.id === edgeId);\n        /** 不需要高亮的连线 */\n\n        const otherEdges = allEdges.filter(edge => edge.id !== edgeId);\n\n        if (!highlightEdge) {\n          console.error(edgeId, 'this edgeId is not exist');\n        } else {\n          const oldAttr = highlightEdge.getAttrs();\n\n          if (((_a = oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line) === null || _a === void 0 ? void 0 : _a.stroke) === strokeColor && ((_b = oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line) === null || _b === void 0 ? void 0 : _b.strokeWidth) === strokeWidth) {\n            /** 连线已经高亮, 不需要重复操作 */\n          } else {\n            /** 高亮选中的连线 */\n            highlightEdge === null || highlightEdge === void 0 ? void 0 : highlightEdge.setAttrs({\n              line: {\n                stroke: strokeColor,\n                strokeWidth: strokeWidth || 2\n              }\n            });\n            /** 其余连线取消高亮状态 */\n\n            otherEdges.forEach(edge => {\n              edge.setAttrs({\n                line: oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line\n              });\n            });\n            /** 高亮的连线默认前置在画布最前方 */\n\n            handlerArgs.commandService.executeCommand(XFlowEdgeCommands.FRONT_EDGE.id, {\n              edgeId\n            });\n          }\n        }\n\n        return {};\n      }), runtimeHook);\n      this.ctx.setResult(result);\n      return this;\n    });\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n\n      return this;\n    });\n  }\n\n  init() {\n    this.ctx = this.contextProvider();\n  }\n\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n\n};\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], HighlightEdgeCommand.prototype, \"contextProvider\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], HighlightEdgeCommand.prototype, \"init\", null);\n\nHighlightEdgeCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsHighlightEdge.command.id\n  }\n})\n/** 连线高亮 */\n], HighlightEdgeCommand);\nexport { HighlightEdgeCommand };","map":{"version":3,"sources":["../../../src/command-contributions/edge/edge-highlight.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,MAAT,EAAiB,UAAjB,EAA6B,aAA7B,QAAkD,cAAlD;AAGA,SAAS,eAAT,EAA0B,uBAA1B,QAAyD,yBAAzD;AAEA,SAAS,iBAAT,QAAkC,aAAlC;AASA,OAAM,IAAW,eAAX;;AAAN,CAAA,UAAiB,eAAjB,EAAgC;AACjB,EAAA,eAAA,CAAA,OAAA,GAAU,iBAAiB,CAAC,cAA5B;AACA,EAAA,eAAA,CAAA,OAAA,GAAU,eAAV;AAcd,CAhBD,EAAiB,eAAe,KAAf,eAAe,GAAA,EAAA,CAAhC;;AAsBA,IAAa,oBAAoB;AADjC;AACA,MAAa,oBAAb,CAAiC;AAAjC,EAAA,WAAA,GAAA;AAUE,SAAA,OAAA,GAAU,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACnB,YAAM;AAAE,QAAA,IAAF;AAAQ,QAAA,KAAK,EAAE;AAAf,UAA+B,KAAK,GAAL,CAAS,OAAT,EAArC;AACA,YAAM,KAAK,GAAG,KAAK,GAAL,CAAS,QAAT,EAAd;AAEA,YAAM,MAAM,GAAG,MAAM,KAAK,CAAC,aAAN,CAAoB,IAApB,CACnB,IADmB,EAEb,WAAN,IAAoB,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;;AAClB,cAAM,OAAO,GAAG,MAAM,KAAK,GAAL,CAAS,UAAT,EAAtB;AACA,cAAM;AAAE,UAAA,MAAF;AAAU,UAAA,WAAV;AAAuB,UAAA;AAAvB,YAAuC,WAA7C;AAEA,cAAM,QAAQ,GAAG,OAAO,CAAC,QAAR,EAAjB;AACA;;AACA,cAAM,aAAa,GAAG,QAAQ,CAAC,IAAT,CAAc,IAAI,IAAI,IAAI,CAAC,EAAL,KAAY,MAAlC,CAAtB;AACA;;AACA,cAAM,UAAU,GAAG,QAAQ,CAAC,MAAT,CAAgB,IAAI,IAAI,IAAI,CAAC,EAAL,KAAY,MAApC,CAAnB;;AAEA,YAAI,CAAC,aAAL,EAAoB;AAClB,UAAA,OAAO,CAAC,KAAR,CAAc,MAAd,EAAsB,0BAAtB;AACD,SAFD,MAEO;AACL,gBAAM,OAAO,GAAG,aAAa,CAAC,QAAd,EAAhB;;AACA,cAAI,CAAA,CAAA,EAAA,GAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,IAAT,MAAa,IAAb,IAAa,EAAA,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAa,EAAA,CAAE,MAAf,MAA0B,WAA1B,IAAyC,CAAA,CAAA,EAAA,GAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,IAAT,MAAa,IAAb,IAAa,EAAA,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAa,EAAA,CAAE,WAAf,MAA+B,WAA5E,EAAyF;AACvF;AACD,WAFD,MAEO;AACL;AACA,YAAA,aAAa,KAAA,IAAb,IAAA,aAAa,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAA,aAAa,CAAE,QAAf,CAAwB;AACtB,cAAA,IAAI,EAAE;AACJ,gBAAA,MAAM,EAAE,WADJ;AAEJ,gBAAA,WAAW,EAAE,WAAW,IAAI;AAFxB;AADgB,aAAxB,CAAA;AAMA;;AACA,YAAA,UAAU,CAAC,OAAX,CAAmB,IAAI,IAAG;AACxB,cAAA,IAAI,CAAC,QAAL,CAAc;AACZ,gBAAA,IAAI,EAAE,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE;AADH,eAAd;AAGD,aAJD;AAMA;;AACA,YAAA,WAAW,CAAC,cAAZ,CAA2B,cAA3B,CAA0C,iBAAiB,CAAC,UAAlB,CAA6B,EAAvE,EAA2E;AACzE,cAAA;AADyE,aAA3E;AAGD;AACF;;AACD,eAAO,EAAP;AACD,OAtCmB,CAFD,EAyCnB,WAzCmB,CAArB;AA2CA,WAAK,GAAL,CAAS,SAAT,CAAmB,MAAnB;AACA,aAAO,IAAP;AACD,KAjDoB,CAArB;;AAmDA,SAAA,IAAA,GAAO,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAChB,WAAK,GAAL,CAAS,IAAT;AACA,aAAO,IAAP;AACD,KAHiB,CAAlB;;AAKA,SAAA,IAAA,GAAO,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAChB,UAAI,CAAC,KAAK,GAAL,CAAS,UAAd,EAA0B;AACxB,cAAM,KAAK,OAAL,EAAN;AACD;;AACD,aAAO,IAAP;AACD,KALiB,CAAlB;AAUD;;AAtEC,EAAA,IAAI,GAAA;AACF,SAAK,GAAL,GAAW,KAAK,eAAL,EAAX;AACD;;AAiED,EAAA,UAAU,GAAA;AACR,WAAO,KAAK,GAAL,CAAS,UAAT,EAAP;AACD;;AA3E8B,CAAjC;;AACmC,UAAA,CAAA,CAAhC,MAAM,CAAC,uBAAD,CAA0B,E,iCAAA,CAAA,E,8BAAA,E,iBAAA,E,KAA4C,CAA5C,CAAA;;AAKjC,UAAA,CAAA,CADC,aAAa,EACd,E,mCAAA,E,mCAAA,E,uCAAA,CAAA,E,8BAAA,E,MAAA,EAEC,IAFD,CAAA;;AANW,oBAAoB,GAAA,UAAA,CAAA,CAJhC,UAAU,CAAC;AACV,EAAA,KAAK,EAAE;AAAE,IAAA,KAAK,EAAE,eAAT;AAA0B,IAAA,KAAK,EAAE,eAAe,CAAC,OAAhB,CAAwB;AAAzD;AADG,CAAD;AAGX;AACiC,CAAA,EAApB,oBAAoB,CAApB;SAAA,oB","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowEdgeCommands } from '../constant';\nexport var NsHighlightEdge;\n(function (NsHighlightEdge) {\n    NsHighlightEdge.command = XFlowEdgeCommands.HIGHLIGHT_EDGE;\n    NsHighlightEdge.hookKey = 'highlightEdge';\n})(NsHighlightEdge || (NsHighlightEdge = {}));\nlet HighlightEdgeCommand = \n/** 连线高亮 */\nclass HighlightEdgeCommand {\n    constructor() {\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const { args, hooks: runtimeHook } = this.ctx.getArgs();\n            const hooks = this.ctx.getHooks();\n            const result = yield hooks.highlightEdge.call(args, (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                const x6Graph = yield this.ctx.getX6Graph();\n                const { edgeId, strokeColor, strokeWidth } = handlerArgs;\n                const allEdges = x6Graph.getEdges();\n                /** 需要高亮的连线 */\n                const highlightEdge = allEdges.find(edge => edge.id === edgeId);\n                /** 不需要高亮的连线 */\n                const otherEdges = allEdges.filter(edge => edge.id !== edgeId);\n                if (!highlightEdge) {\n                    console.error(edgeId, 'this edgeId is not exist');\n                }\n                else {\n                    const oldAttr = highlightEdge.getAttrs();\n                    if (((_a = oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line) === null || _a === void 0 ? void 0 : _a.stroke) === strokeColor && ((_b = oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line) === null || _b === void 0 ? void 0 : _b.strokeWidth) === strokeWidth) {\n                        /** 连线已经高亮, 不需要重复操作 */\n                    }\n                    else {\n                        /** 高亮选中的连线 */\n                        highlightEdge === null || highlightEdge === void 0 ? void 0 : highlightEdge.setAttrs({\n                            line: {\n                                stroke: strokeColor,\n                                strokeWidth: strokeWidth || 2,\n                            },\n                        });\n                        /** 其余连线取消高亮状态 */\n                        otherEdges.forEach(edge => {\n                            edge.setAttrs({\n                                line: oldAttr === null || oldAttr === void 0 ? void 0 : oldAttr.line,\n                            });\n                        });\n                        /** 高亮的连线默认前置在画布最前方 */\n                        handlerArgs.commandService.executeCommand(XFlowEdgeCommands.FRONT_EDGE.id, {\n                            edgeId,\n                        });\n                    }\n                }\n                return {};\n            }), runtimeHook);\n            this.ctx.setResult(result);\n            return this;\n        });\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            this.ctx.undo();\n            return this;\n        });\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.ctx.isUndoable) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    init() {\n        this.ctx = this.contextProvider();\n    }\n    isUndoable() {\n        return this.ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], HighlightEdgeCommand.prototype, \"contextProvider\", void 0);\n__decorate([\n    postConstruct(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], HighlightEdgeCommand.prototype, \"init\", null);\nHighlightEdgeCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsHighlightEdge.command.id },\n    })\n    /** 连线高亮 */\n], HighlightEdgeCommand);\nexport { HighlightEdgeCommand };\n//# sourceMappingURL=edge-highlight.js.map"]},"metadata":{},"sourceType":"module"}