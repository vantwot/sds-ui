{"ast":null,"code":"var globalWindow;\n\nif (typeof window === 'undefined') {\n  globalWindow = {\n    devicePixelRatio: 1,\n    navigator: {\n      userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36',\n      browserLanguage: 'zh-CN',\n      language: 'zh-CN',\n      platform: ''\n    },\n    location: '',\n    document: {\n      documentElement: {\n        style: {}\n      },\n      createEvent: function createEvent() {\n        return true;\n      },\n      getElementById: function getElementById(id) {\n        return true;\n      },\n      createElement: function createElement() {\n        return {\n          className: '',\n          classList: {\n            add: function add() {\n              return '';\n            }\n          }\n        };\n      },\n      createElementNS: function createElementNS() {\n        return true;\n      },\n      addEventListener: function addEventListener() {\n        return true;\n      },\n      removeEventListener: function removeEventListener() {\n        return true;\n      },\n      querySelector: function querySelector() {\n        return false;\n      }\n    },\n    performance: {\n      mark: function mark(_mark) {\n        return null;\n      },\n      clearMeasures: function clearMeasures(measure) {\n        return null;\n      },\n      clearMarks: function clearMarks(mark) {\n        return null;\n      },\n      measure: function measure(mark, create, load) {\n        return {\n          duration: 0\n        };\n      },\n      now: function now() {\n        return new Date().getTime();\n      }\n    },\n    Blob: '',\n    dispatchEvent: function dispatchEvent(evt) {\n      return true;\n    },\n    Event: function Event(name, data) {\n      return true;\n    },\n    createElement: function createElement() {\n      return true;\n    },\n    createElementNS: function createElementNS() {\n      return true;\n    },\n    XMLHttpRequest: function XMLHttpRequest() {\n      return true;\n    },\n    addEventListener: function addEventListener() {\n      return true;\n    },\n    removeEventListener: function removeEventListener() {\n      return true;\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      return true;\n    },\n    cancelAnimationFrame: function cancelAnimationFrame() {\n      return true;\n    },\n    clearTimeout: function clearTimeout() {\n      return true;\n    }\n  };\n} else {\n  globalWindow = window;\n}\n\nexport { globalWindow };","map":{"version":3,"sources":["../../src/mini-adapter/global.ts"],"names":["globalWindow","devicePixelRatio","navigator","userAgent","browserLanguage","language","platform","location","document","documentElement","style","createEvent","getElementById","createElement","className","classList","add","createElementNS","addEventListener","removeEventListener","querySelector","performance","mark","clearMeasures","clearMarks","measure","duration","now","Blob","dispatchEvent","Event","XMLHttpRequest","requestAnimationFrame","cancelAnimationFrame","clearTimeout"],"mappings":"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","sourcesContent":["// TODO: 解决 gastby 服务端构建过程中没有 window 全局变量的问题\n\nlet globalWindow: any;\n\nif (typeof window === 'undefined') {\n  globalWindow = {\n    devicePixelRatio: 1,\n    navigator: {\n      userAgent:\n        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.69 Safari/537.36',\n      browserLanguage: 'zh-CN',\n      language: 'zh-CN',\n      platform: '',\n    },\n    location: '',\n    document: {\n      documentElement: {\n        style: {},\n      },\n      createEvent: () => true,\n      getElementById: (id: string) => true,\n      createElement: () => {\n        return {\n          className: '',\n          classList: {\n            add: () => '',\n          },\n        };\n      },\n      createElementNS: () => true,\n      addEventListener: () => true,\n      removeEventListener: () => true,\n      querySelector: () => false,\n    },\n    performance: {\n      mark: (mark: string) => null,\n      clearMeasures: (measure: string) => null,\n      clearMarks: (mark: string) => null,\n      measure: (mark: string, create: string, load: string) => {\n        return {\n          duration: 0,\n        };\n      },\n      now: () => new Date().getTime(),\n    },\n\n    Blob: '',\n    dispatchEvent: (evt: any) => true,\n    Event: (name: string, data: any) => true,\n    createElement: () => true,\n    createElementNS: () => true,\n    XMLHttpRequest: () => true,\n    addEventListener: () => true,\n    removeEventListener: () => true,\n    requestAnimationFrame: () => true,\n    cancelAnimationFrame: () => true,\n    clearTimeout: () => true,\n  };\n} else {\n  globalWindow = window;\n}\n\nexport { globalWindow };\n"]},"metadata":{},"sourceType":"module"}