{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { Emitter } from 'mana-common';\nexport var Disposable;\n\n(function (Disposable) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function is(arg) {\n    return !!arg && typeof arg === 'object' && 'dispose' in arg && typeof arg.dispose === 'function';\n  }\n\n  Disposable.is = is;\n\n  function create(func) {\n    return {\n      dispose: func\n    };\n  }\n\n  Disposable.create = create;\n  Disposable.NULL = create(() => {});\n})(Disposable || (Disposable = {}));\n\nexport class DisposableCollection {\n  constructor() {\n    this.disposables = [];\n    this.onDisposeEmitter = new Emitter();\n    this.disposingElements = false;\n\n    for (var _len = arguments.length, toDispose = new Array(_len), _key = 0; _key < _len; _key++) {\n      toDispose[_key] = arguments[_key];\n    }\n\n    toDispose.forEach(d => this.push(d));\n  }\n  /**\n   * This event is fired only once\n   * on first dispose of not empty collection.\n   */\n\n\n  get onDispose() {\n    return this.onDisposeEmitter.event;\n  }\n\n  checkDisposed() {\n    if (this.disposed && !this.disposingElements) {\n      this.onDisposeEmitter.fire(undefined);\n      this.onDisposeEmitter.dispose();\n    }\n  }\n\n  get disposed() {\n    return this.disposables.length === 0;\n  }\n\n  dispose() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.disposed || this.disposingElements) {\n        return;\n      }\n\n      this.disposingElements = true;\n\n      while (!this.disposed) {\n        try {\n          const d = this.disposables.pop();\n          yield d.dispose();\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      this.disposingElements = false;\n      this.checkDisposed();\n    });\n  }\n\n  push(disposable) {\n    const {\n      disposables\n    } = this;\n    disposables.push(disposable);\n    const originalDispose = disposable.dispose.bind(disposable);\n    const toRemove = Disposable.create(() => {\n      const index = disposables.indexOf(disposable);\n\n      if (index !== -1) {\n        disposables.splice(index, 1);\n      }\n\n      this.checkDisposed();\n    });\n\n    disposable.dispose = () => {\n      toRemove.dispose();\n      originalDispose();\n    };\n\n    return toRemove;\n  }\n\n  pushAll(disposables) {\n    return disposables.map(disposable => this.push(disposable));\n  }\n\n}","map":{"version":3,"sources":["../../src/common/disposable.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from 'mana-common';\nexport var Disposable;\n(function (Disposable) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function is(arg) {\n        return !!arg && typeof arg === 'object' && 'dispose' in arg && typeof arg.dispose === 'function';\n    }\n    Disposable.is = is;\n    function create(func) {\n        return {\n            dispose: func,\n        };\n    }\n    Disposable.create = create;\n    Disposable.NULL = create(() => { });\n})(Disposable || (Disposable = {}));\nexport class DisposableCollection {\n    constructor(...toDispose) {\n        this.disposables = [];\n        this.onDisposeEmitter = new Emitter();\n        this.disposingElements = false;\n        toDispose.forEach(d => this.push(d));\n    }\n    /**\n     * This event is fired only once\n     * on first dispose of not empty collection.\n     */\n    get onDispose() {\n        return this.onDisposeEmitter.event;\n    }\n    checkDisposed() {\n        if (this.disposed && !this.disposingElements) {\n            this.onDisposeEmitter.fire(undefined);\n            this.onDisposeEmitter.dispose();\n        }\n    }\n    get disposed() {\n        return this.disposables.length === 0;\n    }\n    dispose() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.disposed || this.disposingElements) {\n                return;\n            }\n            this.disposingElements = true;\n            while (!this.disposed) {\n                try {\n                    const d = this.disposables.pop();\n                    yield d.dispose();\n                }\n                catch (e) {\n                    console.error(e);\n                }\n            }\n            this.disposingElements = false;\n            this.checkDisposed();\n        });\n    }\n    push(disposable) {\n        const { disposables } = this;\n        disposables.push(disposable);\n        const originalDispose = disposable.dispose.bind(disposable);\n        const toRemove = Disposable.create(() => {\n            const index = disposables.indexOf(disposable);\n            if (index !== -1) {\n                disposables.splice(index, 1);\n            }\n            this.checkDisposed();\n        });\n        disposable.dispose = () => {\n            toRemove.dispose();\n            originalDispose();\n        };\n        return toRemove;\n    }\n    pushAll(disposables) {\n        return disposables.map(disposable => this.push(disposable));\n    }\n}\n//# sourceMappingURL=disposable.js.map"]},"metadata":{},"sourceType":"module"}