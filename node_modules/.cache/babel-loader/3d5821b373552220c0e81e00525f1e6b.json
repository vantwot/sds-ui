{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { ManaSyringe, DisposableCollection, Disposable } from '@antv/xflow-core';\nimport { IHookContribution } from '@antv/xflow-core';\nimport { XFlowNode } from '../x6-extension/node';\nimport { Shape } from '@antv/x6';\nexport var flowOptions = {\n  grid: true,\n  mousewheel: {\n    enabled: true,\n    zoomAtMousePosition: true,\n    modifiers: 'ctrl',\n    minScale: 0.5,\n    maxScale: 3\n  },\n  connecting: {\n    router: 'manhattan',\n    connector: {\n      name: 'rounded',\n      args: {\n        radius: 8\n      }\n    },\n    anchor: 'center',\n    connectionPoint: 'anchor',\n    allowBlank: false,\n    snap: {\n      radius: 20\n    },\n    createEdge: function createEdge() {\n      return new Shape.Edge({\n        attrs: {\n          line: {\n            stroke: '#A2B1C3',\n            strokeWidth: 2,\n            targetMarker: {\n              name: 'block',\n              width: 12,\n              height: 8\n            }\n          }\n        },\n        zIndex: 0\n      });\n    },\n    validateConnection: function validateConnection(_ref) {\n      var targetMagnet = _ref.targetMagnet;\n      return !!targetMagnet;\n    }\n  },\n  highlighting: {\n    magnetAdsorbed: {\n      name: 'stroke',\n      args: {\n        attrs: {\n          fill: '#5F95FF',\n          stroke: '#5F95FF'\n        }\n      }\n    }\n  },\n  resizing: true,\n  rotating: true,\n  selecting: {\n    enabled: true,\n    rubberband: true,\n    showNodeSelectionBox: true,\n    modifiers: 'shift'\n  },\n  snapline: true,\n  keyboard: true,\n  clipboard: true\n};\n/**\n * 内置的hook contribution\n * 处理 config上的runtime的注册项\n */\n\nvar FlowHooksContribution = function FlowHooksContribution() {\n  var _this = this;\n\n  _classCallCheck(this, FlowHooksContribution);\n\n  this.toDispose = new DisposableCollection();\n\n  this.registerHookHub = function () {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Disposable.create(function () {}));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n\n  this.registerHook = function (hooks) {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var _this2 = this;\n\n      var toDispose, disposables;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              toDispose = new DisposableCollection();\n              disposables = [hooks.addNode.registerHook({\n                name: 'flow-add-node',\n                handler: function handler(args) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                    var _this3 = this;\n\n                    var cellFactory;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            cellFactory = function cellFactory(nodeConfig) {\n                              return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                                var node;\n                                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                                  while (1) {\n                                    switch (_context2.prev = _context2.next) {\n                                      case 0:\n                                        node = new XFlowNode(Object.assign({}, nodeConfig));\n                                        return _context2.abrupt(\"return\", node);\n\n                                      case 2:\n                                      case \"end\":\n                                        return _context2.stop();\n                                    }\n                                  }\n                                }, _callee2);\n                              }));\n                            };\n\n                            args.cellFactory = cellFactory;\n\n                          case 2:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n                }\n              }), hooks.addEdge.registerHook({\n                name: 'flow-add-edge',\n                handler: function handler(args) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                    var _this4 = this;\n\n                    var cellFactory;\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            cellFactory = function cellFactory(edgeConfig) {\n                              return __awaiter(_this4, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                                var cell;\n                                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                                  while (1) {\n                                    switch (_context4.prev = _context4.next) {\n                                      case 0:\n                                        delete edgeConfig.id;\n                                        cell = new Shape.Edge({\n                                          source: {\n                                            cell: edgeConfig.source,\n                                            port: edgeConfig.sourcePortId\n                                          },\n                                          target: {\n                                            cell: edgeConfig.target,\n                                            port: edgeConfig.targetPortId\n                                          },\n                                          attrs: {\n                                            line: {\n                                              stroke: '#A2B1C3',\n                                              strokeWidth: 2,\n                                              targetMarker: {\n                                                name: 'block',\n                                                width: 12,\n                                                height: 8\n                                              }\n                                            }\n                                          },\n                                          zIndex: -1,\n                                          data: Object.assign({}, edgeConfig)\n                                        });\n                                        return _context4.abrupt(\"return\", cell);\n\n                                      case 3:\n                                      case \"end\":\n                                        return _context4.stop();\n                                    }\n                                  }\n                                }, _callee4);\n                              }));\n                            };\n\n                            args.cellFactory = cellFactory;\n\n                          case 2:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n                }\n              }), hooks.graphOptions.registerHook({\n                name: 'assign options ',\n                handler: function handler(args) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            Object.assign(args, flowOptions);\n\n                          case 1:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6);\n                  }));\n                }\n              })];\n              toDispose.pushAll(disposables);\n              return _context7.abrupt(\"return\", Disposable.create(function () {}));\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n  };\n};\n\nFlowHooksContribution = __decorate([ManaSyringe.singleton({\n  contrib: IHookContribution\n})], FlowHooksContribution);\nexport { FlowHooksContribution };","map":{"version":3,"sources":["../../../src/canvas-flow-extension/contributions/flow.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ManaSyringe, DisposableCollection, Disposable } from '@antv/xflow-core';\nimport { IHookContribution } from '@antv/xflow-core';\nimport { XFlowNode } from '../x6-extension/node';\nimport { Shape } from '@antv/x6';\nexport const flowOptions = {\n    grid: true,\n    mousewheel: {\n        enabled: true,\n        zoomAtMousePosition: true,\n        modifiers: 'ctrl',\n        minScale: 0.5,\n        maxScale: 3,\n    },\n    connecting: {\n        router: 'manhattan',\n        connector: {\n            name: 'rounded',\n            args: {\n                radius: 8,\n            },\n        },\n        anchor: 'center',\n        connectionPoint: 'anchor',\n        allowBlank: false,\n        snap: {\n            radius: 20,\n        },\n        createEdge() {\n            return new Shape.Edge({\n                attrs: {\n                    line: {\n                        stroke: '#A2B1C3',\n                        strokeWidth: 2,\n                        targetMarker: {\n                            name: 'block',\n                            width: 12,\n                            height: 8,\n                        },\n                    },\n                },\n                zIndex: 0,\n            });\n        },\n        validateConnection({ targetMagnet }) {\n            return !!targetMagnet;\n        },\n    },\n    highlighting: {\n        magnetAdsorbed: {\n            name: 'stroke',\n            args: {\n                attrs: {\n                    fill: '#5F95FF',\n                    stroke: '#5F95FF',\n                },\n            },\n        },\n    },\n    resizing: true,\n    rotating: true,\n    selecting: {\n        enabled: true,\n        rubberband: true,\n        showNodeSelectionBox: true,\n        modifiers: 'shift',\n    },\n    snapline: true,\n    keyboard: true,\n    clipboard: true,\n};\n/**\n * 内置的hook contribution\n * 处理 config上的runtime的注册项\n */\nlet FlowHooksContribution = class FlowHooksContribution {\n    constructor() {\n        this.toDispose = new DisposableCollection();\n        this.registerHookHub = () => __awaiter(this, void 0, void 0, function* () {\n            return Disposable.create(() => { });\n        });\n        this.registerHook = (hooks) => __awaiter(this, void 0, void 0, function* () {\n            const toDispose = new DisposableCollection();\n            const disposables = [\n                hooks.addNode.registerHook({\n                    name: 'flow-add-node',\n                    handler: (args) => __awaiter(this, void 0, void 0, function* () {\n                        const cellFactory = (nodeConfig) => __awaiter(this, void 0, void 0, function* () {\n                            const node = new XFlowNode(Object.assign({}, nodeConfig));\n                            return node;\n                        });\n                        args.cellFactory = cellFactory;\n                    }),\n                }),\n                hooks.addEdge.registerHook({\n                    name: 'flow-add-edge',\n                    handler: (args) => __awaiter(this, void 0, void 0, function* () {\n                        const cellFactory = (edgeConfig) => __awaiter(this, void 0, void 0, function* () {\n                            delete edgeConfig.id;\n                            const cell = new Shape.Edge({\n                                source: {\n                                    cell: edgeConfig.source,\n                                    port: edgeConfig.sourcePortId,\n                                },\n                                target: {\n                                    cell: edgeConfig.target,\n                                    port: edgeConfig.targetPortId,\n                                },\n                                attrs: {\n                                    line: {\n                                        stroke: '#A2B1C3',\n                                        strokeWidth: 2,\n                                        targetMarker: {\n                                            name: 'block',\n                                            width: 12,\n                                            height: 8,\n                                        },\n                                    },\n                                },\n                                zIndex: -1,\n                                data: Object.assign({}, edgeConfig),\n                            });\n                            return cell;\n                        });\n                        args.cellFactory = cellFactory;\n                    }),\n                }),\n                hooks.graphOptions.registerHook({\n                    name: 'assign options ',\n                    handler: (args) => __awaiter(this, void 0, void 0, function* () {\n                        Object.assign(args, flowOptions);\n                    }),\n                }),\n            ];\n            toDispose.pushAll(disposables);\n            return Disposable.create(() => { });\n        });\n    }\n};\nFlowHooksContribution = __decorate([\n    ManaSyringe.singleton({ contrib: IHookContribution })\n], FlowHooksContribution);\nexport { FlowHooksContribution };\n//# sourceMappingURL=flow.js.map"]},"metadata":{},"sourceType":"module"}