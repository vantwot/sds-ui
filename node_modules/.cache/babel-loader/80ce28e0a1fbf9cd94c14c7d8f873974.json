{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { HookHub } from '@antv/xflow-hook';\nimport { XFlowNodeCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nexport var NsMoveNode;\n\n(function (NsMoveNode) {\n  /** Command: 用于注册named factory */\n  NsMoveNode.command = XFlowNodeCommands.MOVE_NODE;\n  /** hookName */\n\n  NsMoveNode.hookKey = 'moveNode';\n  /** 创建 hook */\n\n  NsMoveNode.createHook = function () {\n    return new HookHub();\n  };\n})(NsMoveNode || (NsMoveNode = {}));\n\nvar MoveNodeCommand =\n/*#__PURE__*/\n\n/** 创建节点命令 */\nfunction () {\n  function MoveNodeCommand() {\n    var _this = this;\n\n    _classCallCheck(this, MoveNodeCommand);\n\n    /** 执行Cmd */\n    this.execute = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var ctx, _ctx$getArgs, args, runtimeHook, hooks, result;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                ctx = this.contextProvider();\n                _ctx$getArgs = ctx.getArgs(), args = _ctx$getArgs.args, runtimeHook = _ctx$getArgs.hooks;\n                hooks = ctx.getHooks();\n                _context2.next = 5;\n                return hooks.moveNode.call(args, function (handlerArgs) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var nodePositionService, canDel, _handlerArgs$position, _handlerArgs$position2, dx, _handlerArgs$position3, dy, x, y, _handlerArgs$position4, duration, x6Graph, node, nextX, nextY, _node$position, preX, preY, undo;\n\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            nodePositionService = handlerArgs.nodePositionService;\n                            /** nodePositionService 返回false时不更新position */\n\n                            if (!nodePositionService) {\n                              _context.next = 7;\n                              break;\n                            }\n\n                            _context.next = 4;\n                            return nodePositionService(handlerArgs);\n\n                          case 4:\n                            canDel = _context.sent;\n\n                            if (canDel) {\n                              _context.next = 7;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", {\n                              err: 'service rejected'\n                            });\n\n                          case 7:\n                            _handlerArgs$position = handlerArgs.position, _handlerArgs$position2 = _handlerArgs$position.dx, dx = _handlerArgs$position2 === void 0 ? 0 : _handlerArgs$position2, _handlerArgs$position3 = _handlerArgs$position.dy, dy = _handlerArgs$position3 === void 0 ? 0 : _handlerArgs$position3, x = _handlerArgs$position.x, y = _handlerArgs$position.y, _handlerArgs$position4 = _handlerArgs$position.duration, duration = _handlerArgs$position4 === void 0 ? 150 : _handlerArgs$position4;\n                            _context.next = 10;\n                            return ctx.getX6Graph();\n\n                          case 10:\n                            x6Graph = _context.sent;\n                            node = x6Graph.getCellById(handlerArgs.id);\n\n                            if (!node) {\n                              _context.next = 20;\n                              break;\n                            }\n\n                            nextX = x;\n                            nextY = y;\n                            _node$position = node.position(), preX = _node$position.x, preY = _node$position.y;\n\n                            undo = function undo() {\n                              node.position(preX, preY, {\n                                silent: false\n                              });\n                            };\n\n                            if (dx || dy) {\n                              nextX = dx + preX;\n                              nextY = dy + preY;\n                              node.translate(dx, dy, {\n                                transition: {\n                                  duration: duration\n                                }\n                              });\n\n                              undo = function undo() {\n                                return node.translate(-dx, -dy, {\n                                  transition: {\n                                    duration: duration\n                                  }\n                                });\n                              };\n                            } else {\n                              node.position(nextX, nextY, {\n                                silent: false\n                              });\n                            }\n                            /** add undo  */\n\n\n                            /** add undo  */\n                            ctx.addUndo(Disposable.create(function () {\n                              undo();\n                            }));\n                            return _context.abrupt(\"return\", {\n                              err: null,\n                              nextX: nextX,\n                              nextY: nextY\n                            });\n\n                          case 20:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n                }, runtimeHook);\n\n              case 5:\n                result = _context2.sent;\n                ctx.setResult(result);\n                return _context2.abrupt(\"return\", this);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    };\n    /** undo cmd */\n\n\n    this.undo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var ctx;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                ctx = this.contextProvider();\n\n                if (this.isUndoable()) {\n                  ctx.undo();\n                }\n\n                return _context3.abrupt(\"return\", this);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    };\n    /** redo cmd */\n\n\n    this.redo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.isUndoable()) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.execute();\n\n              case 3:\n                return _context4.abrupt(\"return\", this);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    };\n  }\n\n  _createClass(MoveNodeCommand, [{\n    key: \"isUndoable\",\n    value: function isUndoable() {\n      var ctx = this.contextProvider();\n      return ctx.isUndoable();\n    }\n  }]);\n\n  return MoveNodeCommand;\n}();\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], MoveNodeCommand.prototype, \"contextProvider\", void 0);\n\nMoveNodeCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsMoveNode.command.id\n  }\n})\n/** 创建节点命令 */\n], MoveNodeCommand);\nexport { MoveNodeCommand };","map":{"version":3,"sources":["../../../src/command-contributions/node/node-move.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { HookHub } from '@antv/xflow-hook';\nimport { XFlowNodeCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nexport var NsMoveNode;\n(function (NsMoveNode) {\n    /** Command: 用于注册named factory */\n    NsMoveNode.command = XFlowNodeCommands.MOVE_NODE;\n    /** hookName */\n    NsMoveNode.hookKey = 'moveNode';\n    /** 创建 hook */\n    NsMoveNode.createHook = () => {\n        return new HookHub();\n    };\n})(NsMoveNode || (NsMoveNode = {}));\nlet MoveNodeCommand = \n/** 创建节点命令 */\nclass MoveNodeCommand {\n    constructor() {\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            const { args, hooks: runtimeHook } = ctx.getArgs();\n            const hooks = ctx.getHooks();\n            const result = yield hooks.moveNode.call(args, (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                const { nodePositionService } = handlerArgs;\n                /** nodePositionService 返回false时不更新position */\n                if (nodePositionService) {\n                    const canDel = yield nodePositionService(handlerArgs);\n                    if (!canDel)\n                        return { err: 'service rejected' };\n                }\n                const { dx = 0, dy = 0, x, y, duration = 150 } = handlerArgs.position;\n                const x6Graph = yield ctx.getX6Graph();\n                const node = x6Graph.getCellById(handlerArgs.id);\n                if (node) {\n                    let nextX = x;\n                    let nextY = y;\n                    const { x: preX, y: preY } = node.position();\n                    let undo = () => {\n                        node.position(preX, preY, { silent: false });\n                    };\n                    if (dx || dy) {\n                        nextX = dx + preX;\n                        nextY = dy + preY;\n                        node.translate(dx, dy, { transition: { duration } });\n                        undo = () => node.translate(-dx, -dy, { transition: { duration } });\n                    }\n                    else {\n                        node.position(nextX, nextY, { silent: false });\n                    }\n                    /** add undo  */\n                    ctx.addUndo(Disposable.create(() => {\n                        undo();\n                    }));\n                    return { err: null, nextX, nextY };\n                }\n            }), runtimeHook);\n            ctx.setResult(result);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            if (this.isUndoable()) {\n                ctx.undo();\n            }\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.isUndoable()) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    isUndoable() {\n        const ctx = this.contextProvider();\n        return ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], MoveNodeCommand.prototype, \"contextProvider\", void 0);\nMoveNodeCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsMoveNode.command.id },\n    })\n    /** 创建节点命令 */\n], MoveNodeCommand);\nexport { MoveNodeCommand };\n//# sourceMappingURL=node-move.js.map"]},"metadata":{},"sourceType":"module"}