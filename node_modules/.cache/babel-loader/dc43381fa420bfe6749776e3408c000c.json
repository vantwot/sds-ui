{"ast":null,"code":"import _objectSpread from\"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';/* Libraries */import{Pie}from'@ant-design/charts';/* UI Library Components */import{Card,Empty}from'antd';/* Componentes */import InfoButton from'../infoButton';import{jsx as _jsx}from\"react/jsx-runtime\";var PieChart=function PieChart(_ref){var data=_ref.data,title=_ref.title,_ref$type=_ref.type,type=_ref$type===void 0?'openAccess':_ref$type,core=_ref.core;var bgColor={hybrid:'#6448ff',green:'#25ff76',gold:'#ffc03c',closed:'#b4b4b4',bronze:'#f3663f'};var labels={hybrid:'Híbrido',green:'Verde',gold:'Dorado',closed:'Cerrado',bronze:'Bronce'};var config_a={appendPadding:20,data:data,angleField:'value',colorField:'type',pieStyle:{lineWidth:3},radius:1,innerRadius:0.4,label:{type:'spider',content:'{value} / {percentage}'},interactions:[{type:'element-active'}]};var config_b={appendPadding:20,data:data,angleField:'value',colorField:'type',color:function color(_ref2){var type=_ref2.type;return bgColor[type];},pieStyle:{lineWidth:3},radius:1,innerRadius:0.4,tooltip:{formatter:function formatter(datum){return{name:labels[datum.type],value:datum.value+(datum.value===1?' Producto':' Productos')};}},label:{type:'spider',content:'{value} Productos, {percentage}'},interactions:[{type:'element-active'}],legend:{itemName:{formatter:function formatter(item){return labels[item];}}}};var config=type==='openAccess'?config_b:config_a;return/*#__PURE__*/_jsx(Card,{size:\"small\",title:title,headStyle:{backgroundColor:'#003e65',color:'white'},bodyStyle:{padding:'10px',height:'420px'},hoverable:true,extra:/*#__PURE__*/_jsx(InfoButton,{title:title,type:type,core:core}),children:/*#__PURE__*/_jsx(\"div\",{className:\"chart\",children:data.length>0?/*#__PURE__*/_jsx(Pie,_objectSpread({},config)):/*#__PURE__*/_jsx(Empty,{image:Empty.PRESENTED_IMAGE_SIMPLE,description:\"Datos insuficientes\"})})});};export default PieChart;","map":{"version":3,"sources":["/home/manolo/sds-ui/src/components/charts/PieChart.jsx"],"names":["React","Pie","Card","Empty","InfoButton","PieChart","data","title","type","core","bgColor","hybrid","green","gold","closed","bronze","labels","config_a","appendPadding","angleField","colorField","pieStyle","lineWidth","radius","innerRadius","label","content","interactions","config_b","color","tooltip","formatter","datum","name","value","legend","itemName","item","config","backgroundColor","padding","height","length","PRESENTED_IMAGE_SIMPLE"],"mappings":"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","sourcesContent":["import React from 'react';\n\n/* Libraries */\nimport { Pie } from '@ant-design/charts';\n\n/* UI Library Components */\nimport { Card, Empty } from 'antd';\n\n/* Componentes */\nimport InfoButton from '../infoButton';\n\nconst PieChart = ({ data, title, type = 'openAccess', core }) => {\n  const bgColor = {\n    hybrid: '#6448ff',\n    green: '#25ff76',\n    gold: '#ffc03c',\n    closed: '#b4b4b4',\n    bronze: '#f3663f',\n  };\n\n  const labels = {\n    hybrid: 'Híbrido',\n    green: 'Verde',\n    gold: 'Dorado',\n    closed: 'Cerrado',\n    bronze: 'Bronce',\n  };\n\n  let config_a = {\n    appendPadding: 20,\n    data: data,\n    angleField: 'value',\n    colorField: 'type',\n    pieStyle: { lineWidth: 3 },\n    radius: 1,\n    innerRadius: 0.4,\n    label: {\n      type: 'spider',\n      content: '{value} / {percentage}',\n    },\n    interactions: [{ type: 'element-active' }],\n  };\n\n  let config_b = {\n    appendPadding: 20,\n    data: data,\n    angleField: 'value',\n    colorField: 'type',\n    color: ({ type }) => {\n      return bgColor[type];\n    },\n    pieStyle: { lineWidth: 3 },\n    radius: 1,\n    innerRadius: 0.4,\n    tooltip: {\n      formatter: (datum) => {\n        return {\n          name: labels[datum.type],\n          value: datum.value + (datum.value === 1 ? ' Producto' : ' Productos'),\n        };\n      },\n    },\n    label: {\n      type: 'spider',\n      content: '{value} Productos, {percentage}',\n    },\n    interactions: [{ type: 'element-active' }],\n    legend: {\n      itemName: {\n        formatter: (item) => labels[item],\n      },\n    },\n  };\n\n  let config = type === 'openAccess' ? config_b : config_a;\n\n  return (\n    <Card\n      size=\"small\"\n      title={title}\n      headStyle={{ backgroundColor: '#003e65', color: 'white' }}\n      bodyStyle={{ padding: '10px', height: '420px' }}\n      hoverable\n      extra={<InfoButton title={title} type={type} core={core} />}\n    >\n      <div className=\"chart\">\n        {data.length > 0 ? (\n          <Pie {...config} />\n        ) : (\n          <Empty\n            image={Empty.PRESENTED_IMAGE_SIMPLE}\n            description=\"Datos insuficientes\"\n          />\n        )}\n      </div>\n    </Card>\n  );\n};\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}