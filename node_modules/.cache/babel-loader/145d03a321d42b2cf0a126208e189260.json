{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar util_1 = require(\"../../util\");\n\nvar Point =\n/** @class */\nfunction () {\n  /**\n   * 平面坐标\n   * @param x x坐标\n   * @param y y坐标\n   * @param round 是否取整\n   */\n  function Point(x, y, round) {\n    this.x = round ? Math.round(x) : x;\n    this.y = round ? Math.round(y) : y;\n  }\n\n  Point.prototype.clone = function () {\n    return new Point(this.x, this.y);\n  };\n\n  Point.prototype.add = function (point, y, round) {\n    return this.clone()._add(toPoint(point, y, round));\n  };\n\n  Point.prototype._add = function (point) {\n    this.x += point.x;\n    this.y += point.y;\n    return this;\n  };\n\n  Point.prototype.subtract = function (point, y, round) {\n    return this.clone()._subtract(toPoint(point, y, round));\n  };\n\n  Point.prototype._subtract = function (point) {\n    this.x -= point.x;\n    this.y -= point.y;\n    return this;\n  };\n\n  Point.prototype.divideBy = function (num) {\n    return this.clone()._divideBy(num);\n  };\n\n  Point.prototype._divideBy = function (num) {\n    this.x /= num;\n    this.y /= num;\n    return this;\n  };\n\n  Point.prototype.multiplyBy = function (num) {\n    return this.clone()._multiplyBy(num);\n  };\n\n  Point.prototype._multiplyBy = function (num) {\n    this.x *= num;\n    this.y *= num;\n    return this;\n  };\n\n  Point.prototype.scaleBy = function (point) {\n    return new Point(this.x * point.x, this.y * point.y);\n  };\n\n  Point.prototype.unscaleBy = function (point) {\n    return new Point(this.x / point.x, this.y / point.y);\n  };\n\n  Point.prototype.round = function () {\n    return this.clone()._round();\n  };\n\n  Point.prototype._round = function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  };\n\n  Point.prototype.floor = function () {\n    return this.clone()._floor();\n  };\n\n  Point.prototype._floor = function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  };\n\n  Point.prototype.ceil = function () {\n    return this.clone()._ceil();\n  };\n\n  Point.prototype._ceil = function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  };\n\n  Point.prototype.trunc = function () {\n    return this.clone()._trunc();\n  };\n\n  Point.prototype._trunc = function () {\n    this.x = util_1.trunc(this.x);\n    this.y = util_1.trunc(this.y);\n    return this;\n  };\n\n  Point.prototype.distanceTo = function (point) {\n    var newPoint = toPoint(point);\n    var x = newPoint.x - this.x;\n    var y = newPoint.y - this.y;\n    return Math.sqrt(x * x + y * y);\n  };\n\n  Point.prototype.equals = function (point, threshold) {\n    var newPoint = toPoint(point);\n    var margin = Math.max(Math.abs(this.x - newPoint.x), Math.abs(this.y - newPoint.y));\n    return margin <= (threshold === undefined ? 1.0e-9 : threshold);\n  };\n\n  Point.prototype.contains = function (point) {\n    var newPoint = toPoint(point);\n    return Math.abs(newPoint.x) <= Math.abs(this.x) && Math.abs(newPoint.y) <= Math.abs(this.y);\n  };\n\n  Point.prototype.toString = function () {\n    return \"Point(\" + util_1.formatNum(this.x) + \", \" + util_1.formatNum(this.y) + \")\";\n  };\n\n  return Point;\n}();\n\nexports.Point = Point;\n\nfunction toPoint(x, y, round) {\n  if (x instanceof Point) {\n    return x;\n  }\n\n  if (Array.isArray(x)) {\n    return new Point(x[0], x[1]);\n  }\n\n  if (x === undefined || x === null) {\n    return x;\n  }\n\n  if (typeof x === 'object' && 'x' in x && 'y' in x) {\n    return new Point(x.x, x.y);\n  }\n\n  return new Point(x, y, round);\n}\n\nexports.toPoint = toPoint;","map":{"version":3,"sources":["../../../src/geo/geometry/point.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar util_1 = require(\"../../util\");\nvar Point = /** @class */ (function () {\n    /**\n     * 平面坐标\n     * @param x x坐标\n     * @param y y坐标\n     * @param round 是否取整\n     */\n    function Point(x, y, round) {\n        this.x = round ? Math.round(x) : x;\n        this.y = round ? Math.round(y) : y;\n    }\n    Point.prototype.clone = function () {\n        return new Point(this.x, this.y);\n    };\n    Point.prototype.add = function (point, y, round) {\n        return this.clone()._add(toPoint(point, y, round));\n    };\n    Point.prototype._add = function (point) {\n        this.x += point.x;\n        this.y += point.y;\n        return this;\n    };\n    Point.prototype.subtract = function (point, y, round) {\n        return this.clone()._subtract(toPoint(point, y, round));\n    };\n    Point.prototype._subtract = function (point) {\n        this.x -= point.x;\n        this.y -= point.y;\n        return this;\n    };\n    Point.prototype.divideBy = function (num) {\n        return this.clone()._divideBy(num);\n    };\n    Point.prototype._divideBy = function (num) {\n        this.x /= num;\n        this.y /= num;\n        return this;\n    };\n    Point.prototype.multiplyBy = function (num) {\n        return this.clone()._multiplyBy(num);\n    };\n    Point.prototype._multiplyBy = function (num) {\n        this.x *= num;\n        this.y *= num;\n        return this;\n    };\n    Point.prototype.scaleBy = function (point) {\n        return new Point(this.x * point.x, this.y * point.y);\n    };\n    Point.prototype.unscaleBy = function (point) {\n        return new Point(this.x / point.x, this.y / point.y);\n    };\n    Point.prototype.round = function () {\n        return this.clone()._round();\n    };\n    Point.prototype._round = function () {\n        this.x = Math.round(this.x);\n        this.y = Math.round(this.y);\n        return this;\n    };\n    Point.prototype.floor = function () {\n        return this.clone()._floor();\n    };\n    Point.prototype._floor = function () {\n        this.x = Math.floor(this.x);\n        this.y = Math.floor(this.y);\n        return this;\n    };\n    Point.prototype.ceil = function () {\n        return this.clone()._ceil();\n    };\n    Point.prototype._ceil = function () {\n        this.x = Math.ceil(this.x);\n        this.y = Math.ceil(this.y);\n        return this;\n    };\n    Point.prototype.trunc = function () {\n        return this.clone()._trunc();\n    };\n    Point.prototype._trunc = function () {\n        this.x = util_1.trunc(this.x);\n        this.y = util_1.trunc(this.y);\n        return this;\n    };\n    Point.prototype.distanceTo = function (point) {\n        var newPoint = toPoint(point);\n        var x = newPoint.x - this.x;\n        var y = newPoint.y - this.y;\n        return Math.sqrt(x * x + y * y);\n    };\n    Point.prototype.equals = function (point, threshold) {\n        var newPoint = toPoint(point);\n        var margin = Math.max(Math.abs(this.x - newPoint.x), Math.abs(this.y - newPoint.y));\n        return margin <= (threshold === undefined ? 1.0e-9 : threshold);\n    };\n    Point.prototype.contains = function (point) {\n        var newPoint = toPoint(point);\n        return (Math.abs(newPoint.x) <= Math.abs(this.x) &&\n            Math.abs(newPoint.y) <= Math.abs(this.y));\n    };\n    Point.prototype.toString = function () {\n        return \"Point(\" + util_1.formatNum(this.x) + \", \" + util_1.formatNum(this.y) + \")\";\n    };\n    return Point;\n}());\nexports.Point = Point;\nfunction toPoint(x, y, round) {\n    if (x instanceof Point) {\n        return x;\n    }\n    if (Array.isArray(x)) {\n        return new Point(x[0], x[1]);\n    }\n    if (x === undefined || x === null) {\n        return x;\n    }\n    if (typeof x === 'object' && 'x' in x && 'y' in x) {\n        return new Point(x.x, x.y);\n    }\n    return new Point(x, y, round);\n}\nexports.toPoint = toPoint;\n//# sourceMappingURL=point.js.map"]},"metadata":{},"sourceType":"script"}