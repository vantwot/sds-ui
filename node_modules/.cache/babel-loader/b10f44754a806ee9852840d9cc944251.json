{"ast":null,"code":"import React from 'react';\nimport { Form, Checkbox as ACheckbox } from 'antd';\nimport { FormItemWrapper } from '../../common/form-item-wrapper';\nimport { renderFormItemExtra } from '../../common/tooltip';\nexport var Checkbox = function Checkbox(props) {\n  var controlSchema = props.controlSchema;\n  var required = controlSchema.required,\n      tooltip = controlSchema.tooltip,\n      extra = controlSchema.extra,\n      name = controlSchema.name,\n      label = controlSchema.label;\n  return React.createElement(FormItemWrapper, {\n    schema: controlSchema\n  }, function (_a) {\n    var hidden = _a.hidden,\n        disabled = _a.disabled,\n        initialValue = _a.initialValue;\n    return React.createElement(Form.Item, {\n      className: \"xflow-form-checkbox\",\n      name: name,\n      initialValue: initialValue,\n      tooltip: tooltip,\n      extra: renderFormItemExtra(extra),\n      required: required,\n      hidden: hidden,\n      valuePropName: \"checked\",\n      getValueProps: function getValueProps(checked) {\n        var checkedMap = {\n          true: true,\n          false: false\n        };\n        return {\n          checked: !!checkedMap[checked]\n        };\n      }\n    }, React.createElement(ACheckbox, {\n      disabled: disabled\n    }, label));\n  });\n};","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@ant-design/flowchart/es/components/canvas-json-schema-form/schema-form/control-map/checkbox/index.js"],"names":["React","Form","Checkbox","ACheckbox","FormItemWrapper","renderFormItemExtra","props","controlSchema","required","tooltip","extra","name","label","createElement","schema","_a","hidden","disabled","initialValue","Item","className","valuePropName","getValueProps","checked","checkedMap","true","false"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,QAAQ,IAAIC,SAA3B,QAA4C,MAA5C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAO,IAAIH,QAAQ,GAAG,SAAXA,QAAW,CAAUI,KAAV,EAAiB;AACnC,MAAIC,aAAa,GAAGD,KAAK,CAACC,aAA1B;AACA,MAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AAAA,MAAuCC,OAAO,GAAGF,aAAa,CAACE,OAA/D;AAAA,MAAwEC,KAAK,GAAGH,aAAa,CAACG,KAA9F;AAAA,MAAqGC,IAAI,GAAGJ,aAAa,CAACI,IAA1H;AAAA,MAAgIC,KAAK,GAAGL,aAAa,CAACK,KAAtJ;AACA,SAAQZ,KAAK,CAACa,aAAN,CAAoBT,eAApB,EAAqC;AAAEU,IAAAA,MAAM,EAAEP;AAAV,GAArC,EAAgE,UAAUQ,EAAV,EAAc;AAClF,QAAIC,MAAM,GAAGD,EAAE,CAACC,MAAhB;AAAA,QAAwBC,QAAQ,GAAGF,EAAE,CAACE,QAAtC;AAAA,QAAgDC,YAAY,GAAGH,EAAE,CAACG,YAAlE;AACA,WAAQlB,KAAK,CAACa,aAAN,CAAoBZ,IAAI,CAACkB,IAAzB,EAA+B;AAAEC,MAAAA,SAAS,EAAE,qBAAb;AAAoCT,MAAAA,IAAI,EAAEA,IAA1C;AAAgDO,MAAAA,YAAY,EAAEA,YAA9D;AAA4ET,MAAAA,OAAO,EAAEA,OAArF;AAA8FC,MAAAA,KAAK,EAAEL,mBAAmB,CAACK,KAAD,CAAxH;AAAiIF,MAAAA,QAAQ,EAAEA,QAA3I;AAAqJQ,MAAAA,MAAM,EAAEA,MAA7J;AAAqKK,MAAAA,aAAa,EAAE,SAApL;AAA+LC,MAAAA,aAAa,EAAE,uBAAUC,OAAV,EAAmB;AAChQ,YAAIC,UAAU,GAAG;AACbC,UAAAA,IAAI,EAAE,IADO;AAEbC,UAAAA,KAAK,EAAE;AAFM,SAAjB;AAIA,eAAO;AAAEH,UAAAA,OAAO,EAAE,CAAC,CAACC,UAAU,CAACD,OAAD;AAAvB,SAAP;AACH;AANkC,KAA/B,EAOJvB,KAAK,CAACa,aAAN,CAAoBV,SAApB,EAA+B;AAAEc,MAAAA,QAAQ,EAAEA;AAAZ,KAA/B,EAAuDL,KAAvD,CAPI,CAAR;AAQH,GAVO,CAAR;AAWH,CAdM","sourcesContent":["import React from 'react';\nimport { Form, Checkbox as ACheckbox } from 'antd';\nimport { FormItemWrapper } from '../../common/form-item-wrapper';\nimport { renderFormItemExtra } from '../../common/tooltip';\nexport var Checkbox = function (props) {\n    var controlSchema = props.controlSchema;\n    var required = controlSchema.required, tooltip = controlSchema.tooltip, extra = controlSchema.extra, name = controlSchema.name, label = controlSchema.label;\n    return (React.createElement(FormItemWrapper, { schema: controlSchema }, function (_a) {\n        var hidden = _a.hidden, disabled = _a.disabled, initialValue = _a.initialValue;\n        return (React.createElement(Form.Item, { className: \"xflow-form-checkbox\", name: name, initialValue: initialValue, tooltip: tooltip, extra: renderFormItemExtra(extra), required: required, hidden: hidden, valuePropName: \"checked\", getValueProps: function (checked) {\n                var checkedMap = {\n                    true: true,\n                    false: false,\n                };\n                return { checked: !!checkedMap[checked] };\n            } },\n            React.createElement(ACheckbox, { disabled: disabled }, label)));\n    }));\n};\n"]},"metadata":{},"sourceType":"module"}