{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport 'reflect-metadata';\nimport { singleton, inject, contrib, Contribution } from 'mana-syringe';\nimport debounce from 'lodash/debounce';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isBoolean from 'lodash/isBoolean';\nimport { Disposable, DisposableCollection } from '../common/disposable';\nimport { IFrontendApplicationContribution } from '../xflow-main/interface';\nimport { RxModel } from '../common/rx-model';\nimport { IGraphCommandService } from '../command';\nimport { IModelService } from '../model-service';\nimport { IToolbarService, IToolbarContribution } from './interface';\n/**\n * Main, shared registry for toolbar items.\n */\n\nvar ToolbarRegistry = /*#__PURE__*/function () {\n  function ToolbarRegistry() {\n    var _this = this;\n\n    _classCallCheck(this, ToolbarRegistry);\n\n    /** disposables */\n    this.toDispose = new DisposableCollection();\n    /** 储存所有toolbar items */\n\n    this.toolbarItems = new Map();\n    /** 注册ToolbarRegistry的onChange的事件 */\n\n    this.onDidChangeEvent = new RxModel(null);\n    /** 通过ToolbarRegistry.onDidChange监听ToolbarRegistry items的变化  */\n\n    this.onDidChange = this.onDidChangeEvent.watch;\n    /** debounce in order to avoid to fire more than once in the same tick */\n\n    this.fireOnDidChange = debounce(function () {\n      return _this.onDidChangeEvent.setValue(undefined);\n    }, 16);\n    /**\n     * 批量注册可单独dispose的扩展项目\n     * @param externalRegisterFn IRegisterMenuFunction\n     */\n\n    this.registerDisposableToolbar = function (externalRegisterFn) {\n      var toDispose = new DisposableCollection();\n      var disposableRegistry = {\n        registerToolbarItem: function registerToolbarItem(config) {\n          var disposable = _this.registerItem(config);\n\n          toDispose.push(disposable);\n          return disposable;\n        }\n      };\n      externalRegisterFn(disposableRegistry);\n\n      _this.toDispose.push(toDispose);\n\n      return toDispose;\n    };\n    /**\n     * 获取 ToolbarModel\n     * @param toolbarConfig IToolbarOptions\n     */\n\n\n    this.getToolbarModel = function (toolbarConfig) {\n      var layout = toolbarConfig.layout,\n          _toolbarConfig$mainGr = toolbarConfig.mainGroups,\n          mainGroups = _toolbarConfig$mainGr === void 0 ? [] : _toolbarConfig$mainGr,\n          _toolbarConfig$extraG = toolbarConfig.extraGroups,\n          extraGroups = _toolbarConfig$extraG === void 0 ? [] : _toolbarConfig$extraG;\n      return new RxModel({\n        layout: layout,\n        mainGroups: _this.createToolbarGroupModel(mainGroups),\n        extraGroups: _this.createToolbarGroupModel(extraGroups)\n      });\n    };\n    /**\n     * 创建 ToolbarModel\n     * @param groups IToolbarGroupOptions[]\n     */\n\n\n    this.createToolbarGroupModel = function (groups) {\n      var groupModels = groups.map(function (group) {\n        var _group$items = group.items,\n            items = _group$items === void 0 ? [] : _group$items;\n        return Object.assign(Object.assign({}, group), {\n          items: items.map(function (item) {\n            return _this.createToolbarModel({\n              id: item.id\n            });\n          }).filter(function (i) {\n            return !!i;\n          })\n        });\n      });\n      return groupModels;\n    };\n  }\n  /** App启动时，收集Toolbar扩展点的注册项 */\n\n\n  _createClass(ToolbarRegistry, [{\n    key: \"onStart\",\n    value: function onStart() {\n      var contributions = this.contributionProvider.getContributions();\n\n      var _iterator = _createForOfIteratorHelper(contributions),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var contribution = _step.value;\n          contribution.registerToolbarItems(this);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    /**\n     * App 销毁时调用\n     * dispose toolbarProvider\n     */\n\n  }, {\n    key: \"onStop\",\n    value: function onStop() {\n      this.toDispose.dispose();\n    }\n    /**\n     * 注册ToolbarItem\n     * item所需的command需要提前在command registry注册\n     * @param config IToolbarItem\n     */\n\n  }, {\n    key: \"registerItem\",\n    value: function registerItem(config) {\n      var _this2 = this;\n\n      if (this.toolbarItems.has(config.id)) {\n        console.warn(\"ToolbarRegistry \".concat(config.id, \" is duplicated, in\"), config);\n      }\n      /** 注册 */\n\n\n      this.toolbarItems.set(config.id, config);\n      /** 通知更新 */\n\n      this.fireOnDidChange();\n      var toDispose = new DisposableCollection(Disposable.create(function () {\n        return _this2.fireOnDidChange();\n      }), Disposable.create(function () {\n        return _this2.toolbarItems.delete(config.id);\n      }));\n      return toDispose;\n    }\n    /**\n     * 创建 ToolbarModel\n     * @param option IToolbarItem\n     */\n\n  }, {\n    key: \"createToolbarModel\",\n    value: function createToolbarModel(option) {\n      var item = cloneDeep(this.toolbarItems.get(option.id));\n      var isEnabled = isBoolean(item.isEnabled) ? item.isEnabled : true;\n      var isVisible = isBoolean(item.isVisible) ? item.isVisible : true;\n      var toolbarItem = Object.assign(Object.assign({}, item), {\n        isEnabled: isEnabled,\n        isVisible: isVisible,\n        iconName: item.iconName,\n        text: item.text\n      });\n      return toolbarItem;\n    }\n  }]);\n\n  return ToolbarRegistry;\n}();\n\n__decorate([inject(IGraphCommandService), __metadata(\"design:type\", Object)], ToolbarRegistry.prototype, \"commandService\", void 0);\n\n__decorate([inject(IModelService), __metadata(\"design:type\", Object)], ToolbarRegistry.prototype, \"modelService\", void 0);\n\n__decorate([contrib(IToolbarContribution), __metadata(\"design:type\", Object)], ToolbarRegistry.prototype, \"contributionProvider\", void 0);\n\nToolbarRegistry = __decorate([singleton({\n  contrib: [IFrontendApplicationContribution, IToolbarService]\n})], ToolbarRegistry);\nexport { ToolbarRegistry };","map":{"version":3,"sources":["../../src/toolbar/toolbar-registry.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport 'reflect-metadata';\nimport { singleton, inject, contrib, Contribution } from 'mana-syringe';\nimport debounce from 'lodash/debounce';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isBoolean from 'lodash/isBoolean';\nimport { Disposable, DisposableCollection } from '../common/disposable';\nimport { IFrontendApplicationContribution } from '../xflow-main/interface';\nimport { RxModel } from '../common/rx-model';\nimport { IGraphCommandService } from '../command';\nimport { IModelService } from '../model-service';\nimport { IToolbarService, IToolbarContribution } from './interface';\n/**\n * Main, shared registry for toolbar items.\n */\nlet ToolbarRegistry = class ToolbarRegistry {\n    constructor() {\n        /** disposables */\n        this.toDispose = new DisposableCollection();\n        /** 储存所有toolbar items */\n        this.toolbarItems = new Map();\n        /** 注册ToolbarRegistry的onChange的事件 */\n        this.onDidChangeEvent = new RxModel(null);\n        /** 通过ToolbarRegistry.onDidChange监听ToolbarRegistry items的变化  */\n        this.onDidChange = this.onDidChangeEvent.watch;\n        /** debounce in order to avoid to fire more than once in the same tick */\n        this.fireOnDidChange = debounce(() => this.onDidChangeEvent.setValue(undefined), 16);\n        /**\n         * 批量注册可单独dispose的扩展项目\n         * @param externalRegisterFn IRegisterMenuFunction\n         */\n        this.registerDisposableToolbar = (externalRegisterFn) => {\n            const toDispose = new DisposableCollection();\n            const disposableRegistry = {\n                registerToolbarItem: config => {\n                    const disposable = this.registerItem(config);\n                    toDispose.push(disposable);\n                    return disposable;\n                },\n            };\n            externalRegisterFn(disposableRegistry);\n            this.toDispose.push(toDispose);\n            return toDispose;\n        };\n        /**\n         * 获取 ToolbarModel\n         * @param toolbarConfig IToolbarOptions\n         */\n        this.getToolbarModel = (toolbarConfig) => {\n            const { layout, mainGroups = [], extraGroups = [] } = toolbarConfig;\n            return new RxModel({\n                layout,\n                mainGroups: this.createToolbarGroupModel(mainGroups),\n                extraGroups: this.createToolbarGroupModel(extraGroups),\n            });\n        };\n        /**\n         * 创建 ToolbarModel\n         * @param groups IToolbarGroupOptions[]\n         */\n        this.createToolbarGroupModel = (groups) => {\n            const groupModels = groups.map(group => {\n                const { items = [] } = group;\n                return Object.assign(Object.assign({}, group), { items: items.map(item => this.createToolbarModel({ id: item.id })).filter(i => !!i) });\n            });\n            return groupModels;\n        };\n    }\n    /** App启动时，收集Toolbar扩展点的注册项 */\n    onStart() {\n        const contributions = this.contributionProvider.getContributions();\n        for (const contribution of contributions) {\n            contribution.registerToolbarItems(this);\n        }\n    }\n    /**\n     * App 销毁时调用\n     * dispose toolbarProvider\n     */\n    onStop() {\n        this.toDispose.dispose();\n    }\n    /**\n     * 注册ToolbarItem\n     * item所需的command需要提前在command registry注册\n     * @param config IToolbarItem\n     */\n    registerItem(config) {\n        if (this.toolbarItems.has(config.id)) {\n            console.warn(`ToolbarRegistry ${config.id} is duplicated, in`, config);\n        }\n        /** 注册 */\n        this.toolbarItems.set(config.id, config);\n        /** 通知更新 */\n        this.fireOnDidChange();\n        const toDispose = new DisposableCollection(Disposable.create(() => this.fireOnDidChange()), Disposable.create(() => this.toolbarItems.delete(config.id)));\n        return toDispose;\n    }\n    /**\n     * 创建 ToolbarModel\n     * @param option IToolbarItem\n     */\n    createToolbarModel(option) {\n        const item = cloneDeep(this.toolbarItems.get(option.id));\n        const isEnabled = isBoolean(item.isEnabled) ? item.isEnabled : true;\n        const isVisible = isBoolean(item.isVisible) ? item.isVisible : true;\n        const toolbarItem = Object.assign(Object.assign({}, item), { isEnabled: isEnabled, isVisible: isVisible, iconName: item.iconName, text: item.text });\n        return toolbarItem;\n    }\n};\n__decorate([\n    inject(IGraphCommandService),\n    __metadata(\"design:type\", Object)\n], ToolbarRegistry.prototype, \"commandService\", void 0);\n__decorate([\n    inject(IModelService),\n    __metadata(\"design:type\", Object)\n], ToolbarRegistry.prototype, \"modelService\", void 0);\n__decorate([\n    contrib(IToolbarContribution),\n    __metadata(\"design:type\", Object)\n], ToolbarRegistry.prototype, \"contributionProvider\", void 0);\nToolbarRegistry = __decorate([\n    singleton({ contrib: [IFrontendApplicationContribution, IToolbarService] })\n], ToolbarRegistry);\nexport { ToolbarRegistry };\n//# sourceMappingURL=toolbar-registry.js.map"]},"metadata":{},"sourceType":"module"}