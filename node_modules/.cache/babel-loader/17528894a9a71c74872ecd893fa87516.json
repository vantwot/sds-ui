{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React from 'react';\nimport { createModule } from '../module';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nexport const MenuRegistry = props => {\n  const {} = props;\n  /** 获取配置中心 */\n\n  const extensionRegistry = useExtensionRegistry();\n  React.useEffect(() => {\n    const disposable = extensionRegistry.addCoreModule({\n      config: {\n        CONFIG_TYPE: 'MenuRegistry',\n        getConfig: () => __awaiter(void 0, void 0, void 0, function* () {})\n      },\n      createModule\n    });\n    return () => {\n      disposable.dispose();\n    };\n    /* eslint-disable-next-line  */\n  }, []);\n  return null;\n};\nMenuRegistry.defaultProps = {\n  XFlowModuleType: 'MenuRegistry'\n};","map":{"version":3,"sources":["../../../src/menu/components/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,YAAT,QAA6B,WAA7B;AACA,SAAS,oBAAT,QAAqC,+CAArC;AAIA,OAAO,MAAM,YAAY,GAAqB,KAAK,IAAG;AACpD,QAAM,KAAK,KAAX;AACA;;AACA,QAAM,iBAAiB,GAAG,oBAAoB,EAA9C;AAEA,EAAA,KAAK,CAAC,SAAN,CAAgB,MAAK;AACnB,UAAM,UAAU,GAAG,iBAAiB,CAAC,aAAlB,CAAgC;AACjD,MAAA,MAAM,EAAE;AAAE,QAAA,WAAW,EAAE,cAAf;AAA+B,QAAA,SAAS,EAAE,MAAW,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA,CAAG,CAAH;AAArD,OADyC;AAEjD,MAAA;AAFiD,KAAhC,CAAnB;AAIA,WAAO,MAAK;AACV,MAAA,UAAU,CAAC,OAAX;AACD,KAFD;AAGA;AACD,GATD,EASG,EATH;AAWA,SAAO,IAAP;AACD,CAjBM;AAmBP,YAAY,CAAC,YAAb,GAA4B;AAAE,EAAA,eAAe,EAAE;AAAnB,CAA5B","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from 'react';\nimport { createModule } from '../module';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nexport const MenuRegistry = props => {\n    const {} = props;\n    /** 获取配置中心 */\n    const extensionRegistry = useExtensionRegistry();\n    React.useEffect(() => {\n        const disposable = extensionRegistry.addCoreModule({\n            config: { CONFIG_TYPE: 'MenuRegistry', getConfig: () => __awaiter(void 0, void 0, void 0, function* () { }) },\n            createModule,\n        });\n        return () => {\n            disposable.dispose();\n        };\n        /* eslint-disable-next-line  */\n    }, []);\n    return null;\n};\nMenuRegistry.defaultProps = { XFlowModuleType: 'MenuRegistry' };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}