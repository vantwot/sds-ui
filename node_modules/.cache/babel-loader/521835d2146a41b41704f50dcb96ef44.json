{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React from 'react';\nimport { useXflowPrefixCls } from '@antv/xflow-core';\nimport { PanelFooter } from './panel-footer';\nimport { PanelHeader } from './panel-header';\nimport { PanelBody } from './panel-body';\nimport { usePanelLyaoutStyle } from './utils';\nimport { useJsonSchemaFormModel } from './service';\nexport { FormItemWrapper } from './schema-form';\nexport { executeJsonSchemaFormCommand } from './service';\nimport { WorkspacePanel } from '../base-panel';\n/** useFormPanelData获取数据 */\n\nexport var JsonSchemaFormMain = function JsonSchemaFormMain(props) {\n  var prefixClz = props.prefixClz;\n  var getCustomRenderComponent = props.getCustomRenderComponent,\n      afterUpdatingCb = props.afterUpdatingCb,\n      _props$formValueUpdat = props.formValueUpdateService,\n      formValueUpdateService = _props$formValueUpdat === void 0 ? function () {} : _props$formValueUpdat;\n\n  var _useJsonSchemaFormMod = useJsonSchemaFormModel(props),\n      state = _useJsonSchemaFormMod.state,\n      commandService = _useJsonSchemaFormMod.commandService,\n      modelService = _useJsonSchemaFormMod.modelService; // 联动更新form items的值\n\n\n  var triggerUpdate = React.useCallback(function (form) {\n    var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var changedFields, allFields, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              form.setFieldsValue(values);\n              changedFields = Object.entries(values).map(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 2),\n                    key = _ref2[0],\n                    val = _ref2[1];\n\n                return {\n                  name: key,\n                  value: val\n                };\n              });\n              allFields = Object.entries(state.targetData).map(function (_ref3) {\n                var _ref4 = _slicedToArray(_ref3, 2),\n                    key = _ref4[0],\n                    val = _ref4[1];\n\n                return {\n                  name: key,\n                  value: val\n                };\n              });\n              _context.next = 5;\n              return formValueUpdateService({\n                allFields: allFields,\n                values: changedFields,\n                modelService: modelService,\n                commandService: commandService,\n                targetData: state.targetData,\n                targetType: state.targetType\n              });\n\n            case 5:\n              result = _context.sent;\n\n              if (afterUpdatingCb) {\n                afterUpdatingCb(result);\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  }, [afterUpdatingCb, commandService, formValueUpdateService, modelService, state.targetData, state.targetType]); // 在fields change时的回调\n\n  var onFieldsChange = React.useCallback(function (changedFields, allFields) {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return formValueUpdateService({\n                values: changedFields,\n                allFields: allFields,\n                modelService: modelService,\n                commandService: commandService,\n                targetData: state.targetData,\n                targetType: state.targetType\n              });\n\n            case 2:\n              result = _context2.sent;\n\n              if (afterUpdatingCb) {\n                afterUpdatingCb(result);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n  }, [afterUpdatingCb, commandService, formValueUpdateService, modelService, state.targetData, state.targetType]);\n  /** schema为空的情况  */\n\n  var noSchema = React.useMemo(function () {\n    try {\n      return state.schema.tabs.length === 0 || !state.schema;\n    } catch (error) {\n      return true;\n    }\n  }, [state.schema]);\n\n  var _usePanelLyaoutStyle = usePanelLyaoutStyle(props, noSchema),\n      headerStyle = _usePanelLyaoutStyle.headerStyle,\n      bodyStyle = _usePanelLyaoutStyle.bodyStyle,\n      footerStyle = _usePanelLyaoutStyle.footerStyle;\n  /** 支持自定义渲染 */\n\n\n  if (getCustomRenderComponent) {\n    var Component = getCustomRenderComponent(state.targetType, state.targetData, modelService, commandService);\n\n    if (Component) {\n      return React.createElement(Component, Object.assign(Object.assign({}, props), {\n        headerStyle: headerStyle,\n        bodyStyle: bodyStyle,\n        footerStyle: footerStyle,\n        targetData: state.targetData,\n        targetType: state.targetType,\n        modelService: modelService,\n        commandService: commandService\n      }));\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: prefixClz\n  }, React.createElement(PanelHeader, Object.assign({\n    hasSchema: !noSchema\n  }, props, {\n    state: state,\n    style: headerStyle,\n    prefixClz: props.prefixClz\n  })), React.createElement(PanelBody, Object.assign({}, props, {\n    key: state.targetData && state.targetData.id,\n    style: bodyStyle,\n    prefixClz: props.prefixClz,\n    loading: state.loading,\n    schema: state.schema,\n    triggerUpdate: triggerUpdate,\n    onFieldsChange: onFieldsChange\n  })), React.createElement(PanelFooter, Object.assign({}, props, {\n    state: state,\n    style: footerStyle\n  })));\n};\nexport var JsonSchemaForm = function JsonSchemaForm(props) {\n  var prefixClz = useXflowPrefixCls('json-schema-form');\n  return React.createElement(WorkspacePanel, Object.assign({}, props, {\n    className: prefixClz\n  }), React.createElement(JsonSchemaFormMain, Object.assign({}, props, {\n    prefixClz: prefixClz\n  })));\n};","map":{"version":3,"sources":["../../src/canvas-json-schema-form/main.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from 'react';\nimport { useXflowPrefixCls } from '@antv/xflow-core';\nimport { PanelFooter } from './panel-footer';\nimport { PanelHeader } from './panel-header';\nimport { PanelBody } from './panel-body';\nimport { usePanelLyaoutStyle } from './utils';\nimport { useJsonSchemaFormModel } from './service';\nexport { FormItemWrapper } from './schema-form';\nexport { executeJsonSchemaFormCommand } from './service';\nimport { WorkspacePanel } from '../base-panel';\n/** useFormPanelData获取数据 */\nexport const JsonSchemaFormMain = props => {\n    const { prefixClz } = props;\n    const { getCustomRenderComponent, afterUpdatingCb, formValueUpdateService = () => { } } = props;\n    const { state, commandService, modelService } = useJsonSchemaFormModel(props);\n    // 联动更新form items的值\n    const triggerUpdate = React.useCallback((form, values = {}) => __awaiter(void 0, void 0, void 0, function* () {\n        form.setFieldsValue(values);\n        const changedFields = Object.entries(values).map(([key, val]) => {\n            return { name: key, value: val };\n        });\n        const allFields = Object.entries(state.targetData).map(([key, val]) => {\n            return { name: key, value: val };\n        });\n        const result = yield formValueUpdateService({\n            allFields: allFields,\n            values: changedFields,\n            modelService,\n            commandService,\n            targetData: state.targetData,\n            targetType: state.targetType,\n        });\n        if (afterUpdatingCb) {\n            afterUpdatingCb(result);\n        }\n    }), [\n        afterUpdatingCb,\n        commandService,\n        formValueUpdateService,\n        modelService,\n        state.targetData,\n        state.targetType,\n    ]);\n    // 在fields change时的回调\n    const onFieldsChange = React.useCallback((changedFields, allFields) => __awaiter(void 0, void 0, void 0, function* () {\n        const result = yield formValueUpdateService({\n            values: changedFields,\n            allFields,\n            modelService,\n            commandService,\n            targetData: state.targetData,\n            targetType: state.targetType,\n        });\n        if (afterUpdatingCb) {\n            afterUpdatingCb(result);\n        }\n    }), [\n        afterUpdatingCb,\n        commandService,\n        formValueUpdateService,\n        modelService,\n        state.targetData,\n        state.targetType,\n    ]);\n    /** schema为空的情况  */\n    const noSchema = React.useMemo(() => {\n        try {\n            return state.schema.tabs.length === 0 || !state.schema;\n        }\n        catch (error) {\n            return true;\n        }\n    }, [state.schema]);\n    const { headerStyle, bodyStyle, footerStyle } = usePanelLyaoutStyle(props, noSchema);\n    /** 支持自定义渲染 */\n    if (getCustomRenderComponent) {\n        const Component = getCustomRenderComponent(state.targetType, state.targetData, modelService, commandService);\n        if (Component) {\n            return React.createElement(Component, Object.assign(Object.assign({}, props), { headerStyle,\n                bodyStyle,\n                footerStyle, targetData: state.targetData, targetType: state.targetType, modelService: modelService, commandService: commandService }));\n        }\n    }\n    return (React.createElement(\"div\", { className: prefixClz },\n        React.createElement(PanelHeader, Object.assign({ hasSchema: !noSchema }, props, { state: state, style: headerStyle, prefixClz: props.prefixClz })),\n        React.createElement(PanelBody, Object.assign({}, props, { key: state.targetData && state.targetData.id, style: bodyStyle, prefixClz: props.prefixClz, loading: state.loading, schema: state.schema, triggerUpdate: triggerUpdate, onFieldsChange: onFieldsChange })),\n        React.createElement(PanelFooter, Object.assign({}, props, { state: state, style: footerStyle }))));\n};\nexport const JsonSchemaForm = props => {\n    const prefixClz = useXflowPrefixCls('json-schema-form');\n    return (React.createElement(WorkspacePanel, Object.assign({}, props, { className: prefixClz }),\n        React.createElement(JsonSchemaFormMain, Object.assign({}, props, { prefixClz: prefixClz }))));\n};\n//# sourceMappingURL=main.js.map"]},"metadata":{},"sourceType":"module"}