{"ast":null,"code":"import React from 'react';\nimport classNames from 'classnames';\nimport { MenuContext } from './context';\nexport class MenuItemInner extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    this.onHotkey = () => {\n      this.triggerHandler();\n    };\n\n    this.onClick = e => {\n      this.triggerHandler(e);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      hotkey\n    } = this.props;\n\n    if (hotkey) {\n      this.props.context.registerHotkey(hotkey, this.onHotkey);\n    }\n  }\n\n  componentWillUnmount() {\n    const {\n      hotkey\n    } = this.props;\n\n    if (hotkey) {\n      this.props.context.unregisterHotkey(hotkey, this.onHotkey);\n    }\n  }\n\n  triggerHandler(e) {\n    if (!this.props.disabled && !this.props.hidden) {\n      if (this.props.name) {\n        this.props.context.onClick(this.props.name, e);\n      }\n\n      if (this.props.onClick) {\n        this.props.onClick();\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", Object.assign({}, MenuItemInner.getProps(this.props)), MenuItemInner.getContent(this.props, this.onClick));\n  }\n\n}\n\n(function (MenuItemInner) {\n  function getProps(props, extraCls) {\n    const {\n      className,\n      disabled,\n      active,\n      hidden\n    } = props;\n    const {\n      prefixCls\n    } = props.context;\n    const baseCls = `${prefixCls}-item`;\n    return {\n      className: classNames(baseCls, extraCls, {\n        [`${baseCls}-active`]: active,\n        [`${baseCls}-hidden`]: hidden,\n        [`${baseCls}-disabled`]: disabled\n      }, className)\n    };\n  }\n\n  MenuItemInner.getProps = getProps;\n\n  function getContent(props, onClick, innerExtra, outerExtra) {\n    const {\n      icon,\n      text,\n      hotkey,\n      children\n    } = props;\n    const {\n      prefixCls\n    } = props.context;\n    const baseCls = `${prefixCls}-item`;\n    return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      type: \"button\",\n      className: `${baseCls}-button`,\n      onClick: onClick\n    }, icon && React.isValidElement(icon) && React.createElement(\"span\", {\n      className: `${baseCls}-icon`\n    }, icon), React.createElement(\"span\", {\n      className: `${baseCls}-text`\n    }, text || children), hotkey && React.createElement(\"span\", {\n      className: `${baseCls}-hotkey`\n    }, hotkey), innerExtra), outerExtra);\n  }\n\n  MenuItemInner.getContent = getContent;\n})(MenuItemInner || (MenuItemInner = {}));\n\nexport const MenuItem = props => React.createElement(MenuContext.Consumer, null, context => React.createElement(MenuItemInner, Object.assign({\n  context: context\n}, props)));","map":{"version":3,"sources":["../../src/menu/item.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { MenuContext } from './context';\nexport class MenuItemInner extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.onHotkey = () => {\n            this.triggerHandler();\n        };\n        this.onClick = (e) => {\n            this.triggerHandler(e);\n        };\n    }\n    componentDidMount() {\n        const { hotkey } = this.props;\n        if (hotkey) {\n            this.props.context.registerHotkey(hotkey, this.onHotkey);\n        }\n    }\n    componentWillUnmount() {\n        const { hotkey } = this.props;\n        if (hotkey) {\n            this.props.context.unregisterHotkey(hotkey, this.onHotkey);\n        }\n    }\n    triggerHandler(e) {\n        if (!this.props.disabled && !this.props.hidden) {\n            if (this.props.name) {\n                this.props.context.onClick(this.props.name, e);\n            }\n            if (this.props.onClick) {\n                this.props.onClick();\n            }\n        }\n    }\n    render() {\n        return (React.createElement(\"div\", Object.assign({}, MenuItemInner.getProps(this.props)), MenuItemInner.getContent(this.props, this.onClick)));\n    }\n}\n(function (MenuItemInner) {\n    function getProps(props, extraCls) {\n        const { className, disabled, active, hidden } = props;\n        const { prefixCls } = props.context;\n        const baseCls = `${prefixCls}-item`;\n        return {\n            className: classNames(baseCls, extraCls, {\n                [`${baseCls}-active`]: active,\n                [`${baseCls}-hidden`]: hidden,\n                [`${baseCls}-disabled`]: disabled,\n            }, className),\n        };\n    }\n    MenuItemInner.getProps = getProps;\n    function getContent(props, onClick, innerExtra, outerExtra) {\n        const { icon, text, hotkey, children } = props;\n        const { prefixCls } = props.context;\n        const baseCls = `${prefixCls}-item`;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"button\", { type: \"button\", className: `${baseCls}-button`, onClick: onClick },\n                icon && React.isValidElement(icon) && (React.createElement(\"span\", { className: `${baseCls}-icon` }, icon)),\n                React.createElement(\"span\", { className: `${baseCls}-text` }, text || children),\n                hotkey && React.createElement(\"span\", { className: `${baseCls}-hotkey` }, hotkey),\n                innerExtra),\n            outerExtra));\n    }\n    MenuItemInner.getContent = getContent;\n})(MenuItemInner || (MenuItemInner = {}));\nexport const MenuItem = (props) => (React.createElement(MenuContext.Consumer, null, (context) => React.createElement(MenuItemInner, Object.assign({ context: context }, props))));\n//# sourceMappingURL=item.js.map"]},"metadata":{},"sourceType":"module"}