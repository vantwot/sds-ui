{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\nvar _excluded = [\"id\", \"style\", \"minZoom\", \"maxZoom\", \"token\", \"mapInstance\", \"plugin\"];\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport AMapLoader from '@amap/amap-jsapi-loader';\nimport { CoordinateSystem, MapServiceEvent, TYPES } from '@antv/l7-core';\nimport { DOM } from '@antv/l7-utils';\nimport { mat4, vec3 } from 'gl-matrix';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { toPaddingOptions } from '../utils';\nimport { Version } from '../version';\n\nfunction loadStyles(css, doc) {\n  var isMiniAli = typeof my !== 'undefined' && !!my && typeof my.showToast === 'function';\n  var isWeChatMiniProgram = typeof wx !== 'undefined' && wx !== null && (typeof wx.request !== 'undefined' || typeof wx.miniProgram !== 'undefined');\n\n  if (isMiniAli || isWeChatMiniProgram) {\n    return;\n  }\n\n  if (!doc) doc = document;\n\n  if (!doc) {\n    return;\n  }\n\n  var head = doc.head || doc.getElementsByTagName('head')[0];\n\n  if (!head) {\n    head = doc.createElement('head');\n    var body = doc.body || doc.getElementsByTagName('body')[0];\n\n    if (body) {\n      body.parentNode.insertBefore(head, body);\n    } else {\n      doc.documentElement.appendChild(head);\n    }\n  }\n\n  var style = doc.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(doc.createTextNode(css));\n  }\n\n  head.appendChild(style);\n  return style;\n}\n\nloadStyles(\".amap-logo{\\n display: none !important;\\n}\\n\");\nimport { MapTheme } from './theme';\nimport Viewport from './Viewport';\nvar mapdivCount = 0;\nwindow.forceWebGL = true;\nvar AMAP_API_KEY = '15cd8a57710d40c9b7c0e3cc120f1200';\nvar AMAP_VERSION = '1.4.15';\nvar AMAP_SCRIPT_ID = 'amap-script';\nvar amapLoaded = false;\nvar pendingResolveQueue = [];\nvar LNGLAT_OFFSET_ZOOM_THRESHOLD = 12;\nvar AMapService = (_dec = injectable(), _dec2 = inject(TYPES.IGlobalConfigService), _dec3 = inject(TYPES.MapConfig), _dec4 = inject(TYPES.ICoordinateSystemService), _dec5 = inject(TYPES.IEventEmitter), _dec(_class = (_class2 = function () {\n  function AMapService() {\n    var _this = this;\n\n    _classCallCheck(this, AMapService);\n\n    _defineProperty(this, \"version\", Version['GAODE1.x']);\n\n    _defineProperty(this, \"map\", void 0);\n\n    _defineProperty(this, \"dragging\", false);\n\n    _defineProperty(this, \"bgColor\", 'rgba(0, 0, 0, 0)');\n\n    _initializerDefineProperty(this, \"configService\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"config\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"coordinateSystemService\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"eventEmitter\", _descriptor4, this);\n\n    _defineProperty(this, \"markerContainer\", void 0);\n\n    _defineProperty(this, \"$mapContainer\", void 0);\n\n    _defineProperty(this, \"viewport\", void 0);\n\n    _defineProperty(this, \"cameraChangedCallback\", void 0);\n\n    _defineProperty(this, \"handleCameraChanged\", function (e) {\n      var _e$camera = e.camera,\n          fov = _e$camera.fov,\n          near = _e$camera.near,\n          far = _e$camera.far,\n          height = _e$camera.height,\n          pitch = _e$camera.pitch,\n          rotation = _e$camera.rotation,\n          aspect = _e$camera.aspect,\n          position = _e$camera.position;\n\n      var _this$getCenter = _this.getCenter(),\n          lng = _this$getCenter.lng,\n          lat = _this$getCenter.lat;\n\n      _this.emit('mapchange');\n\n      if (_this.cameraChangedCallback) {\n        _this.viewport.syncWithMapCamera({\n          aspect: aspect,\n          bearing: 360 - rotation,\n          far: far,\n          fov: fov,\n          cameraHeight: height,\n          near: near,\n          pitch: pitch,\n          zoom: _this.map.getZoom() - 1,\n          center: [lng, lat],\n          offsetOrigin: [position.x, position.y]\n        });\n\n        var _this$config$offsetZo = _this.config.offsetZoom,\n            offsetZoom = _this$config$offsetZo === void 0 ? LNGLAT_OFFSET_ZOOM_THRESHOLD : _this$config$offsetZo;\n\n        if (_this.viewport.getZoom() > offsetZoom) {\n          _this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.P20_OFFSET);\n        } else {\n          _this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.P20);\n        }\n\n        _this.cameraChangedCallback(_this.viewport);\n      }\n    });\n  }\n\n  _createClass(AMapService, [{\n    key: \"setBgColor\",\n    value: function setBgColor(color) {\n      this.bgColor = color;\n    }\n  }, {\n    key: \"addMarkerContainer\",\n    value: function addMarkerContainer() {\n      var mapContainer = this.map.getContainer();\n\n      if (mapContainer !== null) {\n        var amap = mapContainer.getElementsByClassName('amap-maps')[0];\n        this.markerContainer = DOM.create('div', 'l7-marker-container', amap);\n      }\n    }\n  }, {\n    key: \"getMarkerContainer\",\n    value: function getMarkerContainer() {\n      return this.markerContainer;\n    }\n  }, {\n    key: \"on\",\n    value: function on(type, handler) {\n      if (MapServiceEvent.indexOf(type) !== -1) {\n        this.eventEmitter.on(type, handler);\n      } else {\n        this.map.on(type, handler);\n      }\n    }\n  }, {\n    key: \"off\",\n    value: function off(type, handler) {\n      if (MapServiceEvent.indexOf(type) !== -1) {\n        this.eventEmitter.off(type, handler);\n      } else {\n        this.map.off(type, handler);\n      }\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      return this.map.getContainer();\n    }\n  }, {\n    key: \"getMapCanvasContainer\",\n    value: function getMapCanvasContainer() {\n      var _this$map$getContaine;\n\n      return (_this$map$getContaine = this.map.getContainer()) === null || _this$map$getContaine === void 0 ? void 0 : _this$map$getContaine.getElementsByClassName('amap-maps')[0];\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      var size = this.map.getSize();\n      return [size.getWidth(), size.getHeight()];\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return 'amap';\n    }\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      return this.map.getZoom() - 1;\n    }\n  }, {\n    key: \"setZoom\",\n    value: function setZoom(zoom) {\n      return this.map.setZoom(zoom);\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter(options) {\n      if (options !== null && options !== void 0 && options.padding) {\n        var originCenter = this.getCenter();\n\n        var _this$getSize = this.getSize(),\n            _this$getSize2 = _slicedToArray(_this$getSize, 2),\n            w = _this$getSize2[0],\n            h = _this$getSize2[1];\n\n        var padding = toPaddingOptions(options.padding);\n        var px = this.lngLatToPixel([originCenter.lng, originCenter.lat]);\n        var offsetPx = [(padding.right - padding.left) / 2, (padding.bottom - padding.top) / 2];\n        var newCenter = this.pixelToLngLat([px.x - offsetPx[0], px.y - offsetPx[1]]);\n        return newCenter;\n      }\n\n      var center = this.map.getCenter();\n      return {\n        lng: center.getLng(),\n        lat: center.getLat()\n      };\n    }\n  }, {\n    key: \"setCenter\",\n    value: function setCenter(lnglat, options) {\n      if (options !== null && options !== void 0 && options.padding) {\n        var padding = toPaddingOptions(options.padding);\n        var px = this.lngLatToPixel(lnglat);\n        var offsetPx = [(padding.right - padding.left) / 2, (padding.bottom - padding.top) / 2];\n        var newCenter = this.pixelToLngLat([px.x + offsetPx[0], px.y + offsetPx[1]]);\n        this.map.setCenter([newCenter.lng, newCenter.lat]);\n      } else {\n        this.map.setCenter(lnglat);\n      }\n    }\n  }, {\n    key: \"getPitch\",\n    value: function getPitch() {\n      return this.map.getPitch();\n    }\n  }, {\n    key: \"getRotation\",\n    value: function getRotation() {\n      return 360 - this.map.getRotation();\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      var amapBound = this.map.getBounds().toBounds();\n      var NE = amapBound.getNorthEast();\n      var SW = amapBound.getSouthWest();\n      var center = this.getCenter();\n      var maxlng = center.lng > NE.getLng() || center.lng < SW.getLng() ? 180 - NE.getLng() : NE.getLng();\n      var minlng = center.lng < SW.getLng() ? SW.getLng() - 180 : SW.getLng();\n      return [[minlng, SW.getLat()], [maxlng, NE.getLat()]];\n    }\n  }, {\n    key: \"getMinZoom\",\n    value: function getMinZoom() {\n      var zooms = this.map.get('zooms');\n      return zooms[0] - 1;\n    }\n  }, {\n    key: \"getMaxZoom\",\n    value: function getMaxZoom() {\n      var zooms = this.map.get('zooms');\n      return zooms[1] - 1;\n    }\n  }, {\n    key: \"setRotation\",\n    value: function setRotation(rotation) {\n      return this.map.setRotation(rotation);\n    }\n  }, {\n    key: \"setPitch\",\n    value: function setPitch(pitch) {\n      return this.map.setPitch(pitch);\n    }\n  }, {\n    key: \"zoomIn\",\n    value: function zoomIn() {\n      this.map.zoomIn();\n    }\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut() {\n      this.map.zoomOut();\n    }\n  }, {\n    key: \"panTo\",\n    value: function panTo(p) {\n      this.map.panTo(p);\n    }\n  }, {\n    key: \"panBy\",\n    value: function panBy() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.map.panBy(x, y);\n    }\n  }, {\n    key: \"fitBounds\",\n    value: function fitBounds(extent) {\n      this.map.setBounds(new AMap.Bounds([extent[0][0], extent[0][1], extent[1][0], extent[1][1]]));\n    }\n  }, {\n    key: \"setZoomAndCenter\",\n    value: function setZoomAndCenter(zoom, center) {\n      this.map.setZoomAndCenter(zoom, center);\n    }\n  }, {\n    key: \"setMapStyle\",\n    value: function setMapStyle(style) {\n      this.map.setMapStyle(this.getMapStyle(style));\n    }\n  }, {\n    key: \"setMapStatus\",\n    value: function setMapStatus(option) {\n      this.map.setStatus(option);\n    }\n  }, {\n    key: \"pixelToLngLat\",\n    value: function pixelToLngLat(pixel) {\n      var lngLat = this.map.pixelToLngLat(new AMap.Pixel(pixel[0], pixel[1]));\n      return {\n        lng: lngLat.getLng(),\n        lat: lngLat.getLat()\n      };\n    }\n  }, {\n    key: \"lngLatToPixel\",\n    value: function lngLatToPixel(lnglat) {\n      var p = this.map.lnglatToPixel(new AMap.LngLat(lnglat[0], lnglat[1]));\n      return {\n        x: p.getX(),\n        y: p.getY()\n      };\n    }\n  }, {\n    key: \"containerToLngLat\",\n    value: function containerToLngLat(pixel) {\n      var ll = new AMap.Pixel(pixel[0], pixel[1]);\n      var lngLat = this.map.containerToLngLat(ll);\n      return {\n        lng: lngLat === null || lngLat === void 0 ? void 0 : lngLat.getLng(),\n        lat: lngLat === null || lngLat === void 0 ? void 0 : lngLat.getLat()\n      };\n    }\n  }, {\n    key: \"lngLatToContainer\",\n    value: function lngLatToContainer(lnglat) {\n      var ll = new AMap.LngLat(lnglat[0], lnglat[1]);\n      var pixel = this.map.lngLatToContainer(ll);\n      return {\n        x: pixel.getX(),\n        y: pixel.getY()\n      };\n    }\n  }, {\n    key: \"lngLatToCoord\",\n    value: function lngLatToCoord(lnglat) {\n      var _this$map$lngLatToGeo = this.map.lngLatToGeodeticCoord(lnglat),\n          x = _this$map$lngLatToGeo.x,\n          y = _this$map$lngLatToGeo.y;\n\n      return [x, -y];\n    }\n  }, {\n    key: \"lngLatToMercator\",\n    value: function lngLatToMercator(lnglat, altitude) {\n      return {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n    }\n  }, {\n    key: \"getModelMatrix\",\n    value: function getModelMatrix(lnglat, altitude, rotate) {\n      var scale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [1, 1, 1];\n      var origin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n      var flat = this.viewport.projectFlat(lnglat);\n      var modelMatrix = mat4.create();\n      mat4.translate(modelMatrix, modelMatrix, vec3.fromValues(flat[0], flat[1], altitude));\n      mat4.scale(modelMatrix, modelMatrix, vec3.fromValues(scale[0], scale[1], scale[2]));\n      mat4.rotateX(modelMatrix, modelMatrix, rotate[0]);\n      mat4.rotateY(modelMatrix, modelMatrix, rotate[1]);\n      mat4.rotateZ(modelMatrix, modelMatrix, rotate[2]);\n      return modelMatrix;\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var _this$config, id, _this$config$style, style, _this$config$minZoom, minZoom, _this$config$maxZoom, maxZoom, _this$config$token, token, mapInstance, _this$config$plugin, plugin, rest;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$config = this.config, id = _this$config.id, _this$config$style = _this$config.style, style = _this$config$style === void 0 ? 'light' : _this$config$style, _this$config$minZoom = _this$config.minZoom, minZoom = _this$config$minZoom === void 0 ? 0 : _this$config$minZoom, _this$config$maxZoom = _this$config.maxZoom, maxZoom = _this$config$maxZoom === void 0 ? 18 : _this$config$maxZoom, _this$config$token = _this$config.token, token = _this$config$token === void 0 ? AMAP_API_KEY : _this$config$token, mapInstance = _this$config.mapInstance, _this$config$plugin = _this$config.plugin, plugin = _this$config$plugin === void 0 ? [] : _this$config$plugin, rest = _objectWithoutProperties(_this$config, _excluded);\n                _context.next = 3;\n                return new Promise(function (resolve) {\n                  var resolveMap = function resolveMap() {\n                    if (mapInstance) {\n                      _this2.map = mapInstance;\n                      _this2.$mapContainer = _this2.map.getContainer();\n                      setTimeout(function () {\n                        _this2.map.on('camerachange', _this2.handleCameraChanged);\n\n                        resolve();\n                      }, 30);\n                    } else {\n                      _this2.$mapContainer = _this2.creatAmapContainer(id);\n                      var map = new AMap.Map(_this2.$mapContainer, _objectSpread({\n                        mapStyle: _this2.getMapStyle(style),\n                        zooms: [minZoom, maxZoom],\n                        viewMode: '3D'\n                      }, rest));\n                      map.on('camerachange', _this2.handleCameraChanged);\n                      _this2.map = map;\n                      setTimeout(function () {\n                        resolve();\n                      }, 10);\n                    }\n                  };\n\n                  if (!amapLoaded && !mapInstance) {\n                    if (token === AMAP_API_KEY) {\n                      console.warn(_this2.configService.getSceneWarninfo('MapToken'));\n                    }\n\n                    amapLoaded = true;\n                    plugin.push('Map3D');\n                    AMapLoader.load({\n                      key: token,\n                      version: AMAP_VERSION,\n                      plugins: plugin\n                    }).then(function (AMap) {\n                      resolveMap();\n\n                      if (pendingResolveQueue.length) {\n                        pendingResolveQueue.forEach(function (r) {\n                          return r();\n                        });\n                        pendingResolveQueue = [];\n                      }\n                    }).catch(function (e) {\n                      throw new Error(e);\n                    });\n                  } else {\n                    if (amapLoaded && window.AMap || mapInstance) {\n                      resolveMap();\n                    } else {\n                      pendingResolveQueue.push(resolveMap);\n                    }\n                  }\n                });\n\n              case 3:\n                this.map.on('dragstart', function () {\n                  _this2.dragging = true;\n                  return '';\n                });\n                this.map.on('dragend', function () {\n                  _this2.dragging = false;\n                  return '';\n                });\n                this.viewport = new Viewport();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"exportMap\",\n    value: function exportMap(type) {\n      var _this$getContainer;\n\n      var renderCanvas = (_this$getContainer = this.getContainer()) === null || _this$getContainer === void 0 ? void 0 : _this$getContainer.getElementsByClassName('amap-layer')[0];\n      var layersPng = type === 'jpg' ? renderCanvas === null || renderCanvas === void 0 ? void 0 : renderCanvas.toDataURL('image/jpeg') : renderCanvas === null || renderCanvas === void 0 ? void 0 : renderCanvas.toDataURL('image/png');\n      return layersPng;\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(name) {\n      var _this$eventEmitter;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      (_this$eventEmitter = this.eventEmitter).emit.apply(_this$eventEmitter, [name].concat(args));\n    }\n  }, {\n    key: \"once\",\n    value: function once(name) {\n      var _this$eventEmitter2;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      (_this$eventEmitter2 = this.eventEmitter).once.apply(_this$eventEmitter2, [name].concat(args));\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this$$mapContainer, _this$$mapContainer$p;\n\n      this.map.destroy();\n      (_this$$mapContainer = this.$mapContainer) === null || _this$$mapContainer === void 0 ? void 0 : (_this$$mapContainer$p = _this$$mapContainer.parentNode) === null || _this$$mapContainer$p === void 0 ? void 0 : _this$$mapContainer$p.removeChild(this.$mapContainer);\n      delete window.initAMap;\n      var $jsapi = document.getElementById(AMAP_SCRIPT_ID);\n\n      if ($jsapi) {\n        document.head.removeChild($jsapi);\n      }\n    }\n  }, {\n    key: \"getMapContainer\",\n    value: function getMapContainer() {\n      return this.$mapContainer;\n    }\n  }, {\n    key: \"onCameraChanged\",\n    value: function onCameraChanged(callback) {\n      this.cameraChangedCallback = callback;\n    }\n  }, {\n    key: \"getMapStyle\",\n    value: function getMapStyle(name) {\n      return MapTheme[name] ? MapTheme[name] : name;\n    }\n  }, {\n    key: \"creatAmapContainer\",\n    value: function creatAmapContainer(id) {\n      var $wrapper = id;\n\n      if (typeof id === 'string') {\n        $wrapper = document.getElementById(id);\n      }\n\n      var $amapdiv = document.createElement('div');\n      $amapdiv.style.cssText += \"\\n      position: absolute;\\n      top: 0;\\n      height: 100%;\\n      width: 100%;\\n    \";\n      $amapdiv.id = 'l7_amap_div' + mapdivCount++;\n      $wrapper.appendChild($amapdiv);\n      return $amapdiv;\n    }\n  }]);\n\n  return AMapService;\n}(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"configService\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"config\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"coordinateSystemService\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"eventEmitter\", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexport { AMapService as default };","map":{"version":3,"sources":["../../src/amap/map.ts"],"names":["mapdivCount","window","AMAP_API_KEY","AMAP_VERSION","AMAP_SCRIPT_ID","amapLoaded","pendingResolveQueue","LNGLAT_OFFSET_ZOOM_THRESHOLD","injectable","AMapService","Version","inject","TYPES","mapContainer","amap","DOM","MapServiceEvent","size","options","originCenter","w","h","padding","toPaddingOptions","px","offsetPx","newCenter","center","lng","lat","amapBound","NE","SW","maxlng","minlng","zooms","x","y","AMap","extent","lngLat","pixel","p","lnglat","ll","z","scale","origin","flat","modelMatrix","mat4","vec3","rotate","id","style","minZoom","maxZoom","token","mapInstance","plugin","rest","resolveMap","setTimeout","resolve","map","mapStyle","viewMode","console","AMapLoader","key","version","plugins","r","renderCanvas","layersPng","type","args","$jsapi","document","fov","near","far","height","pitch","rotation","aspect","position","e","bearing","cameraHeight","zoom","offsetOrigin","offsetZoom","CoordinateSystem","MapTheme","$wrapper","$amapdiv"],"mappings":"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","sourcesContent":["/**\n * AMapService\n */\nimport AMapLoader from '@amap/amap-jsapi-loader';\nimport {\n  Bounds,\n  CoordinateSystem,\n  ICameraOptions,\n  ICoordinateSystemService,\n  IGlobalConfigService,\n  ILngLat,\n  IMapConfig,\n  IMapService,\n  IMercator,\n  IPoint,\n  IStatusOptions,\n  IViewport,\n  MapServiceEvent,\n  MapStyle,\n  TYPES,\n} from '@antv/l7-core';\nimport { DOM } from '@antv/l7-utils';\nimport { mat4, vec2, vec3 } from 'gl-matrix';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { IAMapEvent, IAMapInstance } from '../../typings/index';\nimport { toPaddingOptions } from '../utils';\nimport { Version } from '../version';\nimport './logo.css';\nimport { MapTheme } from './theme';\nimport Viewport from './Viewport';\nlet mapdivCount = 0;\n// @ts-ignore\nwindow.forceWebGL = true;\n\nconst AMAP_API_KEY: string = '15cd8a57710d40c9b7c0e3cc120f1200';\nconst AMAP_VERSION: string = '1.4.15';\n/**\n * 确保多个场景只引入一个高德地图脚本\n */\nconst AMAP_SCRIPT_ID: string = 'amap-script';\n/**\n * 高德地图脚本是否加载完毕\n */\nlet amapLoaded = false;\n/**\n * 高德地图脚本加载成功等待队列，成功之后依次触发\n */\nlet pendingResolveQueue: Array<() => void> = [];\nconst LNGLAT_OFFSET_ZOOM_THRESHOLD = 12; // 暂时关闭 fix 统一不同坐标系，不同底图的高度位置\n\n/**\n * AMapService\n */\n@injectable()\nexport default class AMapService\n  implements IMapService<AMap.Map & IAMapInstance> {\n  public version: string = Version['GAODE1.x'];\n  /**\n   * 原始地图实例\n   */\n  public map: AMap.Map & IAMapInstance;\n\n  // TODO: 判断地图是否正在拖拽\n  public dragging: boolean = false;\n\n  // 背景色\n  public bgColor: string = 'rgba(0, 0, 0, 0)';\n\n  @inject(TYPES.IGlobalConfigService)\n  private readonly configService: IGlobalConfigService;\n\n  @inject(TYPES.MapConfig)\n  private readonly config: Partial<IMapConfig>;\n\n  @inject(TYPES.ICoordinateSystemService)\n  private readonly coordinateSystemService: ICoordinateSystemService;\n\n  @inject(TYPES.IEventEmitter)\n  private eventEmitter: any;\n\n  private markerContainer: HTMLElement;\n  private $mapContainer: HTMLElement | null;\n\n  private viewport: Viewport;\n\n  private cameraChangedCallback: (viewport: IViewport) => void;\n  public setBgColor(color: string) {\n    this.bgColor = color;\n  }\n\n  public addMarkerContainer(): void {\n    const mapContainer = this.map.getContainer();\n    if (mapContainer !== null) {\n      const amap = mapContainer.getElementsByClassName(\n        'amap-maps',\n      )[0] as HTMLElement;\n      this.markerContainer = DOM.create('div', 'l7-marker-container', amap);\n    }\n  }\n  public getMarkerContainer(): HTMLElement {\n    return this.markerContainer;\n  }\n\n  //  map event\n  public on(type: string, handler: (...args: any[]) => void): void {\n    if (MapServiceEvent.indexOf(type) !== -1) {\n      this.eventEmitter.on(type, handler);\n    } else {\n      this.map.on(type, handler);\n    }\n  }\n  public off(type: string, handler: (...args: any[]) => void): void {\n    if (MapServiceEvent.indexOf(type) !== -1) {\n      this.eventEmitter.off(type, handler);\n    } else {\n      this.map.off(type, handler);\n    }\n  }\n\n  public getContainer(): HTMLElement | null {\n    return this.map.getContainer();\n  }\n\n  public getMapCanvasContainer(): HTMLElement {\n    return this.map\n      .getContainer()\n      ?.getElementsByClassName('amap-maps')[0] as HTMLElement;\n  }\n\n  public getSize(): [number, number] {\n    const size = this.map.getSize();\n    return [size.getWidth(), size.getHeight()];\n  }\n\n  public getType() {\n    return 'amap';\n  }\n  public getZoom(): number {\n    // 统一返回 Mapbox 缩放等级\n    return this.map.getZoom() - 1;\n  }\n\n  public setZoom(zoom: number): void {\n    return this.map.setZoom(zoom);\n  }\n\n  public getCenter(options?: ICameraOptions): ILngLat {\n    if (options?.padding) {\n      const originCenter = this.getCenter();\n      const [w, h] = this.getSize();\n      const padding = toPaddingOptions(options.padding);\n      const px = this.lngLatToPixel([originCenter.lng, originCenter.lat]);\n      const offsetPx = [\n        (padding.right - padding.left) / 2,\n        (padding.bottom - padding.top) / 2,\n      ];\n\n      const newCenter = this.pixelToLngLat([\n        px.x - offsetPx[0],\n        px.y - offsetPx[1],\n      ]);\n      return newCenter;\n    }\n    const center = this.map.getCenter();\n    return {\n      lng: center.getLng(),\n      lat: center.getLat(),\n    };\n  }\n  public setCenter(lnglat: [number, number], options?: ICameraOptions): void {\n    if (options?.padding) {\n      const padding = toPaddingOptions(options.padding);\n      const px = this.lngLatToPixel(lnglat);\n      const offsetPx = [\n        (padding.right - padding.left) / 2,\n        (padding.bottom - padding.top) / 2,\n      ];\n      const newCenter = this.pixelToLngLat([\n        px.x + offsetPx[0],\n        px.y + offsetPx[1],\n      ]);\n      this.map.setCenter([newCenter.lng, newCenter.lat]);\n    } else {\n      this.map.setCenter(lnglat);\n    }\n  }\n  public getPitch(): number {\n    return this.map.getPitch();\n  }\n\n  public getRotation(): number {\n    // 统一返回逆时针旋转角度\n    return 360 - this.map.getRotation();\n  }\n\n  public getBounds(): Bounds {\n    // @ts-ignore\n    const amapBound = this.map.getBounds().toBounds();\n    const NE = amapBound.getNorthEast();\n    const SW = amapBound.getSouthWest();\n    const center = this.getCenter();\n    const maxlng =\n      center.lng > NE.getLng() || center.lng < SW.getLng()\n        ? 180 - NE.getLng()\n        : NE.getLng();\n    const minlng = center.lng < SW.getLng() ? SW.getLng() - 180 : SW.getLng();\n    // 兼容 Mapbox，统一返回西南、东北\n    return [\n      [minlng, SW.getLat()],\n      [maxlng, NE.getLat()],\n    ];\n  }\n\n  public getMinZoom(): number {\n    const zooms = this.map.get('zooms') as [number, number];\n    return zooms[0] - 1;\n  }\n  public getMaxZoom(): number {\n    const zooms = this.map.get('zooms') as [number, number];\n    return zooms[1] - 1;\n  }\n  public setRotation(rotation: number): void {\n    return this.map.setRotation(rotation);\n  }\n\n  public setPitch(pitch: number) {\n    return this.map.setPitch(pitch);\n  }\n  public zoomIn(): void {\n    this.map.zoomIn();\n  }\n\n  public zoomOut(): void {\n    this.map.zoomOut();\n  }\n\n  public panTo(p: [number, number]): void {\n    this.map.panTo(p);\n  }\n\n  public panBy(x: number = 0, y: number = 0): void {\n    this.map.panBy(x, y);\n  }\n\n  public fitBounds(extent: Bounds): void {\n    this.map.setBounds(\n      new AMap.Bounds([extent[0][0], extent[0][1], extent[1][0], extent[1][1]]),\n    );\n  }\n\n  public setZoomAndCenter(zoom: number, center: [number, number]): void {\n    this.map.setZoomAndCenter(zoom, center);\n  }\n\n  public setMapStyle(style: string): void {\n    this.map.setMapStyle(this.getMapStyle(style));\n  }\n\n  public setMapStatus(option: Partial<IStatusOptions>): void {\n    this.map.setStatus(option);\n  }\n  public pixelToLngLat(pixel: [number, number]): ILngLat {\n    const lngLat = this.map.pixelToLngLat(new AMap.Pixel(pixel[0], pixel[1]));\n    return { lng: lngLat.getLng(), lat: lngLat.getLat() };\n  }\n  public lngLatToPixel(lnglat: [number, number]): IPoint {\n    const p = this.map.lnglatToPixel(new AMap.LngLat(lnglat[0], lnglat[1]));\n    return {\n      x: p.getX(),\n      y: p.getY(),\n    };\n  }\n  public containerToLngLat(pixel: [number, number]): ILngLat {\n    const ll = new AMap.Pixel(pixel[0], pixel[1]);\n    const lngLat = this.map.containerToLngLat(ll);\n    return {\n      lng: lngLat?.getLng(),\n      lat: lngLat?.getLat(),\n    };\n  }\n  public lngLatToContainer(lnglat: [number, number]): IPoint {\n    const ll = new AMap.LngLat(lnglat[0], lnglat[1]);\n    const pixel = this.map.lngLatToContainer(ll);\n    return {\n      x: pixel.getX(),\n      y: pixel.getY(),\n    };\n  }\n\n  public lngLatToCoord(lnglat: [number, number]): any {\n    // @ts-ignore\n    const { x, y } = this.map.lngLatToGeodeticCoord(lnglat);\n    return [x, -y];\n  }\n\n  public lngLatToMercator(\n    lnglat: [number, number],\n    altitude: number,\n  ): IMercator {\n    return {\n      x: 0,\n      y: 0,\n      z: 0,\n    };\n  }\n\n  public getModelMatrix(\n    lnglat: [number, number],\n    altitude: number,\n    rotate: [number, number, number],\n    scale: [number, number, number] = [1, 1, 1],\n    origin: IMercator = { x: 0, y: 0, z: 0 },\n  ): number[] {\n    const flat = this.viewport.projectFlat(lnglat);\n    // @ts-ignore\n    const modelMatrix = mat4.create();\n\n    mat4.translate(\n      modelMatrix,\n      modelMatrix,\n      vec3.fromValues(flat[0], flat[1], altitude),\n    );\n    mat4.scale(\n      modelMatrix,\n      modelMatrix,\n      vec3.fromValues(scale[0], scale[1], scale[2]),\n    );\n\n    mat4.rotateX(modelMatrix, modelMatrix, rotate[0]);\n    mat4.rotateY(modelMatrix, modelMatrix, rotate[1]);\n    mat4.rotateZ(modelMatrix, modelMatrix, rotate[2]);\n\n    return (modelMatrix as unknown) as number[];\n  }\n  public async init(): Promise<void> {\n    const {\n      id,\n      style = 'light',\n      minZoom = 0,\n      maxZoom = 18,\n      token = AMAP_API_KEY,\n      mapInstance,\n      plugin = [],\n      ...rest\n    } = this.config;\n    // 高德地图创建独立的container；\n    // tslint:disable-next-line:typedef\n    await new Promise<void>((resolve) => {\n      const resolveMap = () => {\n        if (mapInstance) {\n          this.map = mapInstance as AMap.Map & IAMapInstance;\n          this.$mapContainer = this.map.getContainer();\n          setTimeout(() => {\n            this.map.on('camerachange', this.handleCameraChanged);\n            resolve();\n          }, 30);\n        } else {\n          this.$mapContainer = this.creatAmapContainer(\n            id as string | HTMLDivElement,\n          );\n\n          const map = new AMap.Map(this.$mapContainer, {\n            mapStyle: this.getMapStyle(style as string),\n            zooms: [minZoom, maxZoom],\n            viewMode: '3D',\n            ...rest,\n          });\n          // 监听地图相机事件\n          map.on('camerachange', this.handleCameraChanged);\n          // @ts-ignore\n          this.map = map;\n          setTimeout(() => {\n            resolve();\n          }, 10);\n        }\n      };\n      if (!amapLoaded && !mapInstance) {\n        if (token === AMAP_API_KEY) {\n          console.warn(this.configService.getSceneWarninfo('MapToken'));\n        }\n        amapLoaded = true;\n        plugin.push('Map3D');\n        AMapLoader.load({\n          key: token, // 申请好的Web端开发者Key，首次调用 load 时必填\n          version: AMAP_VERSION, // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\n          plugins: plugin, // 需要使用的的插件列表，如比例尺'AMap.Scale'等\n        })\n          .then((AMap) => {\n            resolveMap();\n\n            if (pendingResolveQueue.length) {\n              pendingResolveQueue.forEach((r) => r());\n              pendingResolveQueue = [];\n            }\n          })\n          .catch((e) => {\n            throw new Error(e);\n          });\n      } else {\n        if ((amapLoaded && window.AMap) || mapInstance) {\n          resolveMap();\n        } else {\n          pendingResolveQueue.push(resolveMap);\n        }\n      }\n    });\n\n    // TODO: 判断地图是否正在被拖拽\n    this.map.on('dragstart', () => {\n      this.dragging = true;\n      return '';\n    });\n    this.map.on('dragend', () => {\n      this.dragging = false;\n      return '';\n    });\n\n    this.viewport = new Viewport();\n  }\n\n  public exportMap(type: 'jpg' | 'png'): string {\n    const renderCanvas = this.getContainer()?.getElementsByClassName(\n      'amap-layer',\n    )[0] as HTMLCanvasElement;\n    const layersPng =\n      type === 'jpg'\n        ? (renderCanvas?.toDataURL('image/jpeg') as string)\n        : (renderCanvas?.toDataURL('image/png') as string);\n    return layersPng;\n  }\n\n  public emit(name: string, ...args: any[]) {\n    this.eventEmitter.emit(name, ...args);\n  }\n\n  public once(name: string, ...args: any[]) {\n    this.eventEmitter.once(name, ...args);\n  }\n\n  public destroy() {\n    this.map.destroy();\n\n    // TODO: 销毁地图可视化层的容器\n    this.$mapContainer?.parentNode?.removeChild(this.$mapContainer);\n\n    // @ts-ignore\n    delete window.initAMap;\n    const $jsapi = document.getElementById(AMAP_SCRIPT_ID);\n    if ($jsapi) {\n      document.head.removeChild($jsapi);\n    }\n  }\n\n  public getMapContainer() {\n    return this.$mapContainer;\n  }\n\n  public onCameraChanged(callback: (viewport: IViewport) => void): void {\n    this.cameraChangedCallback = callback;\n  }\n\n  private handleCameraChanged = (e: IAMapEvent): void => {\n    const {\n      fov,\n      near,\n      far,\n      height,\n      pitch,\n      rotation,\n      aspect,\n      position,\n    } = e.camera;\n    const { lng, lat } = this.getCenter();\n    // Tip: 触发地图变化事件\n    this.emit('mapchange');\n    if (this.cameraChangedCallback) {\n      // resync viewport\n      // console.log('cameraHeight', height)\n      // console.log('pitch', pitch)\n      // console.log('rotation', rotation)\n      // console.log('zoom', this.map.getZoom())\n      this.viewport.syncWithMapCamera({\n        aspect,\n        // AMap 定义 rotation 为顺时针方向，而 Mapbox 为逆时针\n        // @see https://docs.mapbox.com/mapbox-gl-js/api/#map#getbearing\n        bearing: 360 - rotation,\n        far,\n        fov,\n        cameraHeight: height,\n        near,\n        pitch,\n        // AMap 定义的缩放等级 与 Mapbox 相差 1\n        zoom: this.map.getZoom() - 1,\n        center: [lng, lat],\n        offsetOrigin: [position.x, position.y],\n      });\n      const { offsetZoom = LNGLAT_OFFSET_ZOOM_THRESHOLD } = this.config;\n      // console.log('this.viewport', this.viewport)\n      // set coordinate system\n      if (this.viewport.getZoom() > offsetZoom) {\n        this.coordinateSystemService.setCoordinateSystem(\n          CoordinateSystem.P20_OFFSET,\n        );\n      } else {\n        this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.P20);\n      }\n      this.cameraChangedCallback(this.viewport);\n    }\n  };\n\n  private getMapStyle(name: string): string {\n    return MapTheme[name] ? MapTheme[name] : name;\n  }\n  private creatAmapContainer(id: string | HTMLDivElement) {\n    let $wrapper = id as HTMLDivElement;\n    if (typeof id === 'string') {\n      $wrapper = document.getElementById(id) as HTMLDivElement;\n    }\n    const $amapdiv = document.createElement('div');\n    $amapdiv.style.cssText += `\n      position: absolute;\n      top: 0;\n      height: 100%;\n      width: 100%;\n    `;\n    $amapdiv.id = 'l7_amap_div' + mapdivCount++;\n    $wrapper.appendChild($amapdiv);\n    return $amapdiv;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}