{"ast":null,"code":"import _defineProperty from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { useXFlowApp, usePositionStyle } from '@antv/xflow-core';\nimport classNames from 'classnames';\nimport { PropsProxy } from './config';\nimport { PanelContext } from './context';\n\nvar WorkspacePanel = function WorkspacePanel(props) {\n  var _classNames;\n\n  var className = props.className,\n      position = props.position,\n      style = props.style,\n      children = props.children;\n  var app = useXFlowApp();\n  var positionStyle = usePositionStyle(position);\n  var propsProxy = React.useMemo(function () {\n    return new PropsProxy();\n  }, []);\n  React.useEffect(function () {\n    return function () {\n      propsProxy.dispose();\n    };\n  }, [propsProxy]);\n\n  if (!app || !app.modelService) {\n    return null;\n  }\n\n  propsProxy.getValue = function () {\n    return props;\n  };\n\n  var clz = classNames((_classNames = {}, _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, 'xflow-workspace-panel', true), _classNames));\n  var commandService = app.commandService,\n      modelService = app.modelService;\n  return React.createElement(PanelContext.Provider, {\n    value: {\n      propsProxy: propsProxy,\n      commandService: commandService,\n      modelService: modelService\n    }\n  }, React.createElement(\"div\", {\n    className: clz,\n    style: Object.assign(Object.assign({}, positionStyle), style)\n  }, children));\n};\n\nexport { usePanelContext } from './context';\nexport { WorkspacePanel };","map":{"version":3,"sources":["../../src/base-panel/index.tsx"],"names":[],"mappings":";AAEA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,WAAT,EAAsB,gBAAtB,QAA8C,kBAA9C;AACA,OAAO,UAAP,MAAuB,YAAvB;AACA,SAAS,UAAT,QAA2B,UAA3B;AACA,SAAS,YAAT,QAA6B,WAA7B;;AASA,IAAM,cAAc,GAAmC,SAAjD,cAAiD,CAAA,KAAK,EAAG;AAAA;;AAC7D,MAAQ,SAAR,GAAiD,KAAjD,CAAQ,SAAR;AAAA,MAAmB,QAAnB,GAAiD,KAAjD,CAAmB,QAAnB;AAAA,MAA6B,KAA7B,GAAiD,KAAjD,CAA6B,KAA7B;AAAA,MAAoC,QAApC,GAAiD,KAAjD,CAAoC,QAApC;AACA,MAAM,GAAG,GAAG,WAAW,EAAvB;AACA,MAAM,aAAa,GAAG,gBAAgB,CAAC,QAAD,CAAtC;AAEA,MAAM,UAAU,GAAG,KAAK,CAAC,OAAN,CAAc,YAAK;AACpC,WAAO,IAAI,UAAJ,EAAP;AACD,GAFkB,EAEhB,EAFgB,CAAnB;AAIA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAK;AACnB,WAAO,YAAK;AACV,MAAA,UAAU,CAAC,OAAX;AACD,KAFD;AAGD,GAJD,EAIG,CAAC,UAAD,CAJH;;AAMA,MAAI,CAAC,GAAD,IAAQ,CAAC,GAAG,CAAC,YAAjB,EAA+B;AAC7B,WAAO,IAAP;AACD;;AAED,EAAA,UAAU,CAAC,QAAX,GAAsB;AAAA,WAAM,KAAN;AAAA,GAAtB;;AAEA,MAAM,GAAG,GAAG,UAAU,iDACnB,SADmB,EACP,CAAC,CAAC,SADK,gCAEpB,uBAFoB,EAEK,IAFL,gBAAtB;AAKA,MAAQ,cAAR,GAAyC,GAAzC,CAAQ,cAAR;AAAA,MAAwB,YAAxB,GAAyC,GAAzC,CAAwB,YAAxB;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,YAAY,CAAC,QAAd,EAAsB;AAAC,IAAA,KAAK,EAAE;AAAE,MAAA,UAAU,EAAV,UAAF;AAAc,MAAA,cAAc,EAAd,cAAd;AAA8B,MAAA,YAAY,EAAZ;AAA9B;AAAR,GAAtB,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAE,GADb;AAEE,IAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACA,aADA,CAAA,EAEA,KAFA;AAFP,GAAA,EAOG,QAPH,CADF,CADF;AAaD,CAzCD;;AA2CA,SAAS,eAAT,QAAgC,WAAhC;AACA,SAAS,cAAT","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { useXFlowApp, usePositionStyle } from '@antv/xflow-core';\nimport classNames from 'classnames';\nimport { PropsProxy } from './config';\nimport { PanelContext } from './context';\nconst WorkspacePanel = props => {\n    const { className, position, style, children } = props;\n    const app = useXFlowApp();\n    const positionStyle = usePositionStyle(position);\n    const propsProxy = React.useMemo(() => {\n        return new PropsProxy();\n    }, []);\n    React.useEffect(() => {\n        return () => {\n            propsProxy.dispose();\n        };\n    }, [propsProxy]);\n    if (!app || !app.modelService) {\n        return null;\n    }\n    propsProxy.getValue = () => props;\n    const clz = classNames({\n        [className]: !!className,\n        'xflow-workspace-panel': true,\n    });\n    const { commandService, modelService } = app;\n    return (React.createElement(PanelContext.Provider, { value: { propsProxy, commandService, modelService } },\n        React.createElement(\"div\", { className: clz, style: Object.assign(Object.assign({}, positionStyle), style) }, children)));\n};\nexport { usePanelContext } from './context';\nexport { WorkspacePanel };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}