{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React from 'react';\nimport { createModule } from '../module';\nimport { XFlowAppExtensionMoudle, useExtensionRegistry, insertCss } from '@antv/xflow-core';\nexport var CONFIG_TYPE = 'CanvasSnapline';\n/** 默认颜色 */\n\nexport var SNAPLINE_COLOR = '#faad14';\nexport var CanvasSnapline = function CanvasSnapline(props) {\n  var _props$color = props.color,\n      color = _props$color === void 0 ? SNAPLINE_COLOR : _props$color;\n  var extension = useExtensionRegistry();\n  var config = React.useMemo(function () {\n    return {\n      CONFIG_TYPE: CONFIG_TYPE,\n      getConfig: function getConfig() {\n        return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  return _context.abrupt(\"return\", {});\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n      }\n    };\n  }, []);\n  /** 设置css 样式 */\n\n  React.useEffect(function () {\n    var className = \"xflow-snapline-\".concat(Date.now()); // 多xflow之间隔离\n\n    extension.addContainerClassNames(className);\n    var cssString = \"\\n    .\".concat(className, \" .xflow-snapline .x6-widget-snapline-horizontal, \\n    .\").concat(className, \" .xflow-snapline .x6-widget-snapline-vertical {\\n      border-color: \").concat(color, \";\\n    }\");\n    var $style = insertCss(cssString);\n    return function () {\n      document.head.removeChild($style);\n    };\n  }, [color, extension]);\n  return React.createElement(XFlowAppExtensionMoudle, {\n    config: config,\n    createModule: createModule\n  });\n};","map":{"version":3,"sources":["../../../src/canvas-snapline/components/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,QAA6B,WAA7B;AACA,SAAS,uBAAT,EAAkC,oBAAlC,EAAwD,SAAxD,QAAyE,kBAAzE;AAMA,OAAO,IAAM,WAAW,GAAG,gBAApB;AACP;;AACA,OAAO,IAAM,cAAc,GAAG,SAAvB;AAEP,OAAO,IAAM,cAAc,GAAqB,SAAnC,cAAmC,CAAA,KAAK,EAAG;AACtD,qBAAmC,KAAnC,CAAQ,KAAR;AAAA,MAAQ,KAAR,6BAAgB,cAAhB;AACA,MAAM,SAAS,GAAG,oBAAoB,EAAtC;AACA,MAAM,MAAM,GAAG,KAAK,CAAC,OAAN,CACb;AAAA,WAAO;AACL,MAAA,WAAW,EAAX,WADK;AAEL,MAAA,SAAS,EAAE;AAAA,eAAW,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAE,EAAF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAA,EAAX;AAAA;AAFN,KAAP;AAAA,GADa,EAKb,EALa,CAAf;AAQA;;AACA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAK;AACnB,QAAM,SAAS,4BAAqB,IAAI,CAAC,GAAL,EAArB,CAAf,CADmB,CAEnB;;AACA,IAAA,SAAS,CAAC,sBAAV,CAAiC,SAAjC;AAEA,QAAM,SAAS,oBACZ,SADY,qEAEZ,SAFY,kFAGG,KAHH,aAAf;AAKA,QAAM,MAAM,GAAG,SAAS,CAAC,SAAD,CAAxB;AAEA,WAAO,YAAK;AACV,MAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,MAA1B;AACD,KAFD;AAGD,GAfD,EAeG,CAAC,KAAD,EAAQ,SAAR,CAfH;AAiBA,SAAO,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB;AAAU,IAAA,MAAM,EAAE,MAAlB;AAA0B,IAAA,YAAY,EAAE;AAAxC,GAAxB,CAAP;AACD,CA9BM","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from 'react';\nimport { createModule } from '../module';\nimport { XFlowAppExtensionMoudle, useExtensionRegistry, insertCss } from '@antv/xflow-core';\nexport const CONFIG_TYPE = 'CanvasSnapline';\n/** 默认颜色 */\nexport const SNAPLINE_COLOR = '#faad14';\nexport const CanvasSnapline = props => {\n    const { color = SNAPLINE_COLOR } = props;\n    const extension = useExtensionRegistry();\n    const config = React.useMemo(() => ({\n        CONFIG_TYPE,\n        getConfig: () => __awaiter(void 0, void 0, void 0, function* () { return ({}); }),\n    }), []);\n    /** 设置css 样式 */\n    React.useEffect(() => {\n        const className = `xflow-snapline-${Date.now()}`;\n        // 多xflow之间隔离\n        extension.addContainerClassNames(className);\n        const cssString = `\n    .${className} .xflow-snapline .x6-widget-snapline-horizontal, \n    .${className} .xflow-snapline .x6-widget-snapline-vertical {\n      border-color: ${color};\n    }`;\n        const $style = insertCss(cssString);\n        return () => {\n            document.head.removeChild($style);\n        };\n    }, [color, extension]);\n    return React.createElement(XFlowAppExtensionMoudle, { config: config, createModule: createModule });\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}