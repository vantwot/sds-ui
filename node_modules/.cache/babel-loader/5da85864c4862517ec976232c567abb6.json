{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { Event } from './Event';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLVideoElement } from './HTMLVideoElement';\nimport { Image } from './Image';\nimport { $location } from './location';\n\nvar Body = function (_HTMLElement) {\n  _inherits(Body, _HTMLElement);\n\n  var _super = _createSuper(Body);\n\n  function Body() {\n    _classCallCheck(this, Body);\n\n    return _super.call(this, 'body', 0);\n  }\n\n  _createClass(Body, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener, options) {}\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {}\n  }]);\n\n  return Body;\n}(HTMLElement);\n\nvar DocumentElement = function (_HTMLElement2) {\n  _inherits(DocumentElement, _HTMLElement2);\n\n  var _super2 = _createSuper(DocumentElement);\n\n  function DocumentElement() {\n    _classCallCheck(this, DocumentElement);\n\n    return _super2.call(this, 'html', 0);\n  }\n\n  _createClass(DocumentElement, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener) {}\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event) {}\n  }]);\n\n  return DocumentElement;\n}(HTMLElement);\n\nvar events = {};\nexport var $document = {\n  readyState: 'complete',\n  visibilityState: 'visible',\n  hidden: false,\n  fullscreen: true,\n  scripts: [],\n  style: {},\n  location: $location,\n  ontouchstart: null,\n  ontouchmove: null,\n  ontouchend: null,\n  onvisibilitychange: null,\n  parentNode: null,\n  parentElement: null,\n  head: null,\n  body: null,\n  documentElement: {\n    style: []\n  },\n  createElement: function createElement(tagName) {\n    tagName = tagName.toLowerCase();\n\n    if (tagName === 'canvas') {\n      return my.createOffscreenCanvas(1024, 128, '2d');\n    } else if (tagName === 'img') {\n      return new Image();\n    } else if (tagName === 'video') {\n      return new HTMLVideoElement();\n    }\n\n    return new HTMLElement(tagName);\n  },\n  createElementNS: function createElementNS(nameSpace, tagName) {\n    return this.createElement(tagName);\n  },\n  createTextNode: function createTextNode(text) {\n    return text;\n  },\n  getElementById: function getElementById(id) {\n    return null;\n  },\n  getElementsByTagName: function getElementsByTagName(tagName) {\n    tagName = tagName.toLowerCase();\n    return [];\n  },\n  getElementsByTagNameNS: function getElementsByTagNameNS(nameSpace, tagName) {\n    return this.getElementsByTagName(tagName);\n  },\n  getElementsByName: function getElementsByName(tagName) {\n    return [];\n  },\n  querySelector: function querySelector(query) {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll(query) {\n    return [];\n  },\n  addEventListener: function addEventListener(type, listener, options) {\n    if (!events[type]) {\n      events[type] = [];\n    }\n\n    events[type].push(listener);\n  },\n  removeEventListener: function removeEventListener(type, listener) {\n    var listeners = events[type];\n\n    if (listeners && listeners.length > 0) {\n      for (var i = listeners.length; i--; i > 0) {\n        if (listeners[i] === listener) {\n          listeners.splice(i, 1);\n          break;\n        }\n      }\n    }\n  },\n  dispatchEvent: function dispatchEvent(event) {\n    var type = event.type;\n    var listeners = events[type];\n\n    if (listeners) {\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i](event);\n      }\n    }\n\n    if (event.target && typeof event.target['on' + type] === 'function') {\n      event.target['on' + type](event);\n    }\n  },\n  createEvent: function createEvent(type) {\n    return new Event(type);\n  }\n};\n$document.documentElement = new DocumentElement();\n$document.head = new HTMLElement('head');\n$document.body = new Body();","map":{"version":3,"sources":["../../src/mini-adapter/document.ts"],"names":["Body","HTMLElement","options","DocumentElement","events","$document","readyState","visibilityState","hidden","fullscreen","scripts","style","location","ontouchstart","ontouchmove","ontouchend","onvisibilitychange","parentNode","parentElement","head","body","documentElement","createElement","tagName","my","createElementNS","createTextNode","getElementById","getElementsByTagName","getElementsByTagNameNS","getElementsByName","querySelector","querySelectorAll","addEventListener","removeEventListener","listeners","i","dispatchEvent","type","event","createEvent"],"mappings":"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","sourcesContent":["// @ts-nocheck\n// tslint:disable\nimport { Event } from './Event';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLVideoElement } from './HTMLVideoElement';\nimport { Image } from './Image';\nimport { $location } from './location';\n\nclass Body extends HTMLElement {\n  constructor() {\n    // 为了性能, 此处不按照标准的DOM层级关系设计\n    // 将 body 设置为 0级, parent元素为null\n    super('body', 0);\n  }\n\n  public addEventListener(type, listener, options = {}) {\n    // document.addEventListener(type, listener, options);\n  }\n\n  public removeEventListener(type, listener, options) {\n    // document.removeEventListener(type, listener);\n  }\n\n  public dispatchEvent(event: Event) {\n    // document.dispatchEvent(event);\n  }\n}\n\nclass DocumentElement extends HTMLElement {\n  constructor() {\n    super('html', 0);\n  }\n\n  public addEventListener(type, listener, options = {}) {\n    // document.addEventListener(type, listener, options);\n  }\n\n  public removeEventListener(type, listener) {\n    // document.removeEventListener(type, listener);\n  }\n\n  public dispatchEvent(event: Event) {\n    // document.dispatchEvent(event);\n  }\n}\n\nconst events = {};\n\nexport const $document = {\n  readyState: 'complete',\n  visibilityState: 'visible', // 'visible' , 'hidden'\n  hidden: false,\n  fullscreen: true,\n\n  scripts: [],\n  style: {},\n\n  location: $location,\n\n  ontouchstart: null,\n  ontouchmove: null,\n  ontouchend: null,\n  onvisibilitychange: null,\n\n  parentNode: null,\n  parentElement: null,\n  head: null,\n  body: null,\n  documentElement: {\n    style: [] as any[] ,\n  },\n  createElement(tagName) {\n    tagName = tagName.toLowerCase();\n    if (tagName === 'canvas') {\n      // return getCanvas();\n      // @ts-ignore\n      return my.createOffscreenCanvas(1024, 128, '2d')\n    } else if (tagName === 'img') {\n      return new Image();\n    } else if (tagName === 'video') {\n      return new HTMLVideoElement();\n    }\n\n    return new HTMLElement(tagName);\n  },\n\n  createElementNS(nameSpace, tagName) {\n    return this.createElement(tagName);\n  },\n\n  createTextNode(text) {\n    // TODO: Do we need the TextNode Class ???\n    return text;\n  },\n\n  getElementById(id) {\n    return null;\n  },\n\n  getElementsByTagName(tagName) {\n    tagName = tagName.toLowerCase();\n    return [];\n  },\n\n  getElementsByTagNameNS(nameSpace, tagName) {\n    return this.getElementsByTagName(tagName);\n  },\n\n  getElementsByName(tagName) {\n    return [];\n  },\n\n  querySelector(query) {\n    return null;\n  },\n\n  querySelectorAll(query) {\n    return [];\n  },\n\n  addEventListener(type, listener, options) {\n    if (!events[type]) {\n      events[type] = [];\n    }\n    events[type].push(listener);\n  },\n\n  removeEventListener(type, listener) {\n    const listeners = events[type];\n\n    if (listeners && listeners.length > 0) {\n      for (let i = listeners.length; i--; i > 0) {\n        if (listeners[i] === listener) {\n          listeners.splice(i, 1);\n          break;\n        }\n      }\n    }\n  },\n\n  dispatchEvent(event: Event) {\n    const type = event.type;\n    const listeners = events[type];\n\n    if (listeners) {\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i](event);\n      }\n    }\n\n    if (event.target && typeof event.target['on' + type] === 'function') {\n      event.target['on' + type](event);\n    }\n  },\n  createEvent(type: string) {\n    return new Event(type);\n  },\n};\n\n$document.documentElement = new DocumentElement();\n$document.head = new HTMLElement('head');\n$document.body = new Body();\n"]},"metadata":{},"sourceType":"module"}