{"ast":null,"code":"import React from 'react';\nimport { createPath } from '../../utils';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING, DefaultNodeConfig } from '../../constants';\nexport var NoteLeftNode = function NoteLeftNode(props) {\n  var _props$size = props.size,\n      size = _props$size === void 0 ? {\n    width: NODE_WIDTH,\n    height: NODE_HEIGHT\n  } : _props$size,\n      _props$data = props.data,\n      data = _props$data === void 0 ? {} : _props$data;\n  var _data$stroke = data.stroke,\n      stroke = _data$stroke === void 0 ? DefaultNodeConfig.stroke : _data$stroke,\n      _data$label = data.label,\n      label = _data$label === void 0 ? DefaultNodeConfig.label : _data$label,\n      _data$fill = data.fill,\n      fill = _data$fill === void 0 ? 'transparent' : _data$fill,\n      _data$fontFill = data.fontFill,\n      fontFill = _data$fontFill === void 0 ? DefaultNodeConfig.fontFill : _data$fontFill,\n      _data$fontSize = data.fontSize,\n      fontSize = _data$fontSize === void 0 ? DefaultNodeConfig.fontSize : _data$fontSize;\n  var width = size.width,\n      height = size.height;\n  var dx = 6;\n  var baseX = width - 2 * NODE_PADDING;\n  var path = [['M', baseX, NODE_PADDING], ['C', baseX - dx, NODE_PADDING, baseX - dx, dx], ['', baseX - dx, (height - dx) / 2], ['L', baseX - 2 * dx, height / 2], ['L', baseX - dx, (height + dx) / 2], ['L', baseX - dx, height - 2 * NODE_PADDING - dx], ['C', baseX - dx, height - 2 * NODE_PADDING, baseX, height - 2 * NODE_PADDING], ['', baseX, height - 2 * NODE_PADDING]];\n  return React.createElement(\"svg\", {\n    viewBox: \"0 0 \".concat(width, \" \").concat(height),\n    // viewBox={`0 0 40 30`}\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"100%\",\n    height: \"100%\"\n  }, React.createElement(\"path\", {\n    d: createPath(path),\n    fill: fill,\n    stroke: stroke\n  }), React.createElement(\"text\", {\n    x: width / 2,\n    y: height / 2,\n    fill: fontFill,\n    textAnchor: \"middle\",\n    alignmentBaseline: \"middle\",\n    fontSize: fontSize\n  }, label), \"Sorry, your browser does not support inline SVG.\");\n};","map":{"version":3,"sources":["../../../../src/flowchart-node-panel/nodes/note-left/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,UAAT,QAA2B,aAA3B;AACA,SAAS,UAAT,EAAqB,WAArB,EAAkC,YAAlC,EAAgD,iBAAhD,QAAyE,iBAAzE;AAEA,OAAO,IAAM,YAAY,GAAwB,SAApC,YAAoC,CAAA,KAAK,EAAG;AACvD,oBAAyE,KAAzE,CAAQ,IAAR;AAAA,MAAQ,IAAR,4BAAe;AAAE,IAAA,KAAK,EAAE,UAAT;AAAqB,IAAA,MAAM,EAAE;AAA7B,GAAf;AAAA,oBAAyE,KAAzE,CAA2D,IAA3D;AAAA,MAA2D,IAA3D,4BAAkE,EAAlE;AACA,qBAMI,IANJ,CACE,MADF;AAAA,MACE,MADF,6BACW,iBAAiB,CAAC,MAD7B;AAAA,oBAMI,IANJ,CAEE,KAFF;AAAA,MAEE,KAFF,4BAEU,iBAAiB,CAAC,KAF5B;AAAA,mBAMI,IANJ,CAGE,IAHF;AAAA,MAGE,IAHF,2BAGS,aAHT;AAAA,uBAMI,IANJ,CAIE,QAJF;AAAA,MAIE,QAJF,+BAIa,iBAAiB,CAAC,QAJ/B;AAAA,uBAMI,IANJ,CAKE,QALF;AAAA,MAKE,QALF,+BAKa,iBAAiB,CAAC,QAL/B;AAOA,MAAQ,KAAR,GAA0B,IAA1B,CAAQ,KAAR;AAAA,MAAe,MAAf,GAA0B,IAA1B,CAAe,MAAf;AACA,MAAM,EAAE,GAAG,CAAX;AACA,MAAM,KAAK,GAAG,KAAK,GAAG,IAAI,YAA1B;AACA,MAAM,IAAI,GAAG,CACX,CAAC,GAAD,EAAM,KAAN,EAAa,YAAb,CADW,EAEX,CAAC,GAAD,EAAM,KAAK,GAAG,EAAd,EAAkB,YAAlB,EAAgC,KAAK,GAAG,EAAxC,EAA4C,EAA5C,CAFW,EAGX,CAAC,EAAD,EAAK,KAAK,GAAG,EAAb,EAAiB,CAAC,MAAM,GAAG,EAAV,IAAgB,CAAjC,CAHW,EAIX,CAAC,GAAD,EAAM,KAAK,GAAG,IAAI,EAAlB,EAAsB,MAAM,GAAG,CAA/B,CAJW,EAKX,CAAC,GAAD,EAAM,KAAK,GAAG,EAAd,EAAkB,CAAC,MAAM,GAAG,EAAV,IAAgB,CAAlC,CALW,EAMX,CAAC,GAAD,EAAM,KAAK,GAAG,EAAd,EAAkB,MAAM,GAAG,IAAI,YAAb,GAA4B,EAA9C,CANW,EAOX,CAAC,GAAD,EAAM,KAAK,GAAG,EAAd,EAAkB,MAAM,GAAG,IAAI,YAA/B,EAA6C,KAA7C,EAAoD,MAAM,GAAG,IAAI,YAAjE,CAPW,EAQX,CAAC,EAAD,EAAK,KAAL,EAAY,MAAM,GAAG,IAAI,YAAzB,CARW,CAAb;AAWA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,OAAO,gBAAS,KAAT,cAAkB,MAAlB,CADT;AAEE;AACA,IAAA,KAAK,EAAC,4BAHR;AAIE,IAAA,KAAK,EAAC,MAJR;AAKE,IAAA,MAAM,EAAC;AALT,GAAA,EAOE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,CAAC,EAAE,UAAU,CAAC,IAAD,CAAnB;AAA2B,IAAA,IAAI,EAAE,IAAjC;AAAuC,IAAA,MAAM,EAAE;AAA/C,GAAA,CAPF,EAQE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,IAAA,CAAC,EAAE,KAAK,GAAG,CADb;AAEE,IAAA,CAAC,EAAE,MAAM,GAAG,CAFd;AAGE,IAAA,IAAI,EAAE,QAHR;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,iBAAiB,EAAC,QALpB;AAME,IAAA,QAAQ,EAAE;AANZ,GAAA,EAQG,KARH,CARF,EAmBM,kDAnBN,CADF;AAsBD,CA7CM","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { createPath } from '../../utils';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING, DefaultNodeConfig } from '../../constants';\nexport const NoteLeftNode = props => {\n    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;\n    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = 'transparent', fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;\n    const { width, height } = size;\n    const dx = 6;\n    const baseX = width - 2 * NODE_PADDING;\n    const path = [\n        ['M', baseX, NODE_PADDING],\n        ['C', baseX - dx, NODE_PADDING, baseX - dx, dx],\n        ['', baseX - dx, (height - dx) / 2],\n        ['L', baseX - 2 * dx, height / 2],\n        ['L', baseX - dx, (height + dx) / 2],\n        ['L', baseX - dx, height - 2 * NODE_PADDING - dx],\n        ['C', baseX - dx, height - 2 * NODE_PADDING, baseX, height - 2 * NODE_PADDING],\n        ['', baseX, height - 2 * NODE_PADDING],\n    ];\n    return (React.createElement(\"svg\", { viewBox: `0 0 ${width} ${height}`, \n        // viewBox={`0 0 40 30`}\n        xmlns: \"http://www.w3.org/2000/svg\", width: \"100%\", height: \"100%\" },\n        React.createElement(\"path\", { d: createPath(path), fill: fill, stroke: stroke }),\n        React.createElement(\"text\", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: \"middle\", alignmentBaseline: \"middle\", fontSize: fontSize }, label),\n        \"Sorry, your browser does not support inline SVG.\"));\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}