{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Dom, Vector } from '../../util';\nimport { View } from '../../view/view';\nimport { Point, Angle } from '../../geometry';\nexport class Handle {\n  get handleClassName() {\n    return ClassNames.handle;\n  }\n\n  get pie() {\n    return Object.assign(Object.assign({}, Handle.defaultPieOptions), this.handleOptions.pie);\n  }\n\n  initHandles() {\n    this.handles = [];\n\n    if (this.handleOptions.handles) {\n      this.handleOptions.handles.forEach(handle => this.addHandle(handle));\n    }\n\n    if (this.handleOptions.type === 'pie') {\n      if (this.pie.toggles) {\n        const className = ClassNames.pieToggle;\n        this.$pieToggles = {};\n        this.pie.toggles.forEach(item => {\n          const $elem = this.$('<div/>');\n          this.applyAttrs($elem, item.attrs);\n          $elem.addClass(className).addClass(`${className}-pos-${item.position || 'e'}`).attr('data-name', item.name).appendTo(this.container);\n          this.$pieToggles[item.name] = $elem;\n        });\n      }\n\n      this.setPieIcons();\n    }\n\n    if (this.$handleContainer) {\n      const type = this.handleOptions.type || 'surround';\n      this.$handleContainer.addClass(ClassNames.wrap).addClass(ClassNames.animate).addClass(`${ClassNames.handle}-${type}`);\n    }\n\n    this.delegateEvents({\n      [`mousedown .${ClassNames.handle}`]: 'onHandleMouseDown',\n      [`touchstart .${ClassNames.handle}`]: 'onHandleMouseDown',\n      [`mousedown .${ClassNames.pieToggle}`]: 'onPieToggleMouseDown',\n      [`touchstart .${ClassNames.pieToggle}`]: 'onPieToggleMouseDown'\n    });\n  }\n\n  onHandleMouseDown(evt) {\n    const action = this.$(evt.currentTarget).closest(`.${ClassNames.handle}`).attr('data-action');\n\n    if (action) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.setEventData(evt, {\n        action,\n        clientX: evt.clientX,\n        clientY: evt.clientY,\n        startX: evt.clientX,\n        startY: evt.clientY\n      });\n\n      if (evt.type === 'mousedown' && evt.button === 2) {\n        this.triggerHandleAction(action, 'contextmenu', evt);\n      } else {\n        this.triggerHandleAction(action, 'mousedown', evt);\n        this.delegateDocumentEvents({\n          mousemove: 'onHandleMouseMove',\n          touchmove: 'onHandleMouseMove',\n          mouseup: 'onHandleMouseUp',\n          touchend: 'onHandleMouseUp',\n          touchcancel: 'onHandleMouseUp'\n        }, evt.data);\n      }\n    }\n  }\n\n  onHandleMouseMove(evt) {\n    const data = this.getEventData(evt);\n    const action = data.action;\n\n    if (action) {\n      this.triggerHandleAction(action, 'mousemove', evt);\n    }\n  }\n\n  onHandleMouseUp(evt) {\n    const data = this.getEventData(evt);\n    const action = data.action;\n\n    if (action) {\n      this.triggerHandleAction(action, 'mouseup', evt);\n      this.undelegateDocumentEvents();\n    }\n  }\n\n  triggerHandleAction(action, eventName, evt, args) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    const e = this.normalizeEvent(evt);\n    const data = this.getEventData(e);\n    const local = this.graph.snapToGrid(e.clientX, e.clientY);\n    const origin = this.graph.snapToGrid(data.clientX, data.clientY);\n    const dx = local.x - origin.x;\n    const dy = local.y - origin.y;\n    this.trigger(`action:${action}:${eventName}`, Object.assign({\n      e,\n      dx,\n      dy,\n      x: local.x,\n      y: local.y,\n      offsetX: evt.clientX - data.startX,\n      offsetY: evt.clientY - data.startY\n    }, args));\n    data.clientX = evt.clientX;\n    data.clientY = evt.clientY;\n  }\n\n  onPieToggleMouseDown(evt) {\n    evt.stopPropagation();\n    const name = this.$(evt.target).closest(`.${ClassNames.pieToggle}`).attr('data-name');\n\n    if (!this.isOpen(name)) {\n      if (this.isOpen()) {\n        this.toggleState();\n      }\n    }\n\n    this.toggleState(name);\n  }\n\n  setPieIcons() {\n    if (this.handleOptions.type === 'pie') {\n      this.$handleContainer.find(`.${ClassNames.handle}`).each((_, elem) => {\n        const $elem = this.$(elem);\n        const action = $elem.attr('data-action');\n        const className = ClassNames.pieSlice;\n        const handle = this.getHandle(action);\n\n        if (!handle || !handle.icon) {\n          const contect = window.getComputedStyle(elem, ':before').getPropertyValue('content');\n\n          if (contect && contect !== 'none') {\n            const $icons = $elem.find(`.${className}-txt`);\n\n            if ($icons.length) {\n              Vector.create($icons[0]).text(contect.replace(/['\"]/g, ''));\n            }\n          }\n\n          const bgImg = $elem.css('background-image');\n\n          if (bgImg) {\n            const matches = bgImg.match(/url\\(['\"]?([^'\"]+)['\"]?\\)/);\n\n            if (matches) {\n              const href = matches[1];\n              const $imgs = $elem.find(`.${className}-img`);\n\n              if ($imgs.length > 0) {\n                Vector.create($imgs[0]).attr('xlink:href', href);\n              }\n            }\n          }\n        }\n      });\n    }\n  }\n\n  getHandleIdx(name) {\n    return this.handles.findIndex(item => item.name === name);\n  }\n\n  hasHandle(name) {\n    return this.getHandleIdx(name) >= 0;\n  }\n\n  getHandle(name) {\n    return this.handles.find(item => item.name === name);\n  }\n\n  renderHandle(handle) {\n    const $handle = this.$('<div/>').addClass(`${ClassNames.handle} ${ClassNames.handle}-${handle.name}`).attr('data-action', handle.name).prop('draggable', false);\n\n    if (this.handleOptions.type === 'pie') {\n      const index = this.getHandleIdx(handle.name);\n      const pie = this.pie;\n      const outerRadius = pie.outerRadius;\n      const innerRadius = pie.innerRadius;\n      const offset = (outerRadius + innerRadius) / 2;\n      const ratio = new Point(outerRadius, outerRadius);\n      const delta = Angle.toRad(pie.sliceAngle);\n      const curRad = index * delta + Angle.toRad(pie.startAngle);\n      const nextRad = curRad + delta;\n      const pathData = Dom.createSlicePathData(innerRadius, outerRadius, curRad, nextRad);\n      const vSvg = Vector.create('svg').addClass(`${ClassNames.pieSlice}-svg`);\n      const vPath = Vector.create('path').addClass(ClassNames.pieSlice).attr('d', pathData).translate(outerRadius, outerRadius);\n      const pos = Point.fromPolar(offset, -curRad - delta / 2, ratio).toJSON();\n      const iconSize = pie.iconSize;\n      const vImg = Vector.create('image').attr(pos).addClass(`${ClassNames.pieSlice}-img`);\n      pos.y = pos.y + iconSize - 2;\n      const vText = Vector.create('text', {\n        'font-size': iconSize\n      }).attr(pos).addClass(`${ClassNames.pieSlice}-txt`);\n      vImg.attr({\n        width: iconSize,\n        height: iconSize\n      });\n      vImg.translate(-iconSize / 2, -iconSize / 2);\n      vText.translate(-iconSize / 2, -iconSize / 2);\n      vSvg.append([vPath, vImg, vText]);\n      $handle.append(vSvg.node);\n    } else {\n      $handle.addClass(`${ClassNames.handle}-pos-${handle.position}`);\n\n      if (handle.content) {\n        if (typeof handle.content === 'string') {\n          $handle.html(handle.content);\n        } else {\n          $handle.append(handle.content);\n        }\n      }\n    }\n\n    this.updateHandleIcon($handle, handle.icon);\n    this.applyAttrs($handle, handle.attrs);\n    return $handle;\n  }\n\n  addHandle(handle) {\n    if (!this.hasHandle(handle.name)) {\n      this.handles.push(handle);\n      const events = handle.events;\n\n      if (events) {\n        Object.keys(events).forEach(action => {\n          const callback = events[action];\n          const name = `action:${handle.name}:${action}`;\n\n          if (typeof callback === 'string') {\n            this.on(name, this[callback], this);\n          } else {\n            this.on(name, callback);\n          }\n        });\n      }\n\n      if (this.$handleContainer) {\n        this.$handleContainer.append(this.renderHandle(handle));\n      }\n    }\n\n    return this;\n  }\n\n  addHandles(handles) {\n    handles.forEach(handle => this.addHandle(handle));\n    return this;\n  }\n\n  removeHandles() {\n    while (this.handles.length) {\n      this.removeHandle(this.handles[0].name);\n    }\n\n    return this;\n  }\n\n  removeHandle(name) {\n    const index = this.getHandleIdx(name);\n    const handle = this.handles[index];\n\n    if (handle) {\n      if (handle.events) {\n        Object.keys(handle.events).forEach(event => {\n          this.off(`action:${name}:${event}`);\n        });\n      }\n\n      this.getHandleElem(name).remove();\n      this.handles.splice(index, 1);\n    }\n\n    return this;\n  }\n\n  changeHandle(name, newHandle) {\n    const handle = this.getHandle(name);\n\n    if (handle) {\n      this.removeHandle(name);\n      this.addHandle(Object.assign(Object.assign({}, handle), newHandle));\n    }\n\n    return this;\n  }\n\n  toggleHandle(name, selected) {\n    const handle = this.getHandle(name);\n\n    if (handle) {\n      const $handle = this.getHandleElem(name);\n      const className = `${ClassNames.handle}-selected`;\n\n      if (selected === undefined) {\n        selected = !$handle.hasClass(className); // eslint-disable-line\n      }\n\n      $handle.toggleClass(className, selected);\n      const icon = selected ? handle.iconSelected : handle.icon;\n\n      if (icon) {\n        this.updateHandleIcon($handle, icon);\n      }\n    }\n\n    return this;\n  }\n\n  selectHandle(name) {\n    return this.toggleHandle(name, true);\n  }\n\n  deselectHandle(name) {\n    return this.toggleHandle(name, false);\n  }\n\n  deselectAllHandles() {\n    this.handles.forEach(handle => this.deselectHandle(handle.name));\n    return this;\n  }\n\n  getHandleElem(name) {\n    return this.$handleContainer.find(`.${ClassNames.handle}-${name}`);\n  }\n\n  updateHandleIcon($handle, icon) {\n    if (this.handleOptions.type === 'pie') {\n      const $icons = $handle.find(`.${ClassNames.pieSliceImg}`);\n      this.$($icons[0]).attr('xlink:href', icon || '');\n    } else {\n      $handle.css('background-image', icon ? `url(${icon})` : '');\n    }\n  }\n\n  isRendered() {\n    return this.$handleContainer != null;\n  }\n\n  isOpen(name) {\n    if (this.isRendered()) {\n      return name ? this.$pieToggles[name].hasClass(ClassNames.pieToggleOpened) : this.$handleContainer.hasClass(`${ClassNames.pieOpended}`);\n    }\n\n    return false;\n  }\n\n  toggleState(name) {\n    if (this.isRendered()) {\n      const $handleContainer = this.$handleContainer;\n      Object.keys(this.$pieToggles).forEach(key => {\n        const $toggle = this.$pieToggles[key];\n        $toggle.removeClass(ClassNames.pieToggleOpened);\n      });\n\n      if (this.isOpen()) {\n        this.trigger('pie:close', {\n          name\n        });\n        $handleContainer.removeClass(ClassNames.pieOpended);\n      } else {\n        this.trigger('pie:open', {\n          name\n        });\n\n        if (name) {\n          const toggles = this.pie.toggles;\n          const toggle = toggles && toggles.find(i => i.name === name);\n\n          if (toggle) {\n            $handleContainer.attr({\n              'data-pie-toggle-name': toggle.name,\n              'data-pie-toggle-position': toggle.position\n            });\n          }\n\n          this.$pieToggles[name].addClass(ClassNames.pieToggleOpened);\n        }\n\n        $handleContainer.addClass(ClassNames.pieOpended);\n      }\n    }\n  }\n\n  applyAttrs(elem, attrs) {\n    if (attrs) {\n      const $elem = View.$(elem);\n      Object.keys(attrs).forEach(selector => {\n        const $element = $elem.find(selector).addBack().filter(selector);\n\n        const _a = attrs[selector],\n              {\n          class: cls\n        } = _a,\n              attr = __rest(_a, [\"class\"]);\n\n        if (cls) {\n          $element.addClass(cls);\n        }\n\n        $element.attr(attr);\n      });\n    }\n  }\n\n}\n\n(function (Handle) {\n  Handle.defaultPieOptions = {\n    innerRadius: 20,\n    outerRadius: 50,\n    sliceAngle: 45,\n    startAngle: 0,\n    iconSize: 14,\n    toggles: [{\n      name: 'default',\n      position: 'e'\n    }]\n  };\n})(Handle || (Handle = {}));\n\nvar ClassNames;\n\n(function (ClassNames) {\n  ClassNames.handle = View.prototype.prefixClassName('widget-handle');\n  ClassNames.wrap = `${ClassNames.handle}-wrap`;\n  ClassNames.animate = `${ClassNames.handle}-animate`;\n  ClassNames.pieOpended = `${ClassNames.handle}-pie-opened`;\n  ClassNames.pieToggle = `${ClassNames.handle}-pie-toggle`;\n  ClassNames.pieToggleOpened = `${ClassNames.handle}-pie-toggle-opened`;\n  ClassNames.pieSlice = `${ClassNames.handle}-pie-slice`;\n  ClassNames.pieSliceImg = `${ClassNames.handle}-pie-slice-img`;\n})(ClassNames || (ClassNames = {}));","map":{"version":3,"sources":["../../../src/addon/common/handle.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Dom, Vector } from '../../util';\nimport { View } from '../../view/view';\nimport { Point, Angle } from '../../geometry';\nexport class Handle {\n    get handleClassName() {\n        return ClassNames.handle;\n    }\n    get pie() {\n        return Object.assign(Object.assign({}, Handle.defaultPieOptions), this.handleOptions.pie);\n    }\n    initHandles() {\n        this.handles = [];\n        if (this.handleOptions.handles) {\n            this.handleOptions.handles.forEach((handle) => this.addHandle(handle));\n        }\n        if (this.handleOptions.type === 'pie') {\n            if (this.pie.toggles) {\n                const className = ClassNames.pieToggle;\n                this.$pieToggles = {};\n                this.pie.toggles.forEach((item) => {\n                    const $elem = this.$('<div/>');\n                    this.applyAttrs($elem, item.attrs);\n                    $elem\n                        .addClass(className)\n                        .addClass(`${className}-pos-${item.position || 'e'}`)\n                        .attr('data-name', item.name)\n                        .appendTo(this.container);\n                    this.$pieToggles[item.name] = $elem;\n                });\n            }\n            this.setPieIcons();\n        }\n        if (this.$handleContainer) {\n            const type = this.handleOptions.type || 'surround';\n            this.$handleContainer\n                .addClass(ClassNames.wrap)\n                .addClass(ClassNames.animate)\n                .addClass(`${ClassNames.handle}-${type}`);\n        }\n        this.delegateEvents({\n            [`mousedown .${ClassNames.handle}`]: 'onHandleMouseDown',\n            [`touchstart .${ClassNames.handle}`]: 'onHandleMouseDown',\n            [`mousedown .${ClassNames.pieToggle}`]: 'onPieToggleMouseDown',\n            [`touchstart .${ClassNames.pieToggle}`]: 'onPieToggleMouseDown',\n        });\n    }\n    onHandleMouseDown(evt) {\n        const action = this.$(evt.currentTarget)\n            .closest(`.${ClassNames.handle}`)\n            .attr('data-action');\n        if (action) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            this.setEventData(evt, {\n                action,\n                clientX: evt.clientX,\n                clientY: evt.clientY,\n                startX: evt.clientX,\n                startY: evt.clientY,\n            });\n            if (evt.type === 'mousedown' && evt.button === 2) {\n                this.triggerHandleAction(action, 'contextmenu', evt);\n            }\n            else {\n                this.triggerHandleAction(action, 'mousedown', evt);\n                this.delegateDocumentEvents({\n                    mousemove: 'onHandleMouseMove',\n                    touchmove: 'onHandleMouseMove',\n                    mouseup: 'onHandleMouseUp',\n                    touchend: 'onHandleMouseUp',\n                    touchcancel: 'onHandleMouseUp',\n                }, evt.data);\n            }\n        }\n    }\n    onHandleMouseMove(evt) {\n        const data = this.getEventData(evt);\n        const action = data.action;\n        if (action) {\n            this.triggerHandleAction(action, 'mousemove', evt);\n        }\n    }\n    onHandleMouseUp(evt) {\n        const data = this.getEventData(evt);\n        const action = data.action;\n        if (action) {\n            this.triggerHandleAction(action, 'mouseup', evt);\n            this.undelegateDocumentEvents();\n        }\n    }\n    triggerHandleAction(action, eventName, evt, args) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        const e = this.normalizeEvent(evt);\n        const data = this.getEventData(e);\n        const local = this.graph.snapToGrid(e.clientX, e.clientY);\n        const origin = this.graph.snapToGrid(data.clientX, data.clientY);\n        const dx = local.x - origin.x;\n        const dy = local.y - origin.y;\n        this.trigger(`action:${action}:${eventName}`, Object.assign({ e,\n            dx,\n            dy, x: local.x, y: local.y, offsetX: evt.clientX - data.startX, offsetY: evt.clientY - data.startY }, args));\n        data.clientX = evt.clientX;\n        data.clientY = evt.clientY;\n    }\n    onPieToggleMouseDown(evt) {\n        evt.stopPropagation();\n        const name = this.$(evt.target)\n            .closest(`.${ClassNames.pieToggle}`)\n            .attr('data-name');\n        if (!this.isOpen(name)) {\n            if (this.isOpen()) {\n                this.toggleState();\n            }\n        }\n        this.toggleState(name);\n    }\n    setPieIcons() {\n        if (this.handleOptions.type === 'pie') {\n            this.$handleContainer.find(`.${ClassNames.handle}`).each((_, elem) => {\n                const $elem = this.$(elem);\n                const action = $elem.attr('data-action');\n                const className = ClassNames.pieSlice;\n                const handle = this.getHandle(action);\n                if (!handle || !handle.icon) {\n                    const contect = window\n                        .getComputedStyle(elem, ':before')\n                        .getPropertyValue('content');\n                    if (contect && contect !== 'none') {\n                        const $icons = $elem.find(`.${className}-txt`);\n                        if ($icons.length) {\n                            Vector.create($icons[0]).text(contect.replace(/['\"]/g, ''));\n                        }\n                    }\n                    const bgImg = $elem.css('background-image');\n                    if (bgImg) {\n                        const matches = bgImg.match(/url\\(['\"]?([^'\"]+)['\"]?\\)/);\n                        if (matches) {\n                            const href = matches[1];\n                            const $imgs = $elem.find(`.${className}-img`);\n                            if ($imgs.length > 0) {\n                                Vector.create($imgs[0]).attr('xlink:href', href);\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n    getHandleIdx(name) {\n        return this.handles.findIndex((item) => item.name === name);\n    }\n    hasHandle(name) {\n        return this.getHandleIdx(name) >= 0;\n    }\n    getHandle(name) {\n        return this.handles.find((item) => item.name === name);\n    }\n    renderHandle(handle) {\n        const $handle = this.$('<div/>')\n            .addClass(`${ClassNames.handle} ${ClassNames.handle}-${handle.name}`)\n            .attr('data-action', handle.name)\n            .prop('draggable', false);\n        if (this.handleOptions.type === 'pie') {\n            const index = this.getHandleIdx(handle.name);\n            const pie = this.pie;\n            const outerRadius = pie.outerRadius;\n            const innerRadius = pie.innerRadius;\n            const offset = (outerRadius + innerRadius) / 2;\n            const ratio = new Point(outerRadius, outerRadius);\n            const delta = Angle.toRad(pie.sliceAngle);\n            const curRad = index * delta + Angle.toRad(pie.startAngle);\n            const nextRad = curRad + delta;\n            const pathData = Dom.createSlicePathData(innerRadius, outerRadius, curRad, nextRad);\n            const vSvg = Vector.create('svg').addClass(`${ClassNames.pieSlice}-svg`);\n            const vPath = Vector.create('path')\n                .addClass(ClassNames.pieSlice)\n                .attr('d', pathData)\n                .translate(outerRadius, outerRadius);\n            const pos = Point.fromPolar(offset, -curRad - delta / 2, ratio).toJSON();\n            const iconSize = pie.iconSize;\n            const vImg = Vector.create('image')\n                .attr(pos)\n                .addClass(`${ClassNames.pieSlice}-img`);\n            pos.y = pos.y + iconSize - 2;\n            const vText = Vector.create('text', { 'font-size': iconSize })\n                .attr(pos)\n                .addClass(`${ClassNames.pieSlice}-txt`);\n            vImg.attr({\n                width: iconSize,\n                height: iconSize,\n            });\n            vImg.translate(-iconSize / 2, -iconSize / 2);\n            vText.translate(-iconSize / 2, -iconSize / 2);\n            vSvg.append([vPath, vImg, vText]);\n            $handle.append(vSvg.node);\n        }\n        else {\n            $handle.addClass(`${ClassNames.handle}-pos-${handle.position}`);\n            if (handle.content) {\n                if (typeof handle.content === 'string') {\n                    $handle.html(handle.content);\n                }\n                else {\n                    $handle.append(handle.content);\n                }\n            }\n        }\n        this.updateHandleIcon($handle, handle.icon);\n        this.applyAttrs($handle, handle.attrs);\n        return $handle;\n    }\n    addHandle(handle) {\n        if (!this.hasHandle(handle.name)) {\n            this.handles.push(handle);\n            const events = handle.events;\n            if (events) {\n                Object.keys(events).forEach((action) => {\n                    const callback = events[action];\n                    const name = `action:${handle.name}:${action}`;\n                    if (typeof callback === 'string') {\n                        this.on(name, this[callback], this);\n                    }\n                    else {\n                        this.on(name, callback);\n                    }\n                });\n            }\n            if (this.$handleContainer) {\n                this.$handleContainer.append(this.renderHandle(handle));\n            }\n        }\n        return this;\n    }\n    addHandles(handles) {\n        handles.forEach((handle) => this.addHandle(handle));\n        return this;\n    }\n    removeHandles() {\n        while (this.handles.length) {\n            this.removeHandle(this.handles[0].name);\n        }\n        return this;\n    }\n    removeHandle(name) {\n        const index = this.getHandleIdx(name);\n        const handle = this.handles[index];\n        if (handle) {\n            if (handle.events) {\n                Object.keys(handle.events).forEach((event) => {\n                    this.off(`action:${name}:${event}`);\n                });\n            }\n            this.getHandleElem(name).remove();\n            this.handles.splice(index, 1);\n        }\n        return this;\n    }\n    changeHandle(name, newHandle) {\n        const handle = this.getHandle(name);\n        if (handle) {\n            this.removeHandle(name);\n            this.addHandle(Object.assign(Object.assign({}, handle), newHandle));\n        }\n        return this;\n    }\n    toggleHandle(name, selected) {\n        const handle = this.getHandle(name);\n        if (handle) {\n            const $handle = this.getHandleElem(name);\n            const className = `${ClassNames.handle}-selected`;\n            if (selected === undefined) {\n                selected = !$handle.hasClass(className); // eslint-disable-line\n            }\n            $handle.toggleClass(className, selected);\n            const icon = selected ? handle.iconSelected : handle.icon;\n            if (icon) {\n                this.updateHandleIcon($handle, icon);\n            }\n        }\n        return this;\n    }\n    selectHandle(name) {\n        return this.toggleHandle(name, true);\n    }\n    deselectHandle(name) {\n        return this.toggleHandle(name, false);\n    }\n    deselectAllHandles() {\n        this.handles.forEach((handle) => this.deselectHandle(handle.name));\n        return this;\n    }\n    getHandleElem(name) {\n        return this.$handleContainer.find(`.${ClassNames.handle}-${name}`);\n    }\n    updateHandleIcon($handle, icon) {\n        if (this.handleOptions.type === 'pie') {\n            const $icons = $handle.find(`.${ClassNames.pieSliceImg}`);\n            this.$($icons[0]).attr('xlink:href', icon || '');\n        }\n        else {\n            $handle.css('background-image', icon ? `url(${icon})` : '');\n        }\n    }\n    isRendered() {\n        return this.$handleContainer != null;\n    }\n    isOpen(name) {\n        if (this.isRendered()) {\n            return name\n                ? this.$pieToggles[name].hasClass(ClassNames.pieToggleOpened)\n                : this.$handleContainer.hasClass(`${ClassNames.pieOpended}`);\n        }\n        return false;\n    }\n    toggleState(name) {\n        if (this.isRendered()) {\n            const $handleContainer = this.$handleContainer;\n            Object.keys(this.$pieToggles).forEach((key) => {\n                const $toggle = this.$pieToggles[key];\n                $toggle.removeClass(ClassNames.pieToggleOpened);\n            });\n            if (this.isOpen()) {\n                this.trigger('pie:close', { name });\n                $handleContainer.removeClass(ClassNames.pieOpended);\n            }\n            else {\n                this.trigger('pie:open', { name });\n                if (name) {\n                    const toggles = this.pie.toggles;\n                    const toggle = toggles && toggles.find((i) => i.name === name);\n                    if (toggle) {\n                        $handleContainer.attr({\n                            'data-pie-toggle-name': toggle.name,\n                            'data-pie-toggle-position': toggle.position,\n                        });\n                    }\n                    this.$pieToggles[name].addClass(ClassNames.pieToggleOpened);\n                }\n                $handleContainer.addClass(ClassNames.pieOpended);\n            }\n        }\n    }\n    applyAttrs(elem, attrs) {\n        if (attrs) {\n            const $elem = View.$(elem);\n            Object.keys(attrs).forEach((selector) => {\n                const $element = $elem.find(selector).addBack().filter(selector);\n                const _a = attrs[selector], { class: cls } = _a, attr = __rest(_a, [\"class\"]);\n                if (cls) {\n                    $element.addClass(cls);\n                }\n                $element.attr(attr);\n            });\n        }\n    }\n}\n(function (Handle) {\n    Handle.defaultPieOptions = {\n        innerRadius: 20,\n        outerRadius: 50,\n        sliceAngle: 45,\n        startAngle: 0,\n        iconSize: 14,\n        toggles: [\n            {\n                name: 'default',\n                position: 'e',\n            },\n        ],\n    };\n})(Handle || (Handle = {}));\nvar ClassNames;\n(function (ClassNames) {\n    ClassNames.handle = View.prototype.prefixClassName('widget-handle');\n    ClassNames.wrap = `${ClassNames.handle}-wrap`;\n    ClassNames.animate = `${ClassNames.handle}-animate`;\n    ClassNames.pieOpended = `${ClassNames.handle}-pie-opened`;\n    ClassNames.pieToggle = `${ClassNames.handle}-pie-toggle`;\n    ClassNames.pieToggleOpened = `${ClassNames.handle}-pie-toggle-opened`;\n    ClassNames.pieSlice = `${ClassNames.handle}-pie-slice`;\n    ClassNames.pieSliceImg = `${ClassNames.handle}-pie-slice-img`;\n})(ClassNames || (ClassNames = {}));\n//# sourceMappingURL=handle.js.map"]},"metadata":{},"sourceType":"module"}