{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { ToolsView } from '../../view/tool';\nimport { Registry } from '../registry';\nimport { Button } from './button';\nimport { Boundary } from './boundary';\nimport { Vertices } from './vertices';\nimport { Segments } from './segments';\nimport { SourceAnchor, TargetAnchor } from './anchor';\nimport { SourceArrowhead, TargetArrowhead } from './arrowhead';\nimport { CellEditor } from './editor';\nexport var NodeTool;\n\n(function (NodeTool) {\n  NodeTool.presets = {\n    boundary: Boundary,\n    button: Button,\n    'button-remove': Button.Remove,\n    'node-editor': CellEditor.NodeEditor\n  };\n  NodeTool.registry = Registry.create({\n    type: 'node tool',\n    process: function process(name, options) {\n      if (typeof options === 'function') {\n        return options;\n      }\n\n      var parent = ToolsView.ToolItem;\n\n      var inherit = options.inherit,\n          others = __rest(options, [\"inherit\"]);\n\n      if (inherit) {\n        var base = this.get(inherit);\n\n        if (base == null) {\n          this.onNotFound(inherit, 'inherited');\n        } else {\n          parent = base;\n        }\n      }\n\n      if (others.name == null) {\n        others.name = name;\n      }\n\n      return parent.define.call(parent, others);\n    }\n  });\n  NodeTool.registry.register(NodeTool.presets, true);\n})(NodeTool || (NodeTool = {}));\n\nexport var EdgeTool;\n\n(function (EdgeTool) {\n  EdgeTool.presets = {\n    boundary: Boundary,\n    vertices: Vertices,\n    segments: Segments,\n    button: Button,\n    'button-remove': Button.Remove,\n    'source-anchor': SourceAnchor,\n    'target-anchor': TargetAnchor,\n    'source-arrowhead': SourceArrowhead,\n    'target-arrowhead': TargetArrowhead,\n    'edge-editor': CellEditor.EdgeEditor\n  };\n  EdgeTool.registry = Registry.create({\n    type: 'edge tool',\n    process: function process(name, options) {\n      if (typeof options === 'function') {\n        return options;\n      }\n\n      var parent = ToolsView.ToolItem;\n\n      var inherit = options.inherit,\n          others = __rest(options, [\"inherit\"]);\n\n      if (inherit) {\n        var base = this.get(inherit);\n\n        if (base == null) {\n          this.onNotFound(inherit, 'inherited');\n        } else {\n          parent = base;\n        }\n      }\n\n      if (others.name == null) {\n        others.name = name;\n      }\n\n      return parent.define.call(parent, others);\n    }\n  });\n  EdgeTool.registry.register(EdgeTool.presets, true);\n})(EdgeTool || (EdgeTool = {}));","map":{"version":3,"sources":["../../../src/registry/tool/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ToolsView } from '../../view/tool';\nimport { Registry } from '../registry';\nimport { Button } from './button';\nimport { Boundary } from './boundary';\nimport { Vertices } from './vertices';\nimport { Segments } from './segments';\nimport { SourceAnchor, TargetAnchor } from './anchor';\nimport { SourceArrowhead, TargetArrowhead } from './arrowhead';\nimport { CellEditor } from './editor';\nexport var NodeTool;\n(function (NodeTool) {\n    NodeTool.presets = {\n        boundary: Boundary,\n        button: Button,\n        'button-remove': Button.Remove,\n        'node-editor': CellEditor.NodeEditor,\n    };\n    NodeTool.registry = Registry.create({\n        type: 'node tool',\n        process(name, options) {\n            if (typeof options === 'function') {\n                return options;\n            }\n            let parent = ToolsView.ToolItem;\n            const { inherit } = options, others = __rest(options, [\"inherit\"]);\n            if (inherit) {\n                const base = this.get(inherit);\n                if (base == null) {\n                    this.onNotFound(inherit, 'inherited');\n                }\n                else {\n                    parent = base;\n                }\n            }\n            if (others.name == null) {\n                others.name = name;\n            }\n            return parent.define.call(parent, others);\n        },\n    });\n    NodeTool.registry.register(NodeTool.presets, true);\n})(NodeTool || (NodeTool = {}));\nexport var EdgeTool;\n(function (EdgeTool) {\n    EdgeTool.presets = {\n        boundary: Boundary,\n        vertices: Vertices,\n        segments: Segments,\n        button: Button,\n        'button-remove': Button.Remove,\n        'source-anchor': SourceAnchor,\n        'target-anchor': TargetAnchor,\n        'source-arrowhead': SourceArrowhead,\n        'target-arrowhead': TargetArrowhead,\n        'edge-editor': CellEditor.EdgeEditor,\n    };\n    EdgeTool.registry = Registry.create({\n        type: 'edge tool',\n        process(name, options) {\n            if (typeof options === 'function') {\n                return options;\n            }\n            let parent = ToolsView.ToolItem;\n            const { inherit } = options, others = __rest(options, [\"inherit\"]);\n            if (inherit) {\n                const base = this.get(inherit);\n                if (base == null) {\n                    this.onNotFound(inherit, 'inherited');\n                }\n                else {\n                    parent = base;\n                }\n            }\n            if (others.name == null) {\n                others.name = name;\n            }\n            return parent.define.call(parent, others);\n        },\n    });\n    EdgeTool.registry.register(EdgeTool.presets, true);\n})(EdgeTool || (EdgeTool = {}));\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}