{"ast":null,"code":"import React from 'react';\nimport { Form, Select as ASelect } from 'antd';\nimport { FormItemWrapper } from '../../common/form-item-wrapper';\nimport { renderFormItemExtra } from '../../common/tooltip';\nexport const Select = props => {\n  const {\n    controlSchema\n  } = props;\n  const {\n    required,\n    tooltip,\n    extra,\n    name,\n    label,\n    placeholder,\n    options = []\n  } = controlSchema;\n  return React.createElement(FormItemWrapper, {\n    schema: controlSchema\n  }, _ref => {\n    let {\n      hidden,\n      disabled,\n      initialValue\n    } = _ref;\n    return React.createElement(Form.Item, {\n      name: name,\n      label: label,\n      initialValue: initialValue,\n      tooltip: tooltip,\n      extra: renderFormItemExtra(extra),\n      required: required,\n      hidden: hidden\n    }, React.createElement(ASelect, {\n      disabled: disabled,\n      placeholder: placeholder\n    }, options.map(option => {\n      const {\n        title,\n        value\n      } = option;\n      return React.createElement(ASelect.Option, {\n        key: value.toString(),\n        value: value\n      }, title);\n    })));\n  });\n};","map":{"version":3,"sources":["../../../../../src/canvas-json-schema-form/schema-form/control-map/select/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,IAAT,EAAe,MAAM,IAAI,OAAzB,QAAwC,MAAxC;AAEA,SAAS,eAAT,QAAgC,gCAAhC;AACA,SAAS,mBAAT,QAAoC,sBAApC;AAMA,OAAO,MAAM,MAAM,GAAoB,KAAK,IAAG;AAC7C,QAAM;AAAE,IAAA;AAAF,MAAoB,KAA1B;AACA,QAAM;AAAE,IAAA,QAAF;AAAY,IAAA,OAAZ;AAAqB,IAAA,KAArB;AAA4B,IAAA,IAA5B;AAAkC,IAAA,KAAlC;AAAyC,IAAA,WAAzC;AAAsD,IAAA,OAAO,GAAG;AAAhE,MAAuE,aAA7E;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AAAC,IAAA,MAAM,EAAE;AAAT,GAAhB,EACG,QAAuC;AAAA,QAAtC;AAAE,MAAA,MAAF;AAAU,MAAA,QAAV;AAAoB,MAAA;AAApB,KAAsC;AACtC,WACE,KAAA,CAAA,aAAA,CAAC,IAAI,CAAC,IAAN,EAAU;AACR,MAAA,IAAI,EAAE,IADE;AAER,MAAA,KAAK,EAAE,KAFC;AAGR,MAAA,YAAY,EAAE,YAHN;AAIR,MAAA,OAAO,EAAE,OAJD;AAKR,MAAA,KAAK,EAAE,mBAAmB,CAAC,KAAD,CALlB;AAMR,MAAA,QAAQ,EAAE,QANF;AAOR,MAAA,MAAM,EAAE;AAPA,KAAV,EASE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AAAC,MAAA,QAAQ,EAAE,QAAX;AAAqB,MAAA,WAAW,EAAE;AAAlC,KAAR,EACG,OAAO,CAAC,GAAR,CAAY,MAAM,IAAG;AACpB,YAAM;AAAE,QAAA,KAAF;AAAS,QAAA;AAAT,UAAmB,MAAzB;AACA,aACE,KAAA,CAAA,aAAA,CAAC,OAAO,CAAC,MAAT,EAAe;AAAC,QAAA,GAAG,EAAE,KAAK,CAAC,QAAN,EAAN;AAAwB,QAAA,KAAK,EAAE;AAA/B,OAAf,EACG,KADH,CADF;AAKD,KAPA,CADH,CATF,CADF;AAsBD,GAxBH,CADF;AA4BD,CAhCM","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { Form, Select as ASelect } from 'antd';\nimport { FormItemWrapper } from '../../common/form-item-wrapper';\nimport { renderFormItemExtra } from '../../common/tooltip';\nexport const Select = props => {\n    const { controlSchema } = props;\n    const { required, tooltip, extra, name, label, placeholder, options = [] } = controlSchema;\n    return (React.createElement(FormItemWrapper, { schema: controlSchema }, ({ hidden, disabled, initialValue }) => {\n        return (React.createElement(Form.Item, { name: name, label: label, initialValue: initialValue, tooltip: tooltip, extra: renderFormItemExtra(extra), required: required, hidden: hidden },\n            React.createElement(ASelect, { disabled: disabled, placeholder: placeholder }, options.map(option => {\n                const { title, value } = option;\n                return (React.createElement(ASelect.Option, { key: value.toString(), value: value }, title));\n            }))));\n    }));\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}