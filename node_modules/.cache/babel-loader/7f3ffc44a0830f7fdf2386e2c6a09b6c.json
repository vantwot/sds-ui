{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useState } from 'react';\nimport { DoubleRightOutlined, DoubleLeftOutlined } from '@ant-design/icons';\nimport { JsonSchemaForm } from '../canvas-json-schema-form';\nimport { WorkspacePanel } from '../base-panel';\nimport { defaultFormSchemaService } from './form-schema-service';\nimport { defaultControlMapService } from './control-map-service';\nimport './style.less';\nexport const CONTAINER_CLASS = 'xflow-editor-panel-collpase';\nexport const FlowchartFormPanel = props => {\n  const [collpased, setCollpased] = useState(false);\n\n  const {\n    controlMapService = defaultControlMapService,\n    formSchemaService = defaultFormSchemaService,\n    position = {\n      width: 240,\n      top: 0,\n      bottom: 0,\n      right: 0\n    },\n    show = true\n  } = props,\n        rest = __rest(props, [\"controlMapService\", \"formSchemaService\", \"position\", \"show\"]);\n\n  if (!show) {\n    return null;\n  }\n\n  const {\n    width = 200,\n    right\n  } = position;\n  return React.createElement(WorkspacePanel, {\n    className: CONTAINER_CLASS,\n    position: Object.assign(Object.assign({}, position), {\n      right: !collpased ? right : -width\n    })\n  }, React.createElement(\"div\", {\n    className: `${CONTAINER_CLASS}-wrapper`\n  }, React.createElement(JsonSchemaForm, Object.assign({\n    targetType: ['node', 'edge', 'canvas', 'group'],\n    controlMapService: controlMapService,\n    formSchemaService: formSchemaService,\n    position: Object.assign(Object.assign({}, position), {\n      top: 0\n    }),\n    prefixClz: \"xflow-form-editor\"\n  }, rest)), React.createElement(\"div\", {\n    className: `${CONTAINER_CLASS}-icon`,\n    style: {\n      top: 21,\n      left: !collpased ? -10 : -20,\n      borderRadius: !collpased ? '50%' : '50% 0 0  50%',\n      borderRight: !collpased ? '' : 'none'\n    },\n    onClick: () => {\n      setCollpased(!collpased);\n    }\n  }, collpased ? React.createElement(DoubleLeftOutlined, null) : React.createElement(DoubleRightOutlined, null))));\n};","map":{"version":3,"sources":["../../src/flowchart-editor-panel/form-panel.tsx"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAP,IAAgB,QAAhB,QAAgC,OAAhC;AACA,SAAS,mBAAT,EAA8B,kBAA9B,QAAwD,mBAAxD;AACA,SAAS,cAAT,QAA+B,4BAA/B;AACA,SAAS,cAAT,QAA+B,eAA/B;AACA,SAAS,wBAAT,QAAyC,uBAAzC;AACA,SAAS,wBAAT,QAAyC,uBAAzC;AAIA,OAAO,cAAP;AAEA,OAAO,MAAM,eAAe,GAAG,6BAAxB;AAEP,OAAO,MAAM,kBAAkB,GAAuC,KAAK,IAAG;AAC5E,QAAM,CAAC,SAAD,EAAY,YAAZ,IAA4B,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAM;AACJ,IAAA,iBAAiB,GAAG,wBADhB;AAEJ,IAAA,iBAAiB,GAAG,wBAFhB;AAGJ,IAAA,QAAQ,GAAG;AAAE,MAAA,KAAK,EAAE,GAAT;AAAc,MAAA,GAAG,EAAE,CAAnB;AAAsB,MAAA,MAAM,EAAE,CAA9B;AAAiC,MAAA,KAAK,EAAE;AAAxC,KAHP;AAIJ,IAAA,IAAI,GAAG;AAJH,MAMF,KANJ;AAAA,QAKK,IAAI,GAAA,MAAA,CACL,KADK,EALH,CAAA,mBAAA,EAAA,mBAAA,EAAA,UAAA,EAAA,MAAA,CAKG,CALT;;AAQA,MAAI,CAAC,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AACD,QAAM;AAAE,IAAA,KAAK,GAAG,GAAV;AAAe,IAAA;AAAf,MAAyB,QAA/B;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AACb,IAAA,SAAS,EAAE,eADE;AAEb,IAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACH,QADG,CAAA,EACK;AACX,MAAA,KAAK,EAAE,CAAC,SAAD,GAAa,KAAb,GAAqB,CAAC;AADlB,KADL;AAFK,GAAf,EAOE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,GAAG,eAAe;AAAlC,GAAA,EAEE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,MAAA,CAAA,MAAA,CAAA;AACb,IAAA,UAAU,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,EAA2B,OAA3B,CADC;AAEb,IAAA,iBAAiB,EAAE,iBAFN;AAGb,IAAA,iBAAiB,EAAE,iBAHN;AAIb,IAAA,QAAQ,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACH,QADG,CAAA,EACK;AACX,MAAA,GAAG,EAAE;AADM,KADL,CAJK;AAQb,IAAA,SAAS,EAAC;AARG,GAAA,EAST,IATS,CAAf,CAFF,EAaE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAE,GAAG,eAAe,OAD/B;AAEE,IAAA,KAAK,EAAE;AACL,MAAA,GAAG,EAAE,EADA;AAEL,MAAA,IAAI,EAAE,CAAC,SAAD,GAAa,CAAC,EAAd,GAAmB,CAAC,EAFrB;AAGL,MAAA,YAAY,EAAE,CAAC,SAAD,GAAa,KAAb,GAAqB,cAH9B;AAIL,MAAA,WAAW,EAAE,CAAC,SAAD,GAAa,EAAb,GAAkB;AAJ1B,KAFT;AAQE,IAAA,OAAO,EAAE,MAAK;AACZ,MAAA,YAAY,CAAC,CAAC,SAAF,CAAZ;AACD;AAVH,GAAA,EAYG,SAAS,GAAG,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB,IAAnB,CAAH,GAA4B,KAAA,CAAA,aAAA,CAAC,mBAAD,EAAoB,IAApB,CAZxC,CAbF,CAPF,CADF;AAsCD,CArDM","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useState } from 'react';\nimport { DoubleRightOutlined, DoubleLeftOutlined } from '@ant-design/icons';\nimport { JsonSchemaForm } from '../canvas-json-schema-form';\nimport { WorkspacePanel } from '../base-panel';\nimport { defaultFormSchemaService } from './form-schema-service';\nimport { defaultControlMapService } from './control-map-service';\nimport './style.less';\nexport const CONTAINER_CLASS = 'xflow-editor-panel-collpase';\nexport const FlowchartFormPanel = props => {\n    const [collpased, setCollpased] = useState(false);\n    const { controlMapService = defaultControlMapService, formSchemaService = defaultFormSchemaService, position = { width: 240, top: 0, bottom: 0, right: 0 }, show = true } = props, rest = __rest(props, [\"controlMapService\", \"formSchemaService\", \"position\", \"show\"]);\n    if (!show) {\n        return null;\n    }\n    const { width = 200, right } = position;\n    return (React.createElement(WorkspacePanel, { className: CONTAINER_CLASS, position: Object.assign(Object.assign({}, position), { right: !collpased ? right : -width }) },\n        React.createElement(\"div\", { className: `${CONTAINER_CLASS}-wrapper` },\n            React.createElement(JsonSchemaForm, Object.assign({ targetType: ['node', 'edge', 'canvas', 'group'], controlMapService: controlMapService, formSchemaService: formSchemaService, position: Object.assign(Object.assign({}, position), { top: 0 }), prefixClz: \"xflow-form-editor\" }, rest)),\n            React.createElement(\"div\", { className: `${CONTAINER_CLASS}-icon`, style: {\n                    top: 21,\n                    left: !collpased ? -10 : -20,\n                    borderRadius: !collpased ? '50%' : '50% 0 0  50%',\n                    borderRight: !collpased ? '' : 'none',\n                }, onClick: () => {\n                    setCollpased(!collpased);\n                } }, collpased ? React.createElement(DoubleLeftOutlined, null) : React.createElement(DoubleRightOutlined, null)))));\n};\n//# sourceMappingURL=form-panel.js.map"]},"metadata":{},"sourceType":"module"}