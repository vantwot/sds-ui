{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React from 'react';\nimport { usePositionStyle } from '../../common/position';\nimport { GraphConfig, createX6GraphModule } from '../graph';\nimport { useExtensionRegistry } from './extension-context';\nimport { useXflowPrefixCls } from './global-config-context';\nimport { usePortal } from '@antv/x6-react-shape';\nimport { useXFlowApp } from './app-context';\nexport var XFlowCanvas = function XFlowCanvas(props) {\n  var app = useXFlowApp();\n  /** x6画布parent的dom节点 */\n\n  var rootRef = React.useRef(null);\n  /** x6画布的dom节点 */\n\n  var canvasRef = React.useRef(null);\n  /** 生成配置中心 */\n\n  var extensionRegistry = useExtensionRegistry();\n  /** 获取ContextService的配置 */\n\n  var graphConfig = React.useMemo(function () {\n    var config = props.config ? props.config : new GraphConfig();\n    config.setX6Config();\n    return config;\n    /** 保证只生成一次 */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  /** X6_NODE_PORTAL_NODE_VIEW */\n\n  var _usePortal = usePortal(graphConfig.graphId),\n      _usePortal2 = _slicedToArray(_usePortal, 2),\n      Portal = _usePortal2[0],\n      setGraph = _usePortal2[1];\n\n  React.useEffect(function () {\n    app && app.getGraphInstance().then(function (graph) {\n      setGraph(graph);\n    });\n  }, [app, setGraph]);\n  React.useEffect(function () {\n    /** 设置画布parent dom节点、画布dom节点 */\n    graphConfig.setRootContainer(rootRef.current);\n    graphConfig.setGraphContainer(canvasRef.current);\n    /** 关联XflowApp和Graph*/\n\n    graphConfig.xflowInstanceId = extensionRegistry.getInstaceId();\n    extensionRegistry.addCoreModule({\n      config: graphConfig,\n      createModule: createX6GraphModule\n    });\n    /** unmount */\n\n    var destroy = function destroy() {\n      return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                graphConfig.dispose();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    };\n\n    return function () {\n      destroy();\n    };\n    /** 保证只生成一次 */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var style = usePositionStyle(props.position);\n  var rootClz = useXflowPrefixCls('canvas-root');\n  var canvasClz = useXflowPrefixCls('x6-canvas');\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    ref: rootRef,\n    className: rootClz,\n    style: style,\n    id: graphConfig.graphId,\n    tabIndex: 0\n  }, React.createElement(\"div\", {\n    ref: canvasRef,\n    className: canvasClz\n  }), props.children), React.createElement(Portal, null));\n};\nXFlowCanvas.defaultProps = {\n  isXFlowCanvas: true\n};","map":{"version":3,"sources":["../../../src/xflow-main/components/canvas.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from 'react';\nimport { usePositionStyle } from '../../common/position';\nimport { GraphConfig, createX6GraphModule } from '../graph';\nimport { useExtensionRegistry } from './extension-context';\nimport { useXflowPrefixCls } from './global-config-context';\nimport { usePortal } from '@antv/x6-react-shape';\nimport { useXFlowApp } from './app-context';\nexport const XFlowCanvas = props => {\n    const app = useXFlowApp();\n    /** x6画布parent的dom节点 */\n    const rootRef = React.useRef(null);\n    /** x6画布的dom节点 */\n    const canvasRef = React.useRef(null);\n    /** 生成配置中心 */\n    const extensionRegistry = useExtensionRegistry();\n    /** 获取ContextService的配置 */\n    const graphConfig = React.useMemo(() => {\n        const config = props.config ? props.config : new GraphConfig();\n        config.setX6Config();\n        return config;\n        /** 保证只生成一次 */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    /** X6_NODE_PORTAL_NODE_VIEW */\n    const [Portal, setGraph] = usePortal(graphConfig.graphId);\n    React.useEffect(() => {\n        app &&\n            app.getGraphInstance().then(graph => {\n                setGraph(graph);\n            });\n    }, [app, setGraph]);\n    React.useEffect(() => {\n        /** 设置画布parent dom节点、画布dom节点 */\n        graphConfig.setRootContainer(rootRef.current);\n        graphConfig.setGraphContainer(canvasRef.current);\n        /** 关联XflowApp和Graph*/\n        graphConfig.xflowInstanceId = extensionRegistry.getInstaceId();\n        extensionRegistry.addCoreModule({ config: graphConfig, createModule: createX6GraphModule });\n        /** unmount */\n        const destroy = () => __awaiter(void 0, void 0, void 0, function* () {\n            graphConfig.dispose();\n        });\n        return () => {\n            destroy();\n        };\n        /** 保证只生成一次 */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    const style = usePositionStyle(props.position);\n    const rootClz = useXflowPrefixCls('canvas-root');\n    const canvasClz = useXflowPrefixCls('x6-canvas');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { ref: rootRef, className: rootClz, style: style, id: graphConfig.graphId, tabIndex: 0 },\n            React.createElement(\"div\", { ref: canvasRef, className: canvasClz }),\n            props.children),\n        React.createElement(Portal, null)));\n};\nXFlowCanvas.defaultProps = {\n    isXFlowCanvas: true,\n};\n//# sourceMappingURL=canvas.js.map"]},"metadata":{},"sourceType":"module"}