{"ast":null,"code":"import _defineProperty from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport { Toolbar } from '@antv/x6-react-components';\nimport { useXFlowApp } from '@antv/xflow-core';\nimport { IconStore } from '@antv/xflow-core';\nexport var ToolbarItem = function ToolbarItem(props) {\n  var app = useXFlowApp();\n  var item = props.item,\n      layout = props.layout;\n  var Icon = IconStore.get(item.iconName);\n  var clz = classnames(_defineProperty({}, 'xflow-toolbar-item', true));\n  var text = layout === 'vertical' ? '' : item.text;\n  var icon = Icon ? React.createElement(Icon, null) : null;\n  var ToolbarItemWrap = item.render;\n  var _item$isEnabled = item.isEnabled,\n      isEnabled = _item$isEnabled === void 0 ? true : _item$isEnabled;\n  var commandService = app.commandService,\n      modelService = app.modelService;\n\n  var onItemClick = function onItemClick() {\n    if (item.onClick) {\n      item.onClick({\n        toolbarItem: item,\n        commandService: commandService,\n        modelService: modelService\n      });\n    }\n  };\n\n  if (ToolbarItemWrap) {\n    return React.createElement(ToolbarItemWrap, Object.assign({}, item, {\n      onClick: onItemClick\n    }), React.createElement(Toolbar.Item, Object.assign({}, item, {\n      icon: icon,\n      text: text,\n      className: clz,\n      disabled: !isEnabled,\n      tooltip: item.tooltip || item.text,\n      tooltipProps: Object.assign({\n        placement: layout === 'vertical' ? 'left' : 'bottom'\n      }, item.tooltipProps),\n      onClick: function onClick() {}\n    })));\n  }\n\n  return React.createElement(Toolbar.Item, Object.assign({}, item, {\n    icon: icon,\n    text: text,\n    className: clz,\n    hidden: !item,\n    disabled: !isEnabled,\n    tooltip: item.tooltip || item.text,\n    onClick: onItemClick,\n    tooltipProps: Object.assign(Object.assign({}, item.tooltipProps), {\n      placement: layout === 'vertical' ? 'left' : 'bottom'\n    })\n  }));\n};","map":{"version":3,"sources":["../../../src/canvas-toolbar/render-components/toolbar-item.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { Toolbar } from '@antv/x6-react-components';\nimport { useXFlowApp } from '@antv/xflow-core';\nimport { IconStore } from '@antv/xflow-core';\nexport const ToolbarItem = props => {\n    const app = useXFlowApp();\n    const { item, layout } = props;\n    const Icon = IconStore.get(item.iconName);\n    const clz = classnames({\n        ['xflow-toolbar-item']: true,\n    });\n    const text = layout === 'vertical' ? '' : item.text;\n    const icon = Icon ? React.createElement(Icon, null) : null;\n    const ToolbarItemWrap = item.render;\n    const { isEnabled = true } = item;\n    const { commandService, modelService } = app;\n    const onItemClick = () => {\n        if (item.onClick) {\n            item.onClick({ toolbarItem: item, commandService, modelService });\n        }\n    };\n    if (ToolbarItemWrap) {\n        return (React.createElement(ToolbarItemWrap, Object.assign({}, item, { onClick: onItemClick }),\n            React.createElement(Toolbar.Item, Object.assign({}, item, { icon: icon, text: text, className: clz, disabled: !isEnabled, tooltip: item.tooltip || item.text, tooltipProps: Object.assign({ placement: layout === 'vertical' ? 'left' : 'bottom' }, item.tooltipProps), onClick: () => { } }))));\n    }\n    return (React.createElement(Toolbar.Item, Object.assign({}, item, { icon: icon, text: text, className: clz, hidden: !item, disabled: !isEnabled, tooltip: item.tooltip || item.text, onClick: onItemClick, tooltipProps: Object.assign(Object.assign({}, item.tooltipProps), { placement: layout === 'vertical' ? 'left' : 'bottom' }) })));\n};\n//# sourceMappingURL=toolbar-item.js.map"]},"metadata":{},"sourceType":"module"}