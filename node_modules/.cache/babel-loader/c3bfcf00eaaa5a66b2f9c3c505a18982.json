{"ast":null,"code":"export function heatMap3DTriangulation(width, height) {\n  var indices = [];\n  var vertices = [];\n  var uvs = [];\n  var gridX1 = width + 1;\n  var gridY1 = height + 1;\n  var widthHalf = width / 2;\n  var heightHalf = height / 2;\n\n  for (var iy = 0; iy < gridY1; iy++) {\n    var y = iy - heightHalf;\n\n    for (var ix = 0; ix < gridX1; ix++) {\n      var x = ix - widthHalf;\n      vertices.push(x / widthHalf, -y / heightHalf, 0);\n      uvs.push(ix / width);\n      uvs.push(1 - iy / height);\n    }\n  }\n\n  for (var _iy = 0; _iy < height; _iy++) {\n    for (var _ix = 0; _ix < width; _ix++) {\n      var a = _ix + gridX1 * _iy;\n      var b = _ix + gridX1 * (_iy + 1);\n      var c = _ix + 1 + gridX1 * (_iy + 1);\n      var d = _ix + 1 + gridX1 * _iy;\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  }\n\n  return {\n    vertices: vertices,\n    indices: indices,\n    uvs: uvs\n  };\n}","map":{"version":3,"sources":["../../src/heatmap/triangulation.ts"],"names":["indices","vertices","uvs","gridX1","width","gridY1","height","widthHalf","heightHalf","iy","y","ix","x","a","b","c","d"],"mappings":"AAGA,OAAO,SAAA,sBAAA,CAAA,KAAA,EAAA,MAAA,EAA+D;AACpE,MAAMA,OAAO,GAAb,EAAA;AACA,MAAMC,QAAQ,GAAd,EAAA;AACA,MAAMC,GAAG,GAAT,EAAA;AACA,MAAMC,MAAM,GAAGC,KAAK,GAApB,CAAA;AACA,MAAMC,MAAM,GAAGC,MAAM,GAArB,CAAA;AACA,MAAMC,SAAS,GAAGH,KAAK,GAAvB,CAAA;AACA,MAAMI,UAAU,GAAGF,MAAM,GAAzB,CAAA;;AACA,OAAK,IAAIG,EAAE,GAAX,CAAA,EAAiBA,EAAE,GAAnB,MAAA,EAA8BA,EAA9B,EAAA,EAAoC;AAClC,QAAMC,CAAC,GAAGD,EAAE,GAAZ,UAAA;;AACA,SAAK,IAAIE,EAAE,GAAX,CAAA,EAAiBA,EAAE,GAAnB,MAAA,EAA8BA,EAA9B,EAAA,EAAoC;AAClC,UAAMC,CAAC,GAAGD,EAAE,GAAZ,SAAA;AACAV,MAAAA,QAAQ,CAARA,IAAAA,CAAcW,CAAC,GAAfX,SAAAA,EAA6B,CAAA,CAAA,GAA7BA,UAAAA,EAAAA,CAAAA;AACAC,MAAAA,GAAG,CAAHA,IAAAA,CAASS,EAAE,GAAXT,KAAAA;AACAA,MAAAA,GAAG,CAAHA,IAAAA,CAAS,IAAIO,EAAE,GAAfP,MAAAA;AACD;AACF;;AACD,OAAK,IAAIO,GAAE,GAAX,CAAA,EAAiBA,GAAE,GAAnB,MAAA,EAA8BA,GAA9B,EAAA,EAAoC;AAClC,SAAK,IAAIE,GAAE,GAAX,CAAA,EAAiBA,GAAE,GAAnB,KAAA,EAA6BA,GAA7B,EAAA,EAAmC;AACjC,UAAME,CAAC,GAAGF,GAAE,GAAGR,MAAM,GAArB,GAAA;AACA,UAAMW,CAAC,GAAGH,GAAE,GAAGR,MAAM,IAAIM,GAAE,GAA3B,CAAqB,CAArB;AACA,UAAMM,CAAC,GAAGJ,GAAE,GAAFA,CAAAA,GAASR,MAAM,IAAIM,GAAE,GAA/B,CAAyB,CAAzB;AACA,UAAMO,CAAC,GAAGL,GAAE,GAAFA,CAAAA,GAASR,MAAM,GAAzB,GAAA;AACAH,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;AACAA,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,CAAAA;AACD;AACF;;AACD,SAAO;AACLC,IAAAA,QAAQ,EADH,QAAA;AAELD,IAAAA,OAAO,EAFF,OAAA;AAGLE,IAAAA,GAAG,EAAHA;AAHK,GAAP;AAKD","sourcesContent":["import { IEncodeFeature, IParseDataItem } from '@antv/l7-core';\n// @ts-ignore\n\nexport function heatMap3DTriangulation(width: number, height: number) {\n  const indices = [];\n  const vertices = [];\n  const uvs = [];\n  const gridX1 = width + 1;\n  const gridY1 = height + 1;\n  const widthHalf = width / 2;\n  const heightHalf = height / 2;\n  for (let iy = 0; iy < gridY1; iy++) {\n    const y = iy - heightHalf;\n    for (let ix = 0; ix < gridX1; ix++) {\n      const x = ix - widthHalf;\n      vertices.push(x / widthHalf, -y / heightHalf, 0);\n      uvs.push(ix / width);\n      uvs.push(1 - iy / height);\n    }\n  }\n  for (let iy = 0; iy < height; iy++) {\n    for (let ix = 0; ix < width; ix++) {\n      const a = ix + gridX1 * iy;\n      const b = ix + gridX1 * (iy + 1);\n      const c = ix + 1 + gridX1 * (iy + 1);\n      const d = ix + 1 + gridX1 * iy;\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  }\n  return {\n    vertices,\n    indices,\n    uvs,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}