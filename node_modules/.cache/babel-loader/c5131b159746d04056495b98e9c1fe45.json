{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { DefaultNodeConfig } from '../../../flowchart-node-panel';\nimport { FlowchartFormWrapper } from '../../form-wrapper';\nimport { InputFiled, ColorPicker, Position, InputNumberFiled, Size } from './fields';\nimport { PREFIX } from './constants';\nimport './style.less';\n\nconst NodeComponent = props => {\n  const {\n    config,\n    plugin = {}\n  } = props;\n  const {\n    updateNode\n  } = plugin;\n  const [nodeConfig, setNodeConfig] = useState(Object.assign(Object.assign({}, DefaultNodeConfig), config));\n\n  const onNodeConfigChange = (key, value) => {\n    setNodeConfig(Object.assign(Object.assign({}, nodeConfig), {\n      [key]: value\n    }));\n    updateNode({\n      [key]: value\n    });\n  };\n\n  useEffect(() => {\n    setNodeConfig(Object.assign(Object.assign({}, DefaultNodeConfig), config));\n  }, [config]);\n  return React.createElement(\"div\", {\n    className: `${PREFIX}-panel-body`\n  }, React.createElement(\"div\", {\n    className: `${PREFIX}-panel-group`\n  }, React.createElement(\"h5\", null, \"\\u5185\\u5BB9\"), React.createElement(InputFiled, {\n    label: \"\\u6807\\u9898\",\n    value: nodeConfig.label,\n    onChange: value => {\n      onNodeConfigChange('label', value);\n    }\n  })), React.createElement(\"div\", {\n    className: `${PREFIX}-panel-group`\n  }, React.createElement(\"h5\", null, \"\\u6837\\u5F0F\"), React.createElement(Position, {\n    x: nodeConfig.x,\n    y: nodeConfig.y,\n    onChange: (key, value) => {\n      onNodeConfigChange(key, value);\n    }\n  }), React.createElement(Size, {\n    width: nodeConfig.width,\n    height: nodeConfig.height,\n    onChange: (key, value) => {\n      onNodeConfigChange(key, value);\n    }\n  }), React.createElement(ColorPicker, {\n    label: \"\\u586B\\u5145\",\n    value: nodeConfig.fill,\n    onChange: value => {\n      onNodeConfigChange('fill', value);\n    }\n  }), React.createElement(ColorPicker, {\n    label: \"\\u8FB9\\u6846\",\n    value: nodeConfig.stroke,\n    onChange: value => {\n      onNodeConfigChange('stroke', value);\n    }\n  }), React.createElement(\"div\", {\n    className: `${PREFIX}-node-text-style`\n  }, React.createElement(InputNumberFiled, {\n    label: \"\\u5B57\\u53F7\",\n    value: nodeConfig.fontSize,\n    width: 68,\n    onChange: value => {\n      onNodeConfigChange('fontSize', value);\n    }\n  }), React.createElement(ColorPicker, {\n    value: nodeConfig.fontFill,\n    onChange: value => {\n      onNodeConfigChange('fontFill', value);\n    }\n  }))));\n};\n\nexport const NodeService = props => {\n  return React.createElement(FlowchartFormWrapper, Object.assign({}, props), (config, plugin) => React.createElement(NodeComponent, Object.assign({}, props, {\n    plugin: plugin,\n    config: config\n  })));\n};","map":{"version":3,"sources":["../../../../src/flowchart-editor-panel/control-map-service/components/node.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DefaultNodeConfig } from '../../../flowchart-node-panel';\nimport { FlowchartFormWrapper } from '../../form-wrapper';\nimport { InputFiled, ColorPicker, Position, InputNumberFiled, Size } from './fields';\nimport { PREFIX } from './constants';\nimport './style.less';\nconst NodeComponent = props => {\n    const { config, plugin = {} } = props;\n    const { updateNode } = plugin;\n    const [nodeConfig, setNodeConfig] = useState(Object.assign(Object.assign({}, DefaultNodeConfig), config));\n    const onNodeConfigChange = (key, value) => {\n        setNodeConfig(Object.assign(Object.assign({}, nodeConfig), { [key]: value }));\n        updateNode({\n            [key]: value,\n        });\n    };\n    useEffect(() => {\n        setNodeConfig(Object.assign(Object.assign({}, DefaultNodeConfig), config));\n    }, [config]);\n    return (React.createElement(\"div\", { className: `${PREFIX}-panel-body` },\n        React.createElement(\"div\", { className: `${PREFIX}-panel-group` },\n            React.createElement(\"h5\", null, \"\\u5185\\u5BB9\"),\n            React.createElement(InputFiled, { label: \"\\u6807\\u9898\", value: nodeConfig.label, onChange: value => {\n                    onNodeConfigChange('label', value);\n                } })),\n        React.createElement(\"div\", { className: `${PREFIX}-panel-group` },\n            React.createElement(\"h5\", null, \"\\u6837\\u5F0F\"),\n            React.createElement(Position, { x: nodeConfig.x, y: nodeConfig.y, onChange: (key, value) => {\n                    onNodeConfigChange(key, value);\n                } }),\n            React.createElement(Size, { width: nodeConfig.width, height: nodeConfig.height, onChange: (key, value) => {\n                    onNodeConfigChange(key, value);\n                } }),\n            React.createElement(ColorPicker, { label: \"\\u586B\\u5145\", value: nodeConfig.fill, onChange: (value) => {\n                    onNodeConfigChange('fill', value);\n                } }),\n            React.createElement(ColorPicker, { label: \"\\u8FB9\\u6846\", value: nodeConfig.stroke, onChange: (value) => {\n                    onNodeConfigChange('stroke', value);\n                } }),\n            React.createElement(\"div\", { className: `${PREFIX}-node-text-style` },\n                React.createElement(InputNumberFiled, { label: \"\\u5B57\\u53F7\", value: nodeConfig.fontSize, width: 68, onChange: value => {\n                        onNodeConfigChange('fontSize', value);\n                    } }),\n                React.createElement(ColorPicker, { value: nodeConfig.fontFill, onChange: (value) => {\n                        onNodeConfigChange('fontFill', value);\n                    } })))));\n};\nexport const NodeService = props => {\n    return (React.createElement(FlowchartFormWrapper, Object.assign({}, props), (config, plugin) => React.createElement(NodeComponent, Object.assign({}, props, { plugin: plugin, config: config }))));\n};\n//# sourceMappingURL=node.js.map"]},"metadata":{},"sourceType":"module"}