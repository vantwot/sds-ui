{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Base } from './base';\nexport class MiniMapManager extends Base {\n  get widgetOptions() {\n    return this.options.minimap;\n  }\n\n  init() {\n    this.widget = this.graph.hook.createMiniMap();\n  }\n\n  dispose() {\n    if (this.widget) {\n      this.widget.dispose();\n    }\n  }\n\n}\n\n__decorate([Base.dispose()], MiniMapManager.prototype, \"dispose\", null);","map":{"version":3,"sources":["../../src/graph/minimap.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,IAAT,QAAqB,QAArB;AAGA,OAAM,MAAO,cAAP,SAA8B,IAA9B,CAAkC;AAGX,MAAb,aAAa,GAAA;AACzB,WAAO,KAAK,OAAL,CAAa,OAApB;AACD;;AAES,EAAA,IAAI,GAAA;AACZ,SAAK,MAAL,GAAc,KAAK,KAAL,CAAW,IAAX,CAAgB,aAAhB,EAAd;AACD;;AAGD,EAAA,OAAO,GAAA;AACL,QAAI,KAAK,MAAT,EAAiB;AACf,WAAK,MAAL,CAAY,OAAZ;AACD;AACF;;AAhBqC;;AAYtC,UAAA,CAAA,CADC,IAAI,CAAC,OAAL,EACD,CAAA,E,wBAAA,E,SAAA,EAIC,IAJD,CAAA","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Base } from './base';\nexport class MiniMapManager extends Base {\n    get widgetOptions() {\n        return this.options.minimap;\n    }\n    init() {\n        this.widget = this.graph.hook.createMiniMap();\n    }\n    dispose() {\n        if (this.widget) {\n            this.widget.dispose();\n        }\n    }\n}\n__decorate([\n    Base.dispose()\n], MiniMapManager.prototype, \"dispose\", null);\n//# sourceMappingURL=minimap.js.map"]},"metadata":{},"sourceType":"module"}