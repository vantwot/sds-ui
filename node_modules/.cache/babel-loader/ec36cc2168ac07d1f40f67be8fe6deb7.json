{"ast":null,"code":"import { ns } from './elem';\nimport { kebabCase } from '../string/format';\nexport function getAttribute(elem, name) {\n  return elem.getAttribute(name);\n}\nexport function removeAttribute(elem, name) {\n  var qualified = qualifyAttr(name);\n\n  if (qualified.ns) {\n    if (elem.hasAttributeNS(qualified.ns, qualified.local)) {\n      elem.removeAttributeNS(qualified.ns, qualified.local);\n    }\n  } else if (elem.hasAttribute(name)) {\n    elem.removeAttribute(name);\n  }\n}\nexport function setAttribute(elem, name, value) {\n  if (value == null) {\n    return removeAttribute(elem, name);\n  }\n\n  var qualified = qualifyAttr(name);\n\n  if (qualified.ns && typeof value === 'string') {\n    elem.setAttributeNS(qualified.ns, name, value);\n  } else if (name === 'id') {\n    elem.id = \"\".concat(value);\n  } else {\n    elem.setAttribute(name, \"\".concat(value));\n  }\n}\nexport function setAttributes(elem, attrs) {\n  Object.keys(attrs).forEach(function (name) {\n    setAttribute(elem, name, attrs[name]);\n  });\n}\nexport function attr(elem, name, value) {\n  if (name == null) {\n    var attrs = elem.attributes;\n    var ret = {};\n\n    for (var i = 0; i < attrs.length; i += 1) {\n      ret[attrs[i].name] = attrs[i].value;\n    }\n\n    return ret;\n  }\n\n  if (typeof name === 'string' && value === undefined) {\n    return elem.getAttribute(name);\n  }\n\n  if (typeof name === 'object') {\n    setAttributes(elem, name);\n  } else {\n    setAttribute(elem, name, value);\n  }\n}\nexport function qualifyAttr(name) {\n  if (name.indexOf(':') !== -1) {\n    var combinedKey = name.split(':');\n    return {\n      ns: ns[combinedKey[0]],\n      local: combinedKey[1]\n    };\n  }\n\n  return {\n    ns: null,\n    local: name\n  };\n}\nexport function kebablizeAttrs(attrs) {\n  var result = {};\n  Object.keys(attrs).forEach(function (key) {\n    var name = kebabCase(key);\n    result[name] = attrs[key];\n  });\n  return result;\n}\nexport function styleToObject(styleString) {\n  var ret = {};\n  var styles = styleString.split(';');\n  styles.forEach(function (item) {\n    var section = item.trim();\n\n    if (section) {\n      var pair = section.split('=');\n\n      if (pair.length) {\n        ret[pair[0].trim()] = pair[1] ? pair[1].trim() : '';\n      }\n    }\n  });\n  return ret;\n}\nexport function mergeAttrs(target, source) {\n  Object.keys(source).forEach(function (attr) {\n    if (attr === 'class') {\n      target[attr] = target[attr] ? \"\".concat(target[attr], \" \").concat(source[attr]) : source[attr];\n    } else if (attr === 'style') {\n      var to = typeof target[attr] === 'object';\n      var so = typeof source[attr] === 'object';\n      var tt;\n      var ss;\n\n      if (to && so) {\n        tt = target[attr];\n        ss = source[attr];\n      } else if (to) {\n        tt = target[attr];\n        ss = styleToObject(source[attr]);\n      } else if (so) {\n        tt = styleToObject(target[attr]);\n        ss = source[attr];\n      } else {\n        tt = styleToObject(target[attr]);\n        ss = styleToObject(source[attr]);\n      }\n\n      target[attr] = mergeAttrs(tt, ss);\n    } else {\n      target[attr] = source[attr];\n    }\n  });\n  return target;\n}","map":{"version":3,"sources":["../../../src/util/dom/attr.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { ns } from './elem';\nimport { kebabCase } from '../string/format';\nexport function getAttribute(elem, name) {\n    return elem.getAttribute(name);\n}\nexport function removeAttribute(elem, name) {\n    const qualified = qualifyAttr(name);\n    if (qualified.ns) {\n        if (elem.hasAttributeNS(qualified.ns, qualified.local)) {\n            elem.removeAttributeNS(qualified.ns, qualified.local);\n        }\n    }\n    else if (elem.hasAttribute(name)) {\n        elem.removeAttribute(name);\n    }\n}\nexport function setAttribute(elem, name, value) {\n    if (value == null) {\n        return removeAttribute(elem, name);\n    }\n    const qualified = qualifyAttr(name);\n    if (qualified.ns && typeof value === 'string') {\n        elem.setAttributeNS(qualified.ns, name, value);\n    }\n    else if (name === 'id') {\n        elem.id = `${value}`;\n    }\n    else {\n        elem.setAttribute(name, `${value}`);\n    }\n}\nexport function setAttributes(elem, attrs) {\n    Object.keys(attrs).forEach((name) => {\n        setAttribute(elem, name, attrs[name]);\n    });\n}\nexport function attr(elem, name, value) {\n    if (name == null) {\n        const attrs = elem.attributes;\n        const ret = {};\n        for (let i = 0; i < attrs.length; i += 1) {\n            ret[attrs[i].name] = attrs[i].value;\n        }\n        return ret;\n    }\n    if (typeof name === 'string' && value === undefined) {\n        return elem.getAttribute(name);\n    }\n    if (typeof name === 'object') {\n        setAttributes(elem, name);\n    }\n    else {\n        setAttribute(elem, name, value);\n    }\n}\nexport function qualifyAttr(name) {\n    if (name.indexOf(':') !== -1) {\n        const combinedKey = name.split(':');\n        return {\n            ns: ns[combinedKey[0]],\n            local: combinedKey[1],\n        };\n    }\n    return {\n        ns: null,\n        local: name,\n    };\n}\nexport function kebablizeAttrs(attrs) {\n    const result = {};\n    Object.keys(attrs).forEach((key) => {\n        const name = kebabCase(key);\n        result[name] = attrs[key];\n    });\n    return result;\n}\nexport function styleToObject(styleString) {\n    const ret = {};\n    const styles = styleString.split(';');\n    styles.forEach((item) => {\n        const section = item.trim();\n        if (section) {\n            const pair = section.split('=');\n            if (pair.length) {\n                ret[pair[0].trim()] = pair[1] ? pair[1].trim() : '';\n            }\n        }\n    });\n    return ret;\n}\nexport function mergeAttrs(target, source) {\n    Object.keys(source).forEach((attr) => {\n        if (attr === 'class') {\n            target[attr] = target[attr]\n                ? `${target[attr]} ${source[attr]}`\n                : source[attr];\n        }\n        else if (attr === 'style') {\n            const to = typeof target[attr] === 'object';\n            const so = typeof source[attr] === 'object';\n            let tt;\n            let ss;\n            if (to && so) {\n                tt = target[attr];\n                ss = source[attr];\n            }\n            else if (to) {\n                tt = target[attr];\n                ss = styleToObject(source[attr]);\n            }\n            else if (so) {\n                tt = styleToObject(target[attr]);\n                ss = source[attr];\n            }\n            else {\n                tt = styleToObject(target[attr]);\n                ss = styleToObject(source[attr]);\n            }\n            target[attr] = mergeAttrs(tt, ss);\n        }\n        else {\n            target[attr] = source[attr];\n        }\n    });\n    return target;\n}\n//# sourceMappingURL=attr.js.map"]},"metadata":{},"sourceType":"module"}