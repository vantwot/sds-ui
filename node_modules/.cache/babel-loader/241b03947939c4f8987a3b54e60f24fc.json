{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport TwoTouchHandler from './two_touch';\nvar ZOOM_THRESHOLD = 0.1;\n\nfunction getZoomDelta(distance, lastDistance) {\n  return Math.log(distance / lastDistance) / Math.LN2;\n}\n\nvar TouchZoomHandler = function (_TwoTouchHandler) {\n  _inherits(TouchZoomHandler, _TwoTouchHandler);\n\n  var _super = _createSuper(TouchZoomHandler);\n\n  function TouchZoomHandler() {\n    var _this;\n\n    _classCallCheck(this, TouchZoomHandler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"distance\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"startDistance\", void 0);\n\n    return _this;\n  }\n\n  _createClass(TouchZoomHandler, [{\n    key: \"reset\",\n    value: function reset() {\n      _get(_getPrototypeOf(TouchZoomHandler.prototype), \"reset\", this).call(this);\n\n      delete this.distance;\n      delete this.startDistance;\n    }\n  }, {\n    key: \"start\",\n    value: function start(points) {\n      this.startDistance = this.distance = points[0].dist(points[1]);\n    }\n  }, {\n    key: \"move\",\n    value: function move(points, pinchAround) {\n      var lastDistance = this.distance;\n      this.distance = points[0].dist(points[1]);\n\n      if (!this.active && Math.abs(getZoomDelta(this.distance, this.startDistance)) < ZOOM_THRESHOLD) {\n        return;\n      }\n\n      this.active = true;\n      return {\n        zoomDelta: getZoomDelta(this.distance, lastDistance),\n        pinchAround: pinchAround\n      };\n    }\n  }]);\n\n  return TouchZoomHandler;\n}(TwoTouchHandler);\n\nexport { TouchZoomHandler as default };","map":{"version":3,"sources":["../../../src/handler/touch/touch_zoom.ts"],"names":["ZOOM_THRESHOLD","Math","distance","TouchZoomHandler","TwoTouchHandler","points","lastDistance","getZoomDelta","zoomDelta","pinchAround"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,OAAA,eAAA,MAAA,aAAA;AAEA,IAAMA,cAAc,GAApB,GAAA;;AACA,SAAA,YAAA,CAAA,QAAA,EAAA,YAAA,EAA8D;AAC5D,SAAOC,IAAI,CAAJA,GAAAA,CAASC,QAAQ,GAAjBD,YAAAA,IAAoCA,IAAI,CAA/C,GAAA;AACD;;IACoBE,gB;;;;;;;;;;;;;;;;;;;;;;;;;WAInB,SAAA,KAAA,GAAe;AACb,MAAA,IAAA,CAAA,eAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,EAAA,OAAA,EAAA,IAAA,CAAA,CAAA,IAAA,CAAA,IAAA;;AACA,aAAO,KAAP,QAAA;AACA,aAAO,KAAP,aAAA;AACD;;;WAED,SAAA,KAAA,CAAA,MAAA,EAAqC;AACnC,WAAA,aAAA,GAAqB,KAAA,QAAA,GAAgBE,MAAM,CAANA,CAAM,CAANA,CAAAA,IAAAA,CAAeA,MAAM,CAA1D,CAA0D,CAArBA,CAArC;AACD;;;WAED,SAAA,IAAA,CAAA,MAAA,EAAA,WAAA,EAAwD;AACtD,UAAMC,YAAY,GAAG,KAArB,QAAA;AACA,WAAA,QAAA,GAAgBD,MAAM,CAANA,CAAM,CAANA,CAAAA,IAAAA,CAAeA,MAAM,CAArC,CAAqC,CAArBA,CAAhB;;AACA,UACE,CAAC,KAAD,MAAA,IACAJ,IAAI,CAAJA,GAAAA,CAASM,YAAY,CAAC,KAAD,QAAA,EAAgB,KAArCN,aAAqB,CAArBA,IAFF,cAAA,EAGE;AACA;AACD;;AACD,WAAA,MAAA,GAAA,IAAA;AACA,aAAO;AACLO,QAAAA,SAAS,EAAED,YAAY,CAAC,KAAD,QAAA,EADlB,YACkB,CADlB;AAELE,QAAAA,WAAW,EAAXA;AAFK,OAAP;AAID;;;;EA5B2CL,e;;SAAzBD,gB","sourcesContent":["// @ts-ignore\nimport Point from '../../geo/point';\nimport DOM from '../../utils/dom';\nimport TwoTouchHandler from './two_touch';\n\nconst ZOOM_THRESHOLD = 0.1;\nfunction getZoomDelta(distance: number, lastDistance: number) {\n  return Math.log(distance / lastDistance) / Math.LN2;\n}\nexport default class TouchZoomHandler extends TwoTouchHandler {\n  private distance: number;\n  private startDistance: number;\n\n  public reset() {\n    super.reset();\n    delete this.distance;\n    delete this.startDistance;\n  }\n\n  public start(points: [Point, Point]) {\n    this.startDistance = this.distance = points[0].dist(points[1]);\n  }\n\n  public move(points: [Point, Point], pinchAround: Point) {\n    const lastDistance = this.distance;\n    this.distance = points[0].dist(points[1]);\n    if (\n      !this.active &&\n      Math.abs(getZoomDelta(this.distance, this.startDistance)) < ZOOM_THRESHOLD\n    ) {\n      return;\n    }\n    this.active = true;\n    return {\n      zoomDelta: getZoomDelta(this.distance, lastDistance),\n      pinchAround,\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}