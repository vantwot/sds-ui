{"ast":null,"code":"import { createSensor } from './sensors';\nexport var SizeSensor;\n\n(function (SizeSensor) {\n  const cache = new WeakMap();\n\n  function get(element) {\n    let sensor = cache.get(element);\n\n    if (sensor) {\n      return sensor;\n    }\n\n    sensor = createSensor(element);\n    cache.set(element, sensor);\n    return sensor;\n  }\n\n  function remove(sensor) {\n    sensor.destroy();\n    cache.delete(sensor.element);\n  }\n\n  SizeSensor.bind = (element, cb) => {\n    const sensor = get(element);\n    sensor.bind(cb);\n    return () => sensor.unbind(cb);\n  };\n\n  SizeSensor.clear = element => {\n    const sensor = get(element);\n    remove(sensor);\n  };\n})(SizeSensor || (SizeSensor = {}));","map":{"version":3,"sources":["../../../src/util/size-sensor/index.ts"],"names":[],"mappings":"AAAA,SAAS,YAAT,QAA6B,WAA7B;AAGA,OAAM,IAAW,UAAX;;AAAN,CAAA,UAAiB,UAAjB,EAA2B;AACzB,QAAM,KAAK,GAA6B,IAAI,OAAJ,EAAxC;;AAEA,WAAS,GAAT,CAAa,OAAb,EAA6B;AAC3B,QAAI,MAAM,GAAG,KAAK,CAAC,GAAN,CAAU,OAAV,CAAb;;AACA,QAAI,MAAJ,EAAY;AACV,aAAO,MAAP;AACD;;AAED,IAAA,MAAM,GAAG,YAAY,CAAC,OAAD,CAArB;AACA,IAAA,KAAK,CAAC,GAAN,CAAU,OAAV,EAAmB,MAAnB;AACA,WAAO,MAAP;AACD;;AAED,WAAS,MAAT,CAAgB,MAAhB,EAA8B;AAC5B,IAAA,MAAM,CAAC,OAAP;AACA,IAAA,KAAK,CAAC,MAAN,CAAa,MAAM,CAAC,OAApB;AACD;;AAEY,EAAA,UAAA,CAAA,IAAA,GAAO,CAAC,OAAD,EAAmB,EAAnB,KAAmC;AACrD,UAAM,MAAM,GAAG,GAAG,CAAC,OAAD,CAAlB;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,EAAZ;AACA,WAAO,MAAM,MAAM,CAAC,MAAP,CAAc,EAAd,CAAb;AACD,GAJY;;AAMA,EAAA,UAAA,CAAA,KAAA,GAAS,OAAD,IAAqB;AACxC,UAAM,MAAM,GAAG,GAAG,CAAC,OAAD,CAAlB;AACA,IAAA,MAAM,CAAC,MAAD,CAAN;AACD,GAHY;AAId,CA7BD,EAAiB,UAAU,KAAV,UAAU,GAAA,EAAA,CAA3B","sourceRoot":"","sourcesContent":["import { createSensor } from './sensors';\nexport var SizeSensor;\n(function (SizeSensor) {\n    const cache = new WeakMap();\n    function get(element) {\n        let sensor = cache.get(element);\n        if (sensor) {\n            return sensor;\n        }\n        sensor = createSensor(element);\n        cache.set(element, sensor);\n        return sensor;\n    }\n    function remove(sensor) {\n        sensor.destroy();\n        cache.delete(sensor.element);\n    }\n    SizeSensor.bind = (element, cb) => {\n        const sensor = get(element);\n        sensor.bind(cb);\n        return () => sensor.unbind(cb);\n    };\n    SizeSensor.clear = (element) => {\n        const sensor = get(element);\n        remove(sensor);\n    };\n})(SizeSensor || (SizeSensor = {}));\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}