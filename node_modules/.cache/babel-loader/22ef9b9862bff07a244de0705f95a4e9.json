{"ast":null,"code":"import { Point } from '../../geometry';\nimport { toResult } from './util';\nexport const radial = (portPosition, elemBBox, args) => radialLayout(portPosition.diff(elemBBox.getCenter()), false, args);\nexport const radialOriented = (portPosition, elemBBox, args) => radialLayout(portPosition.diff(elemBBox.getCenter()), true, args);\n\nfunction radialLayout(portCenterOffset, autoOrient, args) {\n  const offset = args.offset != null ? args.offset : 20;\n  const origin = new Point(0, 0);\n  const angle = -portCenterOffset.theta(origin);\n  const pos = portCenterOffset.clone().move(origin, offset).diff(portCenterOffset).round();\n  let y = '.3em';\n  let textAnchor;\n  let orientAngle = angle;\n\n  if ((angle + 90) % 180 === 0) {\n    textAnchor = autoOrient ? 'end' : 'middle';\n\n    if (!autoOrient && angle === -270) {\n      y = '0em';\n    }\n  } else if (angle > -270 && angle < -90) {\n    textAnchor = 'start';\n    orientAngle = angle - 180;\n  } else {\n    textAnchor = 'end';\n  }\n\n  return toResult({\n    position: pos.round().toJSON(),\n    angle: autoOrient ? orientAngle : 0,\n    attrs: {\n      '.': {\n        y,\n        'text-anchor': textAnchor\n      }\n    }\n  }, args);\n}","map":{"version":3,"sources":["../../../src/registry/port-label-layout/radial.ts"],"names":[],"mappings":"AAAA,SAAS,KAAT,QAAsB,gBAAtB;AAEA,SAAS,QAAT,QAAyB,QAAzB;AAMA,OAAO,MAAM,MAAM,GAA2C,CAC5D,YAD4D,EAE5D,QAF4D,EAG5D,IAH4D,KAIzD,YAAY,CAAC,YAAY,CAAC,IAAb,CAAkB,QAAQ,CAAC,SAAT,EAAlB,CAAD,EAA0C,KAA1C,EAAiD,IAAjD,CAJV;AAMP,OAAO,MAAM,cAAc,GAA2C,CACpE,YADoE,EAEpE,QAFoE,EAGpE,IAHoE,KAIjE,YAAY,CAAC,YAAY,CAAC,IAAb,CAAkB,QAAQ,CAAC,SAAT,EAAlB,CAAD,EAA0C,IAA1C,EAAgD,IAAhD,CAJV;;AAMP,SAAS,YAAT,CACE,gBADF,EAEE,UAFF,EAGE,IAHF,EAGkB;AAEhB,QAAM,MAAM,GAAG,IAAI,CAAC,MAAL,IAAe,IAAf,GAAsB,IAAI,CAAC,MAA3B,GAAoC,EAAnD;AACA,QAAM,MAAM,GAAG,IAAI,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAf;AACA,QAAM,KAAK,GAAG,CAAC,gBAAgB,CAAC,KAAjB,CAAuB,MAAvB,CAAf;AACA,QAAM,GAAG,GAAG,gBAAgB,CACzB,KADS,GAET,IAFS,CAEJ,MAFI,EAEI,MAFJ,EAGT,IAHS,CAGJ,gBAHI,EAIT,KAJS,EAAZ;AAMA,MAAI,CAAC,GAAG,MAAR;AACA,MAAI,UAAJ;AACA,MAAI,WAAW,GAAG,KAAlB;;AAEA,MAAI,CAAC,KAAK,GAAG,EAAT,IAAe,GAAf,KAAuB,CAA3B,EAA8B;AAC5B,IAAA,UAAU,GAAG,UAAU,GAAG,KAAH,GAAW,QAAlC;;AACA,QAAI,CAAC,UAAD,IAAe,KAAK,KAAK,CAAC,GAA9B,EAAmC;AACjC,MAAA,CAAC,GAAG,KAAJ;AACD;AACF,GALD,MAKO,IAAI,KAAK,GAAG,CAAC,GAAT,IAAgB,KAAK,GAAG,CAAC,EAA7B,EAAiC;AACtC,IAAA,UAAU,GAAG,OAAb;AACA,IAAA,WAAW,GAAG,KAAK,GAAG,GAAtB;AACD,GAHM,MAGA;AACL,IAAA,UAAU,GAAG,KAAb;AACD;;AAED,SAAO,QAAQ,CACb;AACE,IAAA,QAAQ,EAAE,GAAG,CAAC,KAAJ,GAAY,MAAZ,EADZ;AAEE,IAAA,KAAK,EAAE,UAAU,GAAG,WAAH,GAAiB,CAFpC;AAGE,IAAA,KAAK,EAAE;AACL,WAAK;AACH,QAAA,CADG;AAEH,uBAAe;AAFZ;AADA;AAHT,GADa,EAWb,IAXa,CAAf;AAaD","sourceRoot":"","sourcesContent":["import { Point } from '../../geometry';\nimport { toResult } from './util';\nexport const radial = (portPosition, elemBBox, args) => radialLayout(portPosition.diff(elemBBox.getCenter()), false, args);\nexport const radialOriented = (portPosition, elemBBox, args) => radialLayout(portPosition.diff(elemBBox.getCenter()), true, args);\nfunction radialLayout(portCenterOffset, autoOrient, args) {\n    const offset = args.offset != null ? args.offset : 20;\n    const origin = new Point(0, 0);\n    const angle = -portCenterOffset.theta(origin);\n    const pos = portCenterOffset\n        .clone()\n        .move(origin, offset)\n        .diff(portCenterOffset)\n        .round();\n    let y = '.3em';\n    let textAnchor;\n    let orientAngle = angle;\n    if ((angle + 90) % 180 === 0) {\n        textAnchor = autoOrient ? 'end' : 'middle';\n        if (!autoOrient && angle === -270) {\n            y = '0em';\n        }\n    }\n    else if (angle > -270 && angle < -90) {\n        textAnchor = 'start';\n        orientAngle = angle - 180;\n    }\n    else {\n        textAnchor = 'end';\n    }\n    return toResult({\n        position: pos.round().toJSON(),\n        angle: autoOrient ? orientAngle : 0,\n        attrs: {\n            '.': {\n                y,\n                'text-anchor': textAnchor,\n            },\n        },\n    }, args);\n}\n//# sourceMappingURL=radial.js.map"]},"metadata":{},"sourceType":"module"}