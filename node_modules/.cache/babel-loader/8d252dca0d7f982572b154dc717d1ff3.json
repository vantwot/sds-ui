{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport ReactDOM from 'react-dom';\nimport { Graph as X6Graph, Dom } from '@antv/x6';\nimport { DisposableCollection, Disposable } from '../../common/disposable';\nimport { Deferred } from '../../common/deferred';\nimport { IGraphOptionProvider } from './config';\nimport { singleton, inject, Syringe } from 'mana-syringe';\nimport { IGraphCommandService } from '../../command';\nimport { IModelService } from '../../model-service/interface';\nimport { IHookService } from '../../hooks';\nimport { getEdgeReactComponent } from '../../command-contributions/components/context';\nimport { XFLOW_DEFAULT_EDGE } from '../../constants';\n/** !!! 所有需要使用Graph相关信息的地方, 都统一使用IGraphProvider来获取 */\n\nexport var IGraphProvider = Symbol('IGraphProvider');\nexport var ICommandServiceProvider = Symbol('ICommandServiceProvider');\nexport var IModelServiceProvider = Symbol('IModelServiceProvider');\n\nvar GraphManager = /*#__PURE__*/function () {\n  function GraphManager() {\n    var _this = this;\n\n    _classCallCheck(this, GraphManager);\n\n    /** 处理画布实例的销毁 */\n    this.toDisposce = new DisposableCollection();\n    /** 储存画布实例 */\n\n    this.graphMap = new Map();\n    /** 获取X6 Graph 实例 */\n\n    this.getGraph = function (graphId) {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var graphDefer, options, hooks, mergedOptions, graphContainer, edgeRender, nodeRender, edgeTypeParser, edgeRenderMap, clientHeight, clientWidth, commandService, modelService, graph;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                graphDefer = this.graphMap.get(graphId);\n\n                if (graphDefer) {\n                  _context2.next = 31;\n                  break;\n                }\n\n                graphDefer = new Deferred();\n                this.graphMap.set(graphId, graphDefer);\n                _context2.next = 6;\n                return this.optionProvider.getOptions();\n\n              case 6:\n                options = _context2.sent;\n\n                /** 获取hooks实例： hooks方便其他组件可以修改注册graphOpions/events */\n                hooks = this.hookService.hookProvider();\n                /** 执行hooks：获取graphOptions */\n\n                _context2.next = 10;\n                return hooks.graphOptions.call(options.x6Options);\n\n              case 10:\n                mergedOptions = _context2.sent;\n                graphContainer = options.graphContainer, edgeRender = options.edgeRender, nodeRender = options.nodeRender, edgeTypeParser = options.edgeTypeParser;\n                /** 执行hooks：获取edge label render */\n\n                _context2.next = 14;\n                return hooks.reactEdgeLabelRender.call(edgeRender);\n\n              case 14:\n                edgeRenderMap = _context2.sent;\n                _context2.next = 17;\n                return hooks.reactNodeRender.call(nodeRender);\n\n              case 17:\n                clientHeight = graphContainer.clientHeight, clientWidth = graphContainer.clientWidth;\n                _context2.next = 20;\n                return this.commandServiceProvider.getCommandService();\n\n              case 20:\n                commandService = _context2.sent;\n                _context2.next = 23;\n                return this.modelServiceProvider.getModelService();\n\n              case 23:\n                modelService = _context2.sent;\n\n                /** 实例化 X6 Graph */\n                graph = new X6Graph(Object.assign(Object.assign({\n                  container: graphContainer,\n                  width: clientWidth,\n                  height: clientHeight\n                }, mergedOptions), {\n                  /** X6提供了边渲染的钩子, 可以在这里设置边上需要渲染的React内容 */\n                  onEdgeLabelRendered: function onEdgeLabelRendered(args) {\n                    var edge = args.edge,\n                        container = args.container;\n\n                    _this2.renderEdgeReactLabel({\n                      edge: edge,\n                      container: container,\n                      edgeRenderMap: edgeRenderMap,\n                      edgeTypeParser: edgeTypeParser,\n                      modelService: modelService,\n                      commandService: commandService\n                    });\n                  }\n                }));\n                /** 执行hooks：绑定事件执行api */\n\n                _context2.next = 27;\n                return hooks.afterGraphInit.call({\n                  graph: graph,\n                  commandService: commandService,\n                  modelService: modelService\n                });\n\n              case 27:\n                graphDefer.resolve(graph);\n                graph.on('node:moved', function (_ref) {\n                  var node = _ref.node;\n                  var nodeData = node.getData();\n                  var position = node.position();\n                  node.setData(Object.assign(Object.assign({}, nodeData), {\n                    x: position === null || position === void 0 ? void 0 : position.x,\n                    y: position === null || position === void 0 ? void 0 : position.y\n                  }));\n                });\n                graph.on('node:resized', function (_ref2) {\n                  var node = _ref2.node;\n                  var nodeData = node.getData();\n                  var size = node.size();\n                  node.setData(Object.assign(Object.assign({}, nodeData), {\n                    width: size === null || size === void 0 ? void 0 : size.width,\n                    height: size === null || size === void 0 ? void 0 : size.height\n                  }));\n                });\n                this.toDisposce.push(Disposable.create(function () {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return hooks.beforeGraphDestory.call({\n                              graph: graph,\n                              commandService: commandService,\n                              modelService: modelService\n                            });\n\n                          case 2:\n                            this.graphMap.delete(graphId);\n                            graph.dispose();\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, this);\n                  }));\n                }));\n\n              case 31:\n                return _context2.abrupt(\"return\", graphDefer.promise);\n\n              case 32:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    };\n\n    this.renderEdgeReactLabel = function (args) {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var container, edgeTypeParser, edge, edgeRenderMap, commandService, modelService, renderKey, reactComponent, content, WrappedReactComponent;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                container = args.container, edgeTypeParser = args.edgeTypeParser, edge = args.edge, edgeRenderMap = args.edgeRenderMap, commandService = args.commandService, modelService = args.modelService;\n                renderKey = edgeTypeParser(edge === null || edge === void 0 ? void 0 : edge.data) || XFLOW_DEFAULT_EDGE;\n                reactComponent = edgeRenderMap.get(renderKey);\n\n                if (reactComponent) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 5:\n                if (edge && (edge === null || edge === void 0 ? void 0 : edge.data) && reactComponent) {\n                  content = this.edgeAppendForeignObject(edge, container);\n                  WrappedReactComponent = getEdgeReactComponent(reactComponent, commandService, modelService)(edge);\n                  ReactDOM.render(WrappedReactComponent, content);\n                }\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    };\n  }\n  /** 实现在连线上渲染React节点 */\n\n\n  _createClass(GraphManager, [{\n    key: \"edgeAppendForeignObject\",\n    value: function edgeAppendForeignObject(x6Edge, container) {\n      var fo = Dom.createSvgElement('foreignObject');\n      var body = Dom.createElementNS('body', Dom.ns.xhtml);\n      var content = Dom.createElementNS('div', Dom.ns.xhtml);\n      var edgeData = x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.data;\n      var foWdith = (edgeData === null || edgeData === void 0 ? void 0 : edgeData.edgeContentWidth) || 100;\n      var foHeight = (edgeData === null || edgeData === void 0 ? void 0 : edgeData.edgeContentHeigt) || 30;\n      fo.setAttribute('width', \"\".concat(foWdith));\n      fo.setAttribute('height', \"\".concat(foHeight));\n      fo.setAttribute('x', \"\".concat(-1.0 * foWdith / 2));\n      fo.setAttribute('y', \"\".concat(-1.0 * foHeight / 2));\n      body.setAttribute('xhtmls', Dom.ns.xhtml);\n      body.style.width = '100%';\n      body.style.height = '100%';\n      body.style.padding = '0';\n      body.style.margin = '0';\n      body.style.background = 'unset';\n      body.style.overflow = 'visible';\n      body.className = 'xflow-edge-label-body';\n      content.style.width = '100%';\n      content.style.height = '100%';\n      body.appendChild(content);\n      fo.appendChild(body);\n      container.appendChild(fo);\n      return content;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.toDisposce.dispose();\n    }\n  }]);\n\n  return GraphManager;\n}();\n\n__decorate([inject(IGraphOptionProvider), __metadata(\"design:type\", Object)], GraphManager.prototype, \"optionProvider\", void 0);\n\n__decorate([inject(IHookService), __metadata(\"design:type\", Object)], GraphManager.prototype, \"hookService\", void 0);\n\n__decorate([inject(ICommandServiceProvider), __metadata(\"design:type\", Object)], GraphManager.prototype, \"commandServiceProvider\", void 0);\n\n__decorate([inject(IModelServiceProvider), __metadata(\"design:type\", Object)], GraphManager.prototype, \"modelServiceProvider\", void 0);\n\nGraphManager = __decorate([singleton()], GraphManager);\nexport { GraphManager };\nexport var registerGraphModule = function registerGraphModule(register) {\n  /** 注册GraphManager */\n  register(GraphManager);\n  register(IGraphProvider, {\n    lifecycle: Syringe.Lifecycle.singleton,\n    useDynamic: function useDynamic(context) {\n      return {\n        getGraphInstance: function getGraphInstance() {\n          return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n            var graphManager, graphOptionProvider, graphConfig, x6Graph;\n            return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    graphManager = context.container.get(GraphManager);\n                    graphOptionProvider = context.container.get(IGraphOptionProvider);\n                    _context4.next = 4;\n                    return graphOptionProvider === null || graphOptionProvider === void 0 ? void 0 : graphOptionProvider.getOptions();\n\n                  case 4:\n                    graphConfig = _context4.sent;\n                    _context4.next = 7;\n                    return graphManager === null || graphManager === void 0 ? void 0 : graphManager.getGraph(graphConfig.graphId);\n\n                  case 7:\n                    x6Graph = _context4.sent;\n                    return _context4.abrupt(\"return\", x6Graph);\n\n                  case 9:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4);\n          }));\n        },\n        getGraphOptions: function getGraphOptions() {\n          return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n            var graphOptionProvider;\n            return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    graphOptionProvider = context.container.get(IGraphOptionProvider);\n                    return _context5.abrupt(\"return\", graphOptionProvider === null || graphOptionProvider === void 0 ? void 0 : graphOptionProvider.getOptions());\n\n                  case 2:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5);\n          }));\n        }\n      };\n    }\n  });\n  register(ICommandServiceProvider, {\n    lifecycle: Syringe.Lifecycle.singleton,\n    useDynamic: function useDynamic(context) {\n      return {\n        getCommandService: function getCommandService() {\n          return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n            var commandService;\n            return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    commandService = context.container.get(IGraphCommandService);\n                    return _context6.abrupt(\"return\", commandService);\n\n                  case 2:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, _callee6);\n          }));\n        }\n      };\n    }\n  });\n  register(IModelServiceProvider, {\n    lifecycle: Syringe.Lifecycle.singleton,\n    useDynamic: function useDynamic(context) {\n      return {\n        getModelService: function getModelService() {\n          return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n            var modelService;\n            return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n              while (1) {\n                switch (_context7.prev = _context7.next) {\n                  case 0:\n                    modelService = context.container.get(IModelService);\n                    return _context7.abrupt(\"return\", modelService);\n\n                  case 2:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }\n            }, _callee7);\n          }));\n        }\n      };\n    }\n  });\n};","map":{"version":3,"sources":["../../../src/xflow-main/graph/graph-provider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport ReactDOM from 'react-dom';\nimport { Graph as X6Graph, Dom } from '@antv/x6';\nimport { DisposableCollection, Disposable } from '../../common/disposable';\nimport { Deferred } from '../../common/deferred';\nimport { IGraphOptionProvider } from './config';\nimport { singleton, inject, Syringe } from 'mana-syringe';\nimport { IGraphCommandService } from '../../command';\nimport { IModelService } from '../../model-service/interface';\nimport { IHookService } from '../../hooks';\nimport { getEdgeReactComponent } from '../../command-contributions/components/context';\nimport { XFLOW_DEFAULT_EDGE } from '../../constants';\n/** !!! 所有需要使用Graph相关信息的地方, 都统一使用IGraphProvider来获取 */\nexport const IGraphProvider = Symbol('IGraphProvider');\nexport const ICommandServiceProvider = Symbol('ICommandServiceProvider');\nexport const IModelServiceProvider = Symbol('IModelServiceProvider');\nlet GraphManager = class GraphManager {\n    constructor() {\n        /** 处理画布实例的销毁 */\n        this.toDisposce = new DisposableCollection();\n        /** 储存画布实例 */\n        this.graphMap = new Map();\n        /** 获取X6 Graph 实例 */\n        this.getGraph = (graphId) => __awaiter(this, void 0, void 0, function* () {\n            let graphDefer = this.graphMap.get(graphId);\n            if (!graphDefer) {\n                graphDefer = new Deferred();\n                this.graphMap.set(graphId, graphDefer);\n                const options = yield this.optionProvider.getOptions();\n                /** 获取hooks实例： hooks方便其他组件可以修改注册graphOpions/events */\n                const hooks = this.hookService.hookProvider();\n                /** 执行hooks：获取graphOptions */\n                const mergedOptions = yield hooks.graphOptions.call(options.x6Options);\n                const { graphContainer, edgeRender, nodeRender, edgeTypeParser } = options;\n                /** 执行hooks：获取edge label render */\n                const edgeRenderMap = yield hooks.reactEdgeLabelRender.call(edgeRender);\n                /** 执行hooks：更新nodeRender */\n                yield hooks.reactNodeRender.call(nodeRender);\n                const { clientHeight, clientWidth } = graphContainer;\n                const commandService = yield this.commandServiceProvider.getCommandService();\n                const modelService = yield this.modelServiceProvider.getModelService();\n                /** 实例化 X6 Graph */\n                const graph = new X6Graph(Object.assign(Object.assign({ container: graphContainer, width: clientWidth, height: clientHeight }, mergedOptions), { \n                    /** X6提供了边渲染的钩子, 可以在这里设置边上需要渲染的React内容 */\n                    onEdgeLabelRendered: args => {\n                        const { edge, container } = args;\n                        this.renderEdgeReactLabel({\n                            edge,\n                            container,\n                            edgeRenderMap,\n                            edgeTypeParser,\n                            modelService,\n                            commandService,\n                        });\n                    } }));\n                /** 执行hooks：绑定事件执行api */\n                yield hooks.afterGraphInit.call({\n                    graph,\n                    commandService,\n                    modelService,\n                });\n                graphDefer.resolve(graph);\n                graph.on('node:moved', ({ node }) => {\n                    const nodeData = node.getData();\n                    const position = node.position();\n                    node.setData(Object.assign(Object.assign({}, nodeData), { x: position === null || position === void 0 ? void 0 : position.x, y: position === null || position === void 0 ? void 0 : position.y }));\n                });\n                graph.on('node:resized', ({ node }) => {\n                    const nodeData = node.getData();\n                    const size = node.size();\n                    node.setData(Object.assign(Object.assign({}, nodeData), { width: size === null || size === void 0 ? void 0 : size.width, height: size === null || size === void 0 ? void 0 : size.height }));\n                });\n                this.toDisposce.push(Disposable.create(() => __awaiter(this, void 0, void 0, function* () {\n                    yield hooks.beforeGraphDestory.call({\n                        graph,\n                        commandService,\n                        modelService,\n                    });\n                    this.graphMap.delete(graphId);\n                    graph.dispose();\n                })));\n            }\n            return graphDefer.promise;\n        });\n        this.renderEdgeReactLabel = (args) => __awaiter(this, void 0, void 0, function* () {\n            const { container, edgeTypeParser, edge, edgeRenderMap, commandService, modelService } = args;\n            const renderKey = edgeTypeParser(edge === null || edge === void 0 ? void 0 : edge.data) || XFLOW_DEFAULT_EDGE;\n            const reactComponent = edgeRenderMap.get(renderKey);\n            if (!reactComponent) {\n                return;\n            }\n            if (edge && (edge === null || edge === void 0 ? void 0 : edge.data) && reactComponent) {\n                const content = this.edgeAppendForeignObject(edge, container);\n                const WrappedReactComponent = getEdgeReactComponent(reactComponent, commandService, modelService)(edge);\n                ReactDOM.render(WrappedReactComponent, content);\n            }\n        });\n    }\n    /** 实现在连线上渲染React节点 */\n    edgeAppendForeignObject(x6Edge, container) {\n        const fo = Dom.createSvgElement('foreignObject');\n        const body = Dom.createElementNS('body', Dom.ns.xhtml);\n        const content = Dom.createElementNS('div', Dom.ns.xhtml);\n        const edgeData = x6Edge === null || x6Edge === void 0 ? void 0 : x6Edge.data;\n        const foWdith = (edgeData === null || edgeData === void 0 ? void 0 : edgeData.edgeContentWidth) || 100;\n        const foHeight = (edgeData === null || edgeData === void 0 ? void 0 : edgeData.edgeContentHeigt) || 30;\n        fo.setAttribute('width', `${foWdith}`);\n        fo.setAttribute('height', `${foHeight}`);\n        fo.setAttribute('x', `${(-1.0 * foWdith) / 2}`);\n        fo.setAttribute('y', `${(-1.0 * foHeight) / 2}`);\n        body.setAttribute('xhtmls', Dom.ns.xhtml);\n        body.style.width = '100%';\n        body.style.height = '100%';\n        body.style.padding = '0';\n        body.style.margin = '0';\n        body.style.background = 'unset';\n        body.style.overflow = 'visible';\n        body.className = 'xflow-edge-label-body';\n        content.style.width = '100%';\n        content.style.height = '100%';\n        body.appendChild(content);\n        fo.appendChild(body);\n        container.appendChild(fo);\n        return content;\n    }\n    dispose() {\n        this.toDisposce.dispose();\n    }\n};\n__decorate([\n    inject(IGraphOptionProvider),\n    __metadata(\"design:type\", Object)\n], GraphManager.prototype, \"optionProvider\", void 0);\n__decorate([\n    inject(IHookService),\n    __metadata(\"design:type\", Object)\n], GraphManager.prototype, \"hookService\", void 0);\n__decorate([\n    inject(ICommandServiceProvider),\n    __metadata(\"design:type\", Object)\n], GraphManager.prototype, \"commandServiceProvider\", void 0);\n__decorate([\n    inject(IModelServiceProvider),\n    __metadata(\"design:type\", Object)\n], GraphManager.prototype, \"modelServiceProvider\", void 0);\nGraphManager = __decorate([\n    singleton()\n], GraphManager);\nexport { GraphManager };\nexport const registerGraphModule = (register) => {\n    /** 注册GraphManager */\n    register(GraphManager);\n    register(IGraphProvider, {\n        lifecycle: Syringe.Lifecycle.singleton,\n        useDynamic: context => {\n            return {\n                getGraphInstance: () => __awaiter(void 0, void 0, void 0, function* () {\n                    const graphManager = context.container.get(GraphManager);\n                    const graphOptionProvider = context.container.get(IGraphOptionProvider);\n                    const graphConfig = yield (graphOptionProvider === null || graphOptionProvider === void 0 ? void 0 : graphOptionProvider.getOptions());\n                    const x6Graph = yield (graphManager === null || graphManager === void 0 ? void 0 : graphManager.getGraph(graphConfig.graphId));\n                    return x6Graph;\n                }),\n                getGraphOptions: () => __awaiter(void 0, void 0, void 0, function* () {\n                    const graphOptionProvider = context.container.get(IGraphOptionProvider);\n                    return graphOptionProvider === null || graphOptionProvider === void 0 ? void 0 : graphOptionProvider.getOptions();\n                }),\n            };\n        },\n    });\n    register(ICommandServiceProvider, {\n        lifecycle: Syringe.Lifecycle.singleton,\n        useDynamic: context => {\n            return {\n                getCommandService: () => __awaiter(void 0, void 0, void 0, function* () {\n                    const commandService = context.container.get(IGraphCommandService);\n                    return commandService;\n                }),\n            };\n        },\n    });\n    register(IModelServiceProvider, {\n        lifecycle: Syringe.Lifecycle.singleton,\n        useDynamic: context => {\n            return {\n                getModelService: () => __awaiter(void 0, void 0, void 0, function* () {\n                    const modelService = context.container.get(IModelService);\n                    return modelService;\n                }),\n            };\n        },\n    });\n};\n//# sourceMappingURL=graph-provider.js.map"]},"metadata":{},"sourceType":"module"}