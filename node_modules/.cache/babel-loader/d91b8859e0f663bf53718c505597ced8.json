{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport React, { useState, useCallback, useLayoutEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { NodeView } from '@antv/x6';\nimport { Wrap } from '../wrap';\nconst action = 'react';\nexport function createPortal(uniqViewId) {\n  const setGraphRef = {\n    current: () => {}\n  };\n\n  const setGraph = graph => {\n    setGraphRef.current(graph);\n  };\n\n  let add;\n  let remove;\n\n  function connect(id, portal) {\n    add({\n      id,\n      portal\n    });\n  }\n\n  function disconnect(id) {\n    remove(id);\n  }\n\n  const Portal = () => {\n    const [items, setItems] = useState([]);\n    const [graph, setGraphInstance] = useState();\n    const pendingAddIdsRef = useRef([]);\n    const pendingAddItemsRef = useRef([]);\n    setGraphRef.current = setGraphInstance;\n    const addItem = useCallback(payload => {\n      const {\n        id\n      } = payload;\n\n      if (pendingAddIdsRef.current.includes(id)) {\n        // if in pendingAddIds queue\n        const itms = pendingAddItemsRef.current;\n        const matchIndex = itms.findIndex(item => item.id === id);\n\n        if (matchIndex > -1) {\n          itms[matchIndex] = payload;\n        } else {\n          itms.push(payload);\n        }\n\n        pendingAddItemsRef.current = itms;\n      } else {\n        // if not in pendingAddIds queue\n        setItems(prevItems => {\n          const nextItems = [...prevItems];\n          const matchIndex = nextItems.findIndex(item => item.id === id);\n\n          if (matchIndex > -1) {\n            nextItems[matchIndex] = payload;\n          } else {\n            nextItems.push(payload);\n          }\n\n          return nextItems;\n        });\n      }\n    }, []);\n    add = addItem;\n    const removeItem = useCallback(id => {\n      if (pendingAddIdsRef.current.includes(id)) {\n        pendingAddIdsRef.current = pendingAddIdsRef.current.filter(cId => cId !== id);\n      }\n\n      if (pendingAddItemsRef.current.map(c => c.id).includes(id)) {\n        pendingAddItemsRef.current = pendingAddItemsRef.current.filter(c => c.id !== id);\n      }\n\n      setItems(itms => itms.filter(item => item.id !== id));\n    }, []);\n    remove = removeItem;\n    const startBatch = useCallback(args => {\n      const {\n        name,\n        data\n      } = args;\n      const {\n        cells = []\n      } = data || {};\n\n      if (name === 'add') {\n        const cellIds = cells.filter(cell => cell.isNode()).map(cell => cell.id);\n        pendingAddIdsRef.current = Array.from(new Set([...pendingAddIdsRef.current, ...cellIds]));\n      }\n    }, []);\n    const stopBatch = useCallback(_ref => {\n      let {\n        name\n      } = _ref;\n\n      if (name === 'add') {\n        const pendingAdds = pendingAddItemsRef.current;\n\n        if (pendingAdds.length) {\n          const currentPendingAddIds = pendingAdds.map(pendingAddItem => pendingAddItem.id);\n          pendingAddIdsRef.current = pendingAddIdsRef.current.filter(id => !currentPendingAddIds.includes(id));\n          pendingAddItemsRef.current = [];\n          setItems(prevItems => {\n            const nextItems = [...prevItems];\n            pendingAdds.forEach(pendingAddItem => {\n              const matchIndex = nextItems.findIndex(item => item.id === pendingAddItem.id);\n\n              if (matchIndex > -1) {\n                nextItems[matchIndex] = pendingAddItem;\n              } else {\n                nextItems.push(pendingAddItem);\n              }\n            });\n            return nextItems;\n          });\n        }\n      }\n    }, []);\n    useLayoutEffect(() => {\n      if (graph) {\n        graph.on('batch:start', startBatch);\n        graph.on('batch:stop', stopBatch);\n      }\n\n      return () => {\n        if (graph) {\n          graph.off('batch:start', startBatch);\n          graph.off('batch:stop', stopBatch);\n          setItems([]);\n          pendingAddIdsRef.current = [];\n          pendingAddItemsRef.current = [];\n        }\n      };\n    }, [graph, startBatch, stopBatch]);\n    return React.createElement(React.Fragment, null, ...items.map(item => item.portal));\n  };\n\n  class ReactShapeView extends NodeView {\n    init() {\n      super.init();\n      this.cell.on('removed', () => {\n        disconnect(this.cell.id);\n      });\n    }\n\n    getComponentContainer() {\n      return this.cell.prop('useForeignObject') === false ? this.selectors.content : this.selectors.foContent;\n    }\n\n    confirmUpdate(flag) {\n      const ret = super.confirmUpdate(flag);\n      return this.handleAction(ret, action, () => this.renderReactComponent());\n    }\n\n    renderReactComponent() {\n      this.unmountReactComponent();\n      const root = this.getComponentContainer();\n      const node = this.cell;\n      const graph = this.graph;\n\n      if (root) {\n        const component = this.graph.hook.getReactComponent(node);\n        const elem = React.createElement(Wrap, {\n          graph,\n          node,\n          component\n        });\n        connect(this.cell.id, ReactDOM.createPortal(elem, root));\n      }\n    }\n\n    unmountReactComponent() {\n      const root = this.getComponentContainer();\n\n      if (root) {\n        ReactDOM.unmountComponentAtNode(root);\n      }\n\n      return root;\n    }\n\n    onMouseDown(e, x, y) {\n      const target = e.target;\n      const tagName = target.tagName.toLowerCase();\n\n      if (tagName === 'input') {\n        const type = target.getAttribute('type');\n\n        if (type == null || ['text', 'password', 'number', 'email', 'search', 'tel', 'url'].includes(type)) {\n          return;\n        }\n      }\n\n      super.onMouseDown(e, x, y);\n    }\n\n    dispose() {\n      disconnect(this.cell.id);\n      this.unmountReactComponent();\n    }\n\n  }\n\n  __decorate([NodeView.dispose()], ReactShapeView.prototype, \"dispose\", null);\n\n  ReactShapeView.config({\n    bootstrap: [action],\n    actions: {\n      component: action\n    }\n  });\n  NodeView.registry.register(uniqViewId, ReactShapeView, true);\n  return {\n    Portal,\n    setGraph\n  };\n}\nexport function usePortal(uniqViewId) {\n  const initializedRef = useRef(false);\n  const [PortalContainer] = useState(() => {\n    if (!initializedRef.current) {\n      initializedRef.current = true;\n      return createPortal(uniqViewId);\n    }\n\n    return {}; // won't be used\n  });\n  return [PortalContainer.Portal, PortalContainer.setGraph];\n}","map":{"version":3,"sources":["../../src/usePortal/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport React, { useState, useCallback, useLayoutEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { NodeView } from '@antv/x6';\nimport { Wrap } from '../wrap';\nconst action = 'react';\nexport function createPortal(uniqViewId) {\n    const setGraphRef = { current: () => { } };\n    const setGraph = (graph) => {\n        setGraphRef.current(graph);\n    };\n    let add;\n    let remove;\n    function connect(id, portal) {\n        add({ id, portal });\n    }\n    function disconnect(id) {\n        remove(id);\n    }\n    const Portal = () => {\n        const [items, setItems] = useState([]);\n        const [graph, setGraphInstance] = useState();\n        const pendingAddIdsRef = useRef([]);\n        const pendingAddItemsRef = useRef([]);\n        setGraphRef.current = setGraphInstance;\n        const addItem = useCallback((payload) => {\n            const { id } = payload;\n            if (pendingAddIdsRef.current.includes(id)) {\n                // if in pendingAddIds queue\n                const itms = pendingAddItemsRef.current;\n                const matchIndex = itms.findIndex((item) => item.id === id);\n                if (matchIndex > -1) {\n                    itms[matchIndex] = payload;\n                }\n                else {\n                    itms.push(payload);\n                }\n                pendingAddItemsRef.current = itms;\n            }\n            else {\n                // if not in pendingAddIds queue\n                setItems((prevItems) => {\n                    const nextItems = [...prevItems];\n                    const matchIndex = nextItems.findIndex((item) => item.id === id);\n                    if (matchIndex > -1) {\n                        nextItems[matchIndex] = payload;\n                    }\n                    else {\n                        nextItems.push(payload);\n                    }\n                    return nextItems;\n                });\n            }\n        }, []);\n        add = addItem;\n        const removeItem = useCallback((id) => {\n            if (pendingAddIdsRef.current.includes(id)) {\n                pendingAddIdsRef.current = pendingAddIdsRef.current.filter((cId) => cId !== id);\n            }\n            if (pendingAddItemsRef.current.map((c) => c.id).includes(id)) {\n                pendingAddItemsRef.current = pendingAddItemsRef.current.filter((c) => c.id !== id);\n            }\n            setItems((itms) => itms.filter((item) => item.id !== id));\n        }, []);\n        remove = removeItem;\n        const startBatch = useCallback((args) => {\n            const { name, data } = args;\n            const { cells = [] } = data || {};\n            if (name === 'add') {\n                const cellIds = cells\n                    .filter((cell) => cell.isNode())\n                    .map((cell) => cell.id);\n                pendingAddIdsRef.current = Array.from(new Set([...pendingAddIdsRef.current, ...cellIds]));\n            }\n        }, []);\n        const stopBatch = useCallback(({ name }) => {\n            if (name === 'add') {\n                const pendingAdds = pendingAddItemsRef.current;\n                if (pendingAdds.length) {\n                    const currentPendingAddIds = pendingAdds.map((pendingAddItem) => pendingAddItem.id);\n                    pendingAddIdsRef.current = pendingAddIdsRef.current.filter((id) => !currentPendingAddIds.includes(id));\n                    pendingAddItemsRef.current = [];\n                    setItems((prevItems) => {\n                        const nextItems = [...prevItems];\n                        pendingAdds.forEach((pendingAddItem) => {\n                            const matchIndex = nextItems.findIndex((item) => item.id === pendingAddItem.id);\n                            if (matchIndex > -1) {\n                                nextItems[matchIndex] = pendingAddItem;\n                            }\n                            else {\n                                nextItems.push(pendingAddItem);\n                            }\n                        });\n                        return nextItems;\n                    });\n                }\n            }\n        }, []);\n        useLayoutEffect(() => {\n            if (graph) {\n                graph.on('batch:start', startBatch);\n                graph.on('batch:stop', stopBatch);\n            }\n            return () => {\n                if (graph) {\n                    graph.off('batch:start', startBatch);\n                    graph.off('batch:stop', stopBatch);\n                    setItems([]);\n                    pendingAddIdsRef.current = [];\n                    pendingAddItemsRef.current = [];\n                }\n            };\n        }, [graph, startBatch, stopBatch]);\n        return React.createElement(React.Fragment, null, ...items.map((item) => item.portal));\n    };\n    class ReactShapeView extends NodeView {\n        init() {\n            super.init();\n            this.cell.on('removed', () => {\n                disconnect(this.cell.id);\n            });\n        }\n        getComponentContainer() {\n            return this.cell.prop('useForeignObject') === false\n                ? this.selectors.content\n                : this.selectors.foContent;\n        }\n        confirmUpdate(flag) {\n            const ret = super.confirmUpdate(flag);\n            return this.handleAction(ret, action, () => this.renderReactComponent());\n        }\n        renderReactComponent() {\n            this.unmountReactComponent();\n            const root = this.getComponentContainer();\n            const node = this.cell;\n            const graph = this.graph;\n            if (root) {\n                const component = this.graph.hook.getReactComponent(node);\n                const elem = React.createElement(Wrap, { graph, node, component });\n                connect(this.cell.id, ReactDOM.createPortal(elem, root));\n            }\n        }\n        unmountReactComponent() {\n            const root = this.getComponentContainer();\n            if (root) {\n                ReactDOM.unmountComponentAtNode(root);\n            }\n            return root;\n        }\n        onMouseDown(e, x, y) {\n            const target = e.target;\n            const tagName = target.tagName.toLowerCase();\n            if (tagName === 'input') {\n                const type = target.getAttribute('type');\n                if (type == null ||\n                    [\n                        'text',\n                        'password',\n                        'number',\n                        'email',\n                        'search',\n                        'tel',\n                        'url',\n                    ].includes(type)) {\n                    return;\n                }\n            }\n            super.onMouseDown(e, x, y);\n        }\n        dispose() {\n            disconnect(this.cell.id);\n            this.unmountReactComponent();\n        }\n    }\n    __decorate([\n        NodeView.dispose()\n    ], ReactShapeView.prototype, \"dispose\", null);\n    ReactShapeView.config({\n        bootstrap: [action],\n        actions: {\n            component: action,\n        },\n    });\n    NodeView.registry.register(uniqViewId, ReactShapeView, true);\n    return { Portal, setGraph };\n}\nexport function usePortal(uniqViewId) {\n    const initializedRef = useRef(false);\n    const [PortalContainer] = useState(() => {\n        if (!initializedRef.current) {\n            initializedRef.current = true;\n            return createPortal(uniqViewId);\n        }\n        return {}; // won't be used\n    });\n    return [PortalContainer.Portal, PortalContainer.setGraph];\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}