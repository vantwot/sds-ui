{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport DOM from '../../utils/dom';\nimport { buttonStillPressed } from './util';\n\nvar MouseHandler = function () {\n  function MouseHandler(options) {\n    _classCallCheck(this, MouseHandler);\n\n    _defineProperty(this, \"enabled\", void 0);\n\n    _defineProperty(this, \"active\", void 0);\n\n    _defineProperty(this, \"lastPoint\", void 0);\n\n    _defineProperty(this, \"eventButton\", void 0);\n\n    _defineProperty(this, \"moved\", void 0);\n\n    _defineProperty(this, \"clickTolerance\", void 0);\n\n    this.reset();\n    this.clickTolerance = options.clickTolerance || 1;\n  }\n\n  _createClass(MouseHandler, [{\n    key: \"reset\",\n    value: function reset() {\n      this.active = false;\n      this.moved = false;\n      delete this.lastPoint;\n      delete this.eventButton;\n    }\n  }, {\n    key: \"mousedown\",\n    value: function mousedown(e, point) {\n      if (this.lastPoint) {\n        return;\n      }\n\n      var eventButton = DOM.mouseButton(e);\n\n      if (!this.correctButton(e, eventButton)) {\n        return;\n      }\n\n      this.lastPoint = point;\n      this.eventButton = eventButton;\n    }\n  }, {\n    key: \"mousemoveWindow\",\n    value: function mousemoveWindow(e, point) {\n      var lastPoint = this.lastPoint;\n\n      if (!lastPoint) {\n        return;\n      }\n\n      e.preventDefault();\n\n      if (buttonStillPressed(e, this.eventButton)) {\n        this.reset();\n        return;\n      }\n\n      if (!this.moved && point.dist(lastPoint) < this.clickTolerance) {\n        return;\n      }\n\n      this.moved = true;\n      this.lastPoint = point;\n      return this.move(lastPoint, point);\n    }\n  }, {\n    key: \"mouseupWindow\",\n    value: function mouseupWindow(e) {\n      if (!this.lastPoint) {\n        return;\n      }\n\n      var eventButton = DOM.mouseButton(e);\n\n      if (eventButton !== this.eventButton) {\n        return;\n      }\n\n      if (this.moved) {\n        DOM.suppressClick();\n      }\n\n      this.reset();\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.enabled = true;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.enabled = false;\n      this.reset();\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.enabled;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.active;\n    }\n  }, {\n    key: \"correctButton\",\n    value: function correctButton(e, button) {\n      return false;\n    }\n  }, {\n    key: \"move\",\n    value: function move(lastPoint, point) {\n      return;\n    }\n  }]);\n\n  return MouseHandler;\n}();\n\nexport { MouseHandler as default };","map":{"version":3,"sources":["../../../src/handler/mouse/mouse_handler.ts"],"names":["MouseHandler","options","eventButton","DOM","lastPoint","e","buttonStillPressed","point"],"mappings":";;;AAEA,OAAA,GAAA,MAAA,iBAAA;AACA,SAAA,kBAAA,QAAA,QAAA;;IACqBA,Y;AAQnB,WAAA,YAAA,CAAA,OAAA,EAAiD;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,YAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,gBAAA,EAAA,KAAA,CAAA,CAAA;;AAC/C,SAAA,KAAA;AACA,SAAA,cAAA,GAAsBC,OAAO,CAAPA,cAAAA,IAAtB,CAAA;AACD;;;;WAED,SAAA,KAAA,GAAe;AACb,WAAA,MAAA,GAAA,KAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,aAAO,KAAP,SAAA;AACA,aAAO,KAAP,WAAA;AACD;;;WAED,SAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAA8C;AAC5C,UAAI,KAAJ,SAAA,EAAoB;AAClB;AACD;;AAED,UAAMC,WAAW,GAAGC,GAAG,CAAHA,WAAAA,CAApB,CAAoBA,CAApB;;AACA,UAAI,CAAC,KAAA,aAAA,CAAA,CAAA,EAAL,WAAK,CAAL,EAAyC;AACvC;AACD;;AAED,WAAA,SAAA,GAAA,KAAA;AACA,WAAA,WAAA,GAAA,WAAA;AACD;;;WAED,SAAA,eAAA,CAAA,CAAA,EAAA,KAAA,EAAoD;AAClD,UAAMC,SAAS,GAAG,KAAlB,SAAA;;AACA,UAAI,CAAJ,SAAA,EAAgB;AACd;AACD;;AACDC,MAAAA,CAAC,CAADA,cAAAA;;AAEA,UAAIC,kBAAkB,CAAA,CAAA,EAAI,KAA1B,WAAsB,CAAtB,EAA6C;AAO3C,aAAA,KAAA;AACA;AACD;;AAED,UAAI,CAAC,KAAD,KAAA,IAAeC,KAAK,CAALA,IAAAA,CAAAA,SAAAA,IAAwB,KAA3C,cAAA,EAAgE;AAC9D;AACD;;AACD,WAAA,KAAA,GAAA,IAAA;AACA,WAAA,SAAA,GAAA,KAAA;AAGA,aAAO,KAAA,IAAA,CAAA,SAAA,EAAP,KAAO,CAAP;AACD;;;WAED,SAAA,aAAA,CAAA,CAAA,EAAoC;AAClC,UAAI,CAAC,KAAL,SAAA,EAAqB;AACnB;AACD;;AACD,UAAML,WAAW,GAAGC,GAAG,CAAHA,WAAAA,CAApB,CAAoBA,CAApB;;AACA,UAAID,WAAW,KAAK,KAApB,WAAA,EAAsC;AACpC;AACD;;AACD,UAAI,KAAJ,KAAA,EAAgB;AACdC,QAAAA,GAAG,CAAHA,aAAAA;AACD;;AACD,WAAA,KAAA;AACD;;;WAED,SAAA,MAAA,GAAgB;AACd,WAAA,OAAA,GAAA,IAAA;AACD;;;WAED,SAAA,OAAA,GAAiB;AACf,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,KAAA;AACD;;;WAED,SAAA,SAAA,GAAmB;AACjB,aAAO,KAAP,OAAA;AACD;;;WAED,SAAA,QAAA,GAAkB;AAChB,aAAO,KAAP,MAAA;AACD;;;WAED,SAAA,aAAA,CAAA,CAAA,EAAA,MAAA,EAAuD;AAErD,aAAA,KAAA;AACD;;;WAED,SAAA,IAAA,CAAA,SAAA,EAAA,KAAA,EAA+C;AAE7C;AACD;;;;;;SArGkBH,Y","sourcesContent":["// @ts-ignore\nimport Point from '../../geo/point';\nimport DOM from '../../utils/dom';\nimport { buttonStillPressed } from './util';\nexport default class MouseHandler {\n  protected enabled: boolean;\n  protected active: boolean;\n  protected lastPoint: Point;\n  protected eventButton: 1 | 2;\n  protected moved: boolean;\n  protected clickTolerance: number;\n\n  constructor(options: { clickTolerance: number }) {\n    this.reset();\n    this.clickTolerance = options.clickTolerance || 1;\n  }\n\n  public reset() {\n    this.active = false;\n    this.moved = false;\n    delete this.lastPoint;\n    delete this.eventButton;\n  }\n\n  public mousedown(e: MouseEvent, point: Point) {\n    if (this.lastPoint) {\n      return;\n    }\n\n    const eventButton = DOM.mouseButton(e);\n    if (!this.correctButton(e, eventButton)) {\n      return;\n    }\n\n    this.lastPoint = point;\n    this.eventButton = eventButton;\n  }\n\n  public mousemoveWindow(e: MouseEvent, point: Point) {\n    const lastPoint = this.lastPoint;\n    if (!lastPoint) {\n      return;\n    }\n    e.preventDefault();\n\n    if (buttonStillPressed(e, this.eventButton)) {\n      // Some browsers don't fire a `mouseup` when the mouseup occurs outside\n      // the window or iframe:\n      // https://github.com/mapbox/mapbox-gl-js/issues/4622\n      //\n      // If the button is no longer pressed during this `mousemove` it may have\n      // been released outside of the window or iframe.\n      this.reset();\n      return;\n    }\n\n    if (!this.moved && point.dist(lastPoint) < this.clickTolerance) {\n      return;\n    }\n    this.moved = true;\n    this.lastPoint = point;\n\n    // implemented by child class\n    return this.move(lastPoint, point);\n  }\n\n  public mouseupWindow(e: MouseEvent) {\n    if (!this.lastPoint) {\n      return;\n    }\n    const eventButton = DOM.mouseButton(e);\n    if (eventButton !== this.eventButton) {\n      return;\n    }\n    if (this.moved) {\n      DOM.suppressClick();\n    }\n    this.reset();\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n    this.reset();\n  }\n\n  public isEnabled() {\n    return this.enabled;\n  }\n\n  public isActive() {\n    return this.active;\n  }\n\n  protected correctButton(e: MouseEvent, button: number) {\n    // eslint-disable-line\n    return false; // implemented by child\n  }\n\n  protected move(lastPoint: Point, point: Point) {\n    // eslint-disable-line\n    return; // implemented by child\n  }\n}\n"]},"metadata":{},"sourceType":"module"}