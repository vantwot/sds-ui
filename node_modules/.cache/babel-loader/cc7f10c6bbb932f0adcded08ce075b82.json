{"ast":null,"code":"import React from 'react';\nimport classnames from 'classnames';\nimport addEventListener from 'rc-util/lib/Dom/addEventListener';\nimport { MenubarItem } from './item';\nimport { MenubarContext } from './context';\nexport class Menubar extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onDocumentClick = () => {\n      this.setState({\n        active: false\n      });\n      this.unbindDocEvent();\n    };\n\n    this.activeMenubar = () => {\n      this.setState({\n        active: true\n      });\n\n      if (!this.removeDocClickEvent) {\n        this.removeDocClickEvent = addEventListener(document.documentElement, 'click', this.onDocumentClick).remove;\n      }\n    };\n\n    this.state = {\n      active: false\n    };\n  }\n\n  componentWillUnmount() {\n    this.unbindDocEvent();\n  }\n\n  unbindDocEvent() {\n    if (this.removeDocClickEvent) {\n      this.removeDocClickEvent();\n      this.removeDocClickEvent = null;\n    }\n  }\n\n  render() {\n    const {\n      prefixCls,\n      className,\n      children,\n      extra\n    } = this.props;\n    const baseCls = `${prefixCls}-menubar`;\n    const contextValue = {\n      prefixCls: baseCls,\n      activeMenubar: this.activeMenubar,\n      menubarActived: this.state.active === true\n    };\n    return React.createElement(\"div\", {\n      className: classnames(baseCls, className)\n    }, React.createElement(\"div\", {\n      className: `${baseCls}-content`\n    }, React.createElement(\"div\", {\n      className: `${baseCls}-content-inner`\n    }, React.createElement(MenubarContext.Provider, {\n      value: contextValue\n    }, children)), extra && React.createElement(\"div\", {\n      className: `${baseCls}-content-extras`\n    }, extra)));\n  }\n\n}\n\n(function (Menubar) {\n  Menubar.Item = MenubarItem;\n  Menubar.defaultProps = {\n    prefixCls: 'x6'\n  };\n})(Menubar || (Menubar = {}));","map":{"version":3,"sources":["../../src/menubar/menubar.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,gBAAP,MAA6B,kCAA7B;AACA,SAAS,WAAT,QAA4B,QAA5B;AACA,SAAS,cAAT,QAA+B,WAA/B;AAEA,OAAM,MAAO,OAAP,SAAuB,KAAK,CAAC,aAA7B,CAAwE;AAG5E,EAAA,WAAA,CAAY,KAAZ,EAAgC;AAC9B,UAAM,KAAN;;AAQF,SAAA,eAAA,GAAkB,MAAK;AACrB,WAAK,QAAL,CAAc;AAAE,QAAA,MAAM,EAAE;AAAV,OAAd;AACA,WAAK,cAAL;AACD,KAHD;;AAYA,SAAA,aAAA,GAAgB,MAAK;AACnB,WAAK,QAAL,CAAc;AAAE,QAAA,MAAM,EAAE;AAAV,OAAd;;AACA,UAAI,CAAC,KAAK,mBAAV,EAA+B;AAC7B,aAAK,mBAAL,GAA2B,gBAAgB,CACzC,QAAQ,CAAC,eADgC,EAEzC,OAFyC,EAGzC,KAAK,eAHoC,CAAhB,CAIzB,MAJF;AAKD;AACF,KATD;;AAnBE,SAAK,KAAL,GAAa;AAAE,MAAA,MAAM,EAAE;AAAV,KAAb;AACD;;AAED,EAAA,oBAAoB,GAAA;AAClB,SAAK,cAAL;AACD;;AAOD,EAAA,cAAc,GAAA;AACZ,QAAI,KAAK,mBAAT,EAA8B;AAC5B,WAAK,mBAAL;AACA,WAAK,mBAAL,GAA2B,IAA3B;AACD;AACF;;AAaD,EAAA,MAAM,GAAA;AACJ,UAAM;AAAE,MAAA,SAAF;AAAa,MAAA,SAAb;AAAwB,MAAA,QAAxB;AAAkC,MAAA;AAAlC,QAA4C,KAAK,KAAvD;AACA,UAAM,OAAO,GAAG,GAAG,SAAS,UAA5B;AACA,UAAM,YAAY,GAA4B;AAC5C,MAAA,SAAS,EAAE,OADiC;AAE5C,MAAA,aAAa,EAAE,KAAK,aAFwB;AAG5C,MAAA,cAAc,EAAE,KAAK,KAAL,CAAW,MAAX,KAAsB;AAHM,KAA9C;AAMA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,UAAU,CAAC,OAAD,EAAU,SAAV;AAA1B,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,GAAG,OAAO;AAA1B,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,GAAG,OAAO;AAA1B,KAAA,EACE,KAAA,CAAA,aAAA,CAAC,cAAc,CAAC,QAAhB,EAAwB;AAAC,MAAA,KAAK,EAAE;AAAR,KAAxB,EACG,QADH,CADF,CADF,EAMG,KAAK,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,GAAG,OAAO;AAA1B,KAAA,EAA8C,KAA9C,CANZ,CADF,CADF;AAYD;;AAxD2E;;AA2D9E,CAAA,UAAiB,OAAjB,EAAwB;AACT,EAAA,OAAA,CAAA,IAAA,GAAO,WAAP;AAYA,EAAA,OAAA,CAAA,YAAA,GAAsB;AACjC,IAAA,SAAS,EAAE;AADsB,GAAtB;AAGd,CAhBD,EAAiB,OAAO,KAAP,OAAO,GAAA,EAAA,CAAxB","sourceRoot":"","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport addEventListener from 'rc-util/lib/Dom/addEventListener';\nimport { MenubarItem } from './item';\nimport { MenubarContext } from './context';\nexport class Menubar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.onDocumentClick = () => {\n            this.setState({ active: false });\n            this.unbindDocEvent();\n        };\n        this.activeMenubar = () => {\n            this.setState({ active: true });\n            if (!this.removeDocClickEvent) {\n                this.removeDocClickEvent = addEventListener(document.documentElement, 'click', this.onDocumentClick).remove;\n            }\n        };\n        this.state = { active: false };\n    }\n    componentWillUnmount() {\n        this.unbindDocEvent();\n    }\n    unbindDocEvent() {\n        if (this.removeDocClickEvent) {\n            this.removeDocClickEvent();\n            this.removeDocClickEvent = null;\n        }\n    }\n    render() {\n        const { prefixCls, className, children, extra } = this.props;\n        const baseCls = `${prefixCls}-menubar`;\n        const contextValue = {\n            prefixCls: baseCls,\n            activeMenubar: this.activeMenubar,\n            menubarActived: this.state.active === true,\n        };\n        return (React.createElement(\"div\", { className: classnames(baseCls, className) },\n            React.createElement(\"div\", { className: `${baseCls}-content` },\n                React.createElement(\"div\", { className: `${baseCls}-content-inner` },\n                    React.createElement(MenubarContext.Provider, { value: contextValue }, children)),\n                extra && React.createElement(\"div\", { className: `${baseCls}-content-extras` }, extra))));\n    }\n}\n(function (Menubar) {\n    Menubar.Item = MenubarItem;\n    Menubar.defaultProps = {\n        prefixCls: 'x6',\n    };\n})(Menubar || (Menubar = {}));\n//# sourceMappingURL=menubar.js.map"]},"metadata":{},"sourceType":"module"}