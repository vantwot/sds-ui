{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport React from 'react';\nimport { XFLOW_PREFIX_CLS } from '../../constants';\n/** xflow classname prefix context */\n\nvar ConfigProvider = function ConfigProvider() {\n  var _this = this;\n\n  _classCallCheck(this, ConfigProvider);\n\n  this.xflowPrefixCls = XFLOW_PREFIX_CLS;\n\n  this.getXflowPrefixCls = function (pkgName) {\n    return \"\".concat(_this.xflowPrefixCls, \"-\").concat(pkgName);\n  };\n\n  this.setXflowPrefixCls = function (prefixCls) {\n    return _this.xflowPrefixCls = prefixCls;\n  };\n};\n\nexport var XFlowConfigProviderContext = React.createContext({\n  configProvider: null\n});\nexport var useConfigContext = function useConfigContext() {\n  return React.useContext(XFlowConfigProviderContext);\n};\nexport var useXflowPrefixCls = function useXflowPrefixCls(pkgName) {\n  var ctx = useConfigContext();\n  return React.useMemo(function () {\n    if (ctx.configProvider) {\n      return ctx.configProvider.getXflowPrefixCls(pkgName);\n    }\n\n    return \"\".concat(XFLOW_PREFIX_CLS, \"-\").concat(pkgName);\n    /* eslint-disable-next-line  */\n  }, [pkgName]);\n};","map":{"version":3,"sources":["../../../src/xflow-main/components/global-config-context.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,gBAAT,QAAiC,iBAAjC;AAEA;;IACM,c,GAAN,0BAAA;AAAA;;AAAA;;AACU,OAAA,cAAA,GAAyB,gBAAzB;;AAER,OAAA,iBAAA,GAAoB,UAAC,OAAD,EAAoB;AACtC,qBAAU,KAAI,CAAC,cAAf,cAAiC,OAAjC;AACD,GAFD;;AAIA,OAAA,iBAAA,GAAoB,UAAC,SAAD,EAAsB;AACxC,WAAQ,KAAI,CAAC,cAAL,GAAsB,SAA9B;AACD,GAFD;AAGD,C;;AAMD,OAAO,IAAM,0BAA0B,GAAG,KAAK,CAAC,aAAN,CAA8B;AACtE,EAAA,cAAc,EAAE;AADsD,CAA9B,CAAnC;AAIP,OAAO,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,GAAK;AACnC,SAAO,KAAK,CAAC,UAAN,CAAiB,0BAAjB,CAAP;AACD,CAFM;AAIP,OAAO,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,OAAD,EAAoB;AACnD,MAAM,GAAG,GAAG,gBAAgB,EAA5B;AACA,SAAO,KAAK,CAAC,OAAN,CAAc,YAAK;AACxB,QAAI,GAAG,CAAC,cAAR,EAAwB;AACtB,aAAO,GAAG,CAAC,cAAJ,CAAmB,iBAAnB,CAAqC,OAArC,CAAP;AACD;;AACD,qBAAU,gBAAV,cAA8B,OAA9B;AACA;AACD,GANM,EAMJ,CAAC,OAAD,CANI,CAAP;AAOD,CATM","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { XFLOW_PREFIX_CLS } from '../../constants';\n/** xflow classname prefix context */\nclass ConfigProvider {\n    constructor() {\n        this.xflowPrefixCls = XFLOW_PREFIX_CLS;\n        this.getXflowPrefixCls = (pkgName) => {\n            return `${this.xflowPrefixCls}-${pkgName}`;\n        };\n        this.setXflowPrefixCls = (prefixCls) => {\n            return (this.xflowPrefixCls = prefixCls);\n        };\n    }\n}\nexport const XFlowConfigProviderContext = React.createContext({\n    configProvider: null,\n});\nexport const useConfigContext = () => {\n    return React.useContext(XFlowConfigProviderContext);\n};\nexport const useXflowPrefixCls = (pkgName) => {\n    const ctx = useConfigContext();\n    return React.useMemo(() => {\n        if (ctx.configProvider) {\n            return ctx.configProvider.getXflowPrefixCls(pkgName);\n        }\n        return `${XFLOW_PREFIX_CLS}-${pkgName}`;\n        /* eslint-disable-next-line  */\n    }, [pkgName]);\n};\n//# sourceMappingURL=global-config-context.js.map"]},"metadata":{},"sourceType":"module"}