{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { Element } from './Element';\nimport * as Mixin from './util/mixin';\n\nfunction noop() {}\n\nexport var HTMLElement = function (_Element) {\n  _inherits(HTMLElement, _Element);\n\n  var _super = _createSuper(HTMLElement);\n\n  function HTMLElement() {\n    var _this;\n\n    var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var level = arguments.length > 1 ? arguments[1] : undefined;\n\n    _classCallCheck(this, HTMLElement);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"className\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"children\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"blur\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"insertBefore\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"appendChild\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"removeChild\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"remove\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"innerHTML\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"tagName\", void 0);\n\n    _this.className = '';\n    _this.children = [];\n    _this.focus = noop;\n    _this.blur = noop;\n    _this.insertBefore = noop;\n    _this.appendChild = noop;\n    _this.removeChild = noop;\n    _this.remove = noop;\n    _this.innerHTML = '';\n    _this.tagName = tagName.toUpperCase();\n    Mixin.parentNode(_assertThisInitialized(_this), level);\n    Mixin.style(_assertThisInitialized(_this));\n    Mixin.classList(_assertThisInitialized(_this));\n    Mixin.clientRegion(_assertThisInitialized(_this));\n    Mixin.offsetRegion(_assertThisInitialized(_this));\n    Mixin.scrollRegion(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  return HTMLElement;\n}(Element);","map":{"version":3,"sources":["../../src/mini-adapter/HTMLElement.ts"],"names":["HTMLElement","tagName","level","Mixin"],"mappings":"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","sourcesContent":["// @ts-nocheck\n// tslint:disable\nimport { Element } from './Element';\nimport * as Mixin from './util/mixin';\n\nfunction noop() {}\n\nexport class HTMLElement extends Element {\n  public className: string;\n  public children: any[];\n  public focus: any;\n  public blur: any;\n  public insertBefore: any;\n  public appendChild: any;\n  public removeChild: any;\n  public remove: any;\n  public innerHTML: string;\n  public tagName: string;\n\n  constructor(tagName = '', level?: number) {\n    super();\n\n    this.className = '';\n    this.children = [];\n\n    this.focus = noop;\n    this.blur = noop;\n\n    this.insertBefore = noop;\n    this.appendChild = noop;\n    this.removeChild = noop;\n    this.remove = noop;\n\n    this.innerHTML = '';\n\n    this.tagName = tagName.toUpperCase();\n\n    Mixin.parentNode(this, level);\n    Mixin.style(this);\n    Mixin.classList(this);\n    Mixin.clientRegion(this);\n    Mixin.offsetRegion(this);\n    Mixin.scrollRegion(this);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}