{"ast":null,"code":"import _defineProperty from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { DefaultNodeConfig } from '../../../flowchart-node-panel';\nimport { FlowchartFormWrapper } from '../../form-wrapper';\nimport { InputFiled, ColorPicker, Position, InputNumberFiled, Size } from './fields';\nimport { PREFIX } from './constants';\nimport './style.less';\n\nvar GroupComponent = function GroupComponent(props) {\n  var config = props.config,\n      _props$plugin = props.plugin,\n      plugin = _props$plugin === void 0 ? {} : _props$plugin;\n  var updateGroup = plugin.updateGroup;\n\n  var _useState = useState(Object.assign(Object.assign({}, DefaultNodeConfig), config)),\n      _useState2 = _slicedToArray(_useState, 2),\n      groupConfig = _useState2[0],\n      setGroupConfig = _useState2[1];\n\n  var onGroupConfigChange = function onGroupConfigChange(key, value) {\n    setGroupConfig(Object.assign(Object.assign({}, groupConfig), _defineProperty({}, key, value)));\n    updateGroup(_defineProperty({}, key, value));\n  };\n\n  useEffect(function () {\n    setGroupConfig(Object.assign(Object.assign({}, DefaultNodeConfig), config));\n  }, [config]);\n  return React.createElement(\"div\", {\n    className: \"\".concat(PREFIX, \"-panel-body\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(PREFIX, \"-panel-group\")\n  }, React.createElement(\"h5\", null, \"\\u5185\\u5BB9\"), React.createElement(InputFiled, {\n    label: \"\\u6807\\u9898\",\n    value: groupConfig.label,\n    onChange: function onChange(value) {\n      onGroupConfigChange('label', value);\n    }\n  })), React.createElement(\"div\", {\n    className: \"\".concat(PREFIX, \"-panel-group\")\n  }, React.createElement(\"h5\", null, \"\\u6837\\u5F0F\"), React.createElement(Position, {\n    x: groupConfig.x,\n    y: groupConfig.y,\n    onChange: function onChange(key, value) {\n      onGroupConfigChange(key, value);\n    }\n  }), React.createElement(Size, {\n    width: groupConfig.width,\n    height: groupConfig.height,\n    onChange: function onChange(key, value) {\n      onGroupConfigChange(key, value);\n    }\n  }), React.createElement(ColorPicker, {\n    label: \"\\u586B\\u5145\",\n    value: groupConfig.fill,\n    onChange: function onChange(value) {\n      onGroupConfigChange('fill', value);\n    }\n  }), React.createElement(ColorPicker, {\n    label: \"\\u8FB9\\u6846\",\n    value: groupConfig.stroke,\n    onChange: function onChange(value) {\n      onGroupConfigChange('stroke', value);\n    }\n  }), React.createElement(\"div\", {\n    className: \"\".concat(PREFIX, \"-node-text-style\")\n  }, React.createElement(InputNumberFiled, {\n    label: \"\\u5B57\\u53F7\",\n    value: groupConfig.fontSize,\n    width: 68,\n    onChange: function onChange(value) {\n      onGroupConfigChange('fontSize', value);\n    }\n  }), React.createElement(ColorPicker, {\n    value: groupConfig.fontFill,\n    onChange: function onChange(value) {\n      onGroupConfigChange('fontFill', value);\n    }\n  }))));\n};\n\nexport var GroupService = function GroupService(props) {\n  return React.createElement(FlowchartFormWrapper, Object.assign({}, props), function (config, plugin) {\n    return React.createElement(GroupComponent, Object.assign({}, props, {\n      plugin: plugin,\n      config: config\n    }));\n  });\n};","map":{"version":3,"sources":["../../../../src/flowchart-editor-panel/control-map-service/components/group.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DefaultNodeConfig } from '../../../flowchart-node-panel';\nimport { FlowchartFormWrapper } from '../../form-wrapper';\nimport { InputFiled, ColorPicker, Position, InputNumberFiled, Size } from './fields';\nimport { PREFIX } from './constants';\nimport './style.less';\nconst GroupComponent = props => {\n    const { config, plugin = {} } = props;\n    const { updateGroup } = plugin;\n    const [groupConfig, setGroupConfig] = useState(Object.assign(Object.assign({}, DefaultNodeConfig), config));\n    const onGroupConfigChange = (key, value) => {\n        setGroupConfig(Object.assign(Object.assign({}, groupConfig), { [key]: value }));\n        updateGroup({\n            [key]: value,\n        });\n    };\n    useEffect(() => {\n        setGroupConfig(Object.assign(Object.assign({}, DefaultNodeConfig), config));\n    }, [config]);\n    return (React.createElement(\"div\", { className: `${PREFIX}-panel-body` },\n        React.createElement(\"div\", { className: `${PREFIX}-panel-group` },\n            React.createElement(\"h5\", null, \"\\u5185\\u5BB9\"),\n            React.createElement(InputFiled, { label: \"\\u6807\\u9898\", value: groupConfig.label, onChange: value => {\n                    onGroupConfigChange('label', value);\n                } })),\n        React.createElement(\"div\", { className: `${PREFIX}-panel-group` },\n            React.createElement(\"h5\", null, \"\\u6837\\u5F0F\"),\n            React.createElement(Position, { x: groupConfig.x, y: groupConfig.y, onChange: (key, value) => {\n                    onGroupConfigChange(key, value);\n                } }),\n            React.createElement(Size, { width: groupConfig.width, height: groupConfig.height, onChange: (key, value) => {\n                    onGroupConfigChange(key, value);\n                } }),\n            React.createElement(ColorPicker, { label: \"\\u586B\\u5145\", value: groupConfig.fill, onChange: (value) => {\n                    onGroupConfigChange('fill', value);\n                } }),\n            React.createElement(ColorPicker, { label: \"\\u8FB9\\u6846\", value: groupConfig.stroke, onChange: (value) => {\n                    onGroupConfigChange('stroke', value);\n                } }),\n            React.createElement(\"div\", { className: `${PREFIX}-node-text-style` },\n                React.createElement(InputNumberFiled, { label: \"\\u5B57\\u53F7\", value: groupConfig.fontSize, width: 68, onChange: value => {\n                        onGroupConfigChange('fontSize', value);\n                    } }),\n                React.createElement(ColorPicker, { value: groupConfig.fontFill, onChange: (value) => {\n                        onGroupConfigChange('fontFill', value);\n                    } })))));\n};\nexport const GroupService = props => {\n    return (React.createElement(FlowchartFormWrapper, Object.assign({}, props), (config, plugin) => React.createElement(GroupComponent, Object.assign({}, props, { plugin: plugin, config: config }))));\n};\n//# sourceMappingURL=group.js.map"]},"metadata":{},"sourceType":"module"}