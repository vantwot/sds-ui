{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { HookHub } from '@antv/xflow-hook';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\n/** 从服务端获取画布数据命令 */\n\nexport var NsGraphLoadData;\n\n(function (NsGraphLoadData) {\n  /** Command: 用于注册named factory */\n  NsGraphLoadData.command = XFlowGraphCommands.LOAD_DATA;\n  /** hookName */\n\n  NsGraphLoadData.hookKey = 'loadData';\n\n  NsGraphLoadData.createHook = () => {\n    return new HookHub();\n  };\n})(NsGraphLoadData || (NsGraphLoadData = {}));\n\nlet GraphLoadDataCommand =\n/** 画布数据获取命令 */\nclass GraphLoadDataCommand {\n  constructor() {\n    /** 执行cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const {\n        args,\n        hooks: runtimeHook\n      } = this.ctx.getArgs();\n      const hooks = this.ctx.getHooks();\n      const result = yield hooks.loadData.call(args, handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const {\n          loadDataService,\n          graphMeta\n        } = handlerArgs;\n        const graphData = yield loadDataService(graphMeta);\n        return {\n          graphData\n        };\n      }), runtimeHook);\n      /** 设置结果 */\n\n      this.ctx.setResult(result);\n      return this;\n    });\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n\n      return this;\n    });\n  }\n\n  init() {\n    this.ctx = this.contextProvider();\n  }\n\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n\n};\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphLoadDataCommand.prototype, \"contextProvider\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], GraphLoadDataCommand.prototype, \"init\", null);\n\nGraphLoadDataCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsGraphLoadData.command.id\n  }\n})\n/** 画布数据获取命令 */\n], GraphLoadDataCommand);\nexport { GraphLoadDataCommand };","map":{"version":3,"sources":["../../../src/command-contributions/graph/graph-load-data.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,MAAT,EAAiB,UAAjB,EAA6B,aAA7B,QAAkD,cAAlD;AACA,SAAS,OAAT,QAAwB,kBAAxB;AAIA,SAAS,eAAT,EAA0B,uBAA1B,QAAyD,yBAAzD;AACA,SAAS,kBAAT,QAAmC,aAAnC;AAQA;;AACA,OAAM,IAAW,eAAX;;AAAN,CAAA,UAAiB,eAAjB,EAAgC;AAC9B;AACa,EAAA,eAAA,CAAA,OAAA,GAAU,kBAAkB,CAAC,SAA7B;AACb;;AACa,EAAA,eAAA,CAAA,OAAA,GAAU,UAAV;;AACA,EAAA,eAAA,CAAA,UAAA,GAAa,MAAK;AAC7B,WAAO,IAAI,OAAJ,EAAP;AACD,GAFY;AAkBd,CAvBD,EAAiB,eAAe,KAAf,eAAe,GAAA,EAAA,CAAhC;;AA6BA,IAAa,oBAAoB;AADjC;AACA,MAAa,oBAAb,CAAiC;AAAjC,EAAA,WAAA,GAAA;AAUE;AACA,SAAA,OAAA,GAAU,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACnB,YAAM;AAAE,QAAA,IAAF;AAAQ,QAAA,KAAK,EAAE;AAAf,UAA+B,KAAK,GAAL,CAAS,OAAT,EAArC;AACA,YAAM,KAAK,GAAG,KAAK,GAAL,CAAS,QAAT,EAAd;AAEA,YAAM,MAAM,GAAG,MAAM,KAAK,CAAC,QAAN,CAAe,IAAf,CACnB,IADmB,EAEb,WAAN,IAAoB,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAClB,cAAM;AAAE,UAAA,eAAF;AAAmB,UAAA;AAAnB,YAAiC,WAAvC;AACA,cAAM,SAAS,GAAG,MAAM,eAAe,CAAC,SAAD,CAAvC;AACA,eAAO;AAAE,UAAA;AAAF,SAAP;AACD,OAJmB,CAFD,EAOnB,WAPmB,CAArB;AAUA;;AACA,WAAK,GAAL,CAAS,SAAT,CAAmB,MAAnB;AAEA,aAAO,IAAP;AACD,KAlBoB,CAArB;;AAoBA,SAAA,IAAA,GAAO,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAChB,WAAK,GAAL,CAAS,IAAT;AACA,aAAO,IAAP;AACD,KAHiB,CAAlB;;AAKA,SAAA,IAAA,GAAO,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAChB,UAAI,CAAC,KAAK,GAAL,CAAS,UAAd,EAA0B;AACxB,cAAM,KAAK,OAAL,EAAN;AACD;;AACD,aAAO,IAAP;AACD,KALiB,CAAlB;AAUD;;AAxCC,EAAA,IAAI,GAAA;AACF,SAAK,GAAL,GAAW,KAAK,eAAL,EAAX;AACD;;AAmCD,EAAA,UAAU,GAAA;AACR,WAAO,KAAK,GAAL,CAAS,UAAT,EAAP;AACD;;AA7C8B,CAAjC;;AACmC,UAAA,CAAA,CAAhC,MAAM,CAAC,uBAAD,CAA0B,E,iCAAA,CAAA,E,8BAAA,E,iBAAA,E,KAA4C,CAA5C,CAAA;;AAKjC,UAAA,CAAA,CADC,aAAa,EACd,E,mCAAA,E,mCAAA,E,uCAAA,CAAA,E,8BAAA,E,MAAA,EAEC,IAFD,CAAA;;AANW,oBAAoB,GAAA,UAAA,CAAA,CAJhC,UAAU,CAAC;AACV,EAAA,KAAK,EAAE;AAAE,IAAA,KAAK,EAAE,eAAT;AAA0B,IAAA,KAAK,EAAE,eAAe,CAAC,OAAhB,CAAwB;AAAzD;AADG,CAAD;AAGX;AACiC,CAAA,EAApB,oBAAoB,CAApB;SAAA,oB","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { HookHub } from '@antv/xflow-hook';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\n/** 从服务端获取画布数据命令 */\nexport var NsGraphLoadData;\n(function (NsGraphLoadData) {\n    /** Command: 用于注册named factory */\n    NsGraphLoadData.command = XFlowGraphCommands.LOAD_DATA;\n    /** hookName */\n    NsGraphLoadData.hookKey = 'loadData';\n    NsGraphLoadData.createHook = () => {\n        return new HookHub();\n    };\n})(NsGraphLoadData || (NsGraphLoadData = {}));\nlet GraphLoadDataCommand = \n/** 画布数据获取命令 */\nclass GraphLoadDataCommand {\n    constructor() {\n        /** 执行cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const { args, hooks: runtimeHook } = this.ctx.getArgs();\n            const hooks = this.ctx.getHooks();\n            const result = yield hooks.loadData.call(args, (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                const { loadDataService, graphMeta } = handlerArgs;\n                const graphData = yield loadDataService(graphMeta);\n                return { graphData };\n            }), runtimeHook);\n            /** 设置结果 */\n            this.ctx.setResult(result);\n            return this;\n        });\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            this.ctx.undo();\n            return this;\n        });\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.ctx.isUndoable) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    init() {\n        this.ctx = this.contextProvider();\n    }\n    isUndoable() {\n        return this.ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], GraphLoadDataCommand.prototype, \"contextProvider\", void 0);\n__decorate([\n    postConstruct(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], GraphLoadDataCommand.prototype, \"init\", null);\nGraphLoadDataCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsGraphLoadData.command.id },\n    })\n    /** 画布数据获取命令 */\n], GraphLoadDataCommand);\nexport { GraphLoadDataCommand };\n//# sourceMappingURL=graph-load-data.js.map"]},"metadata":{},"sourceType":"module"}