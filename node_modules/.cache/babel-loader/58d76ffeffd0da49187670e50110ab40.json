{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport JQuery from 'jquery';\nimport { Dom } from '../util';\nimport { Basecoat } from '../common';\nimport { Util, Config } from '../global';\nexport var View = /*#__PURE__*/function (_Basecoat) {\n  _inherits(View, _Basecoat);\n\n  var _super = _createSuper(View);\n\n  function View() {\n    var _this;\n\n    _classCallCheck(this, View);\n\n    _this = _super.call(this);\n    _this.cid = Private.uniqueId();\n    View.views[_this.cid] = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(View, [{\n    key: \"priority\",\n    get: function get() {\n      return 2;\n    } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"confirmUpdate\",\n    value: function confirmUpdate(flag, options) {\n      return 0;\n    }\n  }, {\n    key: \"$\",\n    value: function $(elem) {\n      return View.$(elem);\n    }\n  }, {\n    key: \"empty\",\n    value: function empty() {\n      var elem = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.container;\n      this.$(elem).empty();\n      return this;\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      var elem = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.container;\n      this.$(elem).remove();\n      return this;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var elem = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.container;\n\n      if (elem === this.container) {\n        this.removeEventListeners(document);\n        this.onRemove();\n        delete View.views[this.cid];\n      }\n\n      this.unmount(elem);\n      return this;\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove() {}\n  }, {\n    key: \"setClass\",\n    value: function setClass(className) {\n      var elem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n      elem.classList.value = Array.isArray(className) ? className.join(' ') : className;\n    }\n  }, {\n    key: \"addClass\",\n    value: function addClass(className) {\n      var elem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n      this.$(elem).addClass(Array.isArray(className) ? className.join(' ') : className);\n      return this;\n    }\n  }, {\n    key: \"removeClass\",\n    value: function removeClass(className) {\n      var elem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n      this.$(elem).removeClass(Array.isArray(className) ? className.join(' ') : className);\n      return this;\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(style) {\n      var elem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n      this.$(elem).css(style);\n      return this;\n    }\n  }, {\n    key: \"setAttrs\",\n    value: function setAttrs(attrs) {\n      var elem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n\n      if (attrs != null && elem != null) {\n        if (elem instanceof SVGElement) {\n          Dom.attr(elem, attrs);\n        } else {\n          this.$(elem).attr(attrs);\n        }\n      }\n\n      return this;\n    }\n    /**\n     * Returns the value of the specified attribute of `node`.\n     *\n     * If the node does not set a value for attribute, start recursing up\n     * the DOM tree from node to lookup for attribute at the ancestors of\n     * node. If the recursion reaches CellView's root node and attribute\n     * is not found even there, return `null`.\n     */\n\n  }, {\n    key: \"findAttr\",\n    value: function findAttr(attrName) {\n      var elem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n      var current = elem;\n\n      while (current && current.nodeType === 1) {\n        var value = current.getAttribute(attrName);\n\n        if (value != null) {\n          return value;\n        }\n\n        if (current === this.container) {\n          return null;\n        }\n\n        current = current.parentNode;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"find\",\n    value: function find(selector) {\n      var rootElem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n      var selectors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.selectors;\n      return View.find(selector, rootElem, selectors).elems;\n    }\n  }, {\n    key: \"findOne\",\n    value: function findOne(selector) {\n      var rootElem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n      var selectors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.selectors;\n      var nodes = this.find(selector, rootElem, selectors);\n      return nodes.length > 0 ? nodes[0] : null;\n    }\n  }, {\n    key: \"findByAttr\",\n    value: function findByAttr(attrName) {\n      var elem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n      var node = elem;\n\n      while (node && node.getAttribute) {\n        var val = node.getAttribute(attrName);\n\n        if ((val != null || node === this.container) && val !== 'false') {\n          return node;\n        }\n\n        node = node.parentNode;\n      } // If the overall cell has set `magnet === false`, then returns\n      // `null` to announce there is no magnet found for this cell.\n      // This is especially useful to set on cells that have 'ports'.\n      // In this case, only the ports have set `magnet === true` and the\n      // overall element has `magnet === false`.\n\n\n      return null;\n    }\n  }, {\n    key: \"getSelector\",\n    value: function getSelector(elem, prevSelector) {\n      var selector;\n\n      if (elem === this.container) {\n        if (typeof prevSelector === 'string') {\n          selector = \"> \".concat(prevSelector);\n        }\n\n        return selector;\n      }\n\n      if (elem) {\n        var nth = Dom.index(elem) + 1;\n        selector = \"\".concat(elem.tagName.toLowerCase(), \":nth-child(\").concat(nth, \")\");\n\n        if (prevSelector) {\n          selector += \" > \".concat(prevSelector);\n        }\n\n        selector = this.getSelector(elem.parentNode, selector);\n      }\n\n      return selector;\n    }\n  }, {\n    key: \"prefixClassName\",\n    value: function prefixClassName(className) {\n      return Util.prefix(className);\n    }\n  }, {\n    key: \"delegateEvents\",\n    value: function delegateEvents(events, append) {\n      var _this2 = this;\n\n      if (events == null) {\n        return this;\n      }\n\n      if (!append) {\n        this.undelegateEvents();\n      }\n\n      var splitter = /^(\\S+)\\s*(.*)$/;\n      Object.keys(events).forEach(function (key) {\n        var match = key.match(splitter);\n\n        if (match == null) {\n          return;\n        }\n\n        var method = _this2.getEventHandler(events[key]);\n\n        if (typeof method === 'function') {\n          _this2.delegateEvent(match[1], match[2], method);\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"undelegateEvents\",\n    value: function undelegateEvents() {\n      this.$(this.container).off(this.getEventNamespace());\n      return this;\n    }\n  }, {\n    key: \"delegateDocumentEvents\",\n    value: function delegateDocumentEvents(events, data) {\n      this.addEventListeners(document, events, data);\n      return this;\n    }\n  }, {\n    key: \"undelegateDocumentEvents\",\n    value: function undelegateDocumentEvents() {\n      this.removeEventListeners(document);\n      return this;\n    }\n  }, {\n    key: \"delegateEvent\",\n    value: function delegateEvent(eventName, selector, listener) {\n      this.$(this.container).on(eventName + this.getEventNamespace(), selector, listener);\n      return this;\n    }\n  }, {\n    key: \"undelegateEvent\",\n    value: function undelegateEvent(eventName, selector, listener) {\n      var name = eventName + this.getEventNamespace();\n\n      if (selector == null) {\n        this.$(this.container).off(name);\n      } else if (typeof selector === 'string') {\n        this.$(this.container).off(name, selector, listener);\n      } else {\n        this.$(this.container).off(name, selector);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"addEventListeners\",\n    value: function addEventListeners(elem, events, data) {\n      var _this3 = this;\n\n      if (events == null) {\n        return this;\n      }\n\n      var ns = this.getEventNamespace();\n      var $elem = this.$(elem);\n      Object.keys(events).forEach(function (eventName) {\n        var method = _this3.getEventHandler(events[eventName]);\n\n        if (typeof method === 'function') {\n          $elem.on(eventName + ns, data, method);\n        }\n      });\n      return this;\n    }\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners(elem) {\n      if (elem != null) {\n        this.$(elem).off(this.getEventNamespace());\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getEventNamespace\",\n    value: function getEventNamespace() {\n      return \".\".concat(Config.prefixCls, \"-event-\").concat(this.cid);\n    } // eslint-disable-next-line\n\n  }, {\n    key: \"getEventHandler\",\n    value: function getEventHandler(handler) {\n      var _this4 = this;\n\n      // eslint-disable-next-line\n      var method;\n\n      if (typeof handler === 'string') {\n        var fn = this[handler];\n\n        if (typeof fn === 'function') {\n          method = function method() {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            return fn.call.apply(fn, [_this4].concat(args));\n          };\n        }\n      } else {\n        method = function method() {\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return handler.call.apply(handler, [_this4].concat(args));\n        };\n      }\n\n      return method;\n    }\n  }, {\n    key: \"getEventTarget\",\n    value: function getEventTarget(e) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // Touchmove/Touchend event's target is not reflecting the element\n      // under the coordinates as mousemove does.\n      // It holds the element when a touchstart triggered.\n      var target = e.target,\n          type = e.type,\n          _e$clientX = e.clientX,\n          clientX = _e$clientX === void 0 ? 0 : _e$clientX,\n          _e$clientY = e.clientY,\n          clientY = _e$clientY === void 0 ? 0 : _e$clientY;\n\n      if (options.fromPoint || type === 'touchmove' || type === 'touchend') {\n        return document.elementFromPoint(clientX, clientY);\n      }\n\n      return target;\n    }\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation(e) {\n      this.setEventData(e, {\n        propagationStopped: true\n      });\n      return this;\n    }\n  }, {\n    key: \"isPropagationStopped\",\n    value: function isPropagationStopped(e) {\n      return this.getEventData(e).propagationStopped === true;\n    }\n  }, {\n    key: \"getEventData\",\n    value: function getEventData(e) {\n      return this.eventData(e);\n    }\n  }, {\n    key: \"setEventData\",\n    value: function setEventData(e, data) {\n      return this.eventData(e, data);\n    }\n  }, {\n    key: \"eventData\",\n    value: function eventData(e, data) {\n      if (e == null) {\n        throw new TypeError('Event object required');\n      }\n\n      var currentData = e.data;\n      var key = \"__\".concat(this.cid, \"__\"); // get\n\n      if (data == null) {\n        if (currentData == null) {\n          return {};\n        }\n\n        return currentData[key] || {};\n      } // set\n\n\n      if (currentData == null) {\n        currentData = e.data = {};\n      }\n\n      if (currentData[key] == null) {\n        currentData[key] = Object.assign({}, data);\n      } else {\n        currentData[key] = Object.assign(Object.assign({}, currentData[key]), data);\n      }\n\n      return currentData[key];\n    }\n  }, {\n    key: \"normalizeEvent\",\n    value: function normalizeEvent(evt) {\n      return View.normalizeEvent(evt);\n    }\n  }]);\n\n  return View;\n}(Basecoat);\n\n(function (View) {\n  function $(elem) {\n    return JQuery(elem);\n  }\n\n  View.$ = $;\n\n  function createElement(tagName, isSvgElement) {\n    return isSvgElement ? Dom.createSvgElement(tagName || 'g') : Dom.createElementNS(tagName || 'div');\n  }\n\n  View.createElement = createElement;\n\n  function find(selector, rootElem, selectors) {\n    if (!selector || selector === '.') {\n      return {\n        elems: [rootElem]\n      };\n    }\n\n    if (selectors) {\n      var nodes = selectors[selector];\n\n      if (nodes) {\n        return {\n          elems: Array.isArray(nodes) ? nodes : [nodes]\n        };\n      }\n    }\n\n    if (Config.useCSSSelector) {\n      return {\n        isCSSSelector: true,\n        // elems: Array.prototype.slice.call(rootElem.querySelectorAll(selector)),\n        elems: $(rootElem).find(selector).toArray()\n      };\n    }\n\n    return {\n      elems: []\n    };\n  }\n\n  View.find = find;\n\n  function normalizeEvent(evt) {\n    var normalizedEvent = evt;\n    var originalEvent = evt.originalEvent;\n    var touchEvt = originalEvent && originalEvent.changedTouches && originalEvent.changedTouches[0];\n\n    if (touchEvt) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (var key in evt) {\n        // copy all the properties from the input event that are not\n        // defined on the touch event (functions included).\n        if (touchEvt[key] === undefined) {\n          touchEvt[key] = evt[key];\n        }\n      }\n\n      normalizedEvent = touchEvt;\n    } // IE: evt.target could be set to SVGElementInstance for SVGUseElement\n\n\n    var target = normalizedEvent.target;\n\n    if (target) {\n      var useElement = target.correspondingUseElement;\n\n      if (useElement) {\n        normalizedEvent.target = useElement;\n      }\n    }\n\n    return normalizedEvent;\n  }\n\n  View.normalizeEvent = normalizeEvent;\n})(View || (View = {}));\n\n(function (View) {\n  View.views = {};\n\n  function getView(cid) {\n    return View.views[cid] || null;\n  }\n\n  View.getView = getView;\n})(View || (View = {}));\n\nvar Private;\n\n(function (Private) {\n  var counter = 0;\n\n  function uniqueId() {\n    var id = \"v\".concat(counter);\n    counter += 1;\n    return id;\n  }\n\n  Private.uniqueId = uniqueId;\n})(Private || (Private = {}));","map":{"version":3,"sources":["../../src/view/view.ts"],"names":[],"mappings":";;;;;AAAA,OAAO,MAAP,MAAmB,QAAnB;AACA,SAAS,GAAT,QAAoB,SAApB;AAGA,SAAS,QAAT,QAAyB,WAAzB;AACA,SAAS,IAAT,EAAe,MAAf,QAA6B,WAA7B;AAGA,WAAsB,IAAtB;AAAA;;AAAA;;AASE,kBAAA;AAAA;;AAAA;;AACE;AACA,UAAK,GAAL,GAAW,OAAO,CAAC,QAAR,EAAX;AACA,IAAA,IAAI,CAAC,KAAL,CAAW,MAAK,GAAhB;AAHF;AAIC;;AAbH;AAAA;AAAA,SAKE,eAAmB;AACjB,aAAO,CAAP;AACD,KAPH,CAeE;;AAfF;AAAA;AAAA,WAgBE,uBAAc,IAAd,EAA4B,OAA5B,EAAwC;AACtC,aAAO,CAAP;AACD;AAlBH;AAAA;AAAA,WAoBE,WAAE,IAAF,EAAW;AACT,aAAO,IAAI,CAAC,CAAL,CAAO,IAAP,CAAP;AACD;AAtBH;AAAA;AAAA,WAwBE,iBAAoC;AAAA,UAA9B,IAA8B,uEAAd,KAAK,SAAS;AAClC,WAAK,CAAL,CAAO,IAAP,EAAa,KAAb;AACA,aAAO,IAAP;AACD;AA3BH;AAAA;AAAA,WA6BE,mBAAsC;AAAA,UAA9B,IAA8B,uEAAd,KAAK,SAAS;AACpC,WAAK,CAAL,CAAO,IAAP,EAAa,MAAb;AACA,aAAO,IAAP;AACD;AAhCH;AAAA;AAAA,WAkCE,kBAAqC;AAAA,UAA9B,IAA8B,uEAAd,KAAK,SAAS;;AACnC,UAAI,IAAI,KAAK,KAAK,SAAlB,EAA6B;AAC3B,aAAK,oBAAL,CAA0B,QAA1B;AACA,aAAK,QAAL;AACA,eAAO,IAAI,CAAC,KAAL,CAAW,KAAK,GAAhB,CAAP;AACD;;AACD,WAAK,OAAL,CAAa,IAAb;AACA,aAAO,IAAP;AACD;AA1CH;AAAA;AAAA,WA4CY,oBAAQ,CAAK;AA5CzB;AAAA;AAAA,WA8CE,kBAAS,SAAT,EAAqE;AAAA,UAA9B,IAA8B,uEAAd,KAAK,SAAS;AACnE,MAAA,IAAI,CAAC,SAAL,CAAe,KAAf,GAAuB,KAAK,CAAC,OAAN,CAAc,SAAd,IACnB,SAAS,CAAC,IAAV,CAAe,GAAf,CADmB,GAEnB,SAFJ;AAGD;AAlDH;AAAA;AAAA,WAoDE,kBAAS,SAAT,EAAqE;AAAA,UAA9B,IAA8B,uEAAd,KAAK,SAAS;AACnE,WAAK,CAAL,CAAO,IAAP,EAAa,QAAb,CACE,KAAK,CAAC,OAAN,CAAc,SAAd,IAA2B,SAAS,CAAC,IAAV,CAAe,GAAf,CAA3B,GAAiD,SADnD;AAGA,aAAO,IAAP;AACD;AAzDH;AAAA;AAAA,WA2DE,qBAAY,SAAZ,EAAwE;AAAA,UAA9B,IAA8B,uEAAd,KAAK,SAAS;AACtE,WAAK,CAAL,CAAO,IAAP,EAAa,WAAb,CACE,KAAK,CAAC,OAAN,CAAc,SAAd,IAA2B,SAAS,CAAC,IAAV,CAAe,GAAf,CAA3B,GAAiD,SADnD;AAGA,aAAO,IAAP;AACD;AAhEH;AAAA;AAAA,WAkEE,kBACE,KADF,EAEgC;AAAA,UAA9B,IAA8B,uEAAd,KAAK,SAAS;AAE9B,WAAK,CAAL,CAAO,IAAP,EAAa,GAAb,CAAiB,KAAjB;AACA,aAAO,IAAP;AACD;AAxEH;AAAA;AAAA,WA0EE,kBAAS,KAAT,EAAwE;AAAA,UAA9B,IAA8B,uEAAd,KAAK,SAAS;;AACtE,UAAI,KAAK,IAAI,IAAT,IAAiB,IAAI,IAAI,IAA7B,EAAmC;AACjC,YAAI,IAAI,YAAY,UAApB,EAAgC;AAC9B,UAAA,GAAG,CAAC,IAAJ,CAAS,IAAT,EAAe,KAAf;AACD,SAFD,MAEO;AACL,eAAK,CAAL,CAAO,IAAP,EAAa,IAAb,CAAkB,KAAlB;AACD;AACF;;AACD,aAAO,IAAP;AACD;AAED;;;;;;;AAOG;;AA5FL;AAAA;AAAA,WA6FE,kBAAS,QAAT,EAAyD;AAAA,UAA9B,IAA8B,uEAAd,KAAK,SAAS;AACvD,UAAI,OAAO,GAAG,IAAd;;AACA,aAAO,OAAO,IAAI,OAAO,CAAC,QAAR,KAAqB,CAAvC,EAA0C;AACxC,YAAM,KAAK,GAAG,OAAO,CAAC,YAAR,CAAqB,QAArB,CAAd;;AACA,YAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,iBAAO,KAAP;AACD;;AAED,YAAI,OAAO,KAAK,KAAK,SAArB,EAAgC;AAC9B,iBAAO,IAAP;AACD;;AAED,QAAA,OAAO,GAAG,OAAO,CAAC,UAAlB;AACD;;AAED,aAAO,IAAP;AACD;AA7GH;AAAA;AAAA,WA+GE,cACE,QADF,EAG8C;AAAA,UAD5C,QAC4C,uEADxB,KAAK,SACmB;AAAA,UAA5C,SAA4C,uEAAd,KAAK,SAAS;AAE5C,aAAO,IAAI,CAAC,IAAL,CAAU,QAAV,EAAoB,QAApB,EAA8B,SAA9B,EAAyC,KAAhD;AACD;AArHH;AAAA;AAAA,WAuHE,iBACE,QADF,EAG8C;AAAA,UAD5C,QAC4C,uEADxB,KAAK,SACmB;AAAA,UAA5C,SAA4C,uEAAd,KAAK,SAAS;AAE5C,UAAM,KAAK,GAAG,KAAK,IAAL,CAAU,QAAV,EAAoB,QAApB,EAA8B,SAA9B,CAAd;AACA,aAAO,KAAK,CAAC,MAAN,GAAe,CAAf,GAAmB,KAAK,CAAC,CAAD,CAAxB,GAA8B,IAArC;AACD;AA9HH;AAAA;AAAA,WAgIE,oBAAW,QAAX,EAA2D;AAAA,UAA9B,IAA8B,uEAAd,KAAK,SAAS;AACzD,UAAI,IAAI,GAAG,IAAX;;AACA,aAAO,IAAI,IAAI,IAAI,CAAC,YAApB,EAAkC;AAChC,YAAM,GAAG,GAAG,IAAI,CAAC,YAAL,CAAkB,QAAlB,CAAZ;;AACA,YAAI,CAAC,GAAG,IAAI,IAAP,IAAe,IAAI,KAAK,KAAK,SAA9B,KAA4C,GAAG,KAAK,OAAxD,EAAiE;AAC/D,iBAAO,IAAP;AACD;;AACD,QAAA,IAAI,GAAG,IAAI,CAAC,UAAZ;AACD,OARwD,CAUzD;AACA;AACA;AACA;AACA;;;AACA,aAAO,IAAP;AACD;AAhJH;AAAA;AAAA,WAkJE,qBAAY,IAAZ,EAA2B,YAA3B,EAAgD;AAC9C,UAAI,QAAJ;;AAEA,UAAI,IAAI,KAAK,KAAK,SAAlB,EAA6B;AAC3B,YAAI,OAAO,YAAP,KAAwB,QAA5B,EAAsC;AACpC,UAAA,QAAQ,eAAQ,YAAR,CAAR;AACD;;AACD,eAAO,QAAP;AACD;;AAED,UAAI,IAAJ,EAAU;AACR,YAAM,GAAG,GAAG,GAAG,CAAC,KAAJ,CAAU,IAAV,IAAkB,CAA9B;AACA,QAAA,QAAQ,aAAM,IAAI,CAAC,OAAL,CAAa,WAAb,EAAN,wBAA8C,GAA9C,MAAR;;AACA,YAAI,YAAJ,EAAkB;AAChB,UAAA,QAAQ,iBAAU,YAAV,CAAR;AACD;;AAED,QAAA,QAAQ,GAAG,KAAK,WAAL,CAAiB,IAAI,CAAC,UAAtB,EAA6C,QAA7C,CAAX;AACD;;AAED,aAAO,QAAP;AACD;AAvKH;AAAA;AAAA,WAyKE,yBAAgB,SAAhB,EAAiC;AAC/B,aAAO,IAAI,CAAC,MAAL,CAAY,SAAZ,CAAP;AACD;AA3KH;AAAA;AAAA,WA6KE,wBAAe,MAAf,EAAoC,MAApC,EAAoD;AAAA;;AAClD,UAAI,MAAM,IAAI,IAAd,EAAoB;AAClB,eAAO,IAAP;AACD;;AAED,UAAI,CAAC,MAAL,EAAa;AACX,aAAK,gBAAL;AACD;;AAED,UAAM,QAAQ,GAAG,gBAAjB;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAC,GAAD,EAAQ;AAClC,YAAM,KAAK,GAAG,GAAG,CAAC,KAAJ,CAAU,QAAV,CAAd;;AACA,YAAI,KAAK,IAAI,IAAb,EAAmB;AACjB;AACD;;AAED,YAAM,MAAM,GAAG,MAAI,CAAC,eAAL,CAAqB,MAAM,CAAC,GAAD,CAA3B,CAAf;;AACA,YAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AAChC,UAAA,MAAI,CAAC,aAAL,CAAmB,KAAK,CAAC,CAAD,CAAxB,EAA6B,KAAK,CAAC,CAAD,CAAlC,EAAuC,MAAvC;AACD;AACF,OAVD;AAYA,aAAO,IAAP;AACD;AApMH;AAAA;AAAA,WAsME,4BAAgB;AACd,WAAK,CAAL,CAAO,KAAK,SAAZ,EAAuB,GAAvB,CAA2B,KAAK,iBAAL,EAA3B;AACA,aAAO,IAAP;AACD;AAzMH;AAAA;AAAA,WA2ME,gCAAuB,MAAvB,EAA4C,IAA5C,EAA2D;AACzD,WAAK,iBAAL,CAAuB,QAAvB,EAAiC,MAAjC,EAAyC,IAAzC;AACA,aAAO,IAAP;AACD;AA9MH;AAAA;AAAA,WAgNE,oCAAwB;AACtB,WAAK,oBAAL,CAA0B,QAA1B;AACA,aAAO,IAAP;AACD;AAnNH;AAAA;AAAA,WAqNY,uBACR,SADQ,EAER,QAFQ,EAGR,QAHQ,EAGK;AAEb,WAAK,CAAL,CAAO,KAAK,SAAZ,EAAuB,EAAvB,CACE,SAAS,GAAG,KAAK,iBAAL,EADd,EAEE,QAFF,EAGE,QAHF;AAKA,aAAO,IAAP;AACD;AAhOH;AAAA;AAAA,WAyOY,yBACR,SADQ,EAER,QAFQ,EAGR,QAHQ,EAGM;AAEd,UAAM,IAAI,GAAG,SAAS,GAAG,KAAK,iBAAL,EAAzB;;AACA,UAAI,QAAQ,IAAI,IAAhB,EAAsB;AACpB,aAAK,CAAL,CAAO,KAAK,SAAZ,EAAuB,GAAvB,CAA2B,IAA3B;AACD,OAFD,MAEO,IAAI,OAAO,QAAP,KAAoB,QAAxB,EAAkC;AACvC,aAAK,CAAL,CAAO,KAAK,SAAZ,EAAuB,GAAvB,CAA2B,IAA3B,EAAiC,QAAjC,EAA2C,QAA3C;AACD,OAFM,MAEA;AACL,aAAK,CAAL,CAAO,KAAK,SAAZ,EAAuB,GAAvB,CAA2B,IAA3B,EAAiC,QAAjC;AACD;;AACD,aAAO,IAAP;AACD;AAvPH;AAAA;AAAA,WAyPY,2BACR,IADQ,EAER,MAFQ,EAGR,IAHQ,EAGO;AAAA;;AAEf,UAAI,MAAM,IAAI,IAAd,EAAoB;AAClB,eAAO,IAAP;AACD;;AAED,UAAM,EAAE,GAAG,KAAK,iBAAL,EAAX;AACA,UAAM,KAAK,GAAG,KAAK,CAAL,CAAO,IAAP,CAAd;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAC,SAAD,EAAc;AACxC,YAAM,MAAM,GAAG,MAAI,CAAC,eAAL,CAAqB,MAAM,CAAC,SAAD,CAA3B,CAAf;;AACA,YAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AAChC,UAAA,KAAK,CAAC,EAAN,CAAS,SAAS,GAAG,EAArB,EAAyB,IAAzB,EAA+B,MAA/B;AACD;AACF,OALD;AAOA,aAAO,IAAP;AACD;AA5QH;AAAA;AAAA,WA8QY,8BAAqB,IAArB,EAAsD;AAC9D,UAAI,IAAI,IAAI,IAAZ,EAAkB;AAChB,aAAK,CAAL,CAAO,IAAP,EAAa,GAAb,CAAiB,KAAK,iBAAL,EAAjB;AACD;;AACD,aAAO,IAAP;AACD;AAnRH;AAAA;AAAA,WAqRY,6BAAiB;AACzB,wBAAW,MAAM,CAAC,SAAlB,oBAAqC,KAAK,GAA1C;AACD,KAvRH,CAyRE;;AAzRF;AAAA;AAAA,WA0RY,yBAAgB,OAAhB,EAA0C;AAAA;;AAClD;AACA,UAAI,MAAJ;;AACA,UAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,YAAM,EAAE,GAAI,KAAa,OAAb,CAAZ;;AACA,YAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC5B,UAAA,MAAM,GAAG;AAAA,8CAAI,IAAJ;AAAI,cAAA,IAAJ;AAAA;;AAAA,mBAAkB,EAAE,CAAC,IAAH,OAAA,EAAE,GAAM,MAAN,SAAe,IAAf,EAApB;AAAA,WAAT;AACD;AACF,OALD,MAKO;AACL,QAAA,MAAM,GAAG;AAAA,6CAAI,IAAJ;AAAI,YAAA,IAAJ;AAAA;;AAAA,iBAAkB,OAAO,CAAC,IAAR,OAAA,OAAO,GAAM,MAAN,SAAe,IAAf,EAAzB;AAAA,SAAT;AACD;;AAED,aAAO,MAAP;AACD;AAvSH;AAAA;AAAA,WAySE,wBACE,CADF,EAEuC;AAAA,UAArC,OAAqC,uEAAF,EAAE;AAErC;AACA;AACA;AACA,UAAQ,MAAR,GAAmD,CAAnD,CAAQ,MAAR;AAAA,UAAgB,IAAhB,GAAmD,CAAnD,CAAgB,IAAhB;AAAA,uBAAmD,CAAnD,CAAsB,OAAtB;AAAA,UAAsB,OAAtB,2BAAgC,CAAhC;AAAA,uBAAmD,CAAnD,CAAmC,OAAnC;AAAA,UAAmC,OAAnC,2BAA6C,CAA7C;;AACA,UAAI,OAAO,CAAC,SAAR,IAAqB,IAAI,KAAK,WAA9B,IAA6C,IAAI,KAAK,UAA1D,EAAsE;AACpE,eAAO,QAAQ,CAAC,gBAAT,CAA0B,OAA1B,EAAmC,OAAnC,CAAP;AACD;;AAED,aAAO,MAAP;AACD;AAtTH;AAAA;AAAA,WAwTE,yBAAgB,CAAhB,EAAwC;AACtC,WAAK,YAAL,CAAkB,CAAlB,EAAqB;AAAE,QAAA,kBAAkB,EAAE;AAAtB,OAArB;AACA,aAAO,IAAP;AACD;AA3TH;AAAA;AAAA,WA6TE,8BAAqB,CAArB,EAA6C;AAC3C,aAAO,KAAK,YAAL,CAAkB,CAAlB,EAAqB,kBAArB,KAA4C,IAAnD;AACD;AA/TH;AAAA;AAAA,WAiUE,sBAAiC,CAAjC,EAAyD;AACvD,aAAO,KAAK,SAAL,CAAkB,CAAlB,CAAP;AACD;AAnUH;AAAA;AAAA,WAqUE,sBAAiC,CAAjC,EAA2D,IAA3D,EAAkE;AAChE,aAAO,KAAK,SAAL,CAAe,CAAf,EAAkB,IAAlB,CAAP;AACD;AAvUH;AAAA;AAAA,WAyUY,mBACR,CADQ,EAER,IAFQ,EAEA;AAER,UAAI,CAAC,IAAI,IAAT,EAAe;AACb,cAAM,IAAI,SAAJ,CAAc,uBAAd,CAAN;AACD;;AAED,UAAI,WAAW,GAAG,CAAC,CAAC,IAApB;AACA,UAAM,GAAG,eAAQ,KAAK,GAAb,OAAT,CAPQ,CASR;;AACA,UAAI,IAAI,IAAI,IAAZ,EAAkB;AAChB,YAAI,WAAW,IAAI,IAAnB,EAAyB;AACvB,iBAAO,EAAP;AACD;;AACD,eAAO,WAAW,CAAC,GAAD,CAAX,IAAoB,EAA3B;AACD,OAfO,CAiBR;;;AACA,UAAI,WAAW,IAAI,IAAnB,EAAyB;AACvB,QAAA,WAAW,GAAG,CAAC,CAAC,IAAF,GAAS,EAAvB;AACD;;AAED,UAAI,WAAW,CAAC,GAAD,CAAX,IAAoB,IAAxB,EAA8B;AAC5B,QAAA,WAAW,CAAC,GAAD,CAAX,GAAgB,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,IAAR,CAAhB;AACD,OAFD,MAEO;AACL,QAAA,WAAW,CAAC,GAAD,CAAX,GAAgB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,WAAW,CAAC,GAAD,CAAnB,CAAA,EAA6B,IAA7B,CAAhB;AACD;;AAED,aAAO,WAAW,CAAC,GAAD,CAAlB;AACD;AAxWH;AAAA;AAAA,WA0WE,wBAAgD,GAAhD,EAAsD;AACpD,aAAO,IAAI,CAAC,cAAL,CAAoB,GAApB,CAAP;AACD;AA5WH;;AAAA;AAAA,EAAoD,QAApD;;AAmXA,CAAA,UAAiB,IAAjB,EAAqB;AACnB,WAAgB,CAAhB,CAAkB,IAAlB,EAA2B;AACzB,WAAO,MAAM,CAAC,IAAD,CAAb;AACD;;AAFe,EAAA,IAAA,CAAA,CAAA,GAAC,CAAD;;AAIhB,WAAgB,aAAhB,CAA8B,OAA9B,EAAgD,YAAhD,EAAsE;AACpE,WAAO,YAAY,GACf,GAAG,CAAC,gBAAJ,CAAqB,OAAO,IAAI,GAAhC,CADe,GAEd,GAAG,CAAC,eAAJ,CAAoB,OAAO,IAAI,KAA/B,CAFL;AAGD;;AAJe,EAAA,IAAA,CAAA,aAAA,GAAa,aAAb;;AAMhB,WAAgB,IAAhB,CACE,QADF,EAEE,QAFF,EAGE,SAHF,EAG6B;AAE3B,QAAI,CAAC,QAAD,IAAa,QAAQ,KAAK,GAA9B,EAAmC;AACjC,aAAO;AAAE,QAAA,KAAK,EAAE,CAAC,QAAD;AAAT,OAAP;AACD;;AAED,QAAI,SAAJ,EAAe;AACb,UAAM,KAAK,GAAG,SAAS,CAAC,QAAD,CAAvB;;AACA,UAAI,KAAJ,EAAW;AACT,eAAO;AAAE,UAAA,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc,KAAd,IAAuB,KAAvB,GAA+B,CAAC,KAAD;AAAxC,SAAP;AACD;AACF;;AAED,QAAI,MAAM,CAAC,cAAX,EAA2B;AACzB,aAAO;AACL,QAAA,aAAa,EAAE,IADV;AAEL;AACA,QAAA,KAAK,EAAE,CAAC,CAAC,QAAD,CAAD,CAAY,IAAZ,CAAiB,QAAjB,EAA2B,OAA3B;AAHF,OAAP;AAKD;;AAED,WAAO;AAAE,MAAA,KAAK,EAAE;AAAT,KAAP;AACD;;AAzBe,EAAA,IAAA,CAAA,IAAA,GAAI,IAAJ;;AA2BhB,WAAgB,cAAhB,CAAgE,GAAhE,EAAsE;AACpE,QAAI,eAAe,GAAG,GAAtB;AACA,QAAM,aAAa,GAAG,GAAG,CAAC,aAA1B;AACA,QAAM,QAAQ,GACZ,aAAa,IACb,aAAa,CAAC,cADd,IAEA,aAAa,CAAC,cAAd,CAA6B,CAA7B,CAHF;;AAKA,QAAI,QAAJ,EAAc;AACZ;AACA,WAAK,IAAM,GAAX,IAAkB,GAAlB,EAAuB;AACrB;AACA;AACA,YAAI,QAAQ,CAAC,GAAD,CAAR,KAAkB,SAAtB,EAAiC;AAC/B,UAAA,QAAQ,CAAC,GAAD,CAAR,GAAiB,GAAW,CAAC,GAAD,CAA5B;AACD;AACF;;AACD,MAAA,eAAe,GAAG,QAAlB;AACD,KAlBmE,CAoBpE;;;AACA,QAAM,MAAM,GAAG,eAAe,CAAC,MAA/B;;AACA,QAAI,MAAJ,EAAY;AACV,UAAM,UAAU,GAAG,MAAM,CAAC,uBAA1B;;AACA,UAAI,UAAJ,EAAgB;AACd,QAAA,eAAe,CAAC,MAAhB,GAAyB,UAAzB;AACD;AACF;;AAED,WAAO,eAAP;AACD;;AA9Be,EAAA,IAAA,CAAA,cAAA,GAAc,cAAd;AA+BjB,CArED,EAAiB,IAAI,KAAJ,IAAI,GAAA,EAAA,CAArB;;AAuEA,CAAA,UAAiB,IAAjB,EAAqB;AACN,EAAA,IAAA,CAAA,KAAA,GAAiC,EAAjC;;AAEb,WAAgB,OAAhB,CAAwB,GAAxB,EAAmC;AACjC,WAAO,IAAA,CAAA,KAAA,CAAM,GAAN,KAAc,IAArB;AACD;;AAFe,EAAA,IAAA,CAAA,OAAA,GAAO,OAAP;AAGjB,CAND,EAAiB,IAAI,KAAJ,IAAI,GAAA,EAAA,CAArB;;AAQA,IAAU,OAAV;;AAAA,CAAA,UAAU,OAAV,EAAiB;AACf,MAAI,OAAO,GAAG,CAAd;;AACA,WAAgB,QAAhB,GAAwB;AACtB,QAAM,EAAE,cAAO,OAAP,CAAR;AACA,IAAA,OAAO,IAAI,CAAX;AACA,WAAO,EAAP;AACD;;AAJe,EAAA,OAAA,CAAA,QAAA,GAAQ,QAAR;AAKjB,CAPD,EAAU,OAAO,KAAP,OAAO,GAAA,EAAA,CAAjB","sourceRoot":"","sourcesContent":["import JQuery from 'jquery';\nimport { Dom } from '../util';\nimport { Basecoat } from '../common';\nimport { Util, Config } from '../global';\nexport class View extends Basecoat {\n    constructor() {\n        super();\n        this.cid = Private.uniqueId();\n        View.views[this.cid] = this;\n    }\n    get priority() {\n        return 2;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    confirmUpdate(flag, options) {\n        return 0;\n    }\n    $(elem) {\n        return View.$(elem);\n    }\n    empty(elem = this.container) {\n        this.$(elem).empty();\n        return this;\n    }\n    unmount(elem = this.container) {\n        this.$(elem).remove();\n        return this;\n    }\n    remove(elem = this.container) {\n        if (elem === this.container) {\n            this.removeEventListeners(document);\n            this.onRemove();\n            delete View.views[this.cid];\n        }\n        this.unmount(elem);\n        return this;\n    }\n    onRemove() { }\n    setClass(className, elem = this.container) {\n        elem.classList.value = Array.isArray(className)\n            ? className.join(' ')\n            : className;\n    }\n    addClass(className, elem = this.container) {\n        this.$(elem).addClass(Array.isArray(className) ? className.join(' ') : className);\n        return this;\n    }\n    removeClass(className, elem = this.container) {\n        this.$(elem).removeClass(Array.isArray(className) ? className.join(' ') : className);\n        return this;\n    }\n    setStyle(style, elem = this.container) {\n        this.$(elem).css(style);\n        return this;\n    }\n    setAttrs(attrs, elem = this.container) {\n        if (attrs != null && elem != null) {\n            if (elem instanceof SVGElement) {\n                Dom.attr(elem, attrs);\n            }\n            else {\n                this.$(elem).attr(attrs);\n            }\n        }\n        return this;\n    }\n    /**\n     * Returns the value of the specified attribute of `node`.\n     *\n     * If the node does not set a value for attribute, start recursing up\n     * the DOM tree from node to lookup for attribute at the ancestors of\n     * node. If the recursion reaches CellView's root node and attribute\n     * is not found even there, return `null`.\n     */\n    findAttr(attrName, elem = this.container) {\n        let current = elem;\n        while (current && current.nodeType === 1) {\n            const value = current.getAttribute(attrName);\n            if (value != null) {\n                return value;\n            }\n            if (current === this.container) {\n                return null;\n            }\n            current = current.parentNode;\n        }\n        return null;\n    }\n    find(selector, rootElem = this.container, selectors = this.selectors) {\n        return View.find(selector, rootElem, selectors).elems;\n    }\n    findOne(selector, rootElem = this.container, selectors = this.selectors) {\n        const nodes = this.find(selector, rootElem, selectors);\n        return nodes.length > 0 ? nodes[0] : null;\n    }\n    findByAttr(attrName, elem = this.container) {\n        let node = elem;\n        while (node && node.getAttribute) {\n            const val = node.getAttribute(attrName);\n            if ((val != null || node === this.container) && val !== 'false') {\n                return node;\n            }\n            node = node.parentNode;\n        }\n        // If the overall cell has set `magnet === false`, then returns\n        // `null` to announce there is no magnet found for this cell.\n        // This is especially useful to set on cells that have 'ports'.\n        // In this case, only the ports have set `magnet === true` and the\n        // overall element has `magnet === false`.\n        return null;\n    }\n    getSelector(elem, prevSelector) {\n        let selector;\n        if (elem === this.container) {\n            if (typeof prevSelector === 'string') {\n                selector = `> ${prevSelector}`;\n            }\n            return selector;\n        }\n        if (elem) {\n            const nth = Dom.index(elem) + 1;\n            selector = `${elem.tagName.toLowerCase()}:nth-child(${nth})`;\n            if (prevSelector) {\n                selector += ` > ${prevSelector}`;\n            }\n            selector = this.getSelector(elem.parentNode, selector);\n        }\n        return selector;\n    }\n    prefixClassName(className) {\n        return Util.prefix(className);\n    }\n    delegateEvents(events, append) {\n        if (events == null) {\n            return this;\n        }\n        if (!append) {\n            this.undelegateEvents();\n        }\n        const splitter = /^(\\S+)\\s*(.*)$/;\n        Object.keys(events).forEach((key) => {\n            const match = key.match(splitter);\n            if (match == null) {\n                return;\n            }\n            const method = this.getEventHandler(events[key]);\n            if (typeof method === 'function') {\n                this.delegateEvent(match[1], match[2], method);\n            }\n        });\n        return this;\n    }\n    undelegateEvents() {\n        this.$(this.container).off(this.getEventNamespace());\n        return this;\n    }\n    delegateDocumentEvents(events, data) {\n        this.addEventListeners(document, events, data);\n        return this;\n    }\n    undelegateDocumentEvents() {\n        this.removeEventListeners(document);\n        return this;\n    }\n    delegateEvent(eventName, selector, listener) {\n        this.$(this.container).on(eventName + this.getEventNamespace(), selector, listener);\n        return this;\n    }\n    undelegateEvent(eventName, selector, listener) {\n        const name = eventName + this.getEventNamespace();\n        if (selector == null) {\n            this.$(this.container).off(name);\n        }\n        else if (typeof selector === 'string') {\n            this.$(this.container).off(name, selector, listener);\n        }\n        else {\n            this.$(this.container).off(name, selector);\n        }\n        return this;\n    }\n    addEventListeners(elem, events, data) {\n        if (events == null) {\n            return this;\n        }\n        const ns = this.getEventNamespace();\n        const $elem = this.$(elem);\n        Object.keys(events).forEach((eventName) => {\n            const method = this.getEventHandler(events[eventName]);\n            if (typeof method === 'function') {\n                $elem.on(eventName + ns, data, method);\n            }\n        });\n        return this;\n    }\n    removeEventListeners(elem) {\n        if (elem != null) {\n            this.$(elem).off(this.getEventNamespace());\n        }\n        return this;\n    }\n    getEventNamespace() {\n        return `.${Config.prefixCls}-event-${this.cid}`;\n    }\n    // eslint-disable-next-line\n    getEventHandler(handler) {\n        // eslint-disable-next-line\n        let method;\n        if (typeof handler === 'string') {\n            const fn = this[handler];\n            if (typeof fn === 'function') {\n                method = (...args) => fn.call(this, ...args);\n            }\n        }\n        else {\n            method = (...args) => handler.call(this, ...args);\n        }\n        return method;\n    }\n    getEventTarget(e, options = {}) {\n        // Touchmove/Touchend event's target is not reflecting the element\n        // under the coordinates as mousemove does.\n        // It holds the element when a touchstart triggered.\n        const { target, type, clientX = 0, clientY = 0 } = e;\n        if (options.fromPoint || type === 'touchmove' || type === 'touchend') {\n            return document.elementFromPoint(clientX, clientY);\n        }\n        return target;\n    }\n    stopPropagation(e) {\n        this.setEventData(e, { propagationStopped: true });\n        return this;\n    }\n    isPropagationStopped(e) {\n        return this.getEventData(e).propagationStopped === true;\n    }\n    getEventData(e) {\n        return this.eventData(e);\n    }\n    setEventData(e, data) {\n        return this.eventData(e, data);\n    }\n    eventData(e, data) {\n        if (e == null) {\n            throw new TypeError('Event object required');\n        }\n        let currentData = e.data;\n        const key = `__${this.cid}__`;\n        // get\n        if (data == null) {\n            if (currentData == null) {\n                return {};\n            }\n            return currentData[key] || {};\n        }\n        // set\n        if (currentData == null) {\n            currentData = e.data = {};\n        }\n        if (currentData[key] == null) {\n            currentData[key] = Object.assign({}, data);\n        }\n        else {\n            currentData[key] = Object.assign(Object.assign({}, currentData[key]), data);\n        }\n        return currentData[key];\n    }\n    normalizeEvent(evt) {\n        return View.normalizeEvent(evt);\n    }\n}\n(function (View) {\n    function $(elem) {\n        return JQuery(elem);\n    }\n    View.$ = $;\n    function createElement(tagName, isSvgElement) {\n        return isSvgElement\n            ? Dom.createSvgElement(tagName || 'g')\n            : Dom.createElementNS(tagName || 'div');\n    }\n    View.createElement = createElement;\n    function find(selector, rootElem, selectors) {\n        if (!selector || selector === '.') {\n            return { elems: [rootElem] };\n        }\n        if (selectors) {\n            const nodes = selectors[selector];\n            if (nodes) {\n                return { elems: Array.isArray(nodes) ? nodes : [nodes] };\n            }\n        }\n        if (Config.useCSSSelector) {\n            return {\n                isCSSSelector: true,\n                // elems: Array.prototype.slice.call(rootElem.querySelectorAll(selector)),\n                elems: $(rootElem).find(selector).toArray(),\n            };\n        }\n        return { elems: [] };\n    }\n    View.find = find;\n    function normalizeEvent(evt) {\n        let normalizedEvent = evt;\n        const originalEvent = evt.originalEvent;\n        const touchEvt = originalEvent &&\n            originalEvent.changedTouches &&\n            originalEvent.changedTouches[0];\n        if (touchEvt) {\n            // eslint-disable-next-line no-restricted-syntax\n            for (const key in evt) {\n                // copy all the properties from the input event that are not\n                // defined on the touch event (functions included).\n                if (touchEvt[key] === undefined) {\n                    touchEvt[key] = evt[key];\n                }\n            }\n            normalizedEvent = touchEvt;\n        }\n        // IE: evt.target could be set to SVGElementInstance for SVGUseElement\n        const target = normalizedEvent.target;\n        if (target) {\n            const useElement = target.correspondingUseElement;\n            if (useElement) {\n                normalizedEvent.target = useElement;\n            }\n        }\n        return normalizedEvent;\n    }\n    View.normalizeEvent = normalizeEvent;\n})(View || (View = {}));\n(function (View) {\n    View.views = {};\n    function getView(cid) {\n        return View.views[cid] || null;\n    }\n    View.getView = getView;\n})(View || (View = {}));\nvar Private;\n(function (Private) {\n    let counter = 0;\n    function uniqueId() {\n        const id = `v${counter}`;\n        counter += 1;\n        return id;\n    }\n    Private.uniqueId = uniqueId;\n})(Private || (Private = {}));\n//# sourceMappingURL=view.js.map"]},"metadata":{},"sourceType":"module"}