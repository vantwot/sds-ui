{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Base } from './base';\nimport { SizeSensor } from '../util';\nexport class SizeManager extends Base {\n  hasScroller() {\n    return this.graph.scroller.widget != null;\n  }\n\n  getContainer() {\n    return this.hasScroller() ? this.graph.scroller.widget.container : this.graph.container;\n  }\n\n  init() {\n    const autoResize = this.options.autoResize;\n\n    if (autoResize) {\n      const target = typeof autoResize === 'boolean' ? this.getContainer() : autoResize;\n      SizeSensor.bind(target, () => {\n        const container = this.getContainer(); // container is border-box\n\n        const width = container.offsetWidth;\n        const height = container.offsetHeight;\n        this.resize(width, height);\n      });\n    }\n  }\n\n  resize(width, height) {\n    if (this.hasScroller()) {\n      this.resizeScroller(width, height);\n    } else {\n      this.resizeGraph(width, height);\n    }\n  }\n\n  resizeGraph(width, height) {\n    this.graph.transform.resize(width, height);\n  }\n\n  resizeScroller(width, height) {\n    this.graph.scroller.resize(width, height);\n  }\n\n  resizePage(width, height) {\n    const instance = this.graph.scroller.widget;\n\n    if (instance) {\n      instance.updatePageSize(width, height);\n    }\n  }\n\n  dispose() {\n    SizeSensor.clear(this.getContainer());\n  }\n\n}\n\n__decorate([Base.dispose()], SizeManager.prototype, \"dispose\", null);","map":{"version":3,"sources":["../../src/graph/size.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,IAAT,QAAqB,QAArB;AACA,SAAS,UAAT,QAA2B,SAA3B;AAEA,OAAM,MAAO,WAAP,SAA2B,IAA3B,CAA+B;AACzB,EAAA,WAAW,GAAA;AACnB,WAAO,KAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,IAA8B,IAArC;AACD;;AAES,EAAA,YAAY,GAAA;AACpB,WAAO,KAAK,WAAL,KACH,KAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,CAA4B,SADzB,GAEH,KAAK,KAAL,CAAW,SAFf;AAGD;;AAES,EAAA,IAAI,GAAA;AACZ,UAAM,UAAU,GAAG,KAAK,OAAL,CAAa,UAAhC;;AACA,QAAI,UAAJ,EAAgB;AACd,YAAM,MAAM,GACV,OAAO,UAAP,KAAsB,SAAtB,GACI,KAAK,YAAL,EADJ,GAEK,UAHP;AAKA,MAAA,UAAU,CAAC,IAAX,CAAgB,MAAhB,EAAwB,MAAK;AAC3B,cAAM,SAAS,GAAG,KAAK,YAAL,EAAlB,CAD2B,CAE3B;;AACA,cAAM,KAAK,GAAG,SAAS,CAAC,WAAxB;AACA,cAAM,MAAM,GAAG,SAAS,CAAC,YAAzB;AACA,aAAK,MAAL,CAAY,KAAZ,EAAmB,MAAnB;AACD,OAND;AAOD;AACF;;AAED,EAAA,MAAM,CAAC,KAAD,EAAiB,MAAjB,EAAgC;AACpC,QAAI,KAAK,WAAL,EAAJ,EAAwB;AACtB,WAAK,cAAL,CAAoB,KAApB,EAA2B,MAA3B;AACD,KAFD,MAEO;AACL,WAAK,WAAL,CAAiB,KAAjB,EAAwB,MAAxB;AACD;AACF;;AAED,EAAA,WAAW,CAAC,KAAD,EAAiB,MAAjB,EAAgC;AACzC,SAAK,KAAL,CAAW,SAAX,CAAqB,MAArB,CAA4B,KAA5B,EAAmC,MAAnC;AACD;;AAED,EAAA,cAAc,CAAC,KAAD,EAAiB,MAAjB,EAAgC;AAC5C,SAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,CAA2B,KAA3B,EAAkC,MAAlC;AACD;;AAED,EAAA,UAAU,CAAC,KAAD,EAAiB,MAAjB,EAAgC;AACxC,UAAM,QAAQ,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,MAArC;;AACA,QAAI,QAAJ,EAAc;AACZ,MAAA,QAAQ,CAAC,cAAT,CAAwB,KAAxB,EAA+B,MAA/B;AACD;AACF;;AAGD,EAAA,OAAO,GAAA;AACL,IAAA,UAAU,CAAC,KAAX,CAAiB,KAAK,YAAL,EAAjB;AACD;;AAvDkC;;AAqDnC,UAAA,CAAA,CADC,IAAI,CAAC,OAAL,EACD,CAAA,E,qBAAA,E,SAAA,EAEC,IAFD,CAAA","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Base } from './base';\nimport { SizeSensor } from '../util';\nexport class SizeManager extends Base {\n    hasScroller() {\n        return this.graph.scroller.widget != null;\n    }\n    getContainer() {\n        return this.hasScroller()\n            ? this.graph.scroller.widget.container\n            : this.graph.container;\n    }\n    init() {\n        const autoResize = this.options.autoResize;\n        if (autoResize) {\n            const target = typeof autoResize === 'boolean'\n                ? this.getContainer()\n                : autoResize;\n            SizeSensor.bind(target, () => {\n                const container = this.getContainer();\n                // container is border-box\n                const width = container.offsetWidth;\n                const height = container.offsetHeight;\n                this.resize(width, height);\n            });\n        }\n    }\n    resize(width, height) {\n        if (this.hasScroller()) {\n            this.resizeScroller(width, height);\n        }\n        else {\n            this.resizeGraph(width, height);\n        }\n    }\n    resizeGraph(width, height) {\n        this.graph.transform.resize(width, height);\n    }\n    resizeScroller(width, height) {\n        this.graph.scroller.resize(width, height);\n    }\n    resizePage(width, height) {\n        const instance = this.graph.scroller.widget;\n        if (instance) {\n            instance.updatePageSize(width, height);\n        }\n    }\n    dispose() {\n        SizeSensor.clear(this.getContainer());\n    }\n}\n__decorate([\n    Base.dispose()\n], SizeManager.prototype, \"dispose\", null);\n//# sourceMappingURL=size.js.map"]},"metadata":{},"sourceType":"module"}