{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nexport var NsGraphHistoryReset;\n\n(function (NsGraphHistoryReset) {\n  /** Command: 用于注册named factory */\n  NsGraphHistoryReset.command = XFlowGraphCommands.GRAPH_HISTORY_RESET;\n  /** hookName */\n\n  NsGraphHistoryReset.hookKey = 'historyReset';\n})(NsGraphHistoryReset || (NsGraphHistoryReset = {}));\n\nlet GraphHistoryResetCommand =\n/** 创建清理History命令 */\nclass GraphHistoryResetCommand {\n  constructor() {\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n      const {\n        args,\n        hooks: runtimeHook\n      } = ctx.getArgs();\n      const hooks = ctx.getHooks();\n      const result = yield hooks.historyReset.call(args, () => __awaiter(this, void 0, void 0, function* () {\n        const graph = yield ctx.getX6Graph();\n        graph.cleanHistory();\n        return {\n          err: null\n        };\n      }), runtimeHook);\n      ctx.setResult(result);\n      return this;\n    });\n    /** undo cmd */\n\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n\n      if (this.isUndoable()) {\n        ctx.undo();\n      }\n\n      return this;\n    });\n    /** redo cmd */\n\n\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.isUndoable()) {\n        yield this.execute();\n      }\n\n      return this;\n    });\n  }\n\n  isUndoable() {\n    const ctx = this.contextProvider();\n    return ctx.isUndoable();\n  }\n\n};\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphHistoryResetCommand.prototype, \"contextProvider\", void 0);\n\nGraphHistoryResetCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsGraphHistoryReset.command.id\n  }\n})\n/** 创建清理History命令 */\n], GraphHistoryResetCommand);\nexport { GraphHistoryResetCommand };","map":{"version":3,"sources":["../../../src/command-contributions/graph/graph-history-reset.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,MAAT,EAAiB,UAAjB,QAAmC,cAAnC;AAIA,SAAS,eAAT,EAA0B,uBAA1B,QAAyD,yBAAzD;AACA,SAAS,kBAAT,QAAmC,aAAnC;AAQA,OAAM,IAAW,mBAAX;;AAAN,CAAA,UAAiB,mBAAjB,EAAoC;AAClC;AACa,EAAA,mBAAA,CAAA,OAAA,GAAU,kBAAkB,CAAC,mBAA7B;AACb;;AACa,EAAA,mBAAA,CAAA,OAAA,GAAU,cAAV;AAWd,CAfD,EAAiB,mBAAmB,KAAnB,mBAAmB,GAAA,EAAA,CAApC;;AAqBA,IAAa,wBAAwB;AADrC;AACA,MAAa,wBAAb,CAAqC;AAArC,EAAA,WAAA,GAAA;AAIE;AACA,SAAA,OAAA,GAAU,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACnB,YAAM,GAAG,GAAG,KAAK,eAAL,EAAZ;AACA,YAAM;AAAE,QAAA,IAAF;AAAQ,QAAA,KAAK,EAAE;AAAf,UAA+B,GAAG,CAAC,OAAJ,EAArC;AACA,YAAM,KAAK,GAAG,GAAG,CAAC,QAAJ,EAAd;AACA,YAAM,MAAM,GAAG,MAAM,KAAK,CAAC,YAAN,CAAmB,IAAnB,CACnB,IADmB,EAEnB,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACT,cAAM,KAAK,GAAG,MAAM,GAAG,CAAC,UAAJ,EAApB;AACA,QAAA,KAAK,CAAC,YAAN;AACA,eAAO;AAAE,UAAA,GAAG,EAAE;AAAP,SAAP;AACD,OAJU,CAFQ,EAOnB,WAPmB,CAArB;AASA,MAAA,GAAG,CAAC,SAAJ,CAAc,MAAd;AACA,aAAO,IAAP;AACD,KAfoB,CAArB;AAiBA;;;AACA,SAAA,IAAA,GAAO,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAChB,YAAM,GAAG,GAAG,KAAK,eAAL,EAAZ;;AACA,UAAI,KAAK,UAAL,EAAJ,EAAuB;AACrB,QAAA,GAAG,CAAC,IAAJ;AACD;;AACD,aAAO,IAAP;AACD,KANiB,CAAlB;AAQA;;;AACA,SAAA,IAAA,GAAO,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAChB,UAAI,CAAC,KAAK,UAAL,EAAL,EAAwB;AACtB,cAAM,KAAK,OAAL,EAAN;AACD;;AACD,aAAO,IAAP;AACD,KALiB,CAAlB;AAWD;;AAJC,EAAA,UAAU,GAAA;AACR,UAAM,GAAG,GAAG,KAAK,eAAL,EAAZ;AACA,WAAO,GAAG,CAAC,UAAJ,EAAP;AACD;;AA1CkC,CAArC;;AAEmC,UAAA,CAAA,CAAhC,MAAM,CAAC,uBAAD,CAA0B,E,iCAAA,CAAA,E,kCAAA,E,iBAAA,E,KAA4C,CAA5C,CAAA;;AAFtB,wBAAwB,GAAA,UAAA,CAAA,CAJpC,UAAU,CAAC;AACV,EAAA,KAAK,EAAE;AAAE,IAAA,KAAK,EAAE,eAAT;AAA0B,IAAA,KAAK,EAAE,mBAAmB,CAAC,OAApB,CAA4B;AAA7D;AADG,CAAD;AAGX;AACqC,CAAA,EAAxB,wBAAwB,CAAxB;SAAA,wB","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nexport var NsGraphHistoryReset;\n(function (NsGraphHistoryReset) {\n    /** Command: 用于注册named factory */\n    NsGraphHistoryReset.command = XFlowGraphCommands.GRAPH_HISTORY_RESET;\n    /** hookName */\n    NsGraphHistoryReset.hookKey = 'historyReset';\n})(NsGraphHistoryReset || (NsGraphHistoryReset = {}));\nlet GraphHistoryResetCommand = \n/** 创建清理History命令 */\nclass GraphHistoryResetCommand {\n    constructor() {\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            const { args, hooks: runtimeHook } = ctx.getArgs();\n            const hooks = ctx.getHooks();\n            const result = yield hooks.historyReset.call(args, () => __awaiter(this, void 0, void 0, function* () {\n                const graph = yield ctx.getX6Graph();\n                graph.cleanHistory();\n                return { err: null };\n            }), runtimeHook);\n            ctx.setResult(result);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            if (this.isUndoable()) {\n                ctx.undo();\n            }\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.isUndoable()) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    isUndoable() {\n        const ctx = this.contextProvider();\n        return ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], GraphHistoryResetCommand.prototype, \"contextProvider\", void 0);\nGraphHistoryResetCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsGraphHistoryReset.command.id },\n    })\n    /** 创建清理History命令 */\n], GraphHistoryResetCommand);\nexport { GraphHistoryResetCommand };\n//# sourceMappingURL=graph-history-reset.js.map"]},"metadata":{},"sourceType":"module"}