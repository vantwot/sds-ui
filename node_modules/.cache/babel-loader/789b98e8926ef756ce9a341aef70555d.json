{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGroupCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nimport { XFlowNodeCommands } from '../constant';\nexport var NsAddGroup;\n\n(function (NsAddGroup) {\n  /** Command: 用于注册named factory */\n  NsAddGroup.command = XFlowGroupCommands.ADD_GROUP;\n  /** hookName */\n\n  NsAddGroup.hookKey = 'addGroup';\n  NsAddGroup.GROUP_PADDING = 12;\n  NsAddGroup.GROUP_HEADER_HEIGHT = 40;\n})(NsAddGroup || (NsAddGroup = {}));\n\nlet AddGroupCommand =\n/** 创建节点命令 */\nclass AddGroupCommand {\n  constructor() {\n    this.getBBox = (node, nodeConfig, graph) => {\n      const {\n        groupHeaderHeight = NsAddGroup.GROUP_HEADER_HEIGHT,\n        groupPadding = NsAddGroup.GROUP_PADDING\n      } = nodeConfig;\n      const bbox = graph.getCellsBBox(node.children);\n      bbox.moveAndExpand({\n        x: -groupPadding,\n        y: -(groupPadding + groupHeaderHeight),\n        width: groupPadding * 2,\n        height: groupPadding * 2 + groupHeaderHeight\n      });\n      return bbox;\n    };\n    /** 执行Cmd */\n\n\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n      const {\n        args,\n        hooks: runtimeHook\n      } = ctx.getArgs();\n      const hooks = ctx.getHooks();\n      const result = yield hooks.addGroup.call(args, handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const {\n          nodeConfig,\n          createService: createGroupService,\n          cellFactory,\n          commandService\n        } = handlerArgs;\n        const graph = yield ctx.getX6Graph();\n        const res = yield commandService.executeCommand(XFlowNodeCommands.ADD_NODE.id, {\n          cellFactory,\n          createNodeService: createGroupService,\n          nodeConfig\n        });\n        const {\n          nodeCell: groupCell\n        } = res.contextProvider().getResult();\n        const {\n          id: groupId\n        } = groupCell;\n        const {\n          groupChildren\n        } = nodeConfig;\n\n        if (groupChildren.length) {\n          groupChildren.forEach(nodeId => {\n            const child = graph.getCellById(nodeId);\n\n            if (child) {\n              child.setData(Object.assign(Object.assign({}, child.getData()), {\n                group: groupId,\n                isCollapsed: false\n              }));\n              child.prop('group', groupId);\n              groupCell.addChild(child);\n              graph.unselect(child);\n            }\n          });\n          const groupBBox = this.getBBox(groupCell, nodeConfig, graph);\n          groupCell.position(groupBBox.x, groupBBox.y);\n          groupCell.size(groupBBox.width, groupBBox.height);\n          groupCell.setZIndex(0);\n          groupCell.prop('isGroup', true);\n          groupCell.setData(Object.assign(Object.assign({}, groupCell.getData()), {\n            width: groupBBox.width,\n            height: groupBBox.height,\n            groupChildrenSize: {\n              width: groupBBox.width,\n              height: groupBBox.height\n            },\n            x: groupBBox.x,\n            y: groupBBox.y,\n            isGroup: true\n          }));\n          graph.select(groupCell);\n        }\n\n        if (nodeConfig.isCollapsed) {\n          yield commandService.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\n            nodeId: nodeConfig.id,\n            isCollapsed: nodeConfig.isCollapsed\n          });\n        }\n        /** add undo: delete node */\n\n\n        ctx.addUndo(Disposable.create(() => __awaiter(this, void 0, void 0, function* () {\n          commandService.executeCommand(XFlowGroupCommands.DEL_GROUP.id, {\n            nodeConfig\n          });\n        })));\n        return {\n          nodeConfig: nodeConfig,\n          nodeCell: groupCell\n        };\n      }), runtimeHook);\n      ctx.setResult(result);\n      return this;\n    });\n    /** undo cmd */\n\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n\n      if (this.isUndoable()) {\n        ctx.undo();\n      }\n\n      return this;\n    });\n    /** redo cmd */\n\n\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.isUndoable()) {\n        yield this.execute();\n      }\n\n      return this;\n    });\n  }\n\n  isUndoable() {\n    const ctx = this.contextProvider();\n    return ctx.isUndoable();\n  }\n\n};\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], AddGroupCommand.prototype, \"contextProvider\", void 0);\n\nAddGroupCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsAddGroup.command.id\n  }\n})\n/** 创建节点命令 */\n], AddGroupCommand);\nexport { AddGroupCommand };","map":{"version":3,"sources":["../../../src/command-contributions/group/group-add.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGroupCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nimport { XFlowNodeCommands } from '../constant';\nexport var NsAddGroup;\n(function (NsAddGroup) {\n    /** Command: 用于注册named factory */\n    NsAddGroup.command = XFlowGroupCommands.ADD_GROUP;\n    /** hookName */\n    NsAddGroup.hookKey = 'addGroup';\n    NsAddGroup.GROUP_PADDING = 12;\n    NsAddGroup.GROUP_HEADER_HEIGHT = 40;\n})(NsAddGroup || (NsAddGroup = {}));\nlet AddGroupCommand = \n/** 创建节点命令 */\nclass AddGroupCommand {\n    constructor() {\n        this.getBBox = (node, nodeConfig, graph) => {\n            const { groupHeaderHeight = NsAddGroup.GROUP_HEADER_HEIGHT, groupPadding = NsAddGroup.GROUP_PADDING, } = nodeConfig;\n            const bbox = graph.getCellsBBox(node.children);\n            bbox.moveAndExpand({\n                x: -groupPadding,\n                y: -(groupPadding + groupHeaderHeight),\n                width: groupPadding * 2,\n                height: groupPadding * 2 + groupHeaderHeight,\n            });\n            return bbox;\n        };\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            const { args, hooks: runtimeHook } = ctx.getArgs();\n            const hooks = ctx.getHooks();\n            const result = yield hooks.addGroup.call(args, (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                const { nodeConfig, createService: createGroupService, cellFactory, commandService, } = handlerArgs;\n                const graph = yield ctx.getX6Graph();\n                const res = yield commandService.executeCommand(XFlowNodeCommands.ADD_NODE.id, {\n                    cellFactory,\n                    createNodeService: createGroupService,\n                    nodeConfig,\n                });\n                const { nodeCell: groupCell } = res\n                    .contextProvider()\n                    .getResult();\n                const { id: groupId } = groupCell;\n                const { groupChildren } = nodeConfig;\n                if (groupChildren.length) {\n                    groupChildren.forEach(nodeId => {\n                        const child = graph.getCellById(nodeId);\n                        if (child) {\n                            child.setData(Object.assign(Object.assign({}, child.getData()), { group: groupId, isCollapsed: false }));\n                            child.prop('group', groupId);\n                            groupCell.addChild(child);\n                            graph.unselect(child);\n                        }\n                    });\n                    const groupBBox = this.getBBox(groupCell, nodeConfig, graph);\n                    groupCell.position(groupBBox.x, groupBBox.y);\n                    groupCell.size(groupBBox.width, groupBBox.height);\n                    groupCell.setZIndex(0);\n                    groupCell.prop('isGroup', true);\n                    groupCell.setData(Object.assign(Object.assign({}, groupCell.getData()), { width: groupBBox.width, height: groupBBox.height, groupChildrenSize: { width: groupBBox.width, height: groupBBox.height }, x: groupBBox.x, y: groupBBox.y, isGroup: true }));\n                    graph.select(groupCell);\n                }\n                if (nodeConfig.isCollapsed) {\n                    yield commandService.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\n                        nodeId: nodeConfig.id,\n                        isCollapsed: nodeConfig.isCollapsed,\n                    });\n                }\n                /** add undo: delete node */\n                ctx.addUndo(Disposable.create(() => __awaiter(this, void 0, void 0, function* () {\n                    commandService.executeCommand(XFlowGroupCommands.DEL_GROUP.id, {\n                        nodeConfig,\n                    });\n                })));\n                return { nodeConfig: nodeConfig, nodeCell: groupCell };\n            }), runtimeHook);\n            ctx.setResult(result);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            if (this.isUndoable()) {\n                ctx.undo();\n            }\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.isUndoable()) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    isUndoable() {\n        const ctx = this.contextProvider();\n        return ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], AddGroupCommand.prototype, \"contextProvider\", void 0);\nAddGroupCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsAddGroup.command.id },\n    })\n    /** 创建节点命令 */\n], AddGroupCommand);\nexport { AddGroupCommand };\n//# sourceMappingURL=group-add.js.map"]},"metadata":{},"sourceType":"module"}