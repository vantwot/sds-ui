{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React from 'react';\nimport { createModule } from '../module';\nimport { XFlowAppExtensionMoudle, useExtensionRegistry, insertCss } from '@antv/xflow-core';\nexport const CONFIG_TYPE = 'CanvasSnapline';\n/** 默认颜色 */\n\nexport const SNAPLINE_COLOR = '#faad14';\nexport const CanvasSnapline = props => {\n  const {\n    color = SNAPLINE_COLOR\n  } = props;\n  const extension = useExtensionRegistry();\n  const config = React.useMemo(() => ({\n    CONFIG_TYPE,\n    getConfig: () => __awaiter(void 0, void 0, void 0, function* () {\n      return {};\n    })\n  }), []);\n  /** 设置css 样式 */\n\n  React.useEffect(() => {\n    const className = `xflow-snapline-${Date.now()}`; // 多xflow之间隔离\n\n    extension.addContainerClassNames(className);\n    const cssString = `\n    .${className} .xflow-snapline .x6-widget-snapline-horizontal, \n    .${className} .xflow-snapline .x6-widget-snapline-vertical {\n      border-color: ${color};\n    }`;\n    const $style = insertCss(cssString);\n    return () => {\n      document.head.removeChild($style);\n    };\n  }, [color, extension]);\n  return React.createElement(XFlowAppExtensionMoudle, {\n    config: config,\n    createModule: createModule\n  });\n};","map":{"version":3,"sources":["../../../src/canvas-snapline/components/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,QAA6B,WAA7B;AACA,SAAS,uBAAT,EAAkC,oBAAlC,EAAwD,SAAxD,QAAyE,kBAAzE;AAMA,OAAO,MAAM,WAAW,GAAG,gBAApB;AACP;;AACA,OAAO,MAAM,cAAc,GAAG,SAAvB;AAEP,OAAO,MAAM,cAAc,GAAqB,KAAK,IAAG;AACtD,QAAM;AAAE,IAAA,KAAK,GAAG;AAAV,MAA6B,KAAnC;AACA,QAAM,SAAS,GAAG,oBAAoB,EAAtC;AACA,QAAM,MAAM,GAAG,KAAK,CAAC,OAAN,CACb,OAAO;AACL,IAAA,WADK;AAEL,IAAA,SAAS,EAAE,MAAW,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAAC,aAAC,EAAD;AAAe,KAAhB;AAFjB,GAAP,CADa,EAKb,EALa,CAAf;AAQA;;AACA,EAAA,KAAK,CAAC,SAAN,CAAgB,MAAK;AACnB,UAAM,SAAS,GAAG,kBAAkB,IAAI,CAAC,GAAL,EAAU,EAA9C,CADmB,CAEnB;;AACA,IAAA,SAAS,CAAC,sBAAV,CAAiC,SAAjC;AAEA,UAAM,SAAS,GAAG;OACf,SAAS;OACT,SAAS;sBACM,KAAK;AACrB,MAJF;AAKA,UAAM,MAAM,GAAG,SAAS,CAAC,SAAD,CAAxB;AAEA,WAAO,MAAK;AACV,MAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,MAA1B;AACD,KAFD;AAGD,GAfD,EAeG,CAAC,KAAD,EAAQ,SAAR,CAfH;AAiBA,SAAO,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB;AAAU,IAAA,MAAM,EAAE,MAAlB;AAA0B,IAAA,YAAY,EAAE;AAAxC,GAAxB,CAAP;AACD,CA9BM","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from 'react';\nimport { createModule } from '../module';\nimport { XFlowAppExtensionMoudle, useExtensionRegistry, insertCss } from '@antv/xflow-core';\nexport const CONFIG_TYPE = 'CanvasSnapline';\n/** 默认颜色 */\nexport const SNAPLINE_COLOR = '#faad14';\nexport const CanvasSnapline = props => {\n    const { color = SNAPLINE_COLOR } = props;\n    const extension = useExtensionRegistry();\n    const config = React.useMemo(() => ({\n        CONFIG_TYPE,\n        getConfig: () => __awaiter(void 0, void 0, void 0, function* () { return ({}); }),\n    }), []);\n    /** 设置css 样式 */\n    React.useEffect(() => {\n        const className = `xflow-snapline-${Date.now()}`;\n        // 多xflow之间隔离\n        extension.addContainerClassNames(className);\n        const cssString = `\n    .${className} .xflow-snapline .x6-widget-snapline-horizontal, \n    .${className} .xflow-snapline .x6-widget-snapline-vertical {\n      border-color: ${color};\n    }`;\n        const $style = insertCss(cssString);\n        return () => {\n            document.head.removeChild($style);\n        };\n    }, [color, extension]);\n    return React.createElement(XFlowAppExtensionMoudle, { config: config, createModule: createModule });\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}