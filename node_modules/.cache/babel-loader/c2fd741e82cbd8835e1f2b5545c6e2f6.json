{"ast":null,"code":"import React from 'react';\nimport { XFlowHookConfig, createModule } from '../module';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nimport { HookConfig } from '../config';\nexport const HookRegistry = props => {\n  /** 获取配置中心 */\n  const extensionRegistry = useExtensionRegistry();\n  /** 获取ContextService的配置 */\n\n  const hookConfig = React.useMemo(() => props.config ? props.config : new XFlowHookConfig(), // 不要移除：保证config只生成一次\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  React.useEffect(() => {\n    const disposable = extensionRegistry.addCoreModule({\n      config: hookConfig,\n      createModule\n    });\n    return () => {\n      disposable.dispose();\n      hookConfig.dispose();\n    };\n  }, [extensionRegistry, hookConfig]);\n  return null;\n};\nexport const createHookConfig = addOptions => value => {\n  /** bridge config and value */\n  const valueContainer = React.useMemo(() => ({\n    getValue: () => ({})\n  }), []);\n\n  valueContainer.getValue = () => value;\n\n  const hookConfig = React.useMemo(() => {\n    const config = new HookConfig();\n    addOptions(config, valueContainer);\n    return config;\n  }, [valueContainer]);\n  return hookConfig;\n};","map":{"version":3,"sources":["../../../src/hooks/components/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,eAAT,EAA0B,YAA1B,QAA8C,WAA9C;AACA,SAAS,oBAAT,QAAqC,+CAArC;AACA,SAAS,UAAT,QAA2B,WAA3B;AAOA,OAAO,MAAM,YAAY,GAAqB,KAAK,IAAG;AACpD;AACA,QAAM,iBAAiB,GAAG,oBAAoB,EAA9C;AACA;;AACA,QAAM,UAAU,GAAG,KAAK,CAAC,OAAN,CACjB,MAAO,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,MAArB,GAA8B,IAAI,eAAJ,EADpB,EAEjB;AACA;AACA,IAJiB,CAAnB;AAOA,EAAA,KAAK,CAAC,SAAN,CAAgB,MAAK;AACnB,UAAM,UAAU,GAAG,iBAAiB,CAAC,aAAlB,CAAgC;AACjD,MAAA,MAAM,EAAE,UADyC;AAEjD,MAAA;AAFiD,KAAhC,CAAnB;AAIA,WAAO,MAAK;AACV,MAAA,UAAU,CAAC,OAAX;AACA,MAAA,UAAU,CAAC,OAAX;AACD,KAHD;AAID,GATD,EASG,CAAC,iBAAD,EAAoB,UAApB,CATH;AAUA,SAAO,IAAP;AACD,CAtBM;AA4BP,OAAO,MAAM,gBAAgB,GACD,UAA1B,IACC,KAAD,IAAc;AACZ;AACA,QAAM,cAAc,GAAG,KAAK,CAAC,OAAN,CAAc,OAAO;AAAE,IAAA,QAAQ,EAAE,OAAO,EAAP;AAAZ,GAAP,CAAd,EAAqD,EAArD,CAAvB;;AACA,EAAA,cAAc,CAAC,QAAf,GAA0B,MAAM,KAAhC;;AAEA,QAAM,UAAU,GAAG,KAAK,CAAC,OAAN,CAAc,MAAK;AACpC,UAAM,MAAM,GAAG,IAAI,UAAJ,EAAf;AACA,IAAA,UAAU,CAAC,MAAD,EAAS,cAAT,CAAV;AACA,WAAO,MAAP;AACD,GAJkB,EAIhB,CAAC,cAAD,CAJgB,CAAnB;AAMA,SAAO,UAAP;AACD,CAdI","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { XFlowHookConfig, createModule } from '../module';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nimport { HookConfig } from '../config';\nexport const HookRegistry = props => {\n    /** 获取配置中心 */\n    const extensionRegistry = useExtensionRegistry();\n    /** 获取ContextService的配置 */\n    const hookConfig = React.useMemo(() => (props.config ? props.config : new XFlowHookConfig()), \n    // 不要移除：保证config只生成一次\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n    React.useEffect(() => {\n        const disposable = extensionRegistry.addCoreModule({\n            config: hookConfig,\n            createModule,\n        });\n        return () => {\n            disposable.dispose();\n            hookConfig.dispose();\n        };\n    }, [extensionRegistry, hookConfig]);\n    return null;\n};\nexport const createHookConfig = (addOptions) => (value) => {\n    /** bridge config and value */\n    const valueContainer = React.useMemo(() => ({ getValue: () => ({}) }), []);\n    valueContainer.getValue = () => value;\n    const hookConfig = React.useMemo(() => {\n        const config = new HookConfig();\n        addOptions(config, valueContainer);\n        return config;\n    }, [valueContainer]);\n    return hookConfig;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}