{"ast":null,"code":"import React from 'react';\nimport { Form, Select as ASelect } from 'antd';\nimport { FormItemWrapper } from '../../common/form-item-wrapper';\nimport { renderFormItemExtra } from '../../common/tooltip';\nexport var Select = function (props) {\n  var controlSchema = props.controlSchema;\n  var required = controlSchema.required,\n      tooltip = controlSchema.tooltip,\n      extra = controlSchema.extra,\n      name = controlSchema.name,\n      label = controlSchema.label,\n      placeholder = controlSchema.placeholder,\n      _a = controlSchema.options,\n      options = _a === void 0 ? [] : _a;\n  return React.createElement(FormItemWrapper, {\n    schema: controlSchema\n  }, function (_a) {\n    var hidden = _a.hidden,\n        disabled = _a.disabled,\n        initialValue = _a.initialValue;\n    return React.createElement(Form.Item, {\n      name: name,\n      label: label,\n      initialValue: initialValue,\n      tooltip: tooltip,\n      extra: renderFormItemExtra(extra),\n      required: required,\n      hidden: hidden\n    }, React.createElement(ASelect, {\n      disabled: disabled,\n      placeholder: placeholder\n    }, options.map(function (option) {\n      var title = option.title,\n          value = option.value;\n      return React.createElement(ASelect.Option, {\n        key: value.toString(),\n        value: value\n      }, title);\n    })));\n  });\n};","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@ant-design/flowchart/es/components/canvas-json-schema-form/schema-form/control-map/select/index.js"],"names":["React","Form","Select","ASelect","FormItemWrapper","renderFormItemExtra","props","controlSchema","required","tooltip","extra","name","label","placeholder","_a","options","createElement","schema","hidden","disabled","initialValue","Item","map","option","title","value","Option","key","toString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAM,IAAIC,OAAzB,QAAwC,MAAxC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAO,IAAIH,MAAM,GAAG,UAAUI,KAAV,EAAiB;AACjC,MAAIC,aAAa,GAAGD,KAAK,CAACC,aAA1B;AACA,MAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AAAA,MAAuCC,OAAO,GAAGF,aAAa,CAACE,OAA/D;AAAA,MAAwEC,KAAK,GAAGH,aAAa,CAACG,KAA9F;AAAA,MAAqGC,IAAI,GAAGJ,aAAa,CAACI,IAA1H;AAAA,MAAgIC,KAAK,GAAGL,aAAa,CAACK,KAAtJ;AAAA,MAA6JC,WAAW,GAAGN,aAAa,CAACM,WAAzL;AAAA,MAAsMC,EAAE,GAAGP,aAAa,CAACQ,OAAzN;AAAA,MAAkOA,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAAjQ;AACA,SAAQd,KAAK,CAACgB,aAAN,CAAoBZ,eAApB,EAAqC;AAAEa,IAAAA,MAAM,EAAEV;AAAV,GAArC,EAAgE,UAAUO,EAAV,EAAc;AAClF,QAAII,MAAM,GAAGJ,EAAE,CAACI,MAAhB;AAAA,QAAwBC,QAAQ,GAAGL,EAAE,CAACK,QAAtC;AAAA,QAAgDC,YAAY,GAAGN,EAAE,CAACM,YAAlE;AACA,WAAQpB,KAAK,CAACgB,aAAN,CAAoBf,IAAI,CAACoB,IAAzB,EAA+B;AAAEV,MAAAA,IAAI,EAAEA,IAAR;AAAcC,MAAAA,KAAK,EAAEA,KAArB;AAA4BQ,MAAAA,YAAY,EAAEA,YAA1C;AAAwDX,MAAAA,OAAO,EAAEA,OAAjE;AAA0EC,MAAAA,KAAK,EAAEL,mBAAmB,CAACK,KAAD,CAApG;AAA6GF,MAAAA,QAAQ,EAAEA,QAAvH;AAAiIU,MAAAA,MAAM,EAAEA;AAAzI,KAA/B,EACJlB,KAAK,CAACgB,aAAN,CAAoBb,OAApB,EAA6B;AAAEgB,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBN,MAAAA,WAAW,EAAEA;AAAnC,KAA7B,EAA+EE,OAAO,CAACO,GAAR,CAAY,UAAUC,MAAV,EAAkB;AACzG,UAAIC,KAAK,GAAGD,MAAM,CAACC,KAAnB;AAAA,UAA0BC,KAAK,GAAGF,MAAM,CAACE,KAAzC;AACA,aAAQzB,KAAK,CAACgB,aAAN,CAAoBb,OAAO,CAACuB,MAA5B,EAAoC;AAAEC,QAAAA,GAAG,EAAEF,KAAK,CAACG,QAAN,EAAP;AAAyBH,QAAAA,KAAK,EAAEA;AAAhC,OAApC,EAA6ED,KAA7E,CAAR;AACH,KAH8E,CAA/E,CADI,CAAR;AAKH,GAPO,CAAR;AAQH,CAXM","sourcesContent":["import React from 'react';\nimport { Form, Select as ASelect } from 'antd';\nimport { FormItemWrapper } from '../../common/form-item-wrapper';\nimport { renderFormItemExtra } from '../../common/tooltip';\nexport var Select = function (props) {\n    var controlSchema = props.controlSchema;\n    var required = controlSchema.required, tooltip = controlSchema.tooltip, extra = controlSchema.extra, name = controlSchema.name, label = controlSchema.label, placeholder = controlSchema.placeholder, _a = controlSchema.options, options = _a === void 0 ? [] : _a;\n    return (React.createElement(FormItemWrapper, { schema: controlSchema }, function (_a) {\n        var hidden = _a.hidden, disabled = _a.disabled, initialValue = _a.initialValue;\n        return (React.createElement(Form.Item, { name: name, label: label, initialValue: initialValue, tooltip: tooltip, extra: renderFormItemExtra(extra), required: required, hidden: hidden },\n            React.createElement(ASelect, { disabled: disabled, placeholder: placeholder }, options.map(function (option) {\n                var title = option.title, value = option.value;\n                return (React.createElement(ASelect.Option, { key: value.toString(), value: value }, title));\n            }))));\n    }));\n};\n"]},"metadata":{},"sourceType":"module"}