{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Path } from '../../geometry';\nimport { NumberExt } from '../../util';\nimport { normalize } from './util';\nexport const block = _a => {\n  var {\n    size,\n    width,\n    height,\n    offset,\n    open\n  } = _a,\n      attrs = __rest(_a, [\"size\", \"width\", \"height\", \"offset\", \"open\"]);\n\n  return createClassicMarker({\n    size,\n    width,\n    height,\n    offset\n  }, open === true, true, undefined, attrs);\n};\nexport const classic = _a => {\n  var {\n    size,\n    width,\n    height,\n    offset,\n    factor\n  } = _a,\n      attrs = __rest(_a, [\"size\", \"width\", \"height\", \"offset\", \"factor\"]);\n\n  return createClassicMarker({\n    size,\n    width,\n    height,\n    offset\n  }, false, false, factor, attrs);\n};\n\nfunction createClassicMarker(options, open, full) {\n  let factor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 3 / 4;\n  let attrs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  const size = options.size || 10;\n  const width = options.width || size;\n  const height = options.height || size;\n  const path = new Path();\n  const localAttrs = {};\n\n  if (open) {\n    path.moveTo(width, 0).lineTo(0, height / 2).lineTo(width, height);\n    localAttrs.fill = 'none';\n  } else {\n    path.moveTo(0, height / 2);\n    path.lineTo(width, 0);\n\n    if (!full) {\n      const f = NumberExt.clamp(factor, 0, 1);\n      path.lineTo(width * f, height / 2);\n    }\n\n    path.lineTo(width, height);\n    path.close();\n  }\n\n  return Object.assign(Object.assign(Object.assign({}, localAttrs), attrs), {\n    tagName: 'path',\n    d: normalize(path.serialize(), {\n      x: options.offset != null ? options.offset : -width / 2\n    })\n  });\n}","map":{"version":3,"sources":["../../../src/registry/marker/classic.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Path } from '../../geometry';\nimport { NumberExt } from '../../util';\nimport { normalize } from './util';\nexport const block = (_a) => {\n    var { size, width, height, offset, open } = _a, attrs = __rest(_a, [\"size\", \"width\", \"height\", \"offset\", \"open\"]);\n    return createClassicMarker({ size, width, height, offset }, open === true, true, undefined, attrs);\n};\nexport const classic = (_a) => {\n    var { size, width, height, offset, factor } = _a, attrs = __rest(_a, [\"size\", \"width\", \"height\", \"offset\", \"factor\"]);\n    return createClassicMarker({ size, width, height, offset }, false, false, factor, attrs);\n};\nfunction createClassicMarker(options, open, full, factor = 3 / 4, attrs = {}) {\n    const size = options.size || 10;\n    const width = options.width || size;\n    const height = options.height || size;\n    const path = new Path();\n    const localAttrs = {};\n    if (open) {\n        path\n            .moveTo(width, 0)\n            .lineTo(0, height / 2)\n            .lineTo(width, height);\n        localAttrs.fill = 'none';\n    }\n    else {\n        path.moveTo(0, height / 2);\n        path.lineTo(width, 0);\n        if (!full) {\n            const f = NumberExt.clamp(factor, 0, 1);\n            path.lineTo(width * f, height / 2);\n        }\n        path.lineTo(width, height);\n        path.close();\n    }\n    return Object.assign(Object.assign(Object.assign({}, localAttrs), attrs), { tagName: 'path', d: normalize(path.serialize(), {\n            x: options.offset != null ? options.offset : -width / 2,\n        }) });\n}\n//# sourceMappingURL=classic.js.map"]},"metadata":{},"sourceType":"module"}