{"ast":null,"code":"import _regeneratorRuntime from\"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useReducer,useEffect,useState}from'react';import{get}from'axios';var initialState={isLoading:true,isError:false,data:[]};var dataFetchReducer=function dataFetchReducer(state,action){switch(action.type){case'FETCH_INIT':return _objectSpread(_objectSpread({},state),{},{isLoading:true,isError:false});case'FETCH_SUCCESS':return _objectSpread(_objectSpread({},state),{},{isLoading:false,isError:false,data:action.payload});case'FETCH_FAILURE':return _objectSpread(_objectSpread({},state),{},{isLoading:false,isError:true});case'FETCH_EMPTY':return _objectSpread(_objectSpread({},state),{},{isLoading:false,isError:false,isEmpty:true});default:throw new Error();}};export var APIRequest=function APIRequest(initialUrl){var _useState=useState(initialUrl),_useState2=_slicedToArray(_useState,2),url=_useState2[0],setUrl=_useState2[1];var _useReducer=useReducer(dataFetchReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];useEffect(function(){var didCancel=false;var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:'FETCH_INIT'});_context.prev=1;_context.next=4;return get(process.env.REACT_APP_API_URL+url);case 4:result=_context.sent;if(!didCancel){if(result.status===204){dispatch({type:'FETCH_EMPTY'});}else dispatch({type:'FETCH_SUCCESS',payload:result.data});}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);if(!didCancel){dispatch({type:'FETCH_FAILURE'});}case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();return function(){didCancel=true;};},[url]);return[state,setUrl];};","map":{"version":3,"sources":["/home/manolo/sds-ui/src/apis/api.js"],"names":["useReducer","useEffect","useState","get","initialState","isLoading","isError","data","dataFetchReducer","state","action","type","payload","isEmpty","Error","APIRequest","initialUrl","url","setUrl","dispatch","didCancel","fetchData","process","env","REACT_APP_API_URL","result","status"],"mappings":"oiBAAA,OAASA,UAAT,CAAqBC,SAArB,CAAgCC,QAAhC,KAAgD,OAAhD,CACA,OAASC,GAAT,KAAoB,OAApB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,SAAS,CAAE,IADQ,CAEnBC,OAAO,CAAE,KAFU,CAGnBC,IAAI,CAAE,EAHa,CAArB,CAMA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAC1C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,YAAL,CACE,sCACKF,KADL,MAEEJ,SAAS,CAAE,IAFb,CAGEC,OAAO,CAAE,KAHX,GAKF,IAAK,eAAL,CACE,sCACKG,KADL,MAEEJ,SAAS,CAAE,KAFb,CAGEC,OAAO,CAAE,KAHX,CAIEC,IAAI,CAAEG,MAAM,CAACE,OAJf,GAMF,IAAK,eAAL,CACE,sCACKH,KADL,MAEEJ,SAAS,CAAE,KAFb,CAGEC,OAAO,CAAE,IAHX,GAKF,IAAK,aAAL,CACE,sCACKG,KADL,MAEEJ,SAAS,CAAE,KAFb,CAGEC,OAAO,CAAE,KAHX,CAIEO,OAAO,CAAE,IAJX,GAMF,QACE,KAAM,IAAIC,CAAAA,KAAJ,EAAN,CA5BJ,CA8BD,CA/BD,CAiCA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,UAAD,CAAgB,CACxC,cAAsBd,QAAQ,CAACc,UAAD,CAA9B,wCAAOC,GAAP,eAAYC,MAAZ,eAEA,gBAA0BlB,UAAU,CAACQ,gBAAD,CAAmBJ,YAAnB,CAApC,4CAAOK,KAAP,iBAAcU,QAAd,iBAEAlB,SAAS,CAAC,UAAM,CACd,GAAImB,CAAAA,SAAS,CAAG,KAAhB,CAEA,GAAMC,CAAAA,SAAS,0FAAG,8IAChBF,QAAQ,CAAC,CAAER,IAAI,CAAE,YAAR,CAAD,CAAR,CADgB,sCAIOR,CAAAA,GAAG,CAACmB,OAAO,CAACC,GAAR,CAAYC,iBAAZ,CAAgCP,GAAjC,CAJV,QAIRQ,MAJQ,eAMd,GAAI,CAACL,SAAL,CAAgB,CACd,GAAIK,MAAM,CAACC,MAAP,GAAkB,GAAtB,CAA2B,CACzBP,QAAQ,CAAC,CAAER,IAAI,CAAE,aAAR,CAAD,CAAR,CACD,CAFD,IAEOQ,CAAAA,QAAQ,CAAC,CAAER,IAAI,CAAE,eAAR,CAAyBC,OAAO,CAAEa,MAAM,CAAClB,IAAzC,CAAD,CAAR,CACR,CAVa,+EAYd,GAAI,CAACa,SAAL,CAAgB,CACdD,QAAQ,CAAC,CAAER,IAAI,CAAE,eAAR,CAAD,CAAR,CACD,CAda,oEAAH,kBAATU,CAAAA,SAAS,0CAAf,CAkBAA,SAAS,GAET,MAAO,WAAM,CACXD,SAAS,CAAG,IAAZ,CACD,CAFD,CAGD,CA1BQ,CA0BN,CAACH,GAAD,CA1BM,CAAT,CA4BA,MAAO,CAACR,KAAD,CAAQS,MAAR,CAAP,CACD,CAlCM","sourcesContent":["import { useReducer, useEffect, useState } from 'react';\nimport { get } from 'axios';\n\nconst initialState = {\n  isLoading: true,\n  isError: false,\n  data: [],\n};\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    case 'FETCH_EMPTY':\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        isEmpty: true,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nexport const APIRequest = (initialUrl) => {\n  const [url, setUrl] = useState(initialUrl);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, initialState);\n\n  useEffect(() => {\n    let didCancel = false;\n\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_INIT' });\n\n      try {\n        const result = await get(process.env.REACT_APP_API_URL + url);\n\n        if (!didCancel) {\n          if (result.status === 204) {\n            dispatch({ type: 'FETCH_EMPTY' });\n          } else dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\n        }\n      } catch (error) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE' });\n        }\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      didCancel = true;\n    };\n  }, [url]);\n\n  return [state, setUrl];\n};\n"]},"metadata":{},"sourceType":"module"}