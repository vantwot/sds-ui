{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { PositionType } from '@antv/l7-core';\nimport { bindAll, DOM } from '@antv/l7-utils';\nimport Control from './BaseControl';\n\nvar Layers = function (_Control) {\n  _inherits(Layers, _Control);\n\n  var _super = _createSuper(Layers);\n\n  function Layers(cfg) {\n    var _this;\n\n    _classCallCheck(this, Layers);\n\n    _this = _super.call(this, cfg);\n\n    _defineProperty(_assertThisInitialized(_this), \"layerControlInputs\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"layers\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"lastZIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"handlingClick\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"layersLink\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"baseLayersList\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"separator\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"overlaysList\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"form\", void 0);\n\n    _this.layerControlInputs = [];\n    _this.layers = [];\n    _this.lastZIndex = 0;\n    _this.handlingClick = false;\n\n    _this.initLayers();\n\n    bindAll(['checkDisabledLayers', 'onLayerChange', 'collapse', 'extend', 'expand', 'onInputClick'], _assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Layers, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        collapsed: true,\n        position: PositionType.TOPRIGHT,\n        autoZIndex: true,\n        hideSingleBase: false,\n        sortLayers: false,\n        name: 'layers'\n      };\n    }\n  }, {\n    key: \"onAdd\",\n    value: function onAdd() {\n      var _this2 = this;\n\n      this.initLayout();\n      this.update();\n      this.mapsService.on('zoomend', this.checkDisabledLayers);\n      this.layers.forEach(function (layerItem) {\n        layerItem.layer.on('remove', _this2.onLayerChange);\n        layerItem.layer.on('add', _this2.onLayerChange);\n      });\n      return this.container;\n    }\n  }, {\n    key: \"addVisualLayer\",\n    value: function addVisualLayer(layer, name) {\n      this.addLayer(layer, name, true);\n      return this.mapsService ? this.update() : this;\n    }\n  }, {\n    key: \"expand\",\n    value: function expand() {\n      var _this$renderService$g = this.renderService.getViewportSize(),\n          height = _this$renderService$g.height;\n\n      DOM.addClass(this.container, 'l7-control-layers-expanded');\n      this.form.style.height = 'null';\n      var acceptableHeight = height - (this.container.offsetTop + 50);\n\n      if (acceptableHeight < this.form.clientHeight) {\n        DOM.addClass(this.form, 'l7-control-layers-scrollbar');\n        this.form.style.height = acceptableHeight + 'px';\n      } else {\n        DOM.removeClass(this.form, 'l7-control-layers-scrollbar');\n      }\n\n      this.checkDisabledLayers();\n      return this;\n    }\n  }, {\n    key: \"collapse\",\n    value: function collapse() {\n      DOM.removeClass(this.container, 'l7-control-layers-expanded');\n      return this;\n    }\n  }, {\n    key: \"onRemove\",\n    value: function onRemove() {\n      var _this3 = this;\n\n      if (!this.mapsService) {\n        return;\n      }\n\n      this.mapsService.off('click', this.collapse);\n      this.layers.forEach(function (layerItem) {\n        layerItem.layer.off('remove', _this3.onLayerChange);\n        layerItem.layer.off('add', _this3.onLayerChange);\n      });\n    }\n  }, {\n    key: \"initLayout\",\n    value: function initLayout() {\n      var className = 'l7-control-layers';\n      var container = this.container = DOM.create('div', className);\n      var collapsed = this.controlOption.collapsed;\n      container.setAttribute('aria-haspopup', 'true');\n      var form = this.form = DOM.create('form', className + '-list');\n\n      if (collapsed) {\n        this.mapsService.on('click', this.collapse);\n        container.addEventListener('mouseenter', this.expand);\n        container.addEventListener('mouseleave', this.collapse);\n      }\n\n      this.layersLink = DOM.create('a', className + '-toggle', container);\n      var link = this.layersLink;\n      link.title = 'Layers';\n\n      if (!collapsed) {\n        this.expand();\n      }\n\n      this.baseLayersList = DOM.create('div', className + '-base', form);\n      this.separator = DOM.create('div', className + '-separator', form);\n      this.overlaysList = DOM.create('div', className + '-overlays', form);\n      container.appendChild(form);\n    }\n  }, {\n    key: \"initLayers\",\n    value: function initLayers() {\n      var _this4 = this;\n\n      var _this$controlOption = this.controlOption,\n          _this$controlOption$b = _this$controlOption.baseLayers,\n          baseLayers = _this$controlOption$b === void 0 ? {} : _this$controlOption$b,\n          _this$controlOption$o = _this$controlOption.overlayers,\n          overlayers = _this$controlOption$o === void 0 ? {} : _this$controlOption$o;\n      Object.keys(baseLayers).forEach(function (name, index) {\n        _this4.addLayer(baseLayers[name], name, false);\n      });\n      Object.keys(overlayers).forEach(function (name, index) {\n        _this4.addLayer(overlayers[name], name, true);\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (!this.container) {\n        return this;\n      }\n\n      DOM.empty(this.baseLayersList);\n      DOM.empty(this.overlaysList);\n      this.layerControlInputs = [];\n      var baseLayersPresent;\n      var overlaysPresent;\n      var i;\n      var obj;\n      var baseLayersCount = 0;\n\n      for (i = 0; i < this.layers.length; i++) {\n        obj = this.layers[i];\n        this.addItem(obj);\n        overlaysPresent = overlaysPresent || obj.overlay;\n        baseLayersPresent = baseLayersPresent || !obj.overlay;\n        baseLayersCount += !obj.overlay ? 1 : 0;\n      }\n\n      if (this.controlOption.hideSingleBase) {\n        baseLayersPresent = baseLayersPresent && baseLayersCount > 1;\n        this.baseLayersList.style.display = baseLayersPresent ? '' : 'none';\n      }\n\n      this.separator.style.display = overlaysPresent && baseLayersPresent ? '' : 'none';\n      return this;\n    }\n  }, {\n    key: \"checkDisabledLayers\",\n    value: function checkDisabledLayers() {\n      var inputs = this.layerControlInputs;\n      var input;\n      var layer;\n      var zoom = this.mapsService.getZoom();\n\n      for (var i = inputs.length - 1; i >= 0; i--) {\n        input = inputs[i];\n        layer = this.layerService.getLayer(input.layerId);\n\n        if (layer && layer.inited) {\n          var minZoom = layer.getMinZoom();\n          var maxZoom = layer.getMaxZoom();\n          input.disabled = zoom < minZoom || zoom > maxZoom;\n        }\n      }\n    }\n  }, {\n    key: \"addLayer\",\n    value: function addLayer(layer, name, overlay) {\n      if (this.mapsService) {\n        layer.on('add', this.onLayerChange);\n        layer.on('remove', this.onLayerChange);\n      }\n\n      this.layers.push({\n        layer: layer,\n        name: name,\n        overlay: overlay\n      });\n      var _this$controlOption2 = this.controlOption,\n          sortLayers = _this$controlOption2.sortLayers,\n          sortFunction = _this$controlOption2.sortFunction,\n          autoZIndex = _this$controlOption2.autoZIndex;\n\n      if (sortLayers) {\n        this.layers.sort(function (a, b) {\n          return sortFunction(a.layer, b.layer, a.name, b.name);\n        });\n      }\n\n      if (autoZIndex && layer.setZIndex) {\n        this.lastZIndex++;\n        layer.setZIndex(this.lastZIndex);\n      }\n\n      this.expandIfNotCollapsed();\n    }\n  }, {\n    key: \"expandIfNotCollapsed\",\n    value: function expandIfNotCollapsed() {\n      if (this.mapsService && !this.controlOption.collapsed) {\n        this.expand();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"onLayerChange\",\n    value: function onLayerChange(e) {\n      if (!this.handlingClick) {\n        this.update();\n      }\n\n      var obj = this.layerService.getLayer(e.target.layerId);\n      var type = obj !== null && obj !== void 0 && obj.overlay ? e.type === 'add' ? 'overlayadd' : 'overlayremove' : e.type === 'add' ? 'baselayerchange' : null;\n\n      if (type) {\n        this.emit(type, obj);\n      }\n    }\n  }, {\n    key: \"createRadioElement\",\n    value: function createRadioElement(name, checked) {\n      var radioHtml = '<input type=\"radio\" class=\"l7-control-layers-selector\" name=\"' + name + '\"' + (checked ? ' checked=\"checked\"' : '') + '/>';\n      var radioFragment = document.createElement('div');\n      radioFragment.innerHTML = radioHtml;\n      return radioFragment.firstChild;\n    }\n  }, {\n    key: \"addItem\",\n    value: function addItem(obj) {\n      var label = document.createElement('label');\n      var layer = this.layerService.getLayer(obj.layer.id);\n      var checked = layer && layer.inited && obj.layer.isVisible();\n      var input;\n\n      if (obj.overlay) {\n        input = document.createElement('input');\n        input.type = 'checkbox';\n        input.className = 'l7-control-layers-selector';\n        input.defaultChecked = checked;\n      } else {\n        input = this.createRadioElement('l7-base-layers', checked);\n      }\n\n      this.layerControlInputs.push(input);\n      input.layerId = obj.layer.id;\n      input.addEventListener('click', this.onInputClick);\n      var name = document.createElement('span');\n      name.innerHTML = ' ' + obj.name;\n      var holder = document.createElement('div');\n      label.appendChild(holder);\n      holder.appendChild(input);\n      holder.appendChild(name);\n      var container = obj.overlay ? this.overlaysList : this.baseLayersList;\n      container.appendChild(label);\n      this.checkDisabledLayers();\n      return label;\n    }\n  }, {\n    key: \"onInputClick\",\n    value: function onInputClick() {\n      var inputs = this.layerControlInputs;\n      var input;\n      var layer;\n      var addedLayers = [];\n      var removedLayers = [];\n      this.handlingClick = true;\n\n      for (var i = inputs.length - 1; i >= 0; i--) {\n        input = inputs[i];\n        layer = this.layerService.getLayer(input.layerId);\n\n        if (input.checked) {\n          addedLayers.push(layer);\n        } else if (!input.checked) {\n          removedLayers.push(layer);\n        }\n      }\n\n      removedLayers.forEach(function (l) {\n        l.hide();\n      });\n      addedLayers.forEach(function (l) {\n        l.show();\n      });\n      this.handlingClick = false;\n    }\n  }]);\n\n  return Layers;\n}(Control);\n\nexport { Layers as default };","map":{"version":3,"sources":["../../src/control/layer.ts"],"names":["Layers","Control","bindAll","collapsed","position","PositionType","autoZIndex","hideSingleBase","sortLayers","name","layerItem","height","DOM","acceptableHeight","className","container","form","link","baseLayers","overlayers","Object","baseLayersCount","i","obj","overlaysPresent","baseLayersPresent","inputs","zoom","input","layer","minZoom","maxZoom","overlay","sortFunction","a","b","e","type","radioHtml","checked","radioFragment","document","label","holder","addedLayers","removedLayers","l"],"mappings":"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","sourcesContent":["import { IControlOption, PositionName, PositionType } from '@antv/l7-core';\nimport { bindAll, DOM, lnglatDistance } from '@antv/l7-utils';\nimport Control from './BaseControl';\nexport interface ILayerControlOption extends IControlOption {\n  collapsed: boolean;\n  autoZIndex: boolean;\n  hideSingleBase: boolean;\n  sortLayers: boolean;\n\n  sortFunction: (...args: any[]) => any;\n}\ninterface IInputItem extends HTMLInputElement {\n  layerId: string;\n}\nexport default class Layers extends Control {\n  private layerControlInputs: any[];\n  private layers: any[];\n  private lastZIndex: number;\n  private handlingClick: boolean;\n  private layersLink: HTMLElement;\n  private baseLayersList: HTMLElement;\n  private separator: HTMLElement;\n  private overlaysList: HTMLElement;\n  private form: HTMLElement;\n\n  constructor(cfg: Partial<ILayerControlOption>) {\n    super(cfg);\n    this.layerControlInputs = [];\n    this.layers = [];\n    this.lastZIndex = 0;\n    this.handlingClick = false;\n    this.initLayers();\n\n    bindAll(\n      [\n        'checkDisabledLayers',\n        'onLayerChange',\n        'collapse',\n        'extend',\n        'expand',\n        'onInputClick',\n      ],\n      this,\n    );\n  }\n\n  public getDefault() {\n    return {\n      collapsed: true,\n      position: PositionType.TOPRIGHT,\n      autoZIndex: true,\n      hideSingleBase: false,\n      sortLayers: false,\n      name: 'layers',\n    };\n  }\n  public onAdd() {\n    this.initLayout();\n    this.update();\n    this.mapsService.on('zoomend', this.checkDisabledLayers);\n    this.layers.forEach((layerItem) => {\n      layerItem.layer.on('remove', this.onLayerChange);\n      layerItem.layer.on('add', this.onLayerChange);\n    });\n    return this.container;\n  }\n\n  public addVisualLayer(layer: any, name: string | number) {\n    this.addLayer(layer, name, true);\n    return this.mapsService ? this.update() : this;\n  }\n  public expand() {\n    const { height } = this.renderService.getViewportSize();\n    DOM.addClass(this.container, 'l7-control-layers-expanded');\n    this.form.style.height = 'null';\n    const acceptableHeight = height - (this.container.offsetTop + 50);\n    if (acceptableHeight < this.form.clientHeight) {\n      DOM.addClass(this.form, 'l7-control-layers-scrollbar');\n      this.form.style.height = acceptableHeight + 'px';\n    } else {\n      DOM.removeClass(this.form, 'l7-control-layers-scrollbar');\n    }\n    this.checkDisabledLayers();\n    return this;\n  }\n\n  public collapse() {\n    DOM.removeClass(this.container, 'l7-control-layers-expanded');\n    return this;\n  }\n\n  public onRemove() {\n    if (!this.mapsService) {\n      return;\n    }\n    this.mapsService.off('click', this.collapse);\n    this.layers.forEach((layerItem) => {\n      layerItem.layer.off('remove', this.onLayerChange);\n      layerItem.layer.off('add', this.onLayerChange);\n    });\n  }\n  private initLayout() {\n    const className = 'l7-control-layers';\n    const container = (this.container = DOM.create('div', className));\n    const { collapsed } = this.controlOption;\n    // makes this work on IE touch devices by stopping it from firing a mouseout event when the touch is released\n    container.setAttribute('aria-haspopup', 'true');\n    const form = (this.form = DOM.create(\n      'form',\n      className + '-list',\n    ) as HTMLElement);\n\n    if (collapsed) {\n      this.mapsService.on('click', this.collapse);\n      container.addEventListener('mouseenter', this.expand);\n      container.addEventListener('mouseleave', this.collapse);\n    }\n\n    this.layersLink = DOM.create('a', className + '-toggle', container);\n    const link = this.layersLink;\n    // link.href = '#';\n    link.title = 'Layers';\n    if (!collapsed) {\n      this.expand();\n    }\n    this.baseLayersList = DOM.create('div', className + '-base', form);\n    this.separator = DOM.create('div', className + '-separator', form);\n    this.overlaysList = DOM.create('div', className + '-overlays', form);\n    container.appendChild(form);\n  }\n  private initLayers() {\n    const { baseLayers = {}, overlayers = {} } = this.controlOption;\n    Object.keys(baseLayers).forEach((name: string, index: number) => {\n      // baseLayers[name].once('inited', this.update);\n      this.addLayer(baseLayers[name], name, false);\n    });\n    Object.keys(overlayers).forEach((name: any, index: number) => {\n      // overlayers[name].once('inited', this.update);\n      this.addLayer(overlayers[name], name, true);\n    });\n  }\n\n  private update() {\n    if (!this.container) {\n      return this;\n    }\n\n    DOM.empty(this.baseLayersList);\n    DOM.empty(this.overlaysList);\n\n    this.layerControlInputs = [];\n    let baseLayersPresent;\n    let overlaysPresent;\n    let i;\n    let obj;\n    let baseLayersCount = 0;\n\n    for (i = 0; i < this.layers.length; i++) {\n      obj = this.layers[i];\n      this.addItem(obj);\n      overlaysPresent = overlaysPresent || obj.overlay;\n      baseLayersPresent = baseLayersPresent || !obj.overlay;\n      baseLayersCount += !obj.overlay ? 1 : 0;\n    }\n\n    // Hide base layers section if there's only one layer.\n    if (this.controlOption.hideSingleBase) {\n      baseLayersPresent = baseLayersPresent && baseLayersCount > 1;\n      this.baseLayersList.style.display = baseLayersPresent ? '' : 'none';\n    }\n\n    this.separator.style.display =\n      overlaysPresent && baseLayersPresent ? '' : 'none';\n\n    return this;\n  }\n\n  private checkDisabledLayers() {\n    const inputs = this.layerControlInputs;\n    let input: IInputItem;\n    let layer;\n    const zoom = this.mapsService.getZoom();\n\n    for (let i = inputs.length - 1; i >= 0; i--) {\n      input = inputs[i];\n      layer = this.layerService.getLayer(input.layerId);\n\n      if (layer && layer.inited) {\n        const minZoom = layer.getMinZoom();\n        const maxZoom = layer.getMaxZoom();\n\n        input.disabled = zoom < minZoom || zoom > maxZoom;\n      }\n    }\n  }\n\n  private addLayer(layer: any, name: string | number, overlay: boolean) {\n    if (this.mapsService) {\n      layer.on('add', this.onLayerChange);\n      layer.on('remove', this.onLayerChange);\n    }\n    this.layers.push({\n      layer,\n      name,\n      overlay,\n    });\n    const { sortLayers, sortFunction, autoZIndex } = this.controlOption;\n    if (sortLayers) {\n      this.layers.sort((a, b) => {\n        return sortFunction(a.layer, b.layer, a.name, b.name);\n      });\n    }\n\n    if (autoZIndex && layer.setZIndex) {\n      this.lastZIndex++;\n      layer.setZIndex(this.lastZIndex);\n    }\n\n    this.expandIfNotCollapsed();\n  }\n\n  private expandIfNotCollapsed() {\n    if (this.mapsService && !this.controlOption.collapsed) {\n      this.expand();\n    }\n    return this;\n  }\n\n  private onLayerChange(e: any) {\n    if (!this.handlingClick) {\n      this.update();\n    }\n\n    const obj = this.layerService.getLayer(e.target.layerId);\n\n    // @ts-ignore\n    const type = obj?.overlay\n      ? e.type === 'add'\n        ? 'overlayadd'\n        : 'overlayremove'\n      : e.type === 'add'\n      ? 'baselayerchange'\n      : null;\n\n    if (type) {\n      this.emit(type, obj);\n    }\n  }\n\n  private createRadioElement(name: string, checked: boolean): ChildNode {\n    const radioHtml =\n      '<input type=\"radio\" class=\"l7-control-layers-selector\" name=\"' +\n      name +\n      '\"' +\n      (checked ? ' checked=\"checked\"' : '') +\n      '/>';\n\n    const radioFragment = document.createElement('div');\n    radioFragment.innerHTML = radioHtml;\n\n    return radioFragment.firstChild as ChildNode;\n  }\n\n  private addItem(obj: any) {\n    const label = document.createElement('label');\n    const layer = this.layerService.getLayer(obj.layer.id);\n    const checked = layer && layer.inited && obj.layer.isVisible();\n    let input: IInputItem;\n    if (obj.overlay) {\n      input = document.createElement('input') as IInputItem;\n      input.type = 'checkbox';\n      input.className = 'l7-control-layers-selector';\n      input.defaultChecked = checked;\n    } else {\n      input = this.createRadioElement('l7-base-layers', checked) as IInputItem;\n    }\n    this.layerControlInputs.push(input);\n    input.layerId = obj.layer.id;\n    input.addEventListener('click', this.onInputClick);\n\n    const name = document.createElement('span');\n    name.innerHTML = ' ' + obj.name;\n\n    const holder = document.createElement('div');\n\n    label.appendChild(holder);\n    holder.appendChild(input);\n    holder.appendChild(name);\n\n    const container = obj.overlay ? this.overlaysList : this.baseLayersList;\n    container.appendChild(label);\n\n    this.checkDisabledLayers();\n    return label;\n  }\n\n  private onInputClick() {\n    const inputs = this.layerControlInputs;\n    let input;\n    let layer;\n    const addedLayers = [];\n    const removedLayers = [];\n    this.handlingClick = true;\n    for (let i = inputs.length - 1; i >= 0; i--) {\n      input = inputs[i];\n      layer = this.layerService.getLayer(input.layerId);\n      if (input.checked) {\n        addedLayers.push(layer);\n      } else if (!input.checked) {\n        removedLayers.push(layer);\n      }\n    }\n    removedLayers.forEach((l: any) => {\n      l.hide();\n    });\n    addedLayers.forEach((l: any) => {\n      l.show();\n    });\n\n    this.handlingClick = false;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}