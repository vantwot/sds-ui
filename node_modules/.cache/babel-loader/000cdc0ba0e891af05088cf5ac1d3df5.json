{"ast":null,"code":"export var Timing;\n\n(function (Timing) {\n  Timing.linear = t => t;\n\n  Timing.quad = t => t * t;\n\n  Timing.cubic = t => t * t * t;\n\n  Timing.inout = t => {\n    if (t <= 0) {\n      return 0;\n    }\n\n    if (t >= 1) {\n      return 1;\n    }\n\n    const t2 = t * t;\n    const t3 = t2 * t;\n    return 4 * (t < 0.5 ? t3 : 3 * (t - t2) + t3 - 0.75);\n  };\n\n  Timing.exponential = t => {\n    return Math.pow(2, 10 * (t - 1)); // eslint-disable-line\n  };\n\n  Timing.bounce = t => {\n    // eslint-disable-next-line\n    for (let a = 0, b = 1; 1; a += b, b /= 2) {\n      if (t >= (7 - 4 * a) / 11) {\n        const q = (11 - 6 * a - 11 * t) / 4;\n        return -q * q + b * b;\n      }\n    }\n  };\n})(Timing || (Timing = {}));\n\n(function (Timing) {\n  Timing.decorators = {\n    reverse(f) {\n      return t => 1 - f(1 - t);\n    },\n\n    reflect(f) {\n      return t => 0.5 * (t < 0.5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    },\n\n    clamp(f) {\n      let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      let x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return t => {\n        const r = f(t);\n        return r < n ? n : r > x ? x : r;\n      };\n    },\n\n    back() {\n      let s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1.70158;\n      return t => t * t * ((s + 1) * t - s);\n    },\n\n    elastic() {\n      let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1.5;\n      return t => Math.pow(2, 10 * (t - 1)) * Math.cos(20 * Math.PI * x / 3 * t); // eslint-disable-line\n    }\n\n  };\n})(Timing || (Timing = {}));\n\n(function (Timing) {\n  // Slight acceleration from zero to full speed\n  function easeInSine(t) {\n    return -1 * Math.cos(t * (Math.PI / 2)) + 1;\n  }\n\n  Timing.easeInSine = easeInSine; // Slight deceleration at the end\n\n  function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  }\n\n  Timing.easeOutSine = easeOutSine; // Slight acceleration at beginning and slight deceleration at end\n\n  function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  }\n\n  Timing.easeInOutSine = easeInOutSine; // Accelerating from zero velocity\n\n  function easeInQuad(t) {\n    return t * t;\n  }\n\n  Timing.easeInQuad = easeInQuad; // Decelerating to zero velocity\n\n  function easeOutQuad(t) {\n    return t * (2 - t);\n  }\n\n  Timing.easeOutQuad = easeOutQuad; // Acceleration until halfway, then deceleration\n\n  function easeInOutQuad(t) {\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n  }\n\n  Timing.easeInOutQuad = easeInOutQuad; // Accelerating from zero velocity\n\n  function easeInCubic(t) {\n    return t * t * t;\n  }\n\n  Timing.easeInCubic = easeInCubic; // Decelerating to zero velocity\n\n  function easeOutCubic(t) {\n    const t1 = t - 1;\n    return t1 * t1 * t1 + 1;\n  }\n\n  Timing.easeOutCubic = easeOutCubic; // Acceleration until halfway, then deceleration\n\n  function easeInOutCubic(t) {\n    return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n  }\n\n  Timing.easeInOutCubic = easeInOutCubic; // Accelerating from zero velocity\n\n  function easeInQuart(t) {\n    return t * t * t * t;\n  }\n\n  Timing.easeInQuart = easeInQuart; // Decelerating to zero velocity\n\n  function easeOutQuart(t) {\n    const t1 = t - 1;\n    return 1 - t1 * t1 * t1 * t1;\n  }\n\n  Timing.easeOutQuart = easeOutQuart; // Acceleration until halfway, then deceleration\n\n  function easeInOutQuart(t) {\n    const t1 = t - 1;\n    return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * t1 * t1 * t1 * t1;\n  }\n\n  Timing.easeInOutQuart = easeInOutQuart; // Accelerating from zero velocity\n\n  function easeInQuint(t) {\n    return t * t * t * t * t;\n  }\n\n  Timing.easeInQuint = easeInQuint; // Decelerating to zero velocity\n\n  function easeOutQuint(t) {\n    const t1 = t - 1;\n    return 1 + t1 * t1 * t1 * t1 * t1;\n  }\n\n  Timing.easeOutQuint = easeOutQuint; // Acceleration until halfway, then deceleration\n\n  function easeInOutQuint(t) {\n    const t1 = t - 1;\n    return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * t1 * t1 * t1 * t1 * t1;\n  }\n\n  Timing.easeInOutQuint = easeInOutQuint; // Accelerate exponentially until finish\n\n  function easeInExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    return Math.pow(2, 10 * (t - 1)); // eslint-disable-line\n  }\n\n  Timing.easeInExpo = easeInExpo; // Initial exponential acceleration slowing to stop\n\n  function easeOutExpo(t) {\n    if (t === 1) {\n      return 1;\n    }\n\n    return -Math.pow(2, -10 * t) + 1; // eslint-disable-line\n  }\n\n  Timing.easeOutExpo = easeOutExpo; // Exponential acceleration and deceleration\n\n  function easeInOutExpo(t) {\n    if (t === 0 || t === 1) {\n      return t;\n    }\n\n    const scaledTime = t * 2;\n    const scaledTime1 = scaledTime - 1;\n\n    if (scaledTime < 1) {\n      return 0.5 * Math.pow(2, 10 * scaledTime1); // eslint-disable-line\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * scaledTime1) + 2); // eslint-disable-line\n  }\n\n  Timing.easeInOutExpo = easeInOutExpo; // Increasing velocity until stop\n\n  function easeInCirc(t) {\n    const scaledTime = t / 1;\n    return -1 * (Math.sqrt(1 - scaledTime * t) - 1);\n  }\n\n  Timing.easeInCirc = easeInCirc; // Start fast, decreasing velocity until stop\n\n  function easeOutCirc(t) {\n    const t1 = t - 1;\n    return Math.sqrt(1 - t1 * t1);\n  }\n\n  Timing.easeOutCirc = easeOutCirc; // Fast increase in velocity, fast decrease in velocity\n\n  function easeInOutCirc(t) {\n    const scaledTime = t * 2;\n    const scaledTime1 = scaledTime - 2;\n\n    if (scaledTime < 1) {\n      return -0.5 * (Math.sqrt(1 - scaledTime * scaledTime) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - scaledTime1 * scaledTime1) + 1);\n  }\n\n  Timing.easeInOutCirc = easeInOutCirc; // Slow movement backwards then fast snap to finish\n\n  function easeInBack(t) {\n    let magnitude = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1.70158;\n    return t * t * ((magnitude + 1) * t - magnitude);\n  }\n\n  Timing.easeInBack = easeInBack; // Fast snap to backwards point then slow resolve to finish\n\n  function easeOutBack(t) {\n    let magnitude = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1.70158;\n    const scaledTime = t / 1 - 1;\n    return scaledTime * scaledTime * ((magnitude + 1) * scaledTime + magnitude) + 1;\n  }\n\n  Timing.easeOutBack = easeOutBack; // Slow movement backwards, fast snap to past finish, slow resolve to finish\n\n  function easeInOutBack(t) {\n    let magnitude = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1.70158;\n    const scaledTime = t * 2;\n    const scaledTime2 = scaledTime - 2;\n    const s = magnitude * 1.525;\n\n    if (scaledTime < 1) {\n      return 0.5 * scaledTime * scaledTime * ((s + 1) * scaledTime - s);\n    }\n\n    return 0.5 * (scaledTime2 * scaledTime2 * ((s + 1) * scaledTime2 + s) + 2);\n  }\n\n  Timing.easeInOutBack = easeInOutBack; // Bounces slowly then quickly to finish\n\n  function easeInElastic(t) {\n    let magnitude = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.7;\n\n    if (t === 0 || t === 1) {\n      return t;\n    }\n\n    const scaledTime = t / 1;\n    const scaledTime1 = scaledTime - 1;\n    const p = 1 - magnitude;\n    const s = p / (2 * Math.PI) * Math.asin(1);\n    return -(Math.pow(2, 10 * scaledTime1) * // eslint-disable-line\n    Math.sin((scaledTime1 - s) * (2 * Math.PI) / p));\n  }\n\n  Timing.easeInElastic = easeInElastic; // Fast acceleration, bounces to zero\n\n  function easeOutElastic(t) {\n    let magnitude = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.7;\n    const p = 1 - magnitude;\n    const scaledTime = t * 2;\n\n    if (t === 0 || t === 1) {\n      return t;\n    }\n\n    const s = p / (2 * Math.PI) * Math.asin(1);\n    return Math.pow(2, -10 * scaledTime) * // eslint-disable-line\n    Math.sin((scaledTime - s) * (2 * Math.PI) / p) + 1;\n  }\n\n  Timing.easeOutElastic = easeOutElastic; // Slow start and end, two bounces sandwich a fast motion\n\n  function easeInOutElastic(t) {\n    let magnitude = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.65;\n    const p = 1 - magnitude;\n\n    if (t === 0 || t === 1) {\n      return t;\n    }\n\n    const scaledTime = t * 2;\n    const scaledTime1 = scaledTime - 1;\n    const s = p / (2 * Math.PI) * Math.asin(1);\n\n    if (scaledTime < 1) {\n      return -0.5 * (Math.pow(2, 10 * scaledTime1) * // eslint-disable-line\n      Math.sin((scaledTime1 - s) * (2 * Math.PI) / p));\n    }\n\n    return Math.pow(2, -10 * scaledTime1) * // eslint-disable-line\n    Math.sin((scaledTime1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  }\n\n  Timing.easeInOutElastic = easeInOutElastic; // Bounce to completion\n\n  function easeOutBounce(t) {\n    const scaledTime = t / 1;\n\n    if (scaledTime < 1 / 2.75) {\n      return 7.5625 * scaledTime * scaledTime;\n    }\n\n    if (scaledTime < 2 / 2.75) {\n      const scaledTime2 = scaledTime - 1.5 / 2.75;\n      return 7.5625 * scaledTime2 * scaledTime2 + 0.75;\n    }\n\n    if (scaledTime < 2.5 / 2.75) {\n      const scaledTime2 = scaledTime - 2.25 / 2.75;\n      return 7.5625 * scaledTime2 * scaledTime2 + 0.9375;\n    }\n\n    {\n      const scaledTime2 = scaledTime - 2.625 / 2.75;\n      return 7.5625 * scaledTime2 * scaledTime2 + 0.984375;\n    }\n  }\n\n  Timing.easeOutBounce = easeOutBounce; // Bounce increasing in velocity until completion\n\n  function easeInBounce(t) {\n    return 1 - easeOutBounce(1 - t);\n  }\n\n  Timing.easeInBounce = easeInBounce; // Bounce in and bounce out\n\n  function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return easeInBounce(t * 2) * 0.5;\n    }\n\n    return easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n\n  Timing.easeInOutBounce = easeInOutBounce;\n})(Timing || (Timing = {}));","map":{"version":3,"sources":["../../../src/common/animation/timing.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["export var Timing;\n(function (Timing) {\n    Timing.linear = (t) => t;\n    Timing.quad = (t) => t * t;\n    Timing.cubic = (t) => t * t * t;\n    Timing.inout = (t) => {\n        if (t <= 0) {\n            return 0;\n        }\n        if (t >= 1) {\n            return 1;\n        }\n        const t2 = t * t;\n        const t3 = t2 * t;\n        return 4 * (t < 0.5 ? t3 : 3 * (t - t2) + t3 - 0.75);\n    };\n    Timing.exponential = (t) => {\n        return Math.pow(2, 10 * (t - 1)); // eslint-disable-line\n    };\n    Timing.bounce = ((t) => {\n        // eslint-disable-next-line\n        for (let a = 0, b = 1; 1; a += b, b /= 2) {\n            if (t >= (7 - 4 * a) / 11) {\n                const q = (11 - 6 * a - 11 * t) / 4;\n                return -q * q + b * b;\n            }\n        }\n    });\n})(Timing || (Timing = {}));\n(function (Timing) {\n    Timing.decorators = {\n        reverse(f) {\n            return (t) => 1 - f(1 - t);\n        },\n        reflect(f) {\n            return (t) => 0.5 * (t < 0.5 ? f(2 * t) : 2 - f(2 - 2 * t));\n        },\n        clamp(f, n = 0, x = 1) {\n            return (t) => {\n                const r = f(t);\n                return r < n ? n : r > x ? x : r;\n            };\n        },\n        back(s = 1.70158) {\n            return (t) => t * t * ((s + 1) * t - s);\n        },\n        elastic(x = 1.5) {\n            return (t) => Math.pow(2, 10 * (t - 1)) * Math.cos(((20 * Math.PI * x) / 3) * t); // eslint-disable-line\n        },\n    };\n})(Timing || (Timing = {}));\n(function (Timing) {\n    // Slight acceleration from zero to full speed\n    function easeInSine(t) {\n        return -1 * Math.cos(t * (Math.PI / 2)) + 1;\n    }\n    Timing.easeInSine = easeInSine;\n    // Slight deceleration at the end\n    function easeOutSine(t) {\n        return Math.sin(t * (Math.PI / 2));\n    }\n    Timing.easeOutSine = easeOutSine;\n    // Slight acceleration at beginning and slight deceleration at end\n    function easeInOutSine(t) {\n        return -0.5 * (Math.cos(Math.PI * t) - 1);\n    }\n    Timing.easeInOutSine = easeInOutSine;\n    // Accelerating from zero velocity\n    function easeInQuad(t) {\n        return t * t;\n    }\n    Timing.easeInQuad = easeInQuad;\n    // Decelerating to zero velocity\n    function easeOutQuad(t) {\n        return t * (2 - t);\n    }\n    Timing.easeOutQuad = easeOutQuad;\n    // Acceleration until halfway, then deceleration\n    function easeInOutQuad(t) {\n        return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    }\n    Timing.easeInOutQuad = easeInOutQuad;\n    // Accelerating from zero velocity\n    function easeInCubic(t) {\n        return t * t * t;\n    }\n    Timing.easeInCubic = easeInCubic;\n    // Decelerating to zero velocity\n    function easeOutCubic(t) {\n        const t1 = t - 1;\n        return t1 * t1 * t1 + 1;\n    }\n    Timing.easeOutCubic = easeOutCubic;\n    // Acceleration until halfway, then deceleration\n    function easeInOutCubic(t) {\n        return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    }\n    Timing.easeInOutCubic = easeInOutCubic;\n    // Accelerating from zero velocity\n    function easeInQuart(t) {\n        return t * t * t * t;\n    }\n    Timing.easeInQuart = easeInQuart;\n    // Decelerating to zero velocity\n    function easeOutQuart(t) {\n        const t1 = t - 1;\n        return 1 - t1 * t1 * t1 * t1;\n    }\n    Timing.easeOutQuart = easeOutQuart;\n    // Acceleration until halfway, then deceleration\n    function easeInOutQuart(t) {\n        const t1 = t - 1;\n        return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * t1 * t1 * t1 * t1;\n    }\n    Timing.easeInOutQuart = easeInOutQuart;\n    // Accelerating from zero velocity\n    function easeInQuint(t) {\n        return t * t * t * t * t;\n    }\n    Timing.easeInQuint = easeInQuint;\n    // Decelerating to zero velocity\n    function easeOutQuint(t) {\n        const t1 = t - 1;\n        return 1 + t1 * t1 * t1 * t1 * t1;\n    }\n    Timing.easeOutQuint = easeOutQuint;\n    // Acceleration until halfway, then deceleration\n    function easeInOutQuint(t) {\n        const t1 = t - 1;\n        return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * t1 * t1 * t1 * t1 * t1;\n    }\n    Timing.easeInOutQuint = easeInOutQuint;\n    // Accelerate exponentially until finish\n    function easeInExpo(t) {\n        if (t === 0) {\n            return 0;\n        }\n        return Math.pow(2, 10 * (t - 1)); // eslint-disable-line\n    }\n    Timing.easeInExpo = easeInExpo;\n    // Initial exponential acceleration slowing to stop\n    function easeOutExpo(t) {\n        if (t === 1) {\n            return 1;\n        }\n        return -Math.pow(2, -10 * t) + 1; // eslint-disable-line\n    }\n    Timing.easeOutExpo = easeOutExpo;\n    // Exponential acceleration and deceleration\n    function easeInOutExpo(t) {\n        if (t === 0 || t === 1) {\n            return t;\n        }\n        const scaledTime = t * 2;\n        const scaledTime1 = scaledTime - 1;\n        if (scaledTime < 1) {\n            return 0.5 * Math.pow(2, 10 * scaledTime1); // eslint-disable-line\n        }\n        return 0.5 * (-Math.pow(2, -10 * scaledTime1) + 2); // eslint-disable-line\n    }\n    Timing.easeInOutExpo = easeInOutExpo;\n    // Increasing velocity until stop\n    function easeInCirc(t) {\n        const scaledTime = t / 1;\n        return -1 * (Math.sqrt(1 - scaledTime * t) - 1);\n    }\n    Timing.easeInCirc = easeInCirc;\n    // Start fast, decreasing velocity until stop\n    function easeOutCirc(t) {\n        const t1 = t - 1;\n        return Math.sqrt(1 - t1 * t1);\n    }\n    Timing.easeOutCirc = easeOutCirc;\n    // Fast increase in velocity, fast decrease in velocity\n    function easeInOutCirc(t) {\n        const scaledTime = t * 2;\n        const scaledTime1 = scaledTime - 2;\n        if (scaledTime < 1) {\n            return -0.5 * (Math.sqrt(1 - scaledTime * scaledTime) - 1);\n        }\n        return 0.5 * (Math.sqrt(1 - scaledTime1 * scaledTime1) + 1);\n    }\n    Timing.easeInOutCirc = easeInOutCirc;\n    // Slow movement backwards then fast snap to finish\n    function easeInBack(t, magnitude = 1.70158) {\n        return t * t * ((magnitude + 1) * t - magnitude);\n    }\n    Timing.easeInBack = easeInBack;\n    // Fast snap to backwards point then slow resolve to finish\n    function easeOutBack(t, magnitude = 1.70158) {\n        const scaledTime = t / 1 - 1;\n        return (scaledTime * scaledTime * ((magnitude + 1) * scaledTime + magnitude) + 1);\n    }\n    Timing.easeOutBack = easeOutBack;\n    // Slow movement backwards, fast snap to past finish, slow resolve to finish\n    function easeInOutBack(t, magnitude = 1.70158) {\n        const scaledTime = t * 2;\n        const scaledTime2 = scaledTime - 2;\n        const s = magnitude * 1.525;\n        if (scaledTime < 1) {\n            return 0.5 * scaledTime * scaledTime * ((s + 1) * scaledTime - s);\n        }\n        return 0.5 * (scaledTime2 * scaledTime2 * ((s + 1) * scaledTime2 + s) + 2);\n    }\n    Timing.easeInOutBack = easeInOutBack;\n    // Bounces slowly then quickly to finish\n    function easeInElastic(t, magnitude = 0.7) {\n        if (t === 0 || t === 1) {\n            return t;\n        }\n        const scaledTime = t / 1;\n        const scaledTime1 = scaledTime - 1;\n        const p = 1 - magnitude;\n        const s = (p / (2 * Math.PI)) * Math.asin(1);\n        return -(Math.pow(2, 10 * scaledTime1) * // eslint-disable-line\n            Math.sin(((scaledTime1 - s) * (2 * Math.PI)) / p));\n    }\n    Timing.easeInElastic = easeInElastic;\n    // Fast acceleration, bounces to zero\n    function easeOutElastic(t, magnitude = 0.7) {\n        const p = 1 - magnitude;\n        const scaledTime = t * 2;\n        if (t === 0 || t === 1) {\n            return t;\n        }\n        const s = (p / (2 * Math.PI)) * Math.asin(1);\n        return (Math.pow(2, -10 * scaledTime) * // eslint-disable-line\n            Math.sin(((scaledTime - s) * (2 * Math.PI)) / p) +\n            1);\n    }\n    Timing.easeOutElastic = easeOutElastic;\n    // Slow start and end, two bounces sandwich a fast motion\n    function easeInOutElastic(t, magnitude = 0.65) {\n        const p = 1 - magnitude;\n        if (t === 0 || t === 1) {\n            return t;\n        }\n        const scaledTime = t * 2;\n        const scaledTime1 = scaledTime - 1;\n        const s = (p / (2 * Math.PI)) * Math.asin(1);\n        if (scaledTime < 1) {\n            return (-0.5 *\n                (Math.pow(2, 10 * scaledTime1) * // eslint-disable-line\n                    Math.sin(((scaledTime1 - s) * (2 * Math.PI)) / p)));\n        }\n        return (Math.pow(2, -10 * scaledTime1) * // eslint-disable-line\n            Math.sin(((scaledTime1 - s) * (2 * Math.PI)) / p) *\n            0.5 +\n            1);\n    }\n    Timing.easeInOutElastic = easeInOutElastic;\n    // Bounce to completion\n    function easeOutBounce(t) {\n        const scaledTime = t / 1;\n        if (scaledTime < 1 / 2.75) {\n            return 7.5625 * scaledTime * scaledTime;\n        }\n        if (scaledTime < 2 / 2.75) {\n            const scaledTime2 = scaledTime - 1.5 / 2.75;\n            return 7.5625 * scaledTime2 * scaledTime2 + 0.75;\n        }\n        if (scaledTime < 2.5 / 2.75) {\n            const scaledTime2 = scaledTime - 2.25 / 2.75;\n            return 7.5625 * scaledTime2 * scaledTime2 + 0.9375;\n        }\n        {\n            const scaledTime2 = scaledTime - 2.625 / 2.75;\n            return 7.5625 * scaledTime2 * scaledTime2 + 0.984375;\n        }\n    }\n    Timing.easeOutBounce = easeOutBounce;\n    // Bounce increasing in velocity until completion\n    function easeInBounce(t) {\n        return 1 - easeOutBounce(1 - t);\n    }\n    Timing.easeInBounce = easeInBounce;\n    // Bounce in and bounce out\n    function easeInOutBounce(t) {\n        if (t < 0.5) {\n            return easeInBounce(t * 2) * 0.5;\n        }\n        return easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n    Timing.easeInOutBounce = easeInOutBounce;\n})(Timing || (Timing = {}));\n//# sourceMappingURL=timing.js.map"]},"metadata":{},"sourceType":"module"}