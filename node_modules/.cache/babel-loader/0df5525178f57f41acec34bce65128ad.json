{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n/* eslint-disable @typescript-eslint/no-redeclare */\n\n/* eslint-disable no-await-in-loop */\n\n/* eslint-disable max-classes-per-file */\n\n\nimport { inject, singleton, contrib, Contribution } from 'mana-syringe';\nimport { Node as X6Node, Edge as X6Edge } from '@antv/x6';\nimport { IGraphProvider } from '../xflow-main/graph/graph-provider';\nimport { IGraphCommandService } from '../command/interface';\nimport { IModelService } from '../model-service';\nimport { IFrontendApplicationContribution } from './interface';\nimport { cellsToJson } from '../common/graph-utils';\nexport { IFrontendApplicationContribution } from './interface';\nconst TIMER_WARNING_THRESHOLD = 100;\nlet FrontendApplication = class FrontendApplication {\n  constructor() {\n    /** 获取画布配置项 */\n    this.getGraphData = () => __awaiter(this, void 0, void 0, function* () {\n      const graph = yield this.graphProvider.getGraphInstance();\n      const cells = graph.getCells();\n      return cellsToJson(cells);\n    });\n  }\n  /** 启动app */\n\n\n  start() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.startContributions();\n      this.registerEventListeners();\n    });\n  }\n  /** 获取画布实例 */\n\n\n  getGraphInstance() {\n    return this.graphProvider.getGraphInstance();\n  }\n  /** 获取画布配置项 */\n\n\n  getGraphConfig() {\n    return this.graphProvider.getGraphOptions();\n  }\n  /** 获取画布所有节点 */\n\n\n  getAllNodes() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const graph = yield this.graphProvider.getGraphInstance();\n      return graph.getNodes();\n    });\n  }\n  /** 获取画布节点 */\n\n\n  getNodeById(nodeId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const graph = yield this.graphProvider.getGraphInstance();\n      return graph.getCellById(nodeId);\n    });\n  }\n  /** 获取画布所有连线 */\n\n\n  getAllEdges() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const graph = yield this.graphProvider.getGraphInstance();\n      return graph.getEdges();\n    });\n  }\n  /** 获取画布连线 */\n\n\n  getEdgeById(edgeId) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const graph = yield this.graphProvider.getGraphInstance();\n      return graph.getCellById(edgeId);\n    });\n  }\n  /** 更新节点样式 */\n\n\n  updateNodeAttrs(node, attrs) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (node instanceof X6Node) {\n        node.setAttrs(attrs);\n      } else {\n        const x6Node = yield this.getNodeById(node);\n        x6Node.setAttrs(attrs);\n      }\n    });\n  }\n  /** 更新连线样式 */\n\n\n  updateEdgeAttrs(edge, attrs) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (edge instanceof X6Edge) {\n        edge.setAttrs(attrs);\n      } else {\n        const x6Edge = yield this.getEdgeById(edge);\n        x6Edge.setAttrs(attrs);\n      }\n    });\n  }\n  /** 平移画布 */\n\n\n  translateGraph(tx, ty) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const graph = yield this.graphProvider.getGraphInstance();\n      const currentTranslate = graph.translate();\n      graph.translate(currentTranslate.tx + tx, currentTranslate.ty + ty);\n    });\n  }\n  /** 暴露命令的执行接口 */\n\n\n  executeCommand(commandId, cmdArgs) {\n    let hook = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return this.commandService.executeCommand(commandId, cmdArgs, hook);\n  }\n  /** 暴露命令的批量执行接口 */\n\n\n  executeCommandPipeline(cmdOptions) {\n    return this.commandService.executeCommandPipeline(cmdOptions);\n  }\n  /**\n   * Register global event listeners.\n   */\n\n\n  registerEventListeners() {\n    /** 触发app的卸载逻辑 */\n    window.addEventListener('unload', () => {\n      this.stopContributions();\n    });\n  }\n  /**\n   * Initialize and start the frontend application contributions.\n   */\n\n\n  startContributions() {\n    return __awaiter(this, void 0, void 0, function* () {\n      console.log(this.contributions.getContributions());\n\n      for (const contribution of this.contributions.getContributions()) {\n        if (contribution.onStart) {\n          try {\n            yield this.measure(`${contribution.constructor.name}.onStart`, () => contribution.onStart(this));\n          } catch (error) {\n            console.error('Could not start contribution', error);\n          }\n        }\n      }\n    });\n  }\n  /**\n   * Stop the frontend application contributions. This is called when the window is unloaded.\n   */\n\n\n  stopContributions() {\n    console.info('>>> Stopping frontend contributions...');\n\n    for (const contribution of this.contributions.getContributions()) {\n      if (contribution.onStop) {\n        try {\n          contribution.onStop(this);\n        } catch (error) {\n          console.error('Could not stop contribution', error);\n        }\n      }\n    }\n\n    console.info('<<< All frontend contributions have been stopped.');\n  }\n\n  measure(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const startMark = `${name}-start`;\n      const endMark = `${name}-end`;\n      performance.mark(startMark);\n      const result = yield fn();\n      performance.mark(endMark);\n      performance.measure(name, startMark, endMark);\n\n      for (const item of performance.getEntriesByName(name)) {\n        const contribution = `Frontend ${item.name}`;\n\n        if (item.duration > TIMER_WARNING_THRESHOLD) {\n          console.warn(`${contribution} is slow, took: ${item.duration.toFixed(1)} ms`);\n        } else {\n          console.debug(`${contribution} took: ${item.duration.toFixed(1)} ms`);\n        }\n      }\n\n      performance.clearMeasures(name);\n      return result;\n    });\n  }\n\n};\n\n__decorate([contrib(IFrontendApplicationContribution), __metadata(\"design:type\", Object)], FrontendApplication.prototype, \"contributions\", void 0);\n\n__decorate([inject(IGraphProvider), __metadata(\"design:type\", Object)], FrontendApplication.prototype, \"graphProvider\", void 0);\n\n__decorate([inject(IGraphCommandService), __metadata(\"design:type\", Object)], FrontendApplication.prototype, \"commandService\", void 0);\n\n__decorate([inject(IModelService), __metadata(\"design:type\", Object)], FrontendApplication.prototype, \"modelService\", void 0);\n\nFrontendApplication = __decorate([singleton()], FrontendApplication);\nexport { FrontendApplication };","map":{"version":3,"sources":["../../src/xflow-main/application.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/* eslint-disable @typescript-eslint/no-redeclare */\n/* eslint-disable no-await-in-loop */\n/* eslint-disable max-classes-per-file */\nimport { inject, singleton, contrib, Contribution } from 'mana-syringe';\nimport { Node as X6Node, Edge as X6Edge } from '@antv/x6';\nimport { IGraphProvider } from '../xflow-main/graph/graph-provider';\nimport { IGraphCommandService } from '../command/interface';\nimport { IModelService } from '../model-service';\nimport { IFrontendApplicationContribution } from './interface';\nimport { cellsToJson } from '../common/graph-utils';\nexport { IFrontendApplicationContribution } from './interface';\nconst TIMER_WARNING_THRESHOLD = 100;\nlet FrontendApplication = class FrontendApplication {\n    constructor() {\n        /** 获取画布配置项 */\n        this.getGraphData = () => __awaiter(this, void 0, void 0, function* () {\n            const graph = yield this.graphProvider.getGraphInstance();\n            const cells = graph.getCells();\n            return cellsToJson(cells);\n        });\n    }\n    /** 启动app */\n    start() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.startContributions();\n            this.registerEventListeners();\n        });\n    }\n    /** 获取画布实例 */\n    getGraphInstance() {\n        return this.graphProvider.getGraphInstance();\n    }\n    /** 获取画布配置项 */\n    getGraphConfig() {\n        return this.graphProvider.getGraphOptions();\n    }\n    /** 获取画布所有节点 */\n    getAllNodes() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const graph = yield this.graphProvider.getGraphInstance();\n            return graph.getNodes();\n        });\n    }\n    /** 获取画布节点 */\n    getNodeById(nodeId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const graph = yield this.graphProvider.getGraphInstance();\n            return graph.getCellById(nodeId);\n        });\n    }\n    /** 获取画布所有连线 */\n    getAllEdges() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const graph = yield this.graphProvider.getGraphInstance();\n            return graph.getEdges();\n        });\n    }\n    /** 获取画布连线 */\n    getEdgeById(edgeId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const graph = yield this.graphProvider.getGraphInstance();\n            return graph.getCellById(edgeId);\n        });\n    }\n    /** 更新节点样式 */\n    updateNodeAttrs(node, attrs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (node instanceof X6Node) {\n                node.setAttrs(attrs);\n            }\n            else {\n                const x6Node = yield this.getNodeById(node);\n                x6Node.setAttrs(attrs);\n            }\n        });\n    }\n    /** 更新连线样式 */\n    updateEdgeAttrs(edge, attrs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (edge instanceof X6Edge) {\n                edge.setAttrs(attrs);\n            }\n            else {\n                const x6Edge = yield this.getEdgeById(edge);\n                x6Edge.setAttrs(attrs);\n            }\n        });\n    }\n    /** 平移画布 */\n    translateGraph(tx, ty) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const graph = yield this.graphProvider.getGraphInstance();\n            const currentTranslate = graph.translate();\n            graph.translate(currentTranslate.tx + tx, currentTranslate.ty + ty);\n        });\n    }\n    /** 暴露命令的执行接口 */\n    executeCommand(commandId, cmdArgs, hook = []) {\n        return this.commandService.executeCommand(commandId, cmdArgs, hook);\n    }\n    /** 暴露命令的批量执行接口 */\n    executeCommandPipeline(cmdOptions) {\n        return this.commandService.executeCommandPipeline(cmdOptions);\n    }\n    /**\n     * Register global event listeners.\n     */\n    registerEventListeners() {\n        /** 触发app的卸载逻辑 */\n        window.addEventListener('unload', () => {\n            this.stopContributions();\n        });\n    }\n    /**\n     * Initialize and start the frontend application contributions.\n     */\n    startContributions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log(this.contributions.getContributions());\n            for (const contribution of this.contributions.getContributions()) {\n                if (contribution.onStart) {\n                    try {\n                        yield this.measure(`${contribution.constructor.name}.onStart`, () => contribution.onStart(this));\n                    }\n                    catch (error) {\n                        console.error('Could not start contribution', error);\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Stop the frontend application contributions. This is called when the window is unloaded.\n     */\n    stopContributions() {\n        console.info('>>> Stopping frontend contributions...');\n        for (const contribution of this.contributions.getContributions()) {\n            if (contribution.onStop) {\n                try {\n                    contribution.onStop(this);\n                }\n                catch (error) {\n                    console.error('Could not stop contribution', error);\n                }\n            }\n        }\n        console.info('<<< All frontend contributions have been stopped.');\n    }\n    measure(name, fn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const startMark = `${name}-start`;\n            const endMark = `${name}-end`;\n            performance.mark(startMark);\n            const result = yield fn();\n            performance.mark(endMark);\n            performance.measure(name, startMark, endMark);\n            for (const item of performance.getEntriesByName(name)) {\n                const contribution = `Frontend ${item.name}`;\n                if (item.duration > TIMER_WARNING_THRESHOLD) {\n                    console.warn(`${contribution} is slow, took: ${item.duration.toFixed(1)} ms`);\n                }\n                else {\n                    console.debug(`${contribution} took: ${item.duration.toFixed(1)} ms`);\n                }\n            }\n            performance.clearMeasures(name);\n            return result;\n        });\n    }\n};\n__decorate([\n    contrib(IFrontendApplicationContribution),\n    __metadata(\"design:type\", Object)\n], FrontendApplication.prototype, \"contributions\", void 0);\n__decorate([\n    inject(IGraphProvider),\n    __metadata(\"design:type\", Object)\n], FrontendApplication.prototype, \"graphProvider\", void 0);\n__decorate([\n    inject(IGraphCommandService),\n    __metadata(\"design:type\", Object)\n], FrontendApplication.prototype, \"commandService\", void 0);\n__decorate([\n    inject(IModelService),\n    __metadata(\"design:type\", Object)\n], FrontendApplication.prototype, \"modelService\", void 0);\nFrontendApplication = __decorate([\n    singleton()\n], FrontendApplication);\nexport { FrontendApplication };\n//# sourceMappingURL=application.js.map"]},"metadata":{},"sourceType":"module"}