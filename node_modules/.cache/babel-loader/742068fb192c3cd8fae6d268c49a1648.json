{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { DisposableCollection, Disposable } from '@antv/xflow-core';\nimport { IHookContribution, ManaSyringe } from '@antv/xflow-core';\n/**\n * 内置的hook contribution\n * 处理 config上的runtime的注册项\n */\n\nvar HookContribution = function HookContribution() {\n  var _this = this;\n\n  _classCallCheck(this, HookContribution);\n\n  this.toDispose = new DisposableCollection(); // args: registry: IHookService<ICmdHooks>\n\n  this.registerHookHub = function () {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Disposable.create(function () {}));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n\n  this.registerHook = function (hooks) {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _this2 = this;\n\n      var toDispose, disposables;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              toDispose = new DisposableCollection();\n              disposables = [hooks.graphOptions.registerHook({\n                name: 'add snapline options',\n                handler: function handler(args) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            // 对齐线配置，辅助移动节点排版（详细文档：https://X6.antv.vision/zh/docs/tutorial/basic/snapline）\n                            args.snapline = {\n                              enabled: true,\n                              className: 'xflow-snapline',\n                              clean: 5000\n                            };\n\n                          case 1:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n                }\n              })];\n              toDispose.pushAll(disposables);\n              return _context3.abrupt(\"return\", Disposable.create(function () {}));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n  };\n};\n\nHookContribution = __decorate([ManaSyringe.singleton({\n  contrib: IHookContribution\n})], HookContribution);\nexport { HookContribution };","map":{"version":3,"sources":["../../../src/canvas-snapline/contributions/hook.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,oBAAT,EAA+B,UAA/B,QAAiD,kBAAjD;AACA,SAAS,iBAAT,EAA4B,WAA5B,QAA+C,kBAA/C;AAEA;;;AAGG;;AAEH,IAAa,gBAAb,GAAA,4BAAA;AAAA;;AAAA;;AACE,OAAA,SAAA,GAAY,IAAI,oBAAJ,EAAZ,CADF,CAGE;;AACA,OAAA,eAAA,GAAkB;AAAA,WAAW,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACpB,UAAU,CAAC,MAAX,CAAkB,YAAK,CAAG,CAA1B,CADoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA,EAAX;AAAA,GAAlB;;AAIA,OAAA,YAAA,GAAe,UAAO,KAAP;AAAA,WAA2B,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAClC,cAAA,SADkC,GACtB,IAAI,oBAAJ,EADsB;AAElC,cAAA,WAFkC,GAEpB,CAClB,KAAK,CAAC,YAAN,CAAmB,YAAnB,CAAgC;AAC9B,gBAAA,IAAI,EAAE,sBADwB;AAE9B,gBAAA,OAAO,EAAE,iBAAM,IAAN;AAAA,yBAAa,SAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AACpB;AACA,4BAAA,IAAI,CAAC,QAAL,GAAgB;AACd,8BAAA,OAAO,EAAE,IADK;AAEd,8BAAA,SAAS,EAAE,gBAFG;AAGd,8BAAA,KAAK,EAAE;AAHO,6BAAhB;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA,EAAb;AAAA;AAFqB,eAAhC,CADkB,CAFoB;AAexC,cAAA,SAAS,CAAC,OAAV,CAAkB,WAAlB;AAfwC,gDAgBjC,UAAU,CAAC,MAAX,CAAkB,YAAK,CAAG,CAA1B,CAhBiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA,EAA3B;AAAA,GAAf;AAkBD,CA1BD;;AAAa,gBAAgB,GAAA,UAAA,CAAA,CAD5B,WAAW,CAAC,SAAZ,CAAsB;AAAE,EAAA,OAAO,EAAE;AAAX,CAAtB,CAC4B,CAAA,EAAhB,gBAAgB,CAAhB;SAAA,gB","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DisposableCollection, Disposable } from '@antv/xflow-core';\nimport { IHookContribution, ManaSyringe } from '@antv/xflow-core';\n/**\n * 内置的hook contribution\n * 处理 config上的runtime的注册项\n */\nlet HookContribution = class HookContribution {\n    constructor() {\n        this.toDispose = new DisposableCollection();\n        // args: registry: IHookService<ICmdHooks>\n        this.registerHookHub = () => __awaiter(this, void 0, void 0, function* () {\n            return Disposable.create(() => { });\n        });\n        this.registerHook = (hooks) => __awaiter(this, void 0, void 0, function* () {\n            const toDispose = new DisposableCollection();\n            const disposables = [\n                hooks.graphOptions.registerHook({\n                    name: 'add snapline options',\n                    handler: (args) => __awaiter(this, void 0, void 0, function* () {\n                        // 对齐线配置，辅助移动节点排版（详细文档：https://X6.antv.vision/zh/docs/tutorial/basic/snapline）\n                        args.snapline = {\n                            enabled: true,\n                            className: 'xflow-snapline',\n                            clean: 5000,\n                        };\n                    }),\n                }),\n            ];\n            toDispose.pushAll(disposables);\n            return Disposable.create(() => { });\n        });\n    }\n};\nHookContribution = __decorate([\n    ManaSyringe.singleton({ contrib: IHookContribution })\n], HookContribution);\nexport { HookContribution };\n//# sourceMappingURL=hook.js.map"]},"metadata":{},"sourceType":"module"}