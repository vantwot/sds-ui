{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nexport const noop = () => {\n  return {\n    dispose: () => {}\n  };\n};\nexport var NsXFlowHook;\n\n(function (NsXFlowHook) {\n  NsXFlowHook.CONFIG_TYPE = 'XFlowHook';\n})(NsXFlowHook || (NsXFlowHook = {}));\n\nexport class HookConfig {\n  constructor() {\n    /** CONFIG_TYPE */\n    this.CONFIG_TYPE = NsXFlowHook.CONFIG_TYPE;\n    this.time = Date.now();\n    /** 提供一个runtime注册hook的方式 */\n\n    this.setRegisterHook = fn => {\n      this.hookRegisterFunc = fn;\n    };\n    /** 这里在canvas上提供一个runtime注册hookhub的方式 */\n\n\n    this.setRegisterHookhub = fn => {\n      this.hookhubRegisterFn = fn;\n    };\n\n    this.getConfig = () => __awaiter(this, void 0, void 0, function* () {\n      const options = {\n        CONFIG_TYPE: this.CONFIG_TYPE,\n        hookRegisterFn: this.hookRegisterFunc || noop,\n        hookhubRegisterFn: this.hookhubRegisterFn || noop\n      };\n      return options;\n    });\n\n    this.dispose = () => {};\n  }\n\n}","map":{"version":3,"sources":["../../src/hooks/config.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,OAAO,MAAM,IAAI,GAAG,MAAK;AACvB,SAAO;AACL,IAAA,OAAO,EAAE,MAAK,CAAG;AADZ,GAAP;AAGD,CAJM;AAKP,OAAM,IAAW,WAAX;;AAAN,CAAA,UAAiB,WAAjB,EAA4B;AACb,EAAA,WAAA,CAAA,WAAA,GAAc,WAAd;AACd,CAFD,EAAiB,WAAW,KAAX,WAAW,GAAA,EAAA,CAA5B;;AAIA,OAAM,MAAO,UAAP,CAAiB;AAAvB,EAAA,WAAA,GAAA;AACE;AACS,SAAA,WAAA,GAAc,WAAW,CAAC,WAA1B;AAEF,SAAA,IAAA,GAAO,IAAI,CAAC,GAAL,EAAP;AAQP;;AACA,SAAA,eAAA,GAAmB,EAAD,IAAwB;AACxC,WAAK,gBAAL,GAAwB,EAAxB;AACD,KAFD;AAIA;;;AACA,SAAA,kBAAA,GAAsB,EAAD,IAA2B;AAC9C,WAAK,iBAAL,GAAyB,EAAzB;AACD,KAFD;;AAIA,SAAA,SAAA,GAAY,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACrB,YAAM,OAAO,GAAG;AACd,QAAA,WAAW,EAAE,KAAK,WADJ;AAEd,QAAA,cAAc,EAAE,KAAK,gBAAL,IAAyB,IAF3B;AAGd,QAAA,iBAAiB,EAAE,KAAK,iBAAL,IAA0B;AAH/B,OAAhB;AAKA,aAAO,OAAP;AACD,KAPsB,CAAvB;;AASA,SAAA,OAAA,GAAU,MAAK,CAAG,CAAlB;AACD;;AAhCsB","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const noop = () => {\n    return {\n        dispose: () => { },\n    };\n};\nexport var NsXFlowHook;\n(function (NsXFlowHook) {\n    NsXFlowHook.CONFIG_TYPE = 'XFlowHook';\n})(NsXFlowHook || (NsXFlowHook = {}));\nexport class HookConfig {\n    constructor() {\n        /** CONFIG_TYPE */\n        this.CONFIG_TYPE = NsXFlowHook.CONFIG_TYPE;\n        this.time = Date.now();\n        /** 提供一个runtime注册hook的方式 */\n        this.setRegisterHook = (fn) => {\n            this.hookRegisterFunc = fn;\n        };\n        /** 这里在canvas上提供一个runtime注册hookhub的方式 */\n        this.setRegisterHookhub = (fn) => {\n            this.hookhubRegisterFn = fn;\n        };\n        this.getConfig = () => __awaiter(this, void 0, void 0, function* () {\n            const options = {\n                CONFIG_TYPE: this.CONFIG_TYPE,\n                hookRegisterFn: this.hookRegisterFunc || noop,\n                hookhubRegisterFn: this.hookhubRegisterFn || noop,\n            };\n            return options;\n        });\n        this.dispose = () => { };\n    }\n}\n//# sourceMappingURL=config.js.map"]},"metadata":{},"sourceType":"module"}