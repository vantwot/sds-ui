{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGroupCommands } from '../constant';\nimport { XFLOW_GROUP_DEFAULT_COLLAPSED_SIZE } from '../../constants';\nexport var NsInitGroup;\n\n(function (NsInitGroup) {\n  /** Command: 用于注册named factory */\n  NsInitGroup.command = XFlowGroupCommands.INIT_GROUP;\n  /** hookName */\n\n  NsInitGroup.hookKey = 'initGroup';\n})(NsInitGroup || (NsInitGroup = {}));\n\nvar InitGroupCommand =\n/*#__PURE__*/\n\n/** 创建节点命令 */\nfunction () {\n  function InitGroupCommand() {\n    var _this = this;\n\n    _classCallCheck(this, InitGroupCommand);\n\n    /** 执行Cmd */\n    this.execute = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var ctx, _ctx$getArgs, args, runtimeHook, hooks, result;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                ctx = this.contextProvider();\n                _ctx$getArgs = ctx.getArgs(), args = _ctx$getArgs.args, runtimeHook = _ctx$getArgs.hooks;\n                hooks = ctx.getHooks();\n                _context3.next = 5;\n                return hooks.initGroup.call(args, function (handlerArgs) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                    var _this3 = this;\n\n                    var graphData, commandService, graph, nodes, groupMap;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            graphData = handlerArgs.graphData, commandService = handlerArgs.commandService;\n                            _context2.next = 3;\n                            return ctx.getX6Graph();\n\n                          case 3:\n                            graph = _context2.sent;\n                            nodes = graphData.nodes;\n                            groupMap = {};\n                            nodes.forEach(function (node) {\n                              var id = node.id,\n                                  group = node.group;\n\n                              if (group) {\n                                if (groupMap[group]) {\n                                  groupMap[group].push(id);\n                                } else {\n                                  groupMap[group] = [id];\n                                }\n                              }\n                            });\n                            Object.keys(groupMap).forEach(function (groupId) {\n                              return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                                var groupNode, groupData, childrenIds, isCollapsed, groupCollapsedSize, collapsedSize;\n                                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                                  while (1) {\n                                    switch (_context.prev = _context.next) {\n                                      case 0:\n                                        groupNode = graph.getCellById(groupId);\n                                        groupData = groupNode.getData();\n                                        childrenIds = groupMap[groupId] || []; // 更新props\n\n                                        // 更新props\n                                        groupNode.prop('isGroup', true);\n                                        groupNode.setData(Object.assign(Object.assign({}, groupData), {\n                                          isGroup: true,\n                                          groupChildren: childrenIds\n                                        }));\n                                        childrenIds.forEach(function (childId) {\n                                          var child = graph.getCellById(childId);\n                                          groupNode.embed(child);\n                                        }); // Group置于底层\n\n                                        // Group置于底层\n                                        groupNode.toBack(); // collapse\n\n                                        // collapse\n                                        isCollapsed = groupData.isCollapsed, groupCollapsedSize = groupData.groupCollapsedSize;\n\n                                        if (!isCollapsed) {\n                                          _context.next = 12;\n                                          break;\n                                        }\n\n                                        collapsedSize = handlerArgs.collapsedSize || groupCollapsedSize || XFLOW_GROUP_DEFAULT_COLLAPSED_SIZE;\n                                        _context.next = 12;\n                                        return commandService.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\n                                          collapsedSize: collapsedSize,\n                                          isCollapsed: true,\n                                          nodeId: groupNode.id\n                                        });\n\n                                      case 12:\n                                      case \"end\":\n                                        return _context.stop();\n                                    }\n                                  }\n                                }, _callee);\n                              }));\n                            });\n                            return _context2.abrupt(\"return\", {});\n\n                          case 9:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n                }, runtimeHook);\n\n              case 5:\n                result = _context3.sent;\n                ctx.setResult(result);\n                return _context3.abrupt(\"return\", this);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    };\n    /** undo cmd */\n\n\n    this.undo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var ctx;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                ctx = this.contextProvider();\n\n                if (this.isUndoable()) {\n                  ctx.undo();\n                }\n\n                return _context4.abrupt(\"return\", this);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    };\n    /** redo cmd */\n\n\n    this.redo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this.isUndoable()) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                _context5.next = 3;\n                return this.execute();\n\n              case 3:\n                return _context5.abrupt(\"return\", this);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    };\n  }\n\n  _createClass(InitGroupCommand, [{\n    key: \"isUndoable\",\n    value: function isUndoable() {\n      var ctx = this.contextProvider();\n      return ctx.isUndoable();\n    }\n  }]);\n\n  return InitGroupCommand;\n}();\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], InitGroupCommand.prototype, \"contextProvider\", void 0);\n\nInitGroupCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsInitGroup.command.id\n  }\n})\n/** 创建节点命令 */\n], InitGroupCommand);\nexport { InitGroupCommand };","map":{"version":3,"sources":["../../../src/command-contributions/group/group-init.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGroupCommands } from '../constant';\nimport { XFLOW_GROUP_DEFAULT_COLLAPSED_SIZE } from '../../constants';\nexport var NsInitGroup;\n(function (NsInitGroup) {\n    /** Command: 用于注册named factory */\n    NsInitGroup.command = XFlowGroupCommands.INIT_GROUP;\n    /** hookName */\n    NsInitGroup.hookKey = 'initGroup';\n})(NsInitGroup || (NsInitGroup = {}));\nlet InitGroupCommand = \n/** 创建节点命令 */\nclass InitGroupCommand {\n    constructor() {\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            const { args, hooks: runtimeHook } = ctx.getArgs();\n            const hooks = ctx.getHooks();\n            const result = yield hooks.initGroup.call(args, (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                const { graphData, commandService } = handlerArgs;\n                const graph = yield ctx.getX6Graph();\n                const { nodes } = graphData;\n                const groupMap = {};\n                nodes.forEach(node => {\n                    const { id, group } = node;\n                    if (group) {\n                        if (groupMap[group]) {\n                            groupMap[group].push(id);\n                        }\n                        else {\n                            groupMap[group] = [id];\n                        }\n                    }\n                });\n                Object.keys(groupMap).forEach((groupId) => __awaiter(this, void 0, void 0, function* () {\n                    const groupNode = graph.getCellById(groupId);\n                    const groupData = groupNode.getData();\n                    const childrenIds = groupMap[groupId] || [];\n                    // 更新props\n                    groupNode.prop('isGroup', true);\n                    groupNode.setData(Object.assign(Object.assign({}, groupData), { isGroup: true, groupChildren: childrenIds }));\n                    childrenIds.forEach(childId => {\n                        const child = graph.getCellById(childId);\n                        groupNode.embed(child);\n                    });\n                    // Group置于底层\n                    groupNode.toBack();\n                    // collapse\n                    const { isCollapsed, groupCollapsedSize } = groupData;\n                    if (isCollapsed) {\n                        const collapsedSize = handlerArgs.collapsedSize || groupCollapsedSize || XFLOW_GROUP_DEFAULT_COLLAPSED_SIZE;\n                        yield commandService.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\n                            collapsedSize,\n                            isCollapsed: true,\n                            nodeId: groupNode.id,\n                        });\n                    }\n                }));\n                return {};\n            }), runtimeHook);\n            ctx.setResult(result);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            if (this.isUndoable()) {\n                ctx.undo();\n            }\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.isUndoable()) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    isUndoable() {\n        const ctx = this.contextProvider();\n        return ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], InitGroupCommand.prototype, \"contextProvider\", void 0);\nInitGroupCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsInitGroup.command.id },\n    })\n    /** 创建节点命令 */\n], InitGroupCommand);\nexport { InitGroupCommand };\n//# sourceMappingURL=group-init.js.map"]},"metadata":{},"sourceType":"module"}