{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Node, Markup, ObjectExt } from '@antv/x6';\nexport var ReactShape = /*#__PURE__*/function (_Node) {\n  _inherits(ReactShape, _Node);\n\n  var _super = _createSuper(ReactShape);\n\n  function ReactShape() {\n    _classCallCheck(this, ReactShape);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ReactShape, [{\n    key: \"component\",\n    get: function get() {\n      return this.getComponent();\n    },\n    set: function set(val) {\n      this.setComponent(val);\n    }\n  }, {\n    key: \"getComponent\",\n    value: function getComponent() {\n      return this.store.get('component');\n    }\n  }, {\n    key: \"setComponent\",\n    value: function setComponent(component) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (component == null) {\n        this.removeComponent(options);\n      } else {\n        this.store.set('component', component, options);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"removeComponent\",\n    value: function removeComponent() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.store.remove('component', options);\n      return this;\n    }\n  }]);\n\n  return ReactShape;\n}(Node);\n\n(function (ReactShape) {\n  function getMarkup(simple, useForeignObject) {\n    var primer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'rect';\n    var markup = [];\n    var content = useForeignObject ? Markup.getForeignObjectMarkup() : {\n      tagName: 'g',\n      selector: 'content'\n    };\n\n    if (simple) {\n      markup.push(content);\n    } else {\n      markup.push.apply(markup, [{\n        tagName: primer,\n        selector: 'body'\n      }, content, {\n        tagName: 'text',\n        selector: 'label'\n      }]);\n    }\n\n    return markup;\n  }\n\n  ReactShape.config({\n    view: 'react-shape-view',\n    markup: getMarkup(false, true),\n    attrs: {\n      body: {\n        fill: 'none',\n        stroke: 'none',\n        refWidth: '100%',\n        refHeight: '100%'\n      },\n      fo: {\n        refWidth: '100%',\n        refHeight: '100%'\n      },\n      label: {\n        fontSize: 14,\n        fill: '#333',\n        refX: '50%',\n        refY: '50%',\n        textAnchor: 'middle',\n        textVerticalAnchor: 'middle'\n      }\n    },\n    propHooks: function propHooks(metadata) {\n      if (metadata.markup == null) {\n        var primer = metadata.primer;\n        var useForeignObject = metadata.useForeignObject !== false;\n\n        if (primer && primer !== 'rect') {\n          metadata.markup = getMarkup(false, useForeignObject, primer);\n          var attrs = {};\n\n          if (primer === 'circle') {\n            attrs = {\n              refCx: '50%',\n              refCy: '50%',\n              refR: '50%'\n            };\n          } else if (primer === 'ellipse') {\n            attrs = {\n              refCx: '50%',\n              refCy: '50%',\n              refRx: '50%',\n              refRy: '50%'\n            };\n          }\n\n          metadata.attrs = ObjectExt.merge({}, {\n            body: Object.assign({\n              refWidth: null,\n              refHeight: null\n            }, attrs)\n          }, metadata.attrs || {});\n        } else {\n          if (metadata.simple) {\n            metadata.markup = getMarkup(true, useForeignObject);\n            metadata.attrs = ObjectExt.merge({}, {\n              body: null,\n              label: null\n            }, metadata.attrs || {});\n          }\n        }\n      }\n\n      return metadata;\n    }\n  });\n  Node.registry.register('react-shape', ReactShape, true);\n})(ReactShape || (ReactShape = {}));","map":{"version":3,"sources":["../src/node.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Node, Markup, ObjectExt } from '@antv/x6';\nexport class ReactShape extends Node {\n    get component() {\n        return this.getComponent();\n    }\n    set component(val) {\n        this.setComponent(val);\n    }\n    getComponent() {\n        return this.store.get('component');\n    }\n    setComponent(component, options = {}) {\n        if (component == null) {\n            this.removeComponent(options);\n        }\n        else {\n            this.store.set('component', component, options);\n        }\n        return this;\n    }\n    removeComponent(options = {}) {\n        this.store.remove('component', options);\n        return this;\n    }\n}\n(function (ReactShape) {\n    function getMarkup(simple, useForeignObject, primer = 'rect') {\n        const markup = [];\n        const content = useForeignObject\n            ? Markup.getForeignObjectMarkup()\n            : {\n                tagName: 'g',\n                selector: 'content',\n            };\n        if (simple) {\n            markup.push(content);\n        }\n        else {\n            markup.push(...[\n                {\n                    tagName: primer,\n                    selector: 'body',\n                },\n                content,\n                {\n                    tagName: 'text',\n                    selector: 'label',\n                },\n            ]);\n        }\n        return markup;\n    }\n    ReactShape.config({\n        view: 'react-shape-view',\n        markup: getMarkup(false, true),\n        attrs: {\n            body: {\n                fill: 'none',\n                stroke: 'none',\n                refWidth: '100%',\n                refHeight: '100%',\n            },\n            fo: {\n                refWidth: '100%',\n                refHeight: '100%',\n            },\n            label: {\n                fontSize: 14,\n                fill: '#333',\n                refX: '50%',\n                refY: '50%',\n                textAnchor: 'middle',\n                textVerticalAnchor: 'middle',\n            },\n        },\n        propHooks(metadata) {\n            if (metadata.markup == null) {\n                const primer = metadata.primer;\n                const useForeignObject = metadata.useForeignObject !== false;\n                if (primer && primer !== 'rect') {\n                    metadata.markup = getMarkup(false, useForeignObject, primer);\n                    let attrs = {};\n                    if (primer === 'circle') {\n                        attrs = {\n                            refCx: '50%',\n                            refCy: '50%',\n                            refR: '50%',\n                        };\n                    }\n                    else if (primer === 'ellipse') {\n                        attrs = {\n                            refCx: '50%',\n                            refCy: '50%',\n                            refRx: '50%',\n                            refRy: '50%',\n                        };\n                    }\n                    metadata.attrs = ObjectExt.merge({}, {\n                        body: Object.assign({ refWidth: null, refHeight: null }, attrs),\n                    }, metadata.attrs || {});\n                }\n                else {\n                    if (metadata.simple) {\n                        metadata.markup = getMarkup(true, useForeignObject);\n                        metadata.attrs = ObjectExt.merge({}, {\n                            body: null,\n                            label: null,\n                        }, metadata.attrs || {});\n                    }\n                }\n            }\n            return metadata;\n        },\n    });\n    Node.registry.register('react-shape', ReactShape, true);\n})(ReactShape || (ReactShape = {}));\n//# sourceMappingURL=node.js.map"]},"metadata":{},"sourceType":"module"}