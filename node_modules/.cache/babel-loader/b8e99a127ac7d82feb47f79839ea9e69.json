{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { DisposableCollection, Disposable } from '@antv/xflow-core';\nimport { IHookContribution, ManaSyringe } from '@antv/xflow-core';\nimport { IMinimapConfigProvider } from '../interface';\n/**\n * 内置的hook contribution\n * 处理 config上的runtime的注册项\n */\n\nlet HookContribution = class HookContribution {\n  constructor() {\n    this.toDispose = new DisposableCollection();\n\n    this.registerHookHub = () => __awaiter(this, void 0, void 0, function* () {\n      return Disposable.create(() => {});\n    });\n\n    this.registerHook = hooks => __awaiter(this, void 0, void 0, function* () {\n      const toDispose = new DisposableCollection();\n      const disposables = [hooks.graphOptions.registerHook({\n        name: 'add minimap options',\n        handler: args => __awaiter(this, void 0, void 0, function* () {\n          // 对齐线配置，辅助移动节点排版（详细文档：https://X6.antv.vision/zh/docs/tutorial/basic/snapline）\n          const minimapOptions = yield this.minimapConfig.getConfig();\n          args.minimap = Object.assign({}, minimapOptions);\n        })\n      })];\n      toDispose.pushAll(disposables);\n      return Disposable.create(() => {});\n    });\n  }\n\n};\n\n__decorate([ManaSyringe.inject(IMinimapConfigProvider), __metadata(\"design:type\", Object)], HookContribution.prototype, \"minimapConfig\", void 0);\n\nHookContribution = __decorate([ManaSyringe.singleton({\n  contrib: IHookContribution\n})], HookContribution);\nexport { HookContribution };","map":{"version":3,"sources":["../../../src/canvas-mini-map/contributions/hook.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,oBAAT,EAA+B,UAA/B,QAAiD,kBAAjD;AACA,SAAS,iBAAT,EAA4B,WAA5B,QAA+C,kBAA/C;AACA,SAAS,sBAAT,QAAuC,cAAvC;AAEA;;;AAGG;;AAEH,IAAa,gBAAgB,GAA7B,MAAa,gBAAb,CAA6B;AAA7B,EAAA,WAAA,GAAA;AACE,SAAA,SAAA,GAAY,IAAI,oBAAJ,EAAZ;;AAKA,SAAA,eAAA,GAAkB,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAC3B,aAAO,UAAU,CAAC,MAAX,CAAkB,MAAK,CAAG,CAA1B,CAAP;AACD,KAF4B,CAA7B;;AAIA,SAAA,YAAA,GAAsB,KAAP,IAA2B,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACxC,YAAM,SAAS,GAAG,IAAI,oBAAJ,EAAlB;AACA,YAAM,WAAW,GAAG,CAClB,KAAK,CAAC,YAAN,CAAmB,YAAnB,CAAgC;AAC9B,QAAA,IAAI,EAAE,qBADwB;AAE9B,QAAA,OAAO,EAAQ,IAAN,IAAa,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACpB;AACA,gBAAM,cAAc,GAAG,MAAM,KAAK,aAAL,CAAmB,SAAnB,EAA7B;AACA,UAAA,IAAI,CAAC,OAAL,GAAY,MAAA,CAAA,MAAA,CAAA,EAAA,EACP,cADO,CAAZ;AAGD,SANqB;AAFQ,OAAhC,CADkB,CAApB;AAYA,MAAA,SAAS,CAAC,OAAV,CAAkB,WAAlB;AACA,aAAO,UAAU,CAAC,MAAX,CAAkB,MAAK,CAAG,CAA1B,CAAP;AACD,KAhByC,CAA1C;AAiBD;;AA3B4B,CAA7B;;AAIE,UAAA,CAAA,CADC,WAAW,CAAC,MAAZ,CAAmB,sBAAnB,CACD,E,iCAAA,CAAA,E,0BAAA,E,eAAA,E,KAA6C,CAA7C,CAAA;;AAJW,gBAAgB,GAAA,UAAA,CAAA,CAD5B,WAAW,CAAC,SAAZ,CAAsB;AAAE,EAAA,OAAO,EAAE;AAAX,CAAtB,CAC4B,CAAA,EAAhB,gBAAgB,CAAhB;SAAA,gB","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DisposableCollection, Disposable } from '@antv/xflow-core';\nimport { IHookContribution, ManaSyringe } from '@antv/xflow-core';\nimport { IMinimapConfigProvider } from '../interface';\n/**\n * 内置的hook contribution\n * 处理 config上的runtime的注册项\n */\nlet HookContribution = class HookContribution {\n    constructor() {\n        this.toDispose = new DisposableCollection();\n        this.registerHookHub = () => __awaiter(this, void 0, void 0, function* () {\n            return Disposable.create(() => { });\n        });\n        this.registerHook = (hooks) => __awaiter(this, void 0, void 0, function* () {\n            const toDispose = new DisposableCollection();\n            const disposables = [\n                hooks.graphOptions.registerHook({\n                    name: 'add minimap options',\n                    handler: (args) => __awaiter(this, void 0, void 0, function* () {\n                        // 对齐线配置，辅助移动节点排版（详细文档：https://X6.antv.vision/zh/docs/tutorial/basic/snapline）\n                        const minimapOptions = yield this.minimapConfig.getConfig();\n                        args.minimap = Object.assign({}, minimapOptions);\n                    }),\n                }),\n            ];\n            toDispose.pushAll(disposables);\n            return Disposable.create(() => { });\n        });\n    }\n};\n__decorate([\n    ManaSyringe.inject(IMinimapConfigProvider),\n    __metadata(\"design:type\", Object)\n], HookContribution.prototype, \"minimapConfig\", void 0);\nHookContribution = __decorate([\n    ManaSyringe.singleton({ contrib: IHookContribution })\n], HookContribution);\nexport { HookContribution };\n//# sourceMappingURL=hook.js.map"]},"metadata":{},"sourceType":"module"}