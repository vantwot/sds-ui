{"ast":null,"code":"import _defineProperty from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport React from 'react';\nimport clamp from 'clamp';\nimport classNames from 'classnames';\nimport { Box } from './box';\nimport { Resizer } from './resizer';\nexport var SplitBox = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(SplitBox, _React$PureComponent);\n\n  var _super = _createSuper(SplitBox);\n\n  function SplitBox(props) {\n    var _this;\n\n    _classCallCheck(this, SplitBox);\n\n    _this = _super.call(this, props);\n\n    _this.onMouseDown = function () {\n      var _this$getRange = _this.getRange(),\n          maxSize = _this$getRange.maxSize,\n          minSize = _this$getRange.minSize;\n\n      _this.minSize = minSize;\n      _this.maxSize = maxSize;\n      _this.curSize = _this.getPrimarySize();\n      _this.rawSize = _this.curSize;\n      _this.resizing = true;\n\n      _this.createMask();\n\n      _this.updateCursor(_this.curSize, minSize, maxSize);\n    };\n\n    _this.onMouseMove = function (deltaX, deltaY) {\n      if (_this.props.resizable && _this.resizing) {\n        var delta = _this.getDelta(deltaX, deltaY);\n\n        if (delta === 0) {\n          return;\n        }\n\n        if (_this.rawSize < _this.minSize || _this.rawSize > _this.maxSize) {\n          _this.rawSize -= delta;\n          return;\n        }\n\n        _this.rawSize -= delta;\n        _this.curSize = _this.rawSize;\n        _this.curSize = clamp(_this.curSize, _this.minSize, _this.maxSize);\n\n        _this.setPrimarySize(_this.curSize);\n\n        _this.updateCursor(_this.curSize, _this.minSize, _this.maxSize);\n\n        if (_this.props.onResizing) {\n          _this.props.onResizing(_this.curSize);\n        }\n      }\n    };\n\n    _this.onMouseMoveEnd = function () {\n      if (_this.props.resizable && _this.resizing) {\n        if (_this.props.onResizeEnd) {\n          _this.props.onResizeEnd(_this.curSize);\n        }\n\n        if (_this.props.refresh) {\n          var isPrimaryFirst = _this.isPrimaryFirst();\n\n          _this.setState({\n            box1Size: isPrimaryFirst ? _this.curSize : undefined,\n            box2Size: isPrimaryFirst ? undefined : _this.curSize\n          });\n        }\n\n        _this.resizing = false;\n\n        _this.removeMask();\n      }\n    };\n\n    _this.refContainer = function (container) {\n      _this.container = container;\n    };\n\n    _this.refResizer = function (elem) {\n      _this.resizerElem = elem;\n    };\n\n    _this.state = _this.getNextState(props);\n    return _this;\n  }\n\n  _createClass(SplitBox, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var nextState = this.getNextState(nextProps);\n      this.setState(nextState);\n    }\n  }, {\n    key: \"getNextState\",\n    value: function getNextState(props) {\n      var size = props.size,\n          defaultSize = props.defaultSize,\n          primary = props.primary;\n      var initialSize = size != null ? size : defaultSize != null ? defaultSize : '25%';\n      return {\n        box1Size: primary === 'first' ? initialSize : undefined,\n        box2Size: primary === 'second' ? initialSize : undefined\n      };\n    }\n  }, {\n    key: \"isVertical\",\n    value: function isVertical() {\n      return this.props.split === 'vertical';\n    }\n  }, {\n    key: \"isPrimaryFirst\",\n    value: function isPrimaryFirst() {\n      return this.props.primary === 'first';\n    }\n  }, {\n    key: \"getDelta\",\n    value: function getDelta(deltaX, deltaY) {\n      var step = this.props.step;\n      var isVertical = this.isVertical();\n      var isPrimaryFirst = this.isPrimaryFirst();\n      var delta = isVertical ? deltaX : deltaY;\n\n      if (delta === 0) {\n        return 0;\n      }\n\n      if (step && Math.abs(delta) >= step) {\n        delta = ~~(delta / step) * step; // eslint-disable-line\n      }\n\n      delta = isPrimaryFirst ? -delta : delta;\n      var primaryBox = isPrimaryFirst ? this.box1Elem : this.box2Elem;\n      var secondBox = isPrimaryFirst ? this.box2Elem : this.box1Elem;\n      var box1Order = parseInt(window.getComputedStyle(primaryBox).order, 10);\n      var box2Order = parseInt(window.getComputedStyle(secondBox).order, 10);\n\n      if (box1Order > box2Order) {\n        delta = -delta;\n      }\n\n      return delta;\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var _this$props = this.props,\n          maxSize = _this$props.maxSize,\n          minSize = _this$props.minSize;\n      var containerRect = this.container.getBoundingClientRect();\n      var containerSize = this.isVertical() ? containerRect.width : containerRect.height;\n      var newMinSize = minSize !== undefined ? minSize : 0;\n      var newMaxSize = maxSize !== undefined ? maxSize : 0;\n\n      while (newMinSize < 0) {\n        newMinSize = containerSize + newMinSize;\n      }\n\n      while (newMaxSize <= 0) {\n        newMaxSize = containerSize + newMaxSize;\n      }\n\n      return {\n        minSize: clamp(newMinSize, 0, containerSize),\n        maxSize: clamp(newMaxSize, 0, containerSize)\n      };\n    }\n  }, {\n    key: \"getPrimarySize\",\n    value: function getPrimarySize() {\n      var primaryBox = this.isPrimaryFirst() ? this.box1Elem : this.box2Elem;\n      return this.isVertical() ? primaryBox.getBoundingClientRect().width : primaryBox.getBoundingClientRect().height;\n    }\n  }, {\n    key: \"setPrimarySize\",\n    value: function setPrimarySize(size) {\n      var isFirstPrimary = this.isPrimaryFirst();\n      var primaryBox = isFirstPrimary ? this.box1Elem : this.box2Elem;\n      var secondBox = isFirstPrimary ? this.box2Elem : this.box1Elem;\n      var resizerElem = this.resizerElem;\n      var value = \"\".concat(size, \"px\");\n\n      if (this.isVertical()) {\n        primaryBox.style.width = value;\n\n        if (isFirstPrimary) {\n          secondBox.style.left = value;\n          resizerElem.style.left = value;\n        } else {\n          secondBox.style.right = value;\n          resizerElem.style.right = value;\n        }\n      } else {\n        primaryBox.style.height = value;\n\n        if (isFirstPrimary) {\n          secondBox.style.top = value;\n          resizerElem.style.top = value;\n        } else {\n          secondBox.style.bottom = value;\n          resizerElem.style.bottom = value;\n        }\n      }\n    }\n  }, {\n    key: \"updateCursor\",\n    value: function updateCursor(size, minSize, maxSize) {\n      var cursor = '';\n\n      if (this.isVertical()) {\n        if (size === minSize) {\n          cursor = this.isPrimaryFirst() ? 'e-resize' : 'w-resize';\n        } else if (size === maxSize) {\n          cursor = this.isPrimaryFirst() ? 'w-resize' : 'e-resize';\n        } else {\n          cursor = 'col-resize';\n        }\n      } else if (size === minSize) {\n        cursor = this.isPrimaryFirst() ? 's-resize' : 'n-resize';\n      } else if (size === maxSize) {\n        cursor = this.isPrimaryFirst() ? 'n-resize' : 's-resize';\n      } else {\n        cursor = 'row-resize';\n      }\n\n      this.maskElem.style.cursor = cursor;\n    }\n  }, {\n    key: \"createMask\",\n    value: function createMask() {\n      var mask = document.createElement('div');\n      mask.style.position = 'absolute';\n      mask.style.top = '0';\n      mask.style.right = '0';\n      mask.style.bottom = '0';\n      mask.style.left = '0';\n      mask.style.zIndex = '9999';\n      document.body.appendChild(mask);\n      this.maskElem = mask;\n    }\n  }, {\n    key: \"removeMask\",\n    value: function removeMask() {\n      if (this.maskElem.parentNode) {\n        this.maskElem.parentNode.removeChild(this.maskElem);\n      }\n    }\n  }, {\n    key: \"renderBox\",\n    value: function renderBox(baseCls, index) {\n      var _this2 = this;\n\n      var primary = index === 1 ? 'first' : 'second';\n      var isPrimary = this.props.primary === primary;\n      var currentSize = index === 1 ? this.state.box1Size : this.state.box2Size;\n      var oppositeSize = index === 1 ? this.state.box2Size : this.state.box1Size;\n      var style = Object.assign(Object.assign({}, this.props.boxStyle), isPrimary ? this.props.primaryBoxStyle : this.props.secondBoxStyle);\n      var classes = classNames(\"\".concat(baseCls, \"-item\"), isPrimary ? \"\".concat(baseCls, \"-item-primary\") : \"\".concat(baseCls, \"-item-second\"));\n\n      var ref = function ref(elem) {\n        if (index === 1) {\n          _this2.box1Elem = elem;\n        } else {\n          _this2.box2Elem = elem;\n        }\n      };\n\n      var children = this.props.children;\n      return React.createElement(Box, {\n        key: \"box\".concat(index),\n        refIt: ref,\n        style: style,\n        index: index,\n        className: classes,\n        currentSize: currentSize,\n        oppositeSize: oppositeSize,\n        vertical: this.isVertical(),\n        isPrimary: isPrimary\n      }, children[index - 1]);\n    }\n  }, {\n    key: \"renderResizer\",\n    value: function renderResizer(baseCls) {\n      var style = Object.assign({}, this.props.resizerStyle);\n      style.position = 'absolute';\n      style.zIndex = 2;\n\n      if (this.isVertical()) {\n        style.top = 0;\n        style.bottom = 0;\n\n        if (this.props.resizable === true) {\n          style.cursor = 'col-resize';\n        }\n\n        if (this.isPrimaryFirst()) {\n          style.left = this.state.box1Size;\n        } else {\n          style.right = this.state.box2Size;\n        }\n      } else {\n        style.left = 0;\n        style.right = 0;\n\n        if (this.props.resizable === true) {\n          style.cursor = 'row-resize';\n        }\n\n        if (this.isPrimaryFirst()) {\n          style.top = this.state.box1Size;\n        } else {\n          style.bottom = this.state.box2Size;\n        }\n      }\n\n      return React.createElement(Resizer, {\n        key: \"resizer\",\n        style: style,\n        className: \"\".concat(baseCls, \"-resizer\"),\n        refIt: this.refResizer,\n        onClick: this.props.onResizerClick,\n        onMouseDown: this.onMouseDown,\n        onMouseMove: this.onMouseMove,\n        onMouseMoveEnd: this.onMouseMoveEnd,\n        onDoubleClick: this.props.onResizerDoubleClick\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = Object.assign(Object.assign({}, this.props.style), {\n        overflow: 'hidden',\n        position: 'relative',\n        width: '100%',\n        height: '100%'\n      });\n      var baseCls = \"\".concat(this.props.prefixCls, \"-split-box\");\n      var classes = classNames(baseCls, \"\".concat(baseCls, \"-\").concat(this.props.split), _defineProperty({}, \"\".concat(baseCls, \"-disabled\"), !this.props.resizable));\n      return React.createElement(\"div\", {\n        style: style,\n        className: classes,\n        ref: this.refContainer\n      }, this.renderBox(baseCls, 1), this.renderResizer(baseCls), this.renderBox(baseCls, 2));\n    }\n  }]);\n\n  return SplitBox;\n}(React.PureComponent);\n\n(function (SplitBox) {\n  SplitBox.defaultProps = {\n    resizable: true,\n    split: 'vertical',\n    primary: 'first',\n    prefixCls: 'x6',\n    defaultSize: '25%'\n  };\n})(SplitBox || (SplitBox = {}));","map":{"version":3,"sources":["../../src/split-box/splitbox.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from 'react';\nimport clamp from 'clamp';\nimport classNames from 'classnames';\nimport { Box } from './box';\nimport { Resizer } from './resizer';\nexport class SplitBox extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.onMouseDown = () => {\n            const { maxSize, minSize } = this.getRange();\n            this.minSize = minSize;\n            this.maxSize = maxSize;\n            this.curSize = this.getPrimarySize();\n            this.rawSize = this.curSize;\n            this.resizing = true;\n            this.createMask();\n            this.updateCursor(this.curSize, minSize, maxSize);\n        };\n        this.onMouseMove = (deltaX, deltaY) => {\n            if (this.props.resizable && this.resizing) {\n                const delta = this.getDelta(deltaX, deltaY);\n                if (delta === 0) {\n                    return;\n                }\n                if (this.rawSize < this.minSize || this.rawSize > this.maxSize) {\n                    this.rawSize -= delta;\n                    return;\n                }\n                this.rawSize -= delta;\n                this.curSize = this.rawSize;\n                this.curSize = clamp(this.curSize, this.minSize, this.maxSize);\n                this.setPrimarySize(this.curSize);\n                this.updateCursor(this.curSize, this.minSize, this.maxSize);\n                if (this.props.onResizing) {\n                    this.props.onResizing(this.curSize);\n                }\n            }\n        };\n        this.onMouseMoveEnd = () => {\n            if (this.props.resizable && this.resizing) {\n                if (this.props.onResizeEnd) {\n                    this.props.onResizeEnd(this.curSize);\n                }\n                if (this.props.refresh) {\n                    const isPrimaryFirst = this.isPrimaryFirst();\n                    this.setState({\n                        box1Size: isPrimaryFirst ? this.curSize : undefined,\n                        box2Size: isPrimaryFirst ? undefined : this.curSize,\n                    });\n                }\n                this.resizing = false;\n                this.removeMask();\n            }\n        };\n        this.refContainer = (container) => {\n            this.container = container;\n        };\n        this.refResizer = (elem) => {\n            this.resizerElem = elem;\n        };\n        this.state = this.getNextState(props);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        const nextState = this.getNextState(nextProps);\n        this.setState(nextState);\n    }\n    getNextState(props) {\n        const { size, defaultSize, primary } = props;\n        const initialSize = size != null ? size : defaultSize != null ? defaultSize : '25%';\n        return {\n            box1Size: primary === 'first' ? initialSize : undefined,\n            box2Size: primary === 'second' ? initialSize : undefined,\n        };\n    }\n    isVertical() {\n        return this.props.split === 'vertical';\n    }\n    isPrimaryFirst() {\n        return this.props.primary === 'first';\n    }\n    getDelta(deltaX, deltaY) {\n        const { step } = this.props;\n        const isVertical = this.isVertical();\n        const isPrimaryFirst = this.isPrimaryFirst();\n        let delta = isVertical ? deltaX : deltaY;\n        if (delta === 0) {\n            return 0;\n        }\n        if (step && Math.abs(delta) >= step) {\n            delta = ~~(delta / step) * step; // eslint-disable-line\n        }\n        delta = isPrimaryFirst ? -delta : delta;\n        const primaryBox = isPrimaryFirst ? this.box1Elem : this.box2Elem;\n        const secondBox = isPrimaryFirst ? this.box2Elem : this.box1Elem;\n        const box1Order = parseInt(window.getComputedStyle(primaryBox).order, 10);\n        const box2Order = parseInt(window.getComputedStyle(secondBox).order, 10);\n        if (box1Order > box2Order) {\n            delta = -delta;\n        }\n        return delta;\n    }\n    getRange() {\n        const { maxSize, minSize } = this.props;\n        const containerRect = this.container.getBoundingClientRect();\n        const containerSize = this.isVertical()\n            ? containerRect.width\n            : containerRect.height;\n        let newMinSize = minSize !== undefined ? minSize : 0;\n        let newMaxSize = maxSize !== undefined ? maxSize : 0;\n        while (newMinSize < 0) {\n            newMinSize = containerSize + newMinSize;\n        }\n        while (newMaxSize <= 0) {\n            newMaxSize = containerSize + newMaxSize;\n        }\n        return {\n            minSize: clamp(newMinSize, 0, containerSize),\n            maxSize: clamp(newMaxSize, 0, containerSize),\n        };\n    }\n    getPrimarySize() {\n        const primaryBox = this.isPrimaryFirst() ? this.box1Elem : this.box2Elem;\n        return this.isVertical()\n            ? primaryBox.getBoundingClientRect().width\n            : primaryBox.getBoundingClientRect().height;\n    }\n    setPrimarySize(size) {\n        const isFirstPrimary = this.isPrimaryFirst();\n        const primaryBox = isFirstPrimary ? this.box1Elem : this.box2Elem;\n        const secondBox = isFirstPrimary ? this.box2Elem : this.box1Elem;\n        const resizerElem = this.resizerElem;\n        const value = `${size}px`;\n        if (this.isVertical()) {\n            primaryBox.style.width = value;\n            if (isFirstPrimary) {\n                secondBox.style.left = value;\n                resizerElem.style.left = value;\n            }\n            else {\n                secondBox.style.right = value;\n                resizerElem.style.right = value;\n            }\n        }\n        else {\n            primaryBox.style.height = value;\n            if (isFirstPrimary) {\n                secondBox.style.top = value;\n                resizerElem.style.top = value;\n            }\n            else {\n                secondBox.style.bottom = value;\n                resizerElem.style.bottom = value;\n            }\n        }\n    }\n    updateCursor(size, minSize, maxSize) {\n        let cursor = '';\n        if (this.isVertical()) {\n            if (size === minSize) {\n                cursor = this.isPrimaryFirst() ? 'e-resize' : 'w-resize';\n            }\n            else if (size === maxSize) {\n                cursor = this.isPrimaryFirst() ? 'w-resize' : 'e-resize';\n            }\n            else {\n                cursor = 'col-resize';\n            }\n        }\n        else if (size === minSize) {\n            cursor = this.isPrimaryFirst() ? 's-resize' : 'n-resize';\n        }\n        else if (size === maxSize) {\n            cursor = this.isPrimaryFirst() ? 'n-resize' : 's-resize';\n        }\n        else {\n            cursor = 'row-resize';\n        }\n        this.maskElem.style.cursor = cursor;\n    }\n    createMask() {\n        const mask = document.createElement('div');\n        mask.style.position = 'absolute';\n        mask.style.top = '0';\n        mask.style.right = '0';\n        mask.style.bottom = '0';\n        mask.style.left = '0';\n        mask.style.zIndex = '9999';\n        document.body.appendChild(mask);\n        this.maskElem = mask;\n    }\n    removeMask() {\n        if (this.maskElem.parentNode) {\n            this.maskElem.parentNode.removeChild(this.maskElem);\n        }\n    }\n    renderBox(baseCls, index) {\n        const primary = index === 1 ? 'first' : 'second';\n        const isPrimary = this.props.primary === primary;\n        const currentSize = index === 1 ? this.state.box1Size : this.state.box2Size;\n        const oppositeSize = index === 1 ? this.state.box2Size : this.state.box1Size;\n        const style = Object.assign(Object.assign({}, this.props.boxStyle), (isPrimary ? this.props.primaryBoxStyle : this.props.secondBoxStyle));\n        const classes = classNames(`${baseCls}-item`, isPrimary ? `${baseCls}-item-primary` : `${baseCls}-item-second`);\n        const ref = (elem) => {\n            if (index === 1) {\n                this.box1Elem = elem;\n            }\n            else {\n                this.box2Elem = elem;\n            }\n        };\n        const children = this.props.children;\n        return (React.createElement(Box, { key: `box${index}`, refIt: ref, style: style, index: index, className: classes, currentSize: currentSize, oppositeSize: oppositeSize, vertical: this.isVertical(), isPrimary: isPrimary }, children[index - 1]));\n    }\n    renderResizer(baseCls) {\n        const style = Object.assign({}, this.props.resizerStyle);\n        style.position = 'absolute';\n        style.zIndex = 2;\n        if (this.isVertical()) {\n            style.top = 0;\n            style.bottom = 0;\n            if (this.props.resizable === true) {\n                style.cursor = 'col-resize';\n            }\n            if (this.isPrimaryFirst()) {\n                style.left = this.state.box1Size;\n            }\n            else {\n                style.right = this.state.box2Size;\n            }\n        }\n        else {\n            style.left = 0;\n            style.right = 0;\n            if (this.props.resizable === true) {\n                style.cursor = 'row-resize';\n            }\n            if (this.isPrimaryFirst()) {\n                style.top = this.state.box1Size;\n            }\n            else {\n                style.bottom = this.state.box2Size;\n            }\n        }\n        return (React.createElement(Resizer, { key: \"resizer\", style: style, className: `${baseCls}-resizer`, refIt: this.refResizer, onClick: this.props.onResizerClick, onMouseDown: this.onMouseDown, onMouseMove: this.onMouseMove, onMouseMoveEnd: this.onMouseMoveEnd, onDoubleClick: this.props.onResizerDoubleClick }));\n    }\n    render() {\n        const style = Object.assign(Object.assign({}, this.props.style), { overflow: 'hidden', position: 'relative', width: '100%', height: '100%' });\n        const baseCls = `${this.props.prefixCls}-split-box`;\n        const classes = classNames(baseCls, `${baseCls}-${this.props.split}`, {\n            [`${baseCls}-disabled`]: !this.props.resizable,\n        });\n        return (React.createElement(\"div\", { style: style, className: classes, ref: this.refContainer },\n            this.renderBox(baseCls, 1),\n            this.renderResizer(baseCls),\n            this.renderBox(baseCls, 2)));\n    }\n}\n(function (SplitBox) {\n    SplitBox.defaultProps = {\n        resizable: true,\n        split: 'vertical',\n        primary: 'first',\n        prefixCls: 'x6',\n        defaultSize: '25%',\n    };\n})(SplitBox || (SplitBox = {}));\n//# sourceMappingURL=splitbox.js.map"]},"metadata":{},"sourceType":"module"}