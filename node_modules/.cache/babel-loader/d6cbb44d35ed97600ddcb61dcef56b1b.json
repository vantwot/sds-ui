{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { MapMouseEvent, MapTouchEvent, MapWheelEvent } from './events';\n\nvar MapEventHandler = function () {\n  function MapEventHandler(map, options) {\n    _classCallCheck(this, MapEventHandler);\n\n    _defineProperty(this, \"mousedownPos\", void 0);\n\n    _defineProperty(this, \"clickTolerance\", void 0);\n\n    _defineProperty(this, \"map\", void 0);\n\n    this.map = map;\n    this.clickTolerance = options.clickTolerance;\n  }\n\n  _createClass(MapEventHandler, [{\n    key: \"reset\",\n    value: function reset() {\n      delete this.mousedownPos;\n    }\n  }, {\n    key: \"wheel\",\n    value: function wheel(e) {\n      return this.firePreventable(new MapWheelEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"mousedown\",\n    value: function mousedown(e, point) {\n      this.mousedownPos = point;\n      return this.firePreventable(new MapMouseEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"mouseup\",\n    value: function mouseup(e) {\n      this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"click\",\n    value: function click(e, point) {\n      if (this.mousedownPos && this.mousedownPos.dist(point) >= this.clickTolerance) {\n        return;\n      }\n\n      this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"dblclick\",\n    value: function dblclick(e) {\n      return this.firePreventable(new MapMouseEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"mouseover\",\n    value: function mouseover(e) {\n      this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"mouseout\",\n    value: function mouseout(e) {\n      this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"touchstart\",\n    value: function touchstart(e) {\n      return this.firePreventable(new MapTouchEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"touchmove\",\n    value: function touchmove(e) {\n      this.map.emit(e.type, new MapTouchEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"touchend\",\n    value: function touchend(e) {\n      this.map.emit(e.type, new MapTouchEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"touchcancel\",\n    value: function touchcancel(e) {\n      this.map.emit(e.type, new MapTouchEvent(e.type, this.map, e));\n    }\n  }, {\n    key: \"firePreventable\",\n    value: function firePreventable(mapEvent) {\n      this.map.emit(mapEvent.type, mapEvent);\n\n      if (mapEvent.defaultPrevented) {\n        return {};\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return true;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return false;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      return false;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      return false;\n    }\n  }]);\n\n  return MapEventHandler;\n}();\n\nexport { MapEventHandler as default };","map":{"version":3,"sources":["../../src/handler/map_event.ts"],"names":["MapEventHandler","options","e","mapEvent"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport { EarthMap } from '../earthmap';\nimport Point from '../geo/point';\nimport { Map } from '../map';\nimport { MapMouseEvent, MapTouchEvent, MapWheelEvent } from './events';\n\nexport default class MapEventHandler {\n  private mousedownPos: Point;\n  private clickTolerance: number;\n  private map: Map | EarthMap;\n\n  constructor(map: Map | EarthMap, options: { clickTolerance: number }) {\n    this.map = map;\n    this.clickTolerance = options.clickTolerance;\n  }\n\n  public reset() {\n    // @ts-ignore\n    delete this.mousedownPos;\n  }\n\n  public wheel(e: WheelEvent) {\n    // If mapEvent.preventDefault() is called by the user, prevent handlers such as:\n    // - ScrollZoom\n    return this.firePreventable(new MapWheelEvent(e.type, this.map, e));\n  }\n\n  public mousedown(e: MouseEvent, point: Point) {\n    this.mousedownPos = point;\n    // If mapEvent.preventDefault() is called by the user, prevent handlers such as:\n    // - MousePan\n    // - MouseRotate\n    // - MousePitch\n    // - DblclickHandler\n    return this.firePreventable(new MapMouseEvent(e.type, this.map, e));\n  }\n\n  public mouseup(e: MouseEvent) {\n    this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n  }\n\n  public click(e: MouseEvent, point: Point) {\n    if (\n      this.mousedownPos &&\n      this.mousedownPos.dist(point) >= this.clickTolerance\n    ) {\n      return;\n    }\n    this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n  }\n\n  public dblclick(e: MouseEvent) {\n    // If mapEvent.preventDefault() is called by the user, prevent handlers such as:\n    // - DblClickZoom\n    return this.firePreventable(new MapMouseEvent(e.type, this.map, e));\n  }\n\n  public mouseover(e: MouseEvent) {\n    this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n  }\n\n  public mouseout(e: MouseEvent) {\n    this.map.emit(e.type, new MapMouseEvent(e.type, this.map, e));\n  }\n\n  public touchstart(e: TouchEvent) {\n    // If mapEvent.preventDefault() is called by the user, prevent handlers such as:\n    // - TouchPan\n    // - TouchZoom\n    // - TouchRotate\n    // - TouchPitch\n    // - TapZoom\n    // - SwipeZoom\n    return this.firePreventable(new MapTouchEvent(e.type, this.map, e));\n  }\n\n  public touchmove(e: TouchEvent) {\n    this.map.emit(e.type, new MapTouchEvent(e.type, this.map, e));\n  }\n\n  public touchend(e: TouchEvent) {\n    this.map.emit(e.type, new MapTouchEvent(e.type, this.map, e));\n  }\n\n  public touchcancel(e: TouchEvent) {\n    this.map.emit(e.type, new MapTouchEvent(e.type, this.map, e));\n  }\n\n  public firePreventable(\n    mapEvent: MapMouseEvent | MapTouchEvent | MapWheelEvent,\n  ) {\n    this.map.emit(mapEvent.type, mapEvent);\n    if (mapEvent.defaultPrevented) {\n      // returning an object marks the handler as active and resets other handlers\n      return {};\n    }\n  }\n\n  public isEnabled() {\n    return true;\n  }\n\n  public isActive() {\n    return false;\n  }\n  public enable() {\n    return false;\n  }\n  public disable() {\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}