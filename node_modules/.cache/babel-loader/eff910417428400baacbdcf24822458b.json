{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport React, { useContext } from 'react';\nimport uniqBy from 'lodash/uniqBy';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { createComponentModel, Disposable, MODELS, useXFlowApp } from '@antv/xflow';\nimport { TREE_ROOT_ID } from './constants';\nimport AppContext from '../../context'; // import { NsTreePanelData} from '@antv/xflow/es/canvas-node-tree-panel/service'\n\nexport var NsTreePanelData;\n\n(function (NsTreePanelData) {\n  NsTreePanelData.id = 'TREE_PANEL_DATA';\n})(NsTreePanelData || (NsTreePanelData = {}));\n\nexport var useTreePanelData = function (props) {\n  var treeDataService = props.treeDataService,\n      searchService = props.searchService;\n  var modelService = useXFlowApp().modelService;\n  var flowchartId = useContext(AppContext).flowchartId;\n  /** 使用model */\n\n  var _a = createComponentModel({\n    treeData: [],\n    searchList: [],\n    treeNodeList: [],\n    expandedKeys: [],\n    defaultExpandAll: false,\n    keyword: ''\n  }),\n      state = _a[0],\n      setState = _a[1],\n      panelModel = _a[2];\n  /** 注册成为全局状态，方便其他组件联动 */\n\n\n  React.useEffect(function () {\n    if (modelService.findDeferredModel(NsTreePanelData.id)) {\n      return;\n    }\n\n    modelService.registerModel({\n      id: NsTreePanelData.id,\n      modelFactory: function () {\n        return panelModel;\n      },\n      watchChange: function (self) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var graphMetaModel, fetch, graphMetaDisposable;\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , MODELS.GRAPH_META.getModel(modelService)];\n\n              case 1:\n                graphMetaModel = _a.sent();\n\n                fetch = function (meta) {\n                  return __awaiter(void 0, void 0, void 0, function () {\n                    var listData, _a, treeData, rootNodes, currentState, expandedKeys;\n\n                    return __generator(this, function (_b) {\n                      switch (_b.label) {\n                        case 0:\n                          return [4\n                          /*yield*/\n                          , treeDataService(meta, modelService, flowchartId)];\n\n                        case 1:\n                          listData = _b.sent();\n                          _a = NodeList2Tree(listData), treeData = _a.treeData, rootNodes = _a.rootNodes;\n                          return [4\n                          /*yield*/\n                          , self.getValidValue()];\n\n                        case 2:\n                          currentState = _b.sent();\n                          expandedKeys = currentState.expandedKeys.length > 0 ? currentState.expandedKeys : rootNodes.map(function (i) {\n                            return i.id;\n                          });\n                          return [2\n                          /*return*/\n                          , {\n                            listData: listData,\n                            treeData: treeData,\n                            expandedKeys: expandedKeys\n                          }];\n                      }\n                    });\n                  });\n                };\n\n                graphMetaDisposable = graphMetaModel.watch(function (meta) {\n                  return __awaiter(void 0, void 0, void 0, function () {\n                    var data;\n                    return __generator(this, function (_a) {\n                      switch (_a.label) {\n                        case 0:\n                          return [4\n                          /*yield*/\n                          , fetch(meta)];\n\n                        case 1:\n                          data = _a.sent();\n                          self.setValue({\n                            treeNodeList: data.listData,\n                            treeData: data.treeData,\n                            expandedKeys: data.expandedKeys,\n                            defaultExpandAll: false,\n                            keyword: '',\n                            searchList: []\n                          });\n                          return [2\n                          /*return*/\n                          ];\n                      }\n                    });\n                  });\n                });\n                return [2\n                /*return*/\n                , Disposable.create(function () {\n                  graphMetaDisposable.dispose();\n                })];\n            }\n          });\n        });\n      }\n    });\n    /* eslint-disable-next-line  */\n  }, []);\n  /** 折叠文件夹 */\n\n  var onFolderExpand = React.useCallback(function (expandedKeys) {\n    debugger;\n    setState(function (modelState) {\n      modelState.expandedKeys = expandedKeys;\n    });\n  }, [setState]);\n  /** 搜索 */\n\n  var onKeywordChange = React.useCallback(function (keyword) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var list_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!searchService) {\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (!keyword) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , searchService(state.treeNodeList, keyword)];\n\n          case 1:\n            list_1 = _a.sent();\n            setState(function (modelState) {\n              modelState.keyword = keyword;\n              modelState.searchList = list_1;\n            });\n            return [3\n            /*break*/\n            , 3];\n\n          case 2:\n            setState(function (modelState) {\n              modelState.keyword = '';\n              modelState.searchList = [];\n            });\n            _a.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }, [searchService, state.treeNodeList, setState]);\n  return {\n    state: state,\n    setState: setState,\n    onKeywordChange: onKeywordChange,\n    onFolderExpand: onFolderExpand\n  };\n}; // 将list数据转换为树\n\nexport function NodeList2Tree(treeNodes) {\n  if (treeNodes === void 0) {\n    treeNodes = [];\n  }\n\n  var getGroupByIdMap = function (list) {\n    var uniqList = uniqBy(list, 'id');\n    var groups = uniqList.reduce(function (map, node) {\n      var parentId = node.parentId || TREE_ROOT_ID;\n\n      if (!map.has(parentId)) {\n        map.set(parentId, []);\n      }\n\n      var group = map.get(parentId);\n      group === null || group === void 0 ? void 0 : group.push(node);\n      return map;\n    }, new Map());\n    return groups;\n  };\n\n  var groupMap = getGroupByIdMap(cloneDeep(treeNodes));\n\n  function iterator(nodes, groupMapArgs) {\n    return nodes.map(function (node) {\n      if (groupMapArgs.has(node.id)) {\n        var children = groupMapArgs.get(node.id) || [];\n        node.key = node.id;\n        node.isDirectory = true;\n        node.children = iterator(children, groupMapArgs) || [];\n      } else {\n        node.isLeaf = true;\n      }\n\n      return node;\n    });\n  }\n\n  var rootNodes = groupMap.get(TREE_ROOT_ID) || [];\n  var treeData = iterator(rootNodes, groupMap);\n  return {\n    treeData: treeData,\n    rootNodes: rootNodes\n  };\n}","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@ant-design/flowchart/es/components/canvas-node-tree-panel/service.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","React","useContext","uniqBy","cloneDeep","createComponentModel","Disposable","MODELS","useXFlowApp","TREE_ROOT_ID","AppContext","NsTreePanelData","id","useTreePanelData","props","treeDataService","searchService","modelService","flowchartId","_a","treeData","searchList","treeNodeList","expandedKeys","defaultExpandAll","keyword","state","setState","panelModel","useEffect","findDeferredModel","registerModel","modelFactory","watchChange","self","graphMetaModel","fetch","graphMetaDisposable","GRAPH_META","getModel","meta","listData","rootNodes","currentState","_b","NodeList2Tree","getValidValue","map","i","watch","data","setValue","create","dispose","onFolderExpand","useCallback","modelState","onKeywordChange","list_1","treeNodes","getGroupByIdMap","list","uniqList","groups","reduce","node","parentId","has","set","group","get","Map","groupMap","nodes","groupMapArgs","children","key","isDirectory","isLeaf"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport React, { useContext } from 'react';\nimport uniqBy from 'lodash/uniqBy';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { createComponentModel, Disposable, MODELS, useXFlowApp } from '@antv/xflow';\nimport { TREE_ROOT_ID } from './constants';\nimport AppContext from '../../context';\n// import { NsTreePanelData} from '@antv/xflow/es/canvas-node-tree-panel/service'\nexport var NsTreePanelData;\n(function (NsTreePanelData) {\n    NsTreePanelData.id = 'TREE_PANEL_DATA';\n})(NsTreePanelData || (NsTreePanelData = {}));\nexport var useTreePanelData = function (props) {\n    var treeDataService = props.treeDataService, searchService = props.searchService;\n    var modelService = useXFlowApp().modelService;\n    var flowchartId = useContext(AppContext).flowchartId;\n    /** 使用model */\n    var _a = createComponentModel({\n        treeData: [],\n        searchList: [],\n        treeNodeList: [],\n        expandedKeys: [],\n        defaultExpandAll: false,\n        keyword: '',\n    }), state = _a[0], setState = _a[1], panelModel = _a[2];\n    /** 注册成为全局状态，方便其他组件联动 */\n    React.useEffect(function () {\n        if (modelService.findDeferredModel(NsTreePanelData.id)) {\n            return;\n        }\n        modelService.registerModel({\n            id: NsTreePanelData.id,\n            modelFactory: function () { return panelModel; },\n            watchChange: function (self) { return __awaiter(void 0, void 0, void 0, function () {\n                var graphMetaModel, fetch, graphMetaDisposable;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, MODELS.GRAPH_META.getModel(modelService)];\n                        case 1:\n                            graphMetaModel = _a.sent();\n                            fetch = function (meta) { return __awaiter(void 0, void 0, void 0, function () {\n                                var listData, _a, treeData, rootNodes, currentState, expandedKeys;\n                                return __generator(this, function (_b) {\n                                    switch (_b.label) {\n                                        case 0: return [4 /*yield*/, treeDataService(meta, modelService, flowchartId)];\n                                        case 1:\n                                            listData = _b.sent();\n                                            _a = NodeList2Tree(listData), treeData = _a.treeData, rootNodes = _a.rootNodes;\n                                            return [4 /*yield*/, self.getValidValue()];\n                                        case 2:\n                                            currentState = _b.sent();\n                                            expandedKeys = currentState.expandedKeys.length > 0 ? currentState.expandedKeys : rootNodes.map(function (i) { return i.id; });\n                                            return [2 /*return*/, { listData: listData, treeData: treeData, expandedKeys: expandedKeys }];\n                                    }\n                                });\n                            }); };\n                            graphMetaDisposable = graphMetaModel.watch(function (meta) { return __awaiter(void 0, void 0, void 0, function () {\n                                var data;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0: return [4 /*yield*/, fetch(meta)];\n                                        case 1:\n                                            data = _a.sent();\n                                            self.setValue({\n                                                treeNodeList: data.listData,\n                                                treeData: data.treeData,\n                                                expandedKeys: data.expandedKeys,\n                                                defaultExpandAll: false,\n                                                keyword: '',\n                                                searchList: [],\n                                            });\n                                            return [2 /*return*/];\n                                    }\n                                });\n                            }); });\n                            return [2 /*return*/, Disposable.create(function () {\n                                    graphMetaDisposable.dispose();\n                                })];\n                    }\n                });\n            }); },\n        });\n        /* eslint-disable-next-line  */\n    }, []);\n    /** 折叠文件夹 */\n    var onFolderExpand = React.useCallback(function (expandedKeys) {\n        debugger;\n        setState(function (modelState) {\n            modelState.expandedKeys = expandedKeys;\n        });\n    }, [setState]);\n    /** 搜索 */\n    var onKeywordChange = React.useCallback(function (keyword) { return __awaiter(void 0, void 0, void 0, function () {\n        var list_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!searchService) {\n                        return [2 /*return*/];\n                    }\n                    if (!keyword) return [3 /*break*/, 2];\n                    return [4 /*yield*/, searchService(state.treeNodeList, keyword)];\n                case 1:\n                    list_1 = _a.sent();\n                    setState(function (modelState) {\n                        modelState.keyword = keyword;\n                        modelState.searchList = list_1;\n                    });\n                    return [3 /*break*/, 3];\n                case 2:\n                    setState(function (modelState) {\n                        modelState.keyword = '';\n                        modelState.searchList = [];\n                    });\n                    _a.label = 3;\n                case 3: return [2 /*return*/];\n            }\n        });\n    }); }, [searchService, state.treeNodeList, setState]);\n    return {\n        state: state,\n        setState: setState,\n        onKeywordChange: onKeywordChange,\n        onFolderExpand: onFolderExpand,\n    };\n};\n// 将list数据转换为树\nexport function NodeList2Tree(treeNodes) {\n    if (treeNodes === void 0) { treeNodes = []; }\n    var getGroupByIdMap = function (list) {\n        var uniqList = uniqBy(list, 'id');\n        var groups = uniqList.reduce(function (map, node) {\n            var parentId = node.parentId || TREE_ROOT_ID;\n            if (!map.has(parentId)) {\n                map.set(parentId, []);\n            }\n            var group = map.get(parentId);\n            group === null || group === void 0 ? void 0 : group.push(node);\n            return map;\n        }, new Map());\n        return groups;\n    };\n    var groupMap = getGroupByIdMap(cloneDeep(treeNodes));\n    function iterator(nodes, groupMapArgs) {\n        return nodes.map(function (node) {\n            if (groupMapArgs.has(node.id)) {\n                var children = groupMapArgs.get(node.id) || [];\n                node.key = node.id;\n                node.isDirectory = true;\n                node.children = iterator(children, groupMapArgs) || [];\n            }\n            else {\n                node.isLeaf = true;\n            }\n            return node;\n        });\n    }\n    var rootNodes = groupMap.get(TREE_ROOT_ID) || [];\n    var treeData = iterator(rootNodes, groupMap);\n    return { treeData: treeData, rootNodes: rootNodes };\n}\n"]},"metadata":{},"sourceType":"module"}