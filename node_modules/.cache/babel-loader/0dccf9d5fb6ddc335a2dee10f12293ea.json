{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Heatmap = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar util_1 = require(\"@antv/util\");\n\nvar plot_1 = require(\"../../core/plot\");\n\nvar constants_1 = require(\"./constants\");\n\nvar heatmap_layer_1 = require(\"../../layers/heatmap-layer\");\n\nvar layer_group_1 = require(\"../../core/layer/layer-group\");\n\nvar Heatmap =\n/** @class */\nfunction (_super) {\n  (0, tslib_1.__extends)(Heatmap, _super);\n\n  function Heatmap() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * 地图类型\n     */\n\n\n    _this.type = plot_1.Plot.PlotType.Heatmap;\n    return _this;\n  }\n  /**\n   * 获取默认配置\n   */\n\n\n  Heatmap.prototype.getDefaultOptions = function () {\n    return Heatmap.DefaultOptions;\n  };\n  /**\n   * 创建图层\n   */\n\n\n  Heatmap.prototype.createLayers = function (source) {\n    this.heatmapLayer = new heatmap_layer_1.HeatmapLayer((0, tslib_1.__assign)({\n      source: source\n    }, (0, util_1.pick)(this.options, heatmap_layer_1.HeatmapLayer.LayerOptionsKeys)));\n    var layerGroup = new layer_group_1.LayerGroup([this.heatmapLayer]);\n\n    if (this.options.label) {\n      this.labelLayer = this.createLabelLayer(this.source, this.options.label, this.options);\n      layerGroup.addLayer(this.labelLayer);\n    }\n\n    return layerGroup;\n  };\n  /**\n   * 更新图层\n   */\n\n\n  Heatmap.prototype.updateLayers = function (options) {\n    var heatMapLayerConfig = (0, util_1.pick)(options, heatmap_layer_1.HeatmapLayer.LayerOptionsKeys);\n    this.heatmapLayer.update(heatMapLayerConfig);\n\n    if (options.label) {\n      if (this.labelLayer) {\n        this.labelLayer.update((0, tslib_1.__assign)({}, options.label));\n      } else {\n        this.labelLayer = this.createLabelLayer(this.source, options.label, this.options);\n        this.layerGroup.addLayer(this.labelLayer);\n      }\n    } else {\n      if (this.labelLayer) {\n        this.layerGroup.removeLayer(this.labelLayer);\n      }\n    }\n  };\n  /**\n   * 实现 legend 配置项\n   */\n\n\n  Heatmap.prototype.getLegendOptions = function () {\n    var _a;\n\n    var sizeLegendItems = this.heatmapLayer.layer.getLegendItems('size');\n\n    if (Array.isArray(sizeLegendItems) && sizeLegendItems.length !== 0) {\n      var min = sizeLegendItems[0].value;\n      var max = sizeLegendItems[sizeLegendItems.length - 1].value;\n      var colors = (_a = this.heatmapLayer.options.style) === null || _a === void 0 ? void 0 : _a.colorsRamp.map(function (_a) {\n        var color = _a.color;\n        return color;\n      });\n      return {\n        type: 'continue',\n        min: min,\n        max: max,\n        colors: colors\n      };\n    }\n\n    return {};\n  };\n  /**\n   * 默认配置项\n   */\n\n\n  Heatmap.DefaultOptions = constants_1.DEFAULT_OPTIONS;\n  return Heatmap;\n}(plot_1.Plot);\n\nexports.Heatmap = Heatmap;","map":{"version":3,"sources":["../../../../src/plots/heatmap/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Heatmap = void 0;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar plot_1 = require(\"../../core/plot\");\nvar constants_1 = require(\"./constants\");\nvar heatmap_layer_1 = require(\"../../layers/heatmap-layer\");\nvar layer_group_1 = require(\"../../core/layer/layer-group\");\nvar Heatmap = /** @class */ (function (_super) {\n    (0, tslib_1.__extends)(Heatmap, _super);\n    function Heatmap() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * 地图类型\n         */\n        _this.type = plot_1.Plot.PlotType.Heatmap;\n        return _this;\n    }\n    /**\n     * 获取默认配置\n     */\n    Heatmap.prototype.getDefaultOptions = function () {\n        return Heatmap.DefaultOptions;\n    };\n    /**\n     * 创建图层\n     */\n    Heatmap.prototype.createLayers = function (source) {\n        this.heatmapLayer = new heatmap_layer_1.HeatmapLayer((0, tslib_1.__assign)({ source: source }, (0, util_1.pick)(this.options, heatmap_layer_1.HeatmapLayer.LayerOptionsKeys)));\n        var layerGroup = new layer_group_1.LayerGroup([this.heatmapLayer]);\n        if (this.options.label) {\n            this.labelLayer = this.createLabelLayer(this.source, this.options.label, this.options);\n            layerGroup.addLayer(this.labelLayer);\n        }\n        return layerGroup;\n    };\n    /**\n     * 更新图层\n     */\n    Heatmap.prototype.updateLayers = function (options) {\n        var heatMapLayerConfig = (0, util_1.pick)(options, heatmap_layer_1.HeatmapLayer.LayerOptionsKeys);\n        this.heatmapLayer.update(heatMapLayerConfig);\n        if (options.label) {\n            if (this.labelLayer) {\n                this.labelLayer.update((0, tslib_1.__assign)({}, options.label));\n            }\n            else {\n                this.labelLayer = this.createLabelLayer(this.source, options.label, this.options);\n                this.layerGroup.addLayer(this.labelLayer);\n            }\n        }\n        else {\n            if (this.labelLayer) {\n                this.layerGroup.removeLayer(this.labelLayer);\n            }\n        }\n    };\n    /**\n     * 实现 legend 配置项\n     */\n    Heatmap.prototype.getLegendOptions = function () {\n        var _a;\n        var sizeLegendItems = this.heatmapLayer.layer.getLegendItems('size');\n        if (Array.isArray(sizeLegendItems) && sizeLegendItems.length !== 0) {\n            var min = sizeLegendItems[0].value;\n            var max = sizeLegendItems[sizeLegendItems.length - 1].value;\n            var colors = (_a = this.heatmapLayer.options.style) === null || _a === void 0 ? void 0 : _a.colorsRamp.map(function (_a) {\n                var color = _a.color;\n                return color;\n            });\n            return { type: 'continue', min: min, max: max, colors: colors };\n        }\n        return {};\n    };\n    /**\n     * 默认配置项\n     */\n    Heatmap.DefaultOptions = constants_1.DEFAULT_OPTIONS;\n    return Heatmap;\n}(plot_1.Plot));\nexports.Heatmap = Heatmap;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}