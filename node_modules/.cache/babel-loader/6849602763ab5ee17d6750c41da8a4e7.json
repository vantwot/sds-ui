{"ast":null,"code":"import React from 'react';\nimport classNames from 'classnames';\nimport { ToolbarItem } from './item';\nimport { ToolbarGroup } from './group';\nimport { ToolbarContext } from './context';\nexport class Toolbar extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    this.onClick = (key, value) => {\n      if (this.props.onClick) {\n        this.props.onClick(key, value);\n      }\n    };\n  }\n\n  render() {\n    const {\n      prefixCls,\n      className,\n      children,\n      extra,\n      size,\n      align,\n      hoverEffect\n    } = this.props;\n    const baseCls = `${prefixCls}-toolbar`;\n    return React.createElement(\"div\", {\n      className: classNames(baseCls, className, {\n        [`${baseCls}-${size}`]: size,\n        [`${baseCls}-align-right`]: align === 'right',\n        [`${baseCls}-hover-effect`]: hoverEffect\n      })\n    }, React.createElement(\"div\", {\n      className: `${baseCls}-content`\n    }, React.createElement(\"div\", {\n      className: `${baseCls}-content-inner`\n    }, React.createElement(ToolbarContext.Provider, {\n      value: {\n        prefixCls: baseCls,\n        onClick: this.onClick\n      }\n    }, children)), extra && React.createElement(\"div\", {\n      className: `${baseCls}-content-extras`\n    }, extra)));\n  }\n\n}\n\n(function (Toolbar) {\n  Toolbar.Item = ToolbarItem;\n  Toolbar.Group = ToolbarGroup;\n  Toolbar.defaultProps = {\n    prefixCls: 'x6',\n    hoverEffect: false\n  };\n})(Toolbar || (Toolbar = {}));","map":{"version":3,"sources":["../../src/toolbar/toolbar.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,UAAP,MAAuB,YAAvB;AACA,SAAS,WAAT,QAA4B,QAA5B;AACA,SAAS,YAAT,QAA6B,SAA7B;AACA,SAAS,cAAT,QAA+B,WAA/B;AAEA,OAAM,MAAO,OAAP,SAAuB,KAAK,CAAC,aAA7B,CAAyD;AAA/D,EAAA,WAAA,GAAA;;;AACE,SAAA,OAAA,GAAU,CAAC,GAAD,EAAc,KAAd,KAA6B;AACrC,UAAI,KAAK,KAAL,CAAW,OAAf,EAAwB;AACtB,aAAK,KAAL,CAAW,OAAX,CAAmB,GAAnB,EAAwB,KAAxB;AACD;AACF,KAJD;AAmCD;;AA7BC,EAAA,MAAM,GAAA;AACJ,UAAM;AAAE,MAAA,SAAF;AAAa,MAAA,SAAb;AAAwB,MAAA,QAAxB;AAAkC,MAAA,KAAlC;AAAyC,MAAA,IAAzC;AAA+C,MAAA,KAA/C;AAAsD,MAAA;AAAtD,QACJ,KAAK,KADP;AAGA,UAAM,OAAO,GAAG,GAAG,SAAS,UAA5B;AACA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,SAAS,EAAE,UAAU,CAAC,OAAD,EAAU,SAAV,EAAqB;AACxC,SAAC,GAAG,OAAO,IAAI,IAAI,EAAnB,GAAwB,IADgB;AAExC,SAAC,GAAG,OAAO,cAAX,GAA4B,KAAK,KAAK,OAFE;AAGxC,SAAC,GAAG,OAAO,eAAX,GAA6B;AAHW,OAArB;AADvB,KAAA,EAOE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,GAAG,OAAO;AAA1B,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,GAAG,OAAO;AAA1B,KAAA,EACE,KAAA,CAAA,aAAA,CAAC,cAAc,CAAC,QAAhB,EAAwB;AACtB,MAAA,KAAK,EAAE;AACL,QAAA,SAAS,EAAE,OADN;AAEL,QAAA,OAAO,EAAE,KAAK;AAFT;AADe,KAAxB,EAMG,QANH,CADF,CADF,EAWG,KAAK,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,GAAG,OAAO;AAA1B,KAAA,EAA8C,KAA9C,CAXZ,CAPF,CADF;AAuBD;;AAnC4D;;AAsC/D,CAAA,UAAiB,OAAjB,EAAwB;AACT,EAAA,OAAA,CAAA,IAAA,GAAO,WAAP;AACA,EAAA,OAAA,CAAA,KAAA,GAAQ,YAAR;AAYA,EAAA,OAAA,CAAA,YAAA,GAAsB;AACjC,IAAA,SAAS,EAAE,IADsB;AAEjC,IAAA,WAAW,EAAE;AAFoB,GAAtB;AAId,CAlBD,EAAiB,OAAO,KAAP,OAAO,GAAA,EAAA,CAAxB","sourceRoot":"","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { ToolbarItem } from './item';\nimport { ToolbarGroup } from './group';\nimport { ToolbarContext } from './context';\nexport class Toolbar extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.onClick = (key, value) => {\n            if (this.props.onClick) {\n                this.props.onClick(key, value);\n            }\n        };\n    }\n    render() {\n        const { prefixCls, className, children, extra, size, align, hoverEffect } = this.props;\n        const baseCls = `${prefixCls}-toolbar`;\n        return (React.createElement(\"div\", { className: classNames(baseCls, className, {\n                [`${baseCls}-${size}`]: size,\n                [`${baseCls}-align-right`]: align === 'right',\n                [`${baseCls}-hover-effect`]: hoverEffect,\n            }) },\n            React.createElement(\"div\", { className: `${baseCls}-content` },\n                React.createElement(\"div\", { className: `${baseCls}-content-inner` },\n                    React.createElement(ToolbarContext.Provider, { value: {\n                            prefixCls: baseCls,\n                            onClick: this.onClick,\n                        } }, children)),\n                extra && React.createElement(\"div\", { className: `${baseCls}-content-extras` }, extra))));\n    }\n}\n(function (Toolbar) {\n    Toolbar.Item = ToolbarItem;\n    Toolbar.Group = ToolbarGroup;\n    Toolbar.defaultProps = {\n        prefixCls: 'x6',\n        hoverEffect: false,\n    };\n})(Toolbar || (Toolbar = {}));\n//# sourceMappingURL=toolbar.js.map"]},"metadata":{},"sourceType":"module"}