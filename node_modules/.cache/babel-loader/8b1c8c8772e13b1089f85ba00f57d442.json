{"ast":null,"code":"import _toConsumableArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React from 'react';\nimport classNames from 'classnames';\n/** app */\n\nimport { initApp } from '../application-module';\nimport { XFlowAppInternalProvider, useXFlowApp } from './app-context';\n/** app-extension */\n\nimport { ExtensionRegistryContext } from './extension-context';\nimport { useXflowPrefixCls } from './global-config-context';\nimport { XFlowAppExtensionMoudle } from './app-extension-module';\nimport { ExtensionRegistry, createExtensionRegistry } from './extension-registry';\n/** graph */\n\nimport { XFlowCanvas } from './canvas';\n/** command */\n\nimport { ModelServiceRegistry } from '../../model-service';\nimport { CommandsRegistry, XFlowGraphCommands } from '../../command-contributions';\n/** hook */\n\nimport { HookRegistry } from '../../hooks';\n/** UI model */\n\nimport { ToolbarRegistry } from '../../toolbar';\nimport { MenuRegistry } from '../../menu';\nexport var XFlow = function XFlow(props) {\n  var meta = props.meta,\n      graphConfig = props.graphConfig,\n      graphData = props.graphData,\n      graphLayout = props.graphLayout,\n      onLoad = props.onLoad,\n      isAutoCenter = props.isAutoCenter,\n      hookConfig = props.hookConfig,\n      modelServiceConfig = props.modelServiceConfig,\n      commandConfig = props.commandConfig,\n      onAppConfigReady = props.onAppConfigReady,\n      onAppDestroy = props.onAppDestroy,\n      _props$children = props.children,\n      children = _props$children === void 0 ? [] : _props$children,\n      className = props.className;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      appRef = _React$useState2[0],\n      setAppRef = _React$useState2[1];\n  /** XFlow App 配置中心 */\n\n\n  var extensionRegistry = createExtensionRegistry();\n  /** didmount */\n\n  React.useEffect(function () {\n    /** before app start */\n    if (onAppConfigReady) {\n      onAppConfigReady(extensionRegistry);\n    }\n    /** 初始化应用 */\n\n\n    var app = initApp(extensionRegistry);\n    app.start().then(function () {\n      return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                /** 保留引用 */\n                setAppRef(app);\n                /** 自动执行 load Meta */\n\n                if (!meta) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 4;\n                return app.commandService.executeCommand(XFlowGraphCommands.LOAD_META.id, {\n                  meta: meta\n                });\n\n              case 4:\n                /** after app start */\n                if (onLoad) {\n                  onLoad(app, extensionRegistry);\n                }\n\n                if (!graphData) {\n                  _context.next = 11;\n                  break;\n                }\n\n                if (!graphLayout) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 9;\n                return app.commandService.executeCommand(XFlowGraphCommands.GRAPH_LAYOUT.id, Object.assign({\n                  graphData: graphData\n                }, graphLayout));\n\n              case 9:\n                _context.next = 11;\n                return app.commandService.executeCommand(XFlowGraphCommands.GRAPH_RENDER.id, {\n                  graphData: graphData\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    });\n    /** unmount */\n\n    var destroy = function destroy() {\n      return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                onAppDestroy && onAppDestroy(app);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n    };\n\n    return function () {\n      destroy();\n    };\n    /** 不要删 保证只生成一次 */\n    // eslint-disable-next-line\n  }, []);\n  /** 自动更新meta */\n\n  React.useEffect(function () {\n    if (appRef) {\n      appRef.commandService.executeCommand(XFlowGraphCommands.LOAD_META.id, {\n        meta: meta\n      });\n    }\n    /** 不要删 只和meta联动 */\n    // eslint-disable-next-line\n\n  }, [meta]);\n  /** 自动渲染画布内容 */\n\n  React.useEffect(function () {\n    var fn = function fn() {\n      return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var x6Graph;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!appRef) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                if (!(graphData && graphLayout)) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                _context3.next = 4;\n                return appRef.commandService.executeCommand(XFlowGraphCommands.GRAPH_LAYOUT.id, Object.assign({\n                  graphData: graphData\n                }, graphLayout));\n\n              case 4:\n                _context3.next = 6;\n                return appRef.commandService.executeCommand(XFlowGraphCommands.GRAPH_RENDER.id, {\n                  graphData: graphData\n                });\n\n              case 6:\n                if (!isAutoCenter) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                _context3.next = 9;\n                return appRef.getGraphInstance();\n\n              case 9:\n                x6Graph = _context3.sent;\n                x6Graph.centerContent();\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n    };\n\n    fn();\n    /** 不要删 只和graphData联动 */\n    // eslint-disable-next-line\n  }, [graphData]);\n  /** classname */\n\n  var appClzName = classNames.apply(void 0, ['xflow-app-workspace', className].concat(_toConsumableArray(extensionRegistry.getContainerClassNames())));\n  /** 判断是否需要自动渲染画布组件, 坐标相对于xflow-graph-root */\n\n  var hasCanvasComponent = (Array.isArray(children) ? children : [children]).some(function (child) {\n    return child && child.props.isXFlowCanvas;\n  });\n  return React.createElement(XFlowAppInternalProvider, {\n    app: appRef\n  }, React.createElement(ExtensionRegistryContext.Provider, {\n    value: extensionRegistry\n  }, React.createElement(\"div\", {\n    className: appClzName,\n    id: extensionRegistry.getInstaceId()\n  }, !hasCanvasComponent && React.createElement(XFlowCanvas, {\n    config: graphConfig,\n    position: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    }\n  }), children, React.createElement(ModelServiceRegistry, {\n    config: modelServiceConfig\n  }), React.createElement(CommandsRegistry, {\n    config: commandConfig\n  }), React.createElement(HookRegistry, {\n    config: hookConfig\n  }), React.createElement(ToolbarRegistry, null), React.createElement(MenuRegistry, null))));\n};\nXFlow.defaultProps = {};\nexport default XFlow;\nexport { useXFlowApp, useXflowPrefixCls, XFlowCanvas, XFlowAppExtensionMoudle as XFlowAppExtension, ExtensionRegistry };","map":{"version":3,"sources":["../../../src/xflow-main/components/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from 'react';\nimport classNames from 'classnames';\n/** app */\nimport { initApp } from '../application-module';\nimport { XFlowAppInternalProvider, useXFlowApp } from './app-context';\n/** app-extension */\nimport { ExtensionRegistryContext } from './extension-context';\nimport { useXflowPrefixCls } from './global-config-context';\nimport { XFlowAppExtensionMoudle } from './app-extension-module';\nimport { ExtensionRegistry, createExtensionRegistry } from './extension-registry';\n/** graph */\nimport { XFlowCanvas } from './canvas';\n/** command */\nimport { ModelServiceRegistry } from '../../model-service';\nimport { CommandsRegistry, XFlowGraphCommands } from '../../command-contributions';\n/** hook */\nimport { HookRegistry } from '../../hooks';\n/** UI model */\nimport { ToolbarRegistry } from '../../toolbar';\nimport { MenuRegistry } from '../../menu';\nexport const XFlow = props => {\n    const { meta, graphConfig, graphData, graphLayout, onLoad, isAutoCenter, hookConfig, modelServiceConfig, commandConfig, onAppConfigReady, onAppDestroy, children = [], className, } = props;\n    const [appRef, setAppRef] = React.useState();\n    /** XFlow App 配置中心 */\n    const extensionRegistry = createExtensionRegistry();\n    /** didmount */\n    React.useEffect(() => {\n        /** before app start */\n        if (onAppConfigReady) {\n            onAppConfigReady(extensionRegistry);\n        }\n        /** 初始化应用 */\n        const app = initApp(extensionRegistry);\n        app.start().then(() => __awaiter(void 0, void 0, void 0, function* () {\n            /** 保留引用 */\n            setAppRef(app);\n            /** 自动执行 load Meta */\n            if (meta) {\n                yield app.commandService.executeCommand(XFlowGraphCommands.LOAD_META.id, { meta });\n            }\n            /** after app start */\n            if (onLoad) {\n                onLoad(app, extensionRegistry);\n            }\n            if (graphData) {\n                if (graphLayout) {\n                    yield app.commandService.executeCommand(XFlowGraphCommands.GRAPH_LAYOUT.id, Object.assign({ graphData }, graphLayout));\n                }\n                yield app.commandService.executeCommand(XFlowGraphCommands.GRAPH_RENDER.id, { graphData });\n            }\n        }));\n        /** unmount */\n        const destroy = () => __awaiter(void 0, void 0, void 0, function* () {\n            onAppDestroy && onAppDestroy(app);\n        });\n        return () => {\n            destroy();\n        };\n        /** 不要删 保证只生成一次 */\n        // eslint-disable-next-line\n    }, []);\n    /** 自动更新meta */\n    React.useEffect(() => {\n        if (appRef) {\n            appRef.commandService.executeCommand(XFlowGraphCommands.LOAD_META.id, { meta });\n        }\n        /** 不要删 只和meta联动 */\n        // eslint-disable-next-line\n    }, [meta]);\n    /** 自动渲染画布内容 */\n    React.useEffect(() => {\n        const fn = () => __awaiter(void 0, void 0, void 0, function* () {\n            if (appRef) {\n                if (graphData && graphLayout) {\n                    yield appRef.commandService.executeCommand(XFlowGraphCommands.GRAPH_LAYOUT.id, Object.assign({ graphData }, graphLayout));\n                }\n                yield appRef.commandService.executeCommand(XFlowGraphCommands.GRAPH_RENDER.id, {\n                    graphData,\n                });\n                /** 自动居中画布内容 */\n                if (isAutoCenter) {\n                    const x6Graph = yield appRef.getGraphInstance();\n                    x6Graph.centerContent();\n                }\n            }\n        });\n        fn();\n        /** 不要删 只和graphData联动 */\n        // eslint-disable-next-line\n    }, [graphData]);\n    /** classname */\n    const appClzName = classNames('xflow-app-workspace', className, ...extensionRegistry.getContainerClassNames());\n    /** 判断是否需要自动渲染画布组件, 坐标相对于xflow-graph-root */\n    const hasCanvasComponent = (Array.isArray(children) ? children : [children]).some(child => {\n        return child && child.props.isXFlowCanvas;\n    });\n    return (React.createElement(XFlowAppInternalProvider, { app: appRef },\n        React.createElement(ExtensionRegistryContext.Provider, { value: extensionRegistry },\n            React.createElement(\"div\", { className: appClzName, id: extensionRegistry.getInstaceId() },\n                !hasCanvasComponent && (React.createElement(XFlowCanvas, { config: graphConfig, position: { top: 0, bottom: 0, left: 0, right: 0 } })),\n                children,\n                React.createElement(ModelServiceRegistry, { config: modelServiceConfig }),\n                React.createElement(CommandsRegistry, { config: commandConfig }),\n                React.createElement(HookRegistry, { config: hookConfig }),\n                React.createElement(ToolbarRegistry, null),\n                React.createElement(MenuRegistry, null)))));\n};\nXFlow.defaultProps = {};\nexport default XFlow;\nexport { useXFlowApp, useXflowPrefixCls, XFlowCanvas, XFlowAppExtensionMoudle as XFlowAppExtension, ExtensionRegistry, };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}