{"ast":null,"code":"export var InteractionEvent;\n\n(function (InteractionEvent) {\n  InteractionEvent[\"Hover\"] = \"hover\";\n  InteractionEvent[\"Click\"] = \"click\";\n  InteractionEvent[\"Select\"] = \"select\";\n  InteractionEvent[\"Active\"] = \"active\";\n  InteractionEvent[\"Drag\"] = \"drag\";\n})(InteractionEvent || (InteractionEvent = {}));","map":{"version":3,"sources":["../../../src/services/interaction/IInteractionService.ts"],"names":["InteractionEvent"],"mappings":"AACA,OAAA,IAAA,gBAAA;;WAAYA,gB;AAAAA,EAAAA,gB,SAAAA,G,OAAAA;AAAAA,EAAAA,gB,SAAAA,G,OAAAA;AAAAA,EAAAA,gB,UAAAA,G,QAAAA;AAAAA,EAAAA,gB,UAAAA,G,QAAAA;AAAAA,EAAAA,gB,QAAAA,G,MAAAA;GAAAA,gB,KAAAA,gB","sourcesContent":["import { ILngLat } from '../map/IMapService';\nexport enum InteractionEvent {\n  Hover = 'hover',\n  Click = 'click',\n  Select = 'select',\n  Active = 'active',\n  Drag = 'drag',\n}\nexport interface IInteractionTarget {\n  x: number;\n  y: number;\n  lngLat: ILngLat;\n  type: string;\n  featureId?: number;\n  target: MouseEvent | TouchEvent;\n}\n\nexport interface IInteractionService {\n  init(): void;\n  destroy(): void;\n  on(\n    eventName: InteractionEvent,\n    callback: (params: IInteractionTarget) => void,\n  ): void;\n  triggerHover({ x, y, type }: Partial<IInteractionTarget>): void;\n  triggerSelect(id: number): void;\n  triggerActive(id: number): void;\n}\n"]},"metadata":{},"sourceType":"module"}