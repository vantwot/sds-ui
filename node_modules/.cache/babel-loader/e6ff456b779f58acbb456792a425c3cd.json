{"ast":null,"code":"import _slicedToArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport React from 'react';\n/** AppContext */\n\nexport var XFlowAppContext = React.createContext(null);\nXFlowAppContext.displayName = 'XFlowAppContext';\n/** AppContext:获取 app */\n\nexport var useXFlowApp = function useXFlowApp() {\n  var container = React.useContext(XFlowAppContext);\n  return container && container.getApp ? container.getApp() : null;\n};\n/** AppContext: 获取 appContainer */\n\nexport var useXFlowAppContainer = function useXFlowAppContainer() {\n  return React.useContext(XFlowAppContext);\n};\n\nvar AppContainer = function AppContainer() {\n  var _this = this;\n\n  var isUserDefined = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  _classCallCheck(this, AppContainer);\n\n  this.cache = null;\n\n  this.setApp = function (app) {\n    _this.cache = app;\n\n    if (_this.onAppChangeCallback) {\n      _this.onAppChangeCallback(app);\n    }\n  };\n\n  this.isUserDefined = function () {\n    return _this.isUserDefinedFlag;\n  };\n\n  this.getApp = function () {\n    return _this.cache;\n  };\n\n  this.onAppChange = function (cb) {\n    _this.onAppChangeCallback = cb;\n  };\n\n  this.dispose = function () {\n    _this.cache = null;\n  };\n\n  this.isUserDefinedFlag = isUserDefined;\n};\n/** XFlow内部使用 */\n\n\nexport var XFlowAppInternalProvider = function XFlowAppInternalProvider(props) {\n  var userDefinedAppContainer = useXFlowAppContainer();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      setTick = _React$useState2[1];\n\n  var appContainer = React.useMemo(function () {\n    return userDefinedAppContainer && userDefinedAppContainer.isUserDefined() ? userDefinedAppContainer : new AppContainer(false); // 不要移除：保证config只生成一次\n    // eslint-disable-next-line\n  }, []); // set appChange callback\n\n  if (!appContainer.isUserDefined()) {\n    appContainer.onAppChange(function () {\n      return setTick(0);\n    });\n  }\n\n  React.useEffect(function () {\n    if (props.app) {\n      appContainer.setApp(props.app);\n    } // 不要移除：只关心 props.app\n    // eslint-disable-next-line\n\n  }, [props.app]);\n\n  if (appContainer.isUserDefined()) {\n    return React.createElement(React.Fragment, null, props.children);\n  }\n\n  return React.createElement(XFlowAppContext.Provider, {\n    value: Object.assign({}, appContainer)\n  }, props.children);\n};\nXFlowAppInternalProvider.displayName = 'XFlowAppInternalProvider';\n/** XFlow外部使用 */\n\nexport var XFlowAppProvider = function XFlowAppProvider(_ref) {\n  var children = _ref.children;\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      setTick = _React$useState4[1];\n\n  var appContainer = React.useMemo(function () {\n    return new AppContainer(true);\n  }, []); // add callback\n\n  appContainer.onAppChange(function () {\n    return setTick(0);\n  });\n  return React.createElement(XFlowAppContext.Provider, {\n    value: Object.assign({}, appContainer)\n  }, children);\n};\nXFlowAppProvider.displayName = 'XFlowAppProvider';","map":{"version":3,"sources":["../../../src/xflow-main/components/app-context.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from 'react';\n/** AppContext */\nexport const XFlowAppContext = React.createContext(null);\nXFlowAppContext.displayName = 'XFlowAppContext';\n/** AppContext:获取 app */\nexport const useXFlowApp = () => {\n    const container = React.useContext(XFlowAppContext);\n    return container && container.getApp ? container.getApp() : null;\n};\n/** AppContext: 获取 appContainer */\nexport const useXFlowAppContainer = () => {\n    return React.useContext(XFlowAppContext);\n};\nclass AppContainer {\n    constructor(isUserDefined = false) {\n        this.cache = null;\n        this.setApp = (app) => {\n            this.cache = app;\n            if (this.onAppChangeCallback) {\n                this.onAppChangeCallback(app);\n            }\n        };\n        this.isUserDefined = () => this.isUserDefinedFlag;\n        this.getApp = () => {\n            return this.cache;\n        };\n        this.onAppChange = cb => {\n            this.onAppChangeCallback = cb;\n        };\n        this.dispose = () => {\n            this.cache = null;\n        };\n        this.isUserDefinedFlag = isUserDefined;\n    }\n}\n/** XFlow内部使用 */\nexport const XFlowAppInternalProvider = props => {\n    const userDefinedAppContainer = useXFlowAppContainer();\n    const [, setTick] = React.useState(null);\n    const appContainer = React.useMemo(() => {\n        return userDefinedAppContainer && userDefinedAppContainer.isUserDefined()\n            ? userDefinedAppContainer\n            : new AppContainer(false);\n        // 不要移除：保证config只生成一次\n        // eslint-disable-next-line\n    }, []);\n    // set appChange callback\n    if (!appContainer.isUserDefined()) {\n        appContainer.onAppChange(() => setTick(0));\n    }\n    React.useEffect(() => {\n        if (props.app) {\n            appContainer.setApp(props.app);\n        }\n        // 不要移除：只关心 props.app\n        // eslint-disable-next-line\n    }, [props.app]);\n    if (appContainer.isUserDefined()) {\n        return React.createElement(React.Fragment, null, props.children);\n    }\n    return (React.createElement(XFlowAppContext.Provider, { value: Object.assign({}, appContainer) }, props.children));\n};\nXFlowAppInternalProvider.displayName = 'XFlowAppInternalProvider';\n/** XFlow外部使用 */\nexport const XFlowAppProvider = ({ children }) => {\n    const [, setTick] = React.useState(null);\n    const appContainer = React.useMemo(() => {\n        return new AppContainer(true);\n    }, []);\n    // add callback\n    appContainer.onAppChange(() => setTick(0));\n    return React.createElement(XFlowAppContext.Provider, { value: Object.assign({}, appContainer) }, children);\n};\nXFlowAppProvider.displayName = 'XFlowAppProvider';\n//# sourceMappingURL=app-context.js.map"]},"metadata":{},"sourceType":"module"}