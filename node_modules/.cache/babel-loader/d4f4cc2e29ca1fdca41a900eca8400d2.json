{"ast":null,"code":"import { toResult } from './util';\nexport var outside = function outside(portPosition, elemBBox, args) {\n  return outsideLayout(portPosition, elemBBox, false, args);\n};\nexport var outsideOriented = function outsideOriented(portPosition, elemBBox, args) {\n  return outsideLayout(portPosition, elemBBox, true, args);\n};\nexport var inside = function inside(portPosition, elemBBox, args) {\n  return insideLayout(portPosition, elemBBox, false, args);\n};\nexport var insideOriented = function insideOriented(portPosition, elemBBox, args) {\n  return insideLayout(portPosition, elemBBox, true, args);\n};\n\nfunction outsideLayout(portPosition, elemBBox, autoOrient, args) {\n  var offset = args.offset != null ? args.offset : 15;\n  var angle = elemBBox.getCenter().theta(portPosition);\n  var bboxAngles = getBBoxAngles(elemBBox);\n  var y;\n  var tx;\n  var ty;\n  var textAnchor;\n  var orientAngle = 0;\n\n  if (angle < bboxAngles[1] || angle > bboxAngles[2]) {\n    y = '.3em';\n    tx = offset;\n    ty = 0;\n    textAnchor = 'start';\n  } else if (angle < bboxAngles[0]) {\n    y = '0';\n    tx = 0;\n    ty = -offset;\n\n    if (autoOrient) {\n      orientAngle = -90;\n      textAnchor = 'start';\n    } else {\n      textAnchor = 'middle';\n    }\n  } else if (angle < bboxAngles[3]) {\n    y = '.3em';\n    tx = -offset;\n    ty = 0;\n    textAnchor = 'end';\n  } else {\n    y = '.6em';\n    tx = 0;\n    ty = offset;\n\n    if (autoOrient) {\n      orientAngle = 90;\n      textAnchor = 'start';\n    } else {\n      textAnchor = 'middle';\n    }\n  }\n\n  return toResult({\n    position: {\n      x: Math.round(tx),\n      y: Math.round(ty)\n    },\n    angle: orientAngle,\n    attrs: {\n      '.': {\n        y: y,\n        'text-anchor': textAnchor\n      }\n    }\n  }, args);\n}\n\nfunction insideLayout(portPosition, elemBBox, autoOrient, args) {\n  var offset = args.offset != null ? args.offset : 15;\n  var angle = elemBBox.getCenter().theta(portPosition);\n  var bboxAngles = getBBoxAngles(elemBBox);\n  var y;\n  var tx;\n  var ty;\n  var textAnchor;\n  var orientAngle = 0;\n\n  if (angle < bboxAngles[1] || angle > bboxAngles[2]) {\n    y = '.3em';\n    tx = -offset;\n    ty = 0;\n    textAnchor = 'end';\n  } else if (angle < bboxAngles[0]) {\n    y = '.6em';\n    tx = 0;\n    ty = offset;\n\n    if (autoOrient) {\n      orientAngle = 90;\n      textAnchor = 'start';\n    } else {\n      textAnchor = 'middle';\n    }\n  } else if (angle < bboxAngles[3]) {\n    y = '.3em';\n    tx = offset;\n    ty = 0;\n    textAnchor = 'start';\n  } else {\n    y = '0em';\n    tx = 0;\n    ty = -offset;\n\n    if (autoOrient) {\n      orientAngle = -90;\n      textAnchor = 'start';\n    } else {\n      textAnchor = 'middle';\n    }\n  }\n\n  return toResult({\n    position: {\n      x: Math.round(tx),\n      y: Math.round(ty)\n    },\n    angle: orientAngle,\n    attrs: {\n      '.': {\n        y: y,\n        'text-anchor': textAnchor\n      }\n    }\n  }, args);\n}\n\nfunction getBBoxAngles(elemBBox) {\n  var center = elemBBox.getCenter();\n  var tl = center.theta(elemBBox.getTopLeft());\n  var bl = center.theta(elemBBox.getBottomLeft());\n  var br = center.theta(elemBBox.getBottomRight());\n  var tr = center.theta(elemBBox.getTopRight());\n  return [tl, tr, br, bl];\n}","map":{"version":3,"sources":["../../../src/registry/port-label-layout/inout.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { toResult } from './util';\nexport const outside = (portPosition, elemBBox, args) => outsideLayout(portPosition, elemBBox, false, args);\nexport const outsideOriented = (portPosition, elemBBox, args) => outsideLayout(portPosition, elemBBox, true, args);\nexport const inside = (portPosition, elemBBox, args) => insideLayout(portPosition, elemBBox, false, args);\nexport const insideOriented = (portPosition, elemBBox, args) => insideLayout(portPosition, elemBBox, true, args);\nfunction outsideLayout(portPosition, elemBBox, autoOrient, args) {\n    const offset = args.offset != null ? args.offset : 15;\n    const angle = elemBBox.getCenter().theta(portPosition);\n    const bboxAngles = getBBoxAngles(elemBBox);\n    let y;\n    let tx;\n    let ty;\n    let textAnchor;\n    let orientAngle = 0;\n    if (angle < bboxAngles[1] || angle > bboxAngles[2]) {\n        y = '.3em';\n        tx = offset;\n        ty = 0;\n        textAnchor = 'start';\n    }\n    else if (angle < bboxAngles[0]) {\n        y = '0';\n        tx = 0;\n        ty = -offset;\n        if (autoOrient) {\n            orientAngle = -90;\n            textAnchor = 'start';\n        }\n        else {\n            textAnchor = 'middle';\n        }\n    }\n    else if (angle < bboxAngles[3]) {\n        y = '.3em';\n        tx = -offset;\n        ty = 0;\n        textAnchor = 'end';\n    }\n    else {\n        y = '.6em';\n        tx = 0;\n        ty = offset;\n        if (autoOrient) {\n            orientAngle = 90;\n            textAnchor = 'start';\n        }\n        else {\n            textAnchor = 'middle';\n        }\n    }\n    return toResult({\n        position: {\n            x: Math.round(tx),\n            y: Math.round(ty),\n        },\n        angle: orientAngle,\n        attrs: {\n            '.': {\n                y,\n                'text-anchor': textAnchor,\n            },\n        },\n    }, args);\n}\nfunction insideLayout(portPosition, elemBBox, autoOrient, args) {\n    const offset = args.offset != null ? args.offset : 15;\n    const angle = elemBBox.getCenter().theta(portPosition);\n    const bboxAngles = getBBoxAngles(elemBBox);\n    let y;\n    let tx;\n    let ty;\n    let textAnchor;\n    let orientAngle = 0;\n    if (angle < bboxAngles[1] || angle > bboxAngles[2]) {\n        y = '.3em';\n        tx = -offset;\n        ty = 0;\n        textAnchor = 'end';\n    }\n    else if (angle < bboxAngles[0]) {\n        y = '.6em';\n        tx = 0;\n        ty = offset;\n        if (autoOrient) {\n            orientAngle = 90;\n            textAnchor = 'start';\n        }\n        else {\n            textAnchor = 'middle';\n        }\n    }\n    else if (angle < bboxAngles[3]) {\n        y = '.3em';\n        tx = offset;\n        ty = 0;\n        textAnchor = 'start';\n    }\n    else {\n        y = '0em';\n        tx = 0;\n        ty = -offset;\n        if (autoOrient) {\n            orientAngle = -90;\n            textAnchor = 'start';\n        }\n        else {\n            textAnchor = 'middle';\n        }\n    }\n    return toResult({\n        position: {\n            x: Math.round(tx),\n            y: Math.round(ty),\n        },\n        angle: orientAngle,\n        attrs: {\n            '.': {\n                y,\n                'text-anchor': textAnchor,\n            },\n        },\n    }, args);\n}\nfunction getBBoxAngles(elemBBox) {\n    const center = elemBBox.getCenter();\n    const tl = center.theta(elemBBox.getTopLeft());\n    const bl = center.theta(elemBBox.getBottomLeft());\n    const br = center.theta(elemBBox.getBottomRight());\n    const tr = center.theta(elemBBox.getTopRight());\n    return [tl, tr, br, bl];\n}\n//# sourceMappingURL=inout.js.map"]},"metadata":{},"sourceType":"module"}