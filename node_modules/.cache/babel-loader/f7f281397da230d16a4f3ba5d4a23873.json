{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nimport { MODELS } from '../../model-service';\nexport var NsGraphMeta;\n\n(function (NsGraphMeta) {\n  /** Command Id: 用于注册named factory */\n  NsGraphMeta.command = XFlowGraphCommands.LOAD_META;\n  /** hookName */\n\n  NsGraphMeta.hookKey = 'graphMeta';\n})(NsGraphMeta || (NsGraphMeta = {}));\n\nvar GraphMetaCommand =\n/*#__PURE__*/\n\n/** 创建节点命令 */\nfunction () {\n  function GraphMetaCommand() {\n    var _this = this;\n\n    _classCallCheck(this, GraphMetaCommand);\n\n    /** 执行Cmd */\n    this.execute = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var _this$ctx$getArgs, args, runtimeHook, hooks, result, modelService, model;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$ctx$getArgs = this.ctx.getArgs(), args = _this$ctx$getArgs.args, runtimeHook = _this$ctx$getArgs.hooks;\n                hooks = this.ctx.getHooks();\n                _context2.next = 4;\n                return hooks.graphMeta.call(\n                /** 执行hooks pipeline处理args */\n                args,\n                /** 执行 callback */\n                function (handlerArgs) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var _a, graphMetaService, meta;\n\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            graphMetaService = handlerArgs.graphMetaService;\n\n                            if (!graphMetaService) {\n                              _context.next = 7;\n                              break;\n                            }\n\n                            _context.next = 4;\n                            return graphMetaService(handlerArgs);\n\n                          case 4:\n                            _context.t0 = _context.sent;\n                            _context.next = 8;\n                            break;\n\n                          case 7:\n                            _context.t0 = {\n                              flowId: (_a = handlerArgs === null || handlerArgs === void 0 ? void 0 : handlerArgs.meta) === null || _a === void 0 ? void 0 : _a.flowId\n                            };\n\n                          case 8:\n                            meta = _context.t0;\n                            return _context.abrupt(\"return\", {\n                              graphMeta: meta,\n                              flowId: meta === null || meta === void 0 ? void 0 : meta.flowId\n                            });\n\n                          case 10:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n                },\n                /** 外部的 hook */\n                runtimeHook);\n\n              case 4:\n                result = _context2.sent;\n                modelService = this.ctx.getModelService();\n                /** 如果已经注册，直接更新已有的值 */\n\n                _context2.next = 8;\n                return MODELS.GRAPH_META.getModel(modelService);\n\n              case 8:\n                model = _context2.sent;\n                model.setValue(result.graphMeta);\n                /** 设置结果 */\n\n                this.ctx.setResult(result);\n                return _context2.abrupt(\"return\", this);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    };\n    /** undo cmd */\n\n\n    this.undo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.ctx.undo();\n                return _context3.abrupt(\"return\", this);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    };\n    /** redo cmd */\n\n\n    this.redo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.ctx.isUndoable) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.execute();\n\n              case 3:\n                return _context4.abrupt(\"return\", this);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    };\n  }\n\n  _createClass(GraphMetaCommand, [{\n    key: \"init\",\n    value: function init() {\n      this.ctx = this.contextProvider();\n    }\n    /** isUndoable */\n\n  }, {\n    key: \"isUndoable\",\n    value: function isUndoable() {\n      return this.ctx.isUndoable();\n    }\n  }]);\n\n  return GraphMetaCommand;\n}();\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphMetaCommand.prototype, \"contextProvider\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], GraphMetaCommand.prototype, \"init\", null);\n\nGraphMetaCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsGraphMeta.command.id\n  }\n})\n/** 创建节点命令 */\n], GraphMetaCommand);\nexport { GraphMetaCommand };","map":{"version":3,"sources":["../../../src/command-contributions/graph/graph-meta.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nimport { MODELS } from '../../model-service';\nexport var NsGraphMeta;\n(function (NsGraphMeta) {\n    /** Command Id: 用于注册named factory */\n    NsGraphMeta.command = XFlowGraphCommands.LOAD_META;\n    /** hookName */\n    NsGraphMeta.hookKey = 'graphMeta';\n})(NsGraphMeta || (NsGraphMeta = {}));\nlet GraphMetaCommand = \n/** 创建节点命令 */\nclass GraphMetaCommand {\n    constructor() {\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const { args, hooks: runtimeHook } = this.ctx.getArgs();\n            const hooks = this.ctx.getHooks();\n            const result = yield hooks.graphMeta.call(\n            /** 执行hooks pipeline处理args */\n            args, \n            /** 执行 callback */\n            (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                const { graphMetaService } = handlerArgs;\n                const meta = graphMetaService\n                    ? yield graphMetaService(handlerArgs)\n                    : { flowId: (_a = handlerArgs === null || handlerArgs === void 0 ? void 0 : handlerArgs.meta) === null || _a === void 0 ? void 0 : _a.flowId };\n                return { graphMeta: meta, flowId: meta === null || meta === void 0 ? void 0 : meta.flowId };\n            }), \n            /** 外部的 hook */\n            runtimeHook);\n            const modelService = this.ctx.getModelService();\n            /** 如果已经注册，直接更新已有的值 */\n            const model = yield MODELS.GRAPH_META.getModel(modelService);\n            model.setValue(result.graphMeta);\n            /** 设置结果 */\n            this.ctx.setResult(result);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            this.ctx.undo();\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.ctx.isUndoable) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    init() {\n        this.ctx = this.contextProvider();\n    }\n    /** isUndoable */\n    isUndoable() {\n        return this.ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], GraphMetaCommand.prototype, \"contextProvider\", void 0);\n__decorate([\n    postConstruct(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], GraphMetaCommand.prototype, \"init\", null);\nGraphMetaCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsGraphMeta.command.id },\n    })\n    /** 创建节点命令 */\n], GraphMetaCommand);\nexport { GraphMetaCommand };\n//# sourceMappingURL=graph-meta.js.map"]},"metadata":{},"sourceType":"module"}