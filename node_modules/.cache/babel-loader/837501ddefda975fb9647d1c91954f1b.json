{"ast":null,"code":"import { NumberExt } from '../../util';\nimport { Base } from '../base';\nvar CYLINDER_TILT = 10;\nexport var Cylinder = Base.define({\n  shape: 'cylinder',\n  overwrite: true,\n  markup: [{\n    tagName: 'path',\n    selector: 'body'\n  }, {\n    tagName: 'ellipse',\n    selector: 'top'\n  }, {\n    tagName: 'text',\n    selector: 'label'\n  }],\n  attrs: {\n    body: Object.assign(Object.assign({}, Base.bodyAttr), {\n      lateral: CYLINDER_TILT\n    }),\n    top: Object.assign(Object.assign({}, Base.bodyAttr), {\n      refCx: '50%',\n      refRx: '50%',\n      cy: CYLINDER_TILT,\n      ry: CYLINDER_TILT\n    })\n  },\n  attrHooks: {\n    lateral: {\n      set: function set(t, _ref) {\n        var refBBox = _ref.refBBox;\n        var isPercentage = NumberExt.isPercentage(t);\n\n        if (isPercentage) {\n          // eslint-disable-next-line\n          t = parseFloat(t) / 100;\n        }\n\n        var x = refBBox.x;\n        var y = refBBox.y;\n        var w = refBBox.width;\n        var h = refBBox.height; // curve control point variables\n\n        var rx = w / 2;\n        var ry = isPercentage ? h * t : t;\n        var kappa = 0.551784;\n        var cx = kappa * rx;\n        var cy = kappa * ry; // shape variables\n\n        var xLeft = x;\n        var xCenter = x + w / 2;\n        var xRight = x + w;\n        var ySideTop = y + ry;\n        var yCurveTop = ySideTop - ry;\n        var ySideBottom = y + h - ry;\n        var yCurveBottom = y + h; // return calculated shape\n\n        var data = ['M', xLeft, ySideTop, 'L', xLeft, ySideBottom, 'C', x, ySideBottom + cy, xCenter - cx, yCurveBottom, xCenter, yCurveBottom, 'C', xCenter + cx, yCurveBottom, xRight, ySideBottom + cy, xRight, ySideBottom, 'L', xRight, ySideTop, 'C', xRight, ySideTop - cy, xCenter + cx, yCurveTop, xCenter, yCurveTop, 'C', xCenter - cx, yCurveTop, xLeft, ySideTop - cy, xLeft, ySideTop, 'Z'];\n        return {\n          d: data.join(' ')\n        };\n      }\n    }\n  },\n  knob: {\n    enabled: true,\n    position: function position(_ref2) {\n      var node = _ref2.node;\n      var lateral = node.attr('body/lateral');\n      return {\n        x: 0,\n        y: lateral\n      };\n    },\n    onMouseMove: function onMouseMove(_ref3) {\n      var node = _ref3.node,\n          data = _ref3.data,\n          deltaY = _ref3.deltaY;\n\n      if (deltaY !== 0) {\n        var bbox = node.getBBox();\n        var previous = node.attr('body/lateral');\n\n        if (data.round == null) {\n          data.round = previous;\n        }\n\n        var min = 0;\n        var max = bbox.height / 2;\n        var current = NumberExt.clamp(data.round + deltaY, min, max);\n\n        if (current !== previous) {\n          node.attr({\n            body: {\n              lateral: current\n            },\n            top: {\n              cy: current,\n              ry: current\n            }\n          });\n        }\n      }\n    }\n  }\n});","map":{"version":3,"sources":["../../../src/shape/standard/cylinder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { NumberExt } from '../../util';\nimport { Base } from '../base';\nconst CYLINDER_TILT = 10;\nexport const Cylinder = Base.define({\n    shape: 'cylinder',\n    overwrite: true,\n    markup: [\n        {\n            tagName: 'path',\n            selector: 'body',\n        },\n        {\n            tagName: 'ellipse',\n            selector: 'top',\n        },\n        {\n            tagName: 'text',\n            selector: 'label',\n        },\n    ],\n    attrs: {\n        body: Object.assign(Object.assign({}, Base.bodyAttr), { lateral: CYLINDER_TILT }),\n        top: Object.assign(Object.assign({}, Base.bodyAttr), { refCx: '50%', refRx: '50%', cy: CYLINDER_TILT, ry: CYLINDER_TILT }),\n    },\n    attrHooks: {\n        lateral: {\n            set(t, { refBBox }) {\n                const isPercentage = NumberExt.isPercentage(t);\n                if (isPercentage) {\n                    // eslint-disable-next-line\n                    t = parseFloat(t) / 100;\n                }\n                const x = refBBox.x;\n                const y = refBBox.y;\n                const w = refBBox.width;\n                const h = refBBox.height;\n                // curve control point variables\n                const rx = w / 2;\n                const ry = isPercentage ? h * t : t;\n                const kappa = 0.551784;\n                const cx = kappa * rx;\n                const cy = kappa * ry;\n                // shape variables\n                const xLeft = x;\n                const xCenter = x + w / 2;\n                const xRight = x + w;\n                const ySideTop = y + ry;\n                const yCurveTop = ySideTop - ry;\n                const ySideBottom = y + h - ry;\n                const yCurveBottom = y + h;\n                // return calculated shape\n                const data = [\n                    'M',\n                    xLeft,\n                    ySideTop,\n                    'L',\n                    xLeft,\n                    ySideBottom,\n                    'C',\n                    x,\n                    ySideBottom + cy,\n                    xCenter - cx,\n                    yCurveBottom,\n                    xCenter,\n                    yCurveBottom,\n                    'C',\n                    xCenter + cx,\n                    yCurveBottom,\n                    xRight,\n                    ySideBottom + cy,\n                    xRight,\n                    ySideBottom,\n                    'L',\n                    xRight,\n                    ySideTop,\n                    'C',\n                    xRight,\n                    ySideTop - cy,\n                    xCenter + cx,\n                    yCurveTop,\n                    xCenter,\n                    yCurveTop,\n                    'C',\n                    xCenter - cx,\n                    yCurveTop,\n                    xLeft,\n                    ySideTop - cy,\n                    xLeft,\n                    ySideTop,\n                    'Z',\n                ];\n                return { d: data.join(' ') };\n            },\n        },\n    },\n    knob: {\n        enabled: true,\n        position({ node }) {\n            const lateral = node.attr('body/lateral');\n            return { x: 0, y: lateral };\n        },\n        onMouseMove({ node, data, deltaY }) {\n            if (deltaY !== 0) {\n                const bbox = node.getBBox();\n                const previous = node.attr('body/lateral');\n                if (data.round == null) {\n                    data.round = previous;\n                }\n                const min = 0;\n                const max = bbox.height / 2;\n                const current = NumberExt.clamp(data.round + deltaY, min, max);\n                if (current !== previous) {\n                    node.attr({\n                        body: { lateral: current },\n                        top: {\n                            cy: current,\n                            ry: current,\n                        },\n                    });\n                }\n            }\n        },\n    },\n});\n//# sourceMappingURL=cylinder.js.map"]},"metadata":{},"sourceType":"module"}