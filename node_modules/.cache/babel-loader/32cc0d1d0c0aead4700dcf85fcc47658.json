{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { Dictionary } from '../common';\nimport { Dom } from '../util';\nexport var Cache = /*#__PURE__*/function () {\n  function Cache(view) {\n    _classCallCheck(this, Cache);\n\n    this.view = view;\n    this.clean();\n  }\n\n  _createClass(Cache, [{\n    key: \"clean\",\n    value: function clean() {\n      if (this.elemCache) {\n        this.elemCache.dispose();\n      }\n\n      this.elemCache = new Dictionary();\n      this.pathCache = {};\n    }\n  }, {\n    key: \"get\",\n    value: function get(elem) {\n      var cache = this.elemCache;\n\n      if (!cache.has(elem)) {\n        this.elemCache.set(elem, {});\n      }\n\n      return this.elemCache.get(elem);\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(elem) {\n      var meta = this.get(elem);\n\n      if (!meta.data) {\n        meta.data = {};\n      }\n\n      return meta.data;\n    }\n  }, {\n    key: \"getMatrix\",\n    value: function getMatrix(elem) {\n      var meta = this.get(elem);\n\n      if (meta.matrix == null) {\n        var target = this.view.rotatableNode || this.view.container;\n        meta.matrix = Dom.getTransformToElement(elem, target);\n      }\n\n      return Dom.createSVGMatrix(meta.matrix);\n    }\n  }, {\n    key: \"getShape\",\n    value: function getShape(elem) {\n      var meta = this.get(elem);\n\n      if (meta.shape == null) {\n        meta.shape = Dom.toGeometryShape(elem);\n      }\n\n      return meta.shape.clone();\n    }\n  }, {\n    key: \"getBoundingRect\",\n    value: function getBoundingRect(elem) {\n      var meta = this.get(elem);\n\n      if (meta.boundingRect == null) {\n        meta.boundingRect = Dom.getBBox(elem);\n      }\n\n      return meta.boundingRect.clone();\n    }\n  }]);\n\n  return Cache;\n}();","map":{"version":3,"sources":["../../src/view/cache.ts"],"names":[],"mappings":";;AAAA,SAAS,UAAT,QAA2B,WAA3B;AACA,SAAqB,GAArB,QAAgC,SAAhC;AAIA,WAAa,KAAb;AASE,iBAAsB,IAAtB,EAAoC;AAAA;;AAAd,SAAA,IAAA,GAAA,IAAA;AACpB,SAAK,KAAL;AACD;;AAXH;AAAA;AAAA,WAaE,iBAAK;AACH,UAAI,KAAK,SAAT,EAAoB;AAClB,aAAK,SAAL,CAAe,OAAf;AACD;;AACD,WAAK,SAAL,GAAiB,IAAI,UAAJ,EAAjB;AACA,WAAK,SAAL,GAAiB,EAAjB;AACD;AAnBH;AAAA;AAAA,WAqBE,aAAI,IAAJ,EAAiB;AACf,UAAM,KAAK,GAAG,KAAK,SAAnB;;AACA,UAAI,CAAC,KAAK,CAAC,GAAN,CAAU,IAAV,CAAL,EAAsB;AACpB,aAAK,SAAL,CAAe,GAAf,CAAmB,IAAnB,EAAyB,EAAzB;AACD;;AACD,aAAO,KAAK,SAAL,CAAe,GAAf,CAAmB,IAAnB,CAAP;AACD;AA3BH;AAAA;AAAA,WA6BE,iBAAQ,IAAR,EAAqB;AACnB,UAAM,IAAI,GAAG,KAAK,GAAL,CAAS,IAAT,CAAb;;AACA,UAAI,CAAC,IAAI,CAAC,IAAV,EAAgB;AACd,QAAA,IAAI,CAAC,IAAL,GAAY,EAAZ;AACD;;AACD,aAAO,IAAI,CAAC,IAAZ;AACD;AAnCH;AAAA;AAAA,WAqCE,mBAAU,IAAV,EAAuB;AACrB,UAAM,IAAI,GAAG,KAAK,GAAL,CAAS,IAAT,CAAb;;AACA,UAAI,IAAI,CAAC,MAAL,IAAe,IAAnB,EAAyB;AACvB,YAAM,MAAM,GAAG,KAAK,IAAL,CAAU,aAAV,IAA2B,KAAK,IAAL,CAAU,SAApD;AACA,QAAA,IAAI,CAAC,MAAL,GAAc,GAAG,CAAC,qBAAJ,CAA0B,IAA1B,EAAuC,MAAvC,CAAd;AACD;;AAED,aAAO,GAAG,CAAC,eAAJ,CAAoB,IAAI,CAAC,MAAzB,CAAP;AACD;AA7CH;AAAA;AAAA,WA+CE,kBAAS,IAAT,EAAsB;AACpB,UAAM,IAAI,GAAG,KAAK,GAAL,CAAS,IAAT,CAAb;;AACA,UAAI,IAAI,CAAC,KAAL,IAAc,IAAlB,EAAwB;AACtB,QAAA,IAAI,CAAC,KAAL,GAAa,GAAG,CAAC,eAAJ,CAAoB,IAApB,CAAb;AACD;;AACD,aAAO,IAAI,CAAC,KAAL,CAAW,KAAX,EAAP;AACD;AArDH;AAAA;AAAA,WAuDE,yBAAgB,IAAhB,EAA6B;AAC3B,UAAM,IAAI,GAAG,KAAK,GAAL,CAAS,IAAT,CAAb;;AACA,UAAI,IAAI,CAAC,YAAL,IAAqB,IAAzB,EAA+B;AAC7B,QAAA,IAAI,CAAC,YAAL,GAAoB,GAAG,CAAC,OAAJ,CAAY,IAAZ,CAApB;AACD;;AACD,aAAO,IAAI,CAAC,YAAL,CAAkB,KAAlB,EAAP;AACD;AA7DH;;AAAA;AAAA","sourceRoot":"","sourcesContent":["import { Dictionary } from '../common';\nimport { Dom } from '../util';\nexport class Cache {\n    constructor(view) {\n        this.view = view;\n        this.clean();\n    }\n    clean() {\n        if (this.elemCache) {\n            this.elemCache.dispose();\n        }\n        this.elemCache = new Dictionary();\n        this.pathCache = {};\n    }\n    get(elem) {\n        const cache = this.elemCache;\n        if (!cache.has(elem)) {\n            this.elemCache.set(elem, {});\n        }\n        return this.elemCache.get(elem);\n    }\n    getData(elem) {\n        const meta = this.get(elem);\n        if (!meta.data) {\n            meta.data = {};\n        }\n        return meta.data;\n    }\n    getMatrix(elem) {\n        const meta = this.get(elem);\n        if (meta.matrix == null) {\n            const target = this.view.rotatableNode || this.view.container;\n            meta.matrix = Dom.getTransformToElement(elem, target);\n        }\n        return Dom.createSVGMatrix(meta.matrix);\n    }\n    getShape(elem) {\n        const meta = this.get(elem);\n        if (meta.shape == null) {\n            meta.shape = Dom.toGeometryShape(elem);\n        }\n        return meta.shape.clone();\n    }\n    getBoundingRect(elem) {\n        const meta = this.get(elem);\n        if (meta.boundingRect == null) {\n            meta.boundingRect = Dom.getBBox(elem);\n        }\n        return meta.boundingRect.clone();\n    }\n}\n//# sourceMappingURL=cache.js.map"]},"metadata":{},"sourceType":"module"}