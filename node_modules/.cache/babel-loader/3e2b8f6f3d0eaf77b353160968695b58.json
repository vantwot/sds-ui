{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { Event } from './event';\n\nvar RenderFrameEvent = function (_Event) {\n  _inherits(RenderFrameEvent, _Event);\n\n  var _super = _createSuper(RenderFrameEvent);\n\n  function RenderFrameEvent() {\n    var _this;\n\n    _classCallCheck(this, RenderFrameEvent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", 'renderFrame');\n\n    _defineProperty(_assertThisInitialized(_this), \"timeStamp\", void 0);\n\n    return _this;\n  }\n\n  return RenderFrameEvent;\n}(Event);\n\nexport { RenderFrameEvent as default };","map":{"version":3,"sources":["../../../src/handler/events/render_event.ts"],"names":["RenderFrameEvent","Event"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,KAAA,QAAA,SAAA;;IACqBA,gB;;;;;;;;;;;;;;;;2DACU,a;;;;;;;;EADeC,K;;SAAzBD,gB","sourcesContent":["import { Event } from './event';\nexport default class RenderFrameEvent extends Event {\n  public type: 'renderFrame' = 'renderFrame';\n  public timeStamp: number;\n}\n"]},"metadata":{},"sourceType":"module"}