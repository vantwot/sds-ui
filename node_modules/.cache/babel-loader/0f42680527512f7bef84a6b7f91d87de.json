{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\nvar _excluded = [\"id\", \"attributionControl\", \"style\", \"rotation\", \"mapInstance\"],\n    _excluded2 = [\"id\", \"attributionControl\", \"style\", \"rotation\", \"mapInstance\", \"canvas\", \"hasBaseMap\"];\n\nvar _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { CoordinateSystem, MapServiceEvent, TYPES } from '@antv/l7-core';\nimport { Map } from '@antv/l7-map';\nimport { $window, DOM } from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { Version } from '../version';\nimport Viewport from './Viewport';\nvar EventMap = {\n  mapmove: 'move',\n  camerachange: 'move',\n  zoomchange: 'zoom',\n  dragging: 'drag'\n};\nimport { MapTheme } from './theme';\nvar LNGLAT_OFFSET_ZOOM_THRESHOLD = 12;\nvar L7MapService = (_dec = injectable(), _dec2 = inject(TYPES.MapConfig), _dec3 = inject(TYPES.IGlobalConfigService), _dec4 = inject(TYPES.ICoordinateSystemService), _dec5 = inject(TYPES.IEventEmitter), _dec(_class = (_class2 = function () {\n  function L7MapService() {\n    var _this = this;\n\n    _classCallCheck(this, L7MapService);\n\n    _defineProperty(this, \"version\", Version.L7MAP);\n\n    _defineProperty(this, \"map\", void 0);\n\n    _defineProperty(this, \"dragging\", false);\n\n    _defineProperty(this, \"bgColor\", 'rgba(0.0, 0.0, 0.0, 0.0)');\n\n    _initializerDefineProperty(this, \"config\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"configService\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"coordinateSystemService\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"eventEmitter\", _descriptor4, this);\n\n    _defineProperty(this, \"viewport\", void 0);\n\n    _defineProperty(this, \"markerContainer\", void 0);\n\n    _defineProperty(this, \"cameraChangedCallback\", void 0);\n\n    _defineProperty(this, \"$mapContainer\", void 0);\n\n    _defineProperty(this, \"handleMiniCameraChanged\", function (lng, lat, zoom, bearing, pitch) {\n      var _this$config$offsetCo = _this.config.offsetCoordinate,\n          offsetCoordinate = _this$config$offsetCo === void 0 ? true : _this$config$offsetCo;\n\n      _this.viewport.syncWithMapCamera({\n        bearing: bearing,\n        center: [lng, lat],\n        viewportHeight: _this.map.transform.height,\n        pitch: pitch,\n        viewportWidth: _this.map.transform.width,\n        zoom: zoom,\n        cameraHeight: 0\n      });\n\n      if (_this.viewport.getZoom() > LNGLAT_OFFSET_ZOOM_THRESHOLD && offsetCoordinate) {\n        _this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.LNGLAT_OFFSET);\n      } else {\n        _this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.LNGLAT);\n      }\n\n      _this.cameraChangedCallback(_this.viewport);\n    });\n\n    _defineProperty(this, \"handleCameraChanged\", function () {\n      var _this$map$getCenter = _this.map.getCenter(),\n          lat = _this$map$getCenter.lat,\n          lng = _this$map$getCenter.lng;\n\n      var _this$config$offsetCo2 = _this.config.offsetCoordinate,\n          offsetCoordinate = _this$config$offsetCo2 === void 0 ? true : _this$config$offsetCo2;\n\n      _this.emit('mapchange');\n\n      _this.viewport.syncWithMapCamera({\n        bearing: _this.map.getBearing(),\n        center: [lng, lat],\n        viewportHeight: _this.map.transform.height,\n        pitch: _this.map.getPitch(),\n        viewportWidth: _this.map.transform.width,\n        zoom: _this.map.getZoom(),\n        cameraHeight: 0\n      });\n\n      if (_this.viewport.getZoom() > LNGLAT_OFFSET_ZOOM_THRESHOLD && offsetCoordinate) {\n        _this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.LNGLAT_OFFSET);\n      } else {\n        _this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.LNGLAT);\n      }\n\n      _this.cameraChangedCallback(_this.viewport);\n    });\n  }\n\n  _createClass(L7MapService, [{\n    key: \"setBgColor\",\n    value: function setBgColor(color) {\n      this.bgColor = color;\n    }\n  }, {\n    key: \"addMarkerContainer\",\n    value: function addMarkerContainer() {\n      var container = this.map.getCanvasContainer();\n      this.markerContainer = DOM.create('div', 'l7-marker-container', container);\n      this.markerContainer.setAttribute('tabindex', '-1');\n    }\n  }, {\n    key: \"getMarkerContainer\",\n    value: function getMarkerContainer() {\n      return this.markerContainer;\n    }\n  }, {\n    key: \"on\",\n    value: function on(type, handle) {\n      if (MapServiceEvent.indexOf(type) !== -1) {\n        this.eventEmitter.on(type, handle);\n      } else {\n        this.map.on(EventMap[type] || type, handle);\n      }\n    }\n  }, {\n    key: \"off\",\n    value: function off(type, handle) {\n      this.map.off(EventMap[type] || type, handle);\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      return this.map.getContainer();\n    }\n  }, {\n    key: \"getMapCanvasContainer\",\n    value: function getMapCanvasContainer() {\n      return this.map.getCanvasContainer();\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      var size = this.map.transform;\n      return [size.width, size.height];\n    }\n  }, {\n    key: \"getType\",\n    value: function getType() {\n      return 'default';\n    }\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      return this.map.getZoom();\n    }\n  }, {\n    key: \"setZoom\",\n    value: function setZoom(zoom) {\n      return this.map.setZoom(zoom);\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return this.map.getCenter();\n    }\n  }, {\n    key: \"setCenter\",\n    value: function setCenter(lnglat) {\n      this.map.setCenter(lnglat);\n    }\n  }, {\n    key: \"getPitch\",\n    value: function getPitch() {\n      return this.map.getPitch();\n    }\n  }, {\n    key: \"getRotation\",\n    value: function getRotation() {\n      return this.map.getBearing();\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds() {\n      return this.map.getBounds().toArray();\n    }\n  }, {\n    key: \"getMinZoom\",\n    value: function getMinZoom() {\n      return this.map.getMinZoom();\n    }\n  }, {\n    key: \"getMaxZoom\",\n    value: function getMaxZoom() {\n      return this.map.getMaxZoom();\n    }\n  }, {\n    key: \"setRotation\",\n    value: function setRotation(rotation) {\n      this.map.setBearing(rotation);\n    }\n  }, {\n    key: \"zoomIn\",\n    value: function zoomIn(option, eventData) {\n      this.map.zoomIn(option, eventData);\n    }\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut(option, eventData) {\n      this.map.zoomOut(option, eventData);\n    }\n  }, {\n    key: \"setPitch\",\n    value: function setPitch(pitch) {\n      return this.map.setPitch(pitch);\n    }\n  }, {\n    key: \"panTo\",\n    value: function panTo(p) {\n      this.map.panTo(p);\n    }\n  }, {\n    key: \"panBy\",\n    value: function panBy() {\n      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.panTo([x, y]);\n    }\n  }, {\n    key: \"fitBounds\",\n    value: function fitBounds(bound, fitBoundsOptions) {\n      this.map.fitBounds(bound, fitBoundsOptions);\n    }\n  }, {\n    key: \"setMaxZoom\",\n    value: function setMaxZoom(max) {\n      this.map.setMaxZoom(max);\n    }\n  }, {\n    key: \"setMinZoom\",\n    value: function setMinZoom(min) {\n      this.map.setMinZoom(min);\n    }\n  }, {\n    key: \"setMapStatus\",\n    value: function setMapStatus(option) {\n      if (option.doubleClickZoom === true) {\n        this.map.doubleClickZoom.enable();\n      }\n\n      if (option.doubleClickZoom === false) {\n        this.map.doubleClickZoom.disable();\n      }\n\n      if (option.dragEnable === false) {\n        this.map.dragPan.disable();\n      }\n\n      if (option.dragEnable === true) {\n        this.map.dragPan.enable();\n      }\n\n      if (option.rotateEnable === false) {\n        this.map.dragRotate.disable();\n      }\n\n      if (option.dragEnable === true) {\n        this.map.dragRotate.enable();\n      }\n\n      if (option.keyboardEnable === false) {\n        this.map.keyboard.disable();\n      }\n\n      if (option.keyboardEnable === true) {\n        this.map.keyboard.enable();\n      }\n\n      if (option.zoomEnable === false) {\n        this.map.scrollZoom.disable();\n      }\n\n      if (option.zoomEnable === true) {\n        this.map.scrollZoom.enable();\n      }\n    }\n  }, {\n    key: \"setZoomAndCenter\",\n    value: function setZoomAndCenter(zoom, center) {\n      this.map.flyTo({\n        zoom: zoom,\n        center: center\n      });\n    }\n  }, {\n    key: \"setMapStyle\",\n    value: function setMapStyle(style) {\n      this.map.setStyle(this.getMapStyle(style));\n    }\n  }, {\n    key: \"pixelToLngLat\",\n    value: function pixelToLngLat(pixel) {\n      return this.map.unproject(pixel);\n    }\n  }, {\n    key: \"lngLatToPixel\",\n    value: function lngLatToPixel(lnglat) {\n      return this.map.project(lnglat);\n    }\n  }, {\n    key: \"containerToLngLat\",\n    value: function containerToLngLat(pixel) {\n      return this.map.unproject(pixel);\n    }\n  }, {\n    key: \"lngLatToContainer\",\n    value: function lngLatToContainer(lnglat) {\n      return this.map.project(lnglat);\n    }\n  }, {\n    key: \"lngLatToMercator\",\n    value: function lngLatToMercator(lnglat, altitude) {\n      throw new Error('not implement');\n    }\n  }, {\n    key: \"getModelMatrix\",\n    value: function getModelMatrix(lnglat, altitude, rotate) {\n      var scale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [1, 1, 1];\n      var origin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n      throw new Error('not implement');\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var _this$config, _this$config$id, id, _this$config$attribut, attributionControl, _this$config$style, style, _this$config$rotation, rotation, mapInstance, rest;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$config = this.config, _this$config$id = _this$config.id, id = _this$config$id === void 0 ? 'map' : _this$config$id, _this$config$attribut = _this$config.attributionControl, attributionControl = _this$config$attribut === void 0 ? false : _this$config$attribut, _this$config$style = _this$config.style, style = _this$config$style === void 0 ? 'light' : _this$config$style, _this$config$rotation = _this$config.rotation, rotation = _this$config$rotation === void 0 ? 0 : _this$config$rotation, mapInstance = _this$config.mapInstance, rest = _objectWithoutProperties(_this$config, _excluded);\n                this.viewport = new Viewport();\n\n                if (mapInstance) {\n                  this.map = mapInstance;\n                  this.$mapContainer = this.map.getContainer();\n                } else {\n                  this.$mapContainer = this.creatAmapContainer(id);\n                  this.map = new Map(_objectSpread({\n                    container: this.$mapContainer,\n                    style: this.getMapStyle(style),\n                    bearing: rotation\n                  }, rest));\n                }\n\n                this.map.on('load', this.handleCameraChanged);\n                this.map.on('move', this.handleCameraChanged);\n                this.map.on('dragstart', function () {\n                  _this2.dragging = true;\n                  return '';\n                });\n                this.map.on('dragend', function () {\n                  _this2.dragging = false;\n                  return '';\n                });\n                this.handleCameraChanged();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"initMiniMap\",\n    value: function () {\n      var _initMiniMap = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2() {\n        var _this3 = this;\n\n        var _this$config2, _this$config2$id, id, _this$config2$attribu, attributionControl, _this$config2$style, style, _this$config2$rotatio, rotation, mapInstance, _this$config2$canvas, canvas, _this$config2$hasBase, hasBaseMap, rest, center;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$config2 = this.config, _this$config2$id = _this$config2.id, id = _this$config2$id === void 0 ? 'map' : _this$config2$id, _this$config2$attribu = _this$config2.attributionControl, attributionControl = _this$config2$attribu === void 0 ? false : _this$config2$attribu, _this$config2$style = _this$config2.style, style = _this$config2$style === void 0 ? 'light' : _this$config2$style, _this$config2$rotatio = _this$config2.rotation, rotation = _this$config2$rotatio === void 0 ? 0 : _this$config2$rotatio, mapInstance = _this$config2.mapInstance, _this$config2$canvas = _this$config2.canvas, canvas = _this$config2$canvas === void 0 ? null : _this$config2$canvas, _this$config2$hasBase = _this$config2.hasBaseMap, hasBaseMap = _this$config2$hasBase === void 0 ? false : _this$config2$hasBase, rest = _objectWithoutProperties(_this$config2, _excluded2);\n                this.viewport = new Viewport();\n                this.$mapContainer = canvas;\n                this.map = new Map(_objectSpread({\n                  container: this.$mapContainer,\n                  style: this.getMapStyle(style),\n                  bearing: rotation,\n                  canvas: canvas\n                }, rest));\n\n                if (!hasBaseMap) {\n                  this.map.on('load', this.handleCameraChanged);\n                  this.map.on('move', this.handleCameraChanged);\n                  this.handleCameraChanged();\n                } else {\n                  center = this.map.getCenter();\n                  this.handleMiniCameraChanged(center.lng, center.lat, this.map.getZoom(), this.map.getBearing(), this.map.getPitch());\n                  $window.document.addEventListener('mapCameaParams', function (event) {\n                    var _event$e = event.e,\n                        longitude = _event$e.longitude,\n                        latitude = _event$e.latitude,\n                        scale = _event$e.scale,\n                        bearing = _event$e.bearing,\n                        pitch = _event$e.pitch;\n\n                    _this3.handleMiniCameraChanged(longitude, latitude, scale - 1.25, bearing, pitch);\n                  });\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function initMiniMap() {\n        return _initMiniMap.apply(this, arguments);\n      }\n\n      return initMiniMap;\n    }()\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this$$mapContainer, _this$$mapContainer$p;\n\n      (_this$$mapContainer = this.$mapContainer) === null || _this$$mapContainer === void 0 ? void 0 : (_this$$mapContainer$p = _this$$mapContainer.parentNode) === null || _this$$mapContainer$p === void 0 ? void 0 : _this$$mapContainer$p.removeChild(this.$mapContainer);\n      this.eventEmitter.removeAllListeners();\n\n      if (this.map) {\n        this.map.remove();\n        this.$mapContainer = null;\n      }\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(name) {\n      var _this$eventEmitter;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      (_this$eventEmitter = this.eventEmitter).emit.apply(_this$eventEmitter, [name].concat(args));\n    }\n  }, {\n    key: \"once\",\n    value: function once(name) {\n      var _this$eventEmitter2;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      (_this$eventEmitter2 = this.eventEmitter).once.apply(_this$eventEmitter2, [name].concat(args));\n    }\n  }, {\n    key: \"getMapContainer\",\n    value: function getMapContainer() {\n      return this.$mapContainer;\n    }\n  }, {\n    key: \"exportMap\",\n    value: function exportMap(type) {\n      var renderCanvas = this.map.getCanvas();\n      var layersPng = type === 'jpg' ? renderCanvas === null || renderCanvas === void 0 ? void 0 : renderCanvas.toDataURL('image/jpeg') : renderCanvas === null || renderCanvas === void 0 ? void 0 : renderCanvas.toDataURL('image/png');\n      return layersPng;\n    }\n  }, {\n    key: \"onCameraChanged\",\n    value: function onCameraChanged(callback) {\n      this.cameraChangedCallback = callback;\n    }\n  }, {\n    key: \"creatAmapContainer\",\n    value: function creatAmapContainer(id) {\n      var $wrapper = id;\n\n      if (typeof id === 'string') {\n        $wrapper = document.getElementById(id);\n      }\n\n      return $wrapper;\n    }\n  }, {\n    key: \"getMapStyle\",\n    value: function getMapStyle(name) {\n      if (typeof name !== 'string') {\n        return name;\n      }\n\n      return MapTheme[name] ? MapTheme[name] : name;\n    }\n  }]);\n\n  return L7MapService;\n}(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"config\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"configService\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"coordinateSystemService\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"eventEmitter\", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexport { L7MapService as default };","map":{"version":3,"sources":["../../src/map/map.ts"],"names":["EventMap","mapmove","camerachange","zoomchange","dragging","LNGLAT_OFFSET_ZOOM_THRESHOLD","injectable","L7MapService","Version","L7MAP","inject","TYPES","container","DOM","MapServiceEvent","size","x","y","option","zoom","center","scale","origin","z","id","attributionControl","style","rotation","mapInstance","rest","bearing","canvas","hasBaseMap","$window","longitude","latitude","pitch","event","args","renderCanvas","layersPng","type","offsetCoordinate","viewportHeight","viewportWidth","cameraHeight","CoordinateSystem","lat","lng","$wrapper","document","MapTheme"],"mappings":"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","sourcesContent":["/**\n * MapboxService\n */\nimport {\n  Bounds,\n  CoordinateSystem,\n  ICoordinateSystemService,\n  IGlobalConfigService,\n  ILngLat,\n  IMapConfig,\n  IMapService,\n  IMercator,\n  IPoint,\n  IStatusOptions,\n  IViewport,\n  MapServiceEvent,\n  MapStyle,\n  TYPES,\n} from '@antv/l7-core';\nimport { Map } from '@antv/l7-map';\nimport { $window, DOM } from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { Version } from '../version';\nimport Viewport from './Viewport';\nconst EventMap: {\n  [key: string]: any;\n} = {\n  mapmove: 'move',\n  camerachange: 'move',\n  zoomchange: 'zoom',\n  dragging: 'drag',\n};\nimport { MapTheme } from './theme';\n\nconst LNGLAT_OFFSET_ZOOM_THRESHOLD = 12;\n/**\n * AMapService\n */\n@injectable()\nexport default class L7MapService implements IMapService<Map> {\n  public version: string = Version.L7MAP;\n  public map: Map;\n\n  // TODO: 判断地图是否正在拖拽\n  public dragging: boolean = false;\n\n  // 背景色\n  public bgColor: string = 'rgba(0.0, 0.0, 0.0, 0.0)';\n\n  @inject(TYPES.MapConfig)\n  private readonly config: Partial<IMapConfig>;\n\n  @inject(TYPES.IGlobalConfigService)\n  private readonly configService: IGlobalConfigService;\n\n  @inject(TYPES.ICoordinateSystemService)\n  private readonly coordinateSystemService: ICoordinateSystemService;\n\n  @inject(TYPES.IEventEmitter)\n  private eventEmitter: any;\n  private viewport: Viewport;\n  private markerContainer: HTMLElement;\n  private cameraChangedCallback: (viewport: IViewport) => void;\n  private $mapContainer: HTMLElement | null;\n  public setBgColor(color: string) {\n    this.bgColor = color;\n  }\n\n  // init\n  public addMarkerContainer(): void {\n    const container = this.map.getCanvasContainer();\n    this.markerContainer = DOM.create('div', 'l7-marker-container', container);\n    this.markerContainer.setAttribute('tabindex', '-1');\n  }\n\n  public getMarkerContainer(): HTMLElement {\n    return this.markerContainer;\n  }\n\n  //  map event\n  public on(type: string, handle: (...args: any[]) => void): void {\n    if (MapServiceEvent.indexOf(type) !== -1) {\n      this.eventEmitter.on(type, handle);\n    } else {\n      // 统一事件名称\n      this.map.on(EventMap[type] || type, handle);\n    }\n  }\n  public off(type: string, handle: (...args: any[]) => void): void {\n    this.map.off(EventMap[type] || type, handle);\n  }\n\n  public getContainer(): HTMLElement | null {\n    return this.map.getContainer();\n  }\n\n  public getMapCanvasContainer(): HTMLElement {\n    return this.map.getCanvasContainer() as HTMLElement;\n  }\n\n  public getSize(): [number, number] {\n    const size = this.map.transform;\n    return [size.width, size.height];\n  }\n  // get mapStatus method\n\n  public getType() {\n    return 'default';\n  }\n\n  public getZoom(): number {\n    return this.map.getZoom();\n  }\n\n  public setZoom(zoom: number) {\n    return this.map.setZoom(zoom);\n  }\n\n  public getCenter(): ILngLat {\n    return this.map.getCenter();\n  }\n\n  public setCenter(lnglat: [number, number]): void {\n    this.map.setCenter(lnglat);\n  }\n\n  public getPitch(): number {\n    return this.map.getPitch();\n  }\n\n  public getRotation(): number {\n    return this.map.getBearing();\n  }\n\n  public getBounds(): Bounds {\n    return this.map.getBounds().toArray() as Bounds;\n  }\n\n  public getMinZoom(): number {\n    return this.map.getMinZoom();\n  }\n\n  public getMaxZoom(): number {\n    return this.map.getMaxZoom();\n  }\n\n  public setRotation(rotation: number): void {\n    this.map.setBearing(rotation);\n  }\n\n  public zoomIn(option?: any, eventData?: any): void {\n    this.map.zoomIn(option, eventData);\n  }\n  public zoomOut(option?: any, eventData?: any): void {\n    this.map.zoomOut(option, eventData);\n  }\n  public setPitch(pitch: number) {\n    return this.map.setPitch(pitch);\n  }\n\n  public panTo(p: [number, number]): void {\n    this.map.panTo(p);\n  }\n\n  public panBy(x: number = 0, y: number = 0): void {\n    this.panTo([x, y]);\n  }\n\n  public fitBounds(bound: Bounds, fitBoundsOptions?: any): void {\n    this.map.fitBounds(bound, fitBoundsOptions);\n  }\n\n  public setMaxZoom(max: number): void {\n    this.map.setMaxZoom(max);\n  }\n\n  public setMinZoom(min: number): void {\n    this.map.setMinZoom(min);\n  }\n  public setMapStatus(option: Partial<IStatusOptions>): void {\n    if (option.doubleClickZoom === true) {\n      this.map.doubleClickZoom.enable();\n    }\n    if (option.doubleClickZoom === false) {\n      this.map.doubleClickZoom.disable();\n    }\n    if (option.dragEnable === false) {\n      this.map.dragPan.disable();\n    }\n    if (option.dragEnable === true) {\n      this.map.dragPan.enable();\n    }\n    if (option.rotateEnable === false) {\n      this.map.dragRotate.disable();\n    }\n    if (option.dragEnable === true) {\n      this.map.dragRotate.enable();\n    }\n    if (option.keyboardEnable === false) {\n      this.map.keyboard.disable();\n    }\n    if (option.keyboardEnable === true) {\n      this.map.keyboard.enable();\n    }\n    if (option.zoomEnable === false) {\n      this.map.scrollZoom.disable();\n    }\n    if (option.zoomEnable === true) {\n      this.map.scrollZoom.enable();\n    }\n  }\n\n  public setZoomAndCenter(zoom: number, center: [number, number]): void {\n    this.map.flyTo({\n      zoom,\n      center,\n    });\n  }\n\n  public setMapStyle(style: any): void {\n    this.map.setStyle(this.getMapStyle(style));\n  }\n  // TODO: 计算像素坐标\n  public pixelToLngLat(pixel: [number, number]): ILngLat {\n    return this.map.unproject(pixel);\n  }\n\n  public lngLatToPixel(lnglat: [number, number]): IPoint {\n    return this.map.project(lnglat);\n  }\n\n  public containerToLngLat(pixel: [number, number]): ILngLat {\n    return this.map.unproject(pixel);\n  }\n\n  public lngLatToContainer(lnglat: [number, number]): IPoint {\n    return this.map.project(lnglat);\n  }\n  public lngLatToMercator(\n    lnglat: [number, number],\n    altitude: number,\n  ): IMercator {\n    throw new Error('not implement');\n  }\n  public getModelMatrix(\n    lnglat: [number, number],\n    altitude: number,\n    rotate: [number, number, number],\n    scale: [number, number, number] = [1, 1, 1],\n    origin: IMercator = { x: 0, y: 0, z: 0 },\n  ): number[] {\n    throw new Error('not implement');\n  }\n\n  public async init(): Promise<void> {\n    const {\n      id = 'map',\n      attributionControl = false,\n      style = 'light',\n      rotation = 0,\n      mapInstance,\n      ...rest\n    } = this.config;\n\n    this.viewport = new Viewport();\n\n    if (mapInstance) {\n      // @ts-ignore\n      this.map = mapInstance;\n      this.$mapContainer = this.map.getContainer();\n    } else {\n      this.$mapContainer = this.creatAmapContainer(id);\n      // @ts-ignore\n      this.map = new Map({\n        container: this.$mapContainer,\n        style: this.getMapStyle(style),\n        bearing: rotation,\n        ...rest,\n      });\n    }\n    this.map.on('load', this.handleCameraChanged);\n    this.map.on('move', this.handleCameraChanged);\n\n    // TODO: 判断地图是否正在被拖拽\n    this.map.on('dragstart', () => {\n      this.dragging = true;\n      return '';\n    });\n    this.map.on('dragend', () => {\n      this.dragging = false;\n      return '';\n    });\n\n    // 不同于高德地图，需要手动触发首次渲染\n    this.handleCameraChanged();\n  }\n\n  // 初始化小程序地图\n  public async initMiniMap(): Promise<void> {\n    const {\n      id = 'map',\n      attributionControl = false,\n      style = 'light',\n      rotation = 0,\n      mapInstance,\n      canvas = null,\n      hasBaseMap = false,\n      ...rest\n    } = this.config;\n\n    this.viewport = new Viewport();\n\n    this.$mapContainer = canvas;\n\n    this.map = new Map({\n      container: this.$mapContainer as HTMLElement,\n      style: this.getMapStyle(style),\n      bearing: rotation,\n      // @ts-ignore\n      canvas,\n      ...rest,\n    });\n\n    if (!hasBaseMap) {\n      // 没有地图底图的模式\n      this.map.on('load', this.handleCameraChanged);\n      this.map.on('move', this.handleCameraChanged);\n\n      // 不同于高德地图，需要手动触发首次渲染\n      this.handleCameraChanged();\n    } else {\n      // 存在地图底图的模式（ L7Mini ）\n      const center = this.map.getCenter();\n      // 不同于高德地图，需要手动触发首次渲染\n      this.handleMiniCameraChanged(\n        center.lng,\n        center.lat,\n        this.map.getZoom(),\n        this.map.getBearing(),\n        this.map.getPitch(),\n      );\n      $window.document.addEventListener('mapCameaParams', (event: any) => {\n        const {\n          e: { longitude, latitude, scale, bearing, pitch },\n        } = event;\n        this.handleMiniCameraChanged(\n          longitude,\n          latitude,\n          scale - 1.25,\n          bearing,\n          pitch,\n        );\n      });\n    }\n  }\n\n  public destroy() {\n    // TODO: 销毁地图可视化层的容器\n    this.$mapContainer?.parentNode?.removeChild(this.$mapContainer);\n\n    this.eventEmitter.removeAllListeners();\n    if (this.map) {\n      this.map.remove();\n      this.$mapContainer = null;\n    }\n  }\n  public emit(name: string, ...args: any[]) {\n    this.eventEmitter.emit(name, ...args);\n  }\n  public once(name: string, ...args: any[]) {\n    this.eventEmitter.once(name, ...args);\n  }\n\n  public getMapContainer() {\n    return this.$mapContainer;\n  }\n\n  public exportMap(type: 'jpg' | 'png'): string {\n    const renderCanvas = this.map.getCanvas();\n    const layersPng =\n      type === 'jpg'\n        ? (renderCanvas?.toDataURL('image/jpeg') as string)\n        : (renderCanvas?.toDataURL('image/png') as string);\n    return layersPng;\n  }\n  public onCameraChanged(callback: (viewport: IViewport) => void): void {\n    this.cameraChangedCallback = callback;\n  }\n\n  // TODO: 处理小程序中有底图模式下的相机跟新\n  private handleMiniCameraChanged = (\n    lng: number,\n    lat: number,\n    zoom: number,\n    bearing: number,\n    pitch: number,\n  ) => {\n    const { offsetCoordinate = true } = this.config;\n\n    // resync\n    this.viewport.syncWithMapCamera({\n      // bearing: this.map.getBearing(),\n      bearing,\n      center: [lng, lat],\n      viewportHeight: this.map.transform.height,\n      // pitch: this.map.getPitch(),\n      pitch,\n      viewportWidth: this.map.transform.width,\n      zoom,\n      // mapbox 中固定相机高度为 viewport 高度的 1.5 倍\n      cameraHeight: 0,\n    });\n    // set coordinate system\n    if (\n      this.viewport.getZoom() > LNGLAT_OFFSET_ZOOM_THRESHOLD &&\n      offsetCoordinate\n    ) {\n      this.coordinateSystemService.setCoordinateSystem(\n        CoordinateSystem.LNGLAT_OFFSET,\n      );\n    } else {\n      this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.LNGLAT);\n    }\n\n    this.cameraChangedCallback(this.viewport);\n  };\n\n  private handleCameraChanged = () => {\n    const { lat, lng } = this.map.getCenter();\n    const { offsetCoordinate = true } = this.config;\n    // Tip: 统一触发地图变化事件\n    this.emit('mapchange');\n    // resync\n    this.viewport.syncWithMapCamera({\n      bearing: this.map.getBearing(),\n      center: [lng, lat],\n      viewportHeight: this.map.transform.height,\n      pitch: this.map.getPitch(),\n      viewportWidth: this.map.transform.width,\n      zoom: this.map.getZoom(),\n      // mapbox 中固定相机高度为 viewport 高度的 1.5 倍\n      cameraHeight: 0,\n    });\n    // set coordinate system\n    if (\n      this.viewport.getZoom() > LNGLAT_OFFSET_ZOOM_THRESHOLD &&\n      offsetCoordinate\n    ) {\n      this.coordinateSystemService.setCoordinateSystem(\n        CoordinateSystem.LNGLAT_OFFSET,\n      );\n    } else {\n      this.coordinateSystemService.setCoordinateSystem(CoordinateSystem.LNGLAT);\n    }\n\n    this.cameraChangedCallback(this.viewport);\n  };\n\n  private creatAmapContainer(id: string | HTMLDivElement) {\n    let $wrapper = id as HTMLDivElement;\n    if (typeof id === 'string') {\n      $wrapper = document.getElementById(id) as HTMLDivElement;\n    }\n    return $wrapper;\n  }\n  private getMapStyle(name: MapStyle) {\n    if (typeof name !== 'string') {\n      return name;\n    }\n    return MapTheme[name] ? MapTheme[name] : name;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}