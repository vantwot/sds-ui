{"ast":null,"code":"import React from 'react';\nimport { createPath } from '../../utils';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING, DefaultNodeConfig } from '../../constants';\nexport const DatabaseNode = props => {\n  const {\n    size = {\n      width: NODE_WIDTH,\n      height: NODE_HEIGHT\n    },\n    data = {}\n  } = props;\n  const {\n    stroke = DefaultNodeConfig.stroke,\n    label = DefaultNodeConfig.label,\n    fill = DefaultNodeConfig.fill,\n    fontFill = DefaultNodeConfig.fontFill,\n    fontSize = DefaultNodeConfig.fontSize\n  } = data;\n  const {\n    width,\n    height\n  } = size;\n  const bezierX = width / 4;\n  const bezierY = Math.min(height / 10, 12);\n  const path = [['M', NODE_PADDING, NODE_PADDING + bezierY], ['C', NODE_PADDING + bezierX, NODE_PADDING, NODE_PADDING + width - bezierX, NODE_PADDING], ['', width - 2 * NODE_PADDING, NODE_PADDING + bezierY], ['L', width - 2 * NODE_PADDING, height - 2 * NODE_PADDING - bezierY], ['C', width - 2 * NODE_PADDING - bezierX, height - 2 * NODE_PADDING, NODE_PADDING + bezierX, height - 2 * NODE_PADDING], ['', NODE_PADDING, height - 2 * NODE_PADDING - bezierY], ['Z']]; // 多 path 解决填充问题\n\n  const path1 = [['M', NODE_PADDING, NODE_PADDING + bezierY], ['C', NODE_PADDING + bezierX, NODE_PADDING + 2 * bezierY, NODE_PADDING + width - bezierX, NODE_PADDING + 2 * bezierY], ['', width - 2 * NODE_PADDING, NODE_PADDING + bezierY] // top-right\n  ];\n  return React.createElement(\"svg\", {\n    viewBox: `0 0 ${width} ${height}`,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"100%\",\n    height: \"100%\"\n  }, React.createElement(\"path\", {\n    d: createPath(path),\n    fill: fill,\n    stroke: stroke\n  }), React.createElement(\"path\", {\n    d: createPath(path1),\n    fill: fill,\n    stroke: stroke\n  }), React.createElement(\"text\", {\n    x: width / 2,\n    y: height / 2,\n    fill: fontFill,\n    textAnchor: \"middle\",\n    alignmentBaseline: \"middle\",\n    fontSize: fontSize\n  }, label), \"Sorry, your browser does not support inline SVG.\");\n};","map":{"version":3,"sources":["../../../../src/flowchart-node-panel/nodes/data-base/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { createPath } from '../../utils';\nimport { NODE_WIDTH, NODE_HEIGHT, NODE_PADDING, DefaultNodeConfig } from '../../constants';\nexport const DatabaseNode = props => {\n    const { size = { width: NODE_WIDTH, height: NODE_HEIGHT }, data = {} } = props;\n    const { stroke = DefaultNodeConfig.stroke, label = DefaultNodeConfig.label, fill = DefaultNodeConfig.fill, fontFill = DefaultNodeConfig.fontFill, fontSize = DefaultNodeConfig.fontSize, } = data;\n    const { width, height } = size;\n    const bezierX = width / 4;\n    const bezierY = Math.min(height / 10, 12);\n    const path = [\n        ['M', NODE_PADDING, NODE_PADDING + bezierY],\n        ['C', NODE_PADDING + bezierX, NODE_PADDING, NODE_PADDING + width - bezierX, NODE_PADDING],\n        ['', width - 2 * NODE_PADDING, NODE_PADDING + bezierY],\n        ['L', width - 2 * NODE_PADDING, height - 2 * NODE_PADDING - bezierY],\n        [\n            'C',\n            width - 2 * NODE_PADDING - bezierX,\n            height - 2 * NODE_PADDING,\n            NODE_PADDING + bezierX,\n            height - 2 * NODE_PADDING,\n        ],\n        ['', NODE_PADDING, height - 2 * NODE_PADDING - bezierY],\n        ['Z'],\n    ];\n    // 多 path 解决填充问题\n    const path1 = [\n        ['M', NODE_PADDING, NODE_PADDING + bezierY],\n        [\n            'C',\n            NODE_PADDING + bezierX,\n            NODE_PADDING + 2 * bezierY,\n            NODE_PADDING + width - bezierX,\n            NODE_PADDING + 2 * bezierY,\n        ],\n        ['', width - 2 * NODE_PADDING, NODE_PADDING + bezierY], // top-right\n    ];\n    return (React.createElement(\"svg\", { viewBox: `0 0 ${width} ${height}`, xmlns: \"http://www.w3.org/2000/svg\", width: \"100%\", height: \"100%\" },\n        React.createElement(\"path\", { d: createPath(path), fill: fill, stroke: stroke }),\n        React.createElement(\"path\", { d: createPath(path1), fill: fill, stroke: stroke }),\n        React.createElement(\"text\", { x: width / 2, y: height / 2, fill: fontFill, textAnchor: \"middle\", alignmentBaseline: \"middle\", fontSize: fontSize }, label),\n        \"Sorry, your browser does not support inline SVG.\"));\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}