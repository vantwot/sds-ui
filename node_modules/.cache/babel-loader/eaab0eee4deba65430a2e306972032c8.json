{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport React from 'react';\nimport { useXFlowApp, DisposableCollection, createComponentModel } from '@antv/xflow-core';\nimport { XFlowModelCommands, Disposable, MODELS } from '@antv/xflow-core';\nexport var NsJsonSchemaFormModel;\n\n(function (NsJsonSchemaFormModel) {\n  var _this = this;\n\n  NsJsonSchemaFormModel.id = 'XFLOW_JSON_SCHEMA_FORM';\n\n  NsJsonSchemaFormModel.useModel = function (model) {\n    return __awaiter(_this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , model.awaitModel(NsJsonSchemaFormModel.id)];\n      });\n    });\n  };\n})(NsJsonSchemaFormModel || (NsJsonSchemaFormModel = {}));\n/** 方便其他组件执行Command改变Panel内部状态 */\n\n\nexport var executeJsonSchemaFormCommand = function (cmds, updateModel) {\n  cmds.executeCommand(XFlowModelCommands.UPDATE_MODEL.id, {\n    getModel: function (modelService) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          , NsJsonSchemaFormModel.useModel(modelService)];\n        });\n      });\n    },\n    updateModel: updateModel\n  });\n};\nexport var useJsonSchemaFormModel = function (props) {\n  var app = useXFlowApp();\n  var commandService = app.commandService,\n      modelService = app.modelService;\n  var formSchemaService = props.formSchemaService;\n\n  var _a = createComponentModel({\n    schema: {\n      tabs: []\n    },\n    targetType: null,\n    targetData: null,\n    targetCell: null,\n    loading: false\n  }),\n      state = _a[0],\n      setState = _a[1],\n      model = _a[2],\n      isModelReady = _a[3];\n  /** 注册全局的model */\n\n\n  React.useEffect(function () {\n    if (!app || !app.modelService) {\n      return null;\n    }\n\n    var toDispose = new DisposableCollection();\n    var deferredModel = app.modelService.findDeferredModel(NsJsonSchemaFormModel.id);\n\n    if (!deferredModel) {\n      var d = app.modelService.registerModel({\n        id: NsJsonSchemaFormModel.id,\n        modelFactory: function () {\n          return model;\n        },\n\n        /** 监听SELECTED_CELL的变化 */\n        watchChange: function (self, modelSerccie) {\n          return __awaiter(void 0, void 0, void 0, function () {\n            var selectedCellModel, nodeDisposable;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , MODELS.SELECTED_CELL.getModel(modelSerccie)];\n\n                case 1:\n                  selectedCellModel = _a.sent();\n                  nodeDisposable = selectedCellModel.watch(function (cell) {\n                    return __awaiter(void 0, void 0, void 0, function () {\n                      var updateState, getCellType, targetCellType;\n                      return __generator(this, function (_a) {\n                        switch (_a.label) {\n                          case 0:\n                            updateState = function (targetCell, type) {\n                              return __awaiter(void 0, void 0, void 0, function () {\n                                var targetData, schema;\n                                return __generator(this, function (_a) {\n                                  switch (_a.label) {\n                                    case 0:\n                                      self.setValue(function (m) {\n                                        m.loading = true;\n                                      });\n                                      targetData = targetCell ? targetCell.getData() : null;\n                                      return [4\n                                      /*yield*/\n                                      , formSchemaService({\n                                        commandService: commandService,\n                                        modelService: modelService,\n                                        targetData: targetData,\n                                        cell: targetCell,\n                                        targetType: type\n                                      })];\n\n                                    case 1:\n                                      schema = _a.sent();\n                                      self.setValue({\n                                        loading: false,\n                                        schema: schema,\n                                        targetType: type,\n                                        targetCell: targetCell,\n                                        targetData: targetData\n                                      });\n                                      return [2\n                                      /*return*/\n                                      ];\n                                  }\n                                });\n                              });\n                            };\n\n                            getCellType = function (targetCell) {\n                              if (!targetCell) {\n                                return 'canvas';\n                              } else if (targetCell.isGroup && targetCell.isGroup()) {\n                                return 'group';\n                              } else if (targetCell.isNode && targetCell.isNode()) {\n                                return 'node';\n                              } else if (targetCell.isEdge && targetCell.isEdge()) {\n                                return 'edge';\n                              } else {\n                                return 'canvas';\n                              }\n                            };\n\n                            targetCellType = getCellType(cell);\n                            if (!(props.targetType || ['node', 'canvas']).includes(targetCellType)) return [3\n                            /*break*/\n                            , 2];\n                            return [4\n                            /*yield*/\n                            , updateState(cell, targetCellType)];\n\n                          case 1:\n                            _a.sent();\n\n                            _a.label = 2;\n\n                          case 2:\n                            return [2\n                            /*return*/\n                            ];\n                        }\n                      });\n                    });\n                  });\n                  return [2\n                  /*return*/\n                  , Disposable.create(function () {\n                    nodeDisposable.dispose();\n                    toDispose.push(nodeDisposable);\n                  })];\n              }\n            });\n          });\n        }\n      });\n      toDispose.push(d);\n    }\n\n    return function () {\n      toDispose.dispose();\n    };\n    /* eslint-disable-next-line  */\n  }, []);\n  return {\n    commandService: commandService,\n    modelService: modelService,\n    state: state,\n    setState: setState,\n    model: model,\n    isModelReady: isModelReady\n  };\n};","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@ant-design/flowchart/es/components/canvas-json-schema-form/service.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","React","useXFlowApp","DisposableCollection","createComponentModel","XFlowModelCommands","Disposable","MODELS","NsJsonSchemaFormModel","_this","id","useModel","model","_a","awaitModel","executeJsonSchemaFormCommand","cmds","updateModel","executeCommand","UPDATE_MODEL","getModel","modelService","useJsonSchemaFormModel","props","app","commandService","formSchemaService","schema","tabs","targetType","targetData","targetCell","loading","state","setState","isModelReady","useEffect","toDispose","deferredModel","findDeferredModel","d","registerModel","modelFactory","watchChange","self","modelSerccie","selectedCellModel","nodeDisposable","SELECTED_CELL","watch","cell","updateState","getCellType","targetCellType","type","setValue","m","getData","isGroup","isNode","isEdge","includes","create","dispose"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport React from 'react';\nimport { useXFlowApp, DisposableCollection, createComponentModel } from '@antv/xflow-core';\nimport { XFlowModelCommands, Disposable, MODELS } from '@antv/xflow-core';\nexport var NsJsonSchemaFormModel;\n(function (NsJsonSchemaFormModel) {\n    var _this = this;\n    NsJsonSchemaFormModel.id = 'XFLOW_JSON_SCHEMA_FORM';\n    NsJsonSchemaFormModel.useModel = function (model) { return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, model.awaitModel(NsJsonSchemaFormModel.id)];\n        });\n    }); };\n})(NsJsonSchemaFormModel || (NsJsonSchemaFormModel = {}));\n/** 方便其他组件执行Command改变Panel内部状态 */\nexport var executeJsonSchemaFormCommand = function (cmds, updateModel) {\n    cmds.executeCommand(XFlowModelCommands.UPDATE_MODEL.id, {\n        getModel: function (modelService) { return __awaiter(void 0, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, NsJsonSchemaFormModel.useModel(modelService)];\n            });\n        }); },\n        updateModel: updateModel,\n    });\n};\nexport var useJsonSchemaFormModel = function (props) {\n    var app = useXFlowApp();\n    var commandService = app.commandService, modelService = app.modelService;\n    var formSchemaService = props.formSchemaService;\n    var _a = createComponentModel({\n        schema: { tabs: [] },\n        targetType: null,\n        targetData: null,\n        targetCell: null,\n        loading: false,\n    }), state = _a[0], setState = _a[1], model = _a[2], isModelReady = _a[3];\n    /** 注册全局的model */\n    React.useEffect(function () {\n        if (!app || !app.modelService) {\n            return null;\n        }\n        var toDispose = new DisposableCollection();\n        var deferredModel = app.modelService.findDeferredModel(NsJsonSchemaFormModel.id);\n        if (!deferredModel) {\n            var d = app.modelService.registerModel({\n                id: NsJsonSchemaFormModel.id,\n                modelFactory: function () { return model; },\n                /** 监听SELECTED_CELL的变化 */\n                watchChange: function (self, modelSerccie) { return __awaiter(void 0, void 0, void 0, function () {\n                    var selectedCellModel, nodeDisposable;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0: return [4 /*yield*/, MODELS.SELECTED_CELL.getModel(modelSerccie)];\n                            case 1:\n                                selectedCellModel = _a.sent();\n                                nodeDisposable = selectedCellModel.watch(function (cell) { return __awaiter(void 0, void 0, void 0, function () {\n                                    var updateState, getCellType, targetCellType;\n                                    return __generator(this, function (_a) {\n                                        switch (_a.label) {\n                                            case 0:\n                                                updateState = function (targetCell, type) { return __awaiter(void 0, void 0, void 0, function () {\n                                                    var targetData, schema;\n                                                    return __generator(this, function (_a) {\n                                                        switch (_a.label) {\n                                                            case 0:\n                                                                self.setValue(function (m) {\n                                                                    m.loading = true;\n                                                                });\n                                                                targetData = targetCell ? targetCell.getData() : null;\n                                                                return [4 /*yield*/, formSchemaService({\n                                                                        commandService: commandService,\n                                                                        modelService: modelService,\n                                                                        targetData: targetData,\n                                                                        cell: targetCell,\n                                                                        targetType: type,\n                                                                    })];\n                                                            case 1:\n                                                                schema = _a.sent();\n                                                                self.setValue({\n                                                                    loading: false,\n                                                                    schema: schema,\n                                                                    targetType: type,\n                                                                    targetCell: targetCell,\n                                                                    targetData: targetData,\n                                                                });\n                                                                return [2 /*return*/];\n                                                        }\n                                                    });\n                                                }); };\n                                                getCellType = function (targetCell) {\n                                                    if (!targetCell) {\n                                                        return 'canvas';\n                                                    }\n                                                    else if (targetCell.isGroup && targetCell.isGroup()) {\n                                                        return 'group';\n                                                    }\n                                                    else if (targetCell.isNode && targetCell.isNode()) {\n                                                        return 'node';\n                                                    }\n                                                    else if (targetCell.isEdge && targetCell.isEdge()) {\n                                                        return 'edge';\n                                                    }\n                                                    else {\n                                                        return 'canvas';\n                                                    }\n                                                };\n                                                targetCellType = getCellType(cell);\n                                                if (!(props.targetType || ['node', 'canvas']).includes(targetCellType)) return [3 /*break*/, 2];\n                                                return [4 /*yield*/, updateState(cell, targetCellType)];\n                                            case 1:\n                                                _a.sent();\n                                                _a.label = 2;\n                                            case 2: return [2 /*return*/];\n                                        }\n                                    });\n                                }); });\n                                return [2 /*return*/, Disposable.create(function () {\n                                        nodeDisposable.dispose();\n                                        toDispose.push(nodeDisposable);\n                                    })];\n                        }\n                    });\n                }); },\n            });\n            toDispose.push(d);\n        }\n        return function () {\n            toDispose.dispose();\n        };\n        /* eslint-disable-next-line  */\n    }, []);\n    return { commandService: commandService, modelService: modelService, state: state, setState: setState, model: model, isModelReady: isModelReady };\n};\n"]},"metadata":{},"sourceType":"module"}