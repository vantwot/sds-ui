{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n/** 向 graph 原型上挂在一系列方法 */\n\n\nimport { getGraphData } from '../util';\nexport var appendUtils = function appendUtils(graph) {\n  var x6Graph = graph;\n  /** 更新节点指定数据\n   * @param {id} string 节点 id\n   * @param {key} string 需要更新的字段\n   * @param {data} object 更新内容\n   */\n\n  var updateNodeKeyById = function updateNodeKeyById(id, key, data) {\n    var currentNode = x6Graph.getCellById(id);\n\n    if (currentNode) {\n      x6Graph.getCellById(id).prop(key, __assign(__assign({}, currentNode[key]), data));\n    }\n  };\n\n  x6Graph.updateNodeKeyById = updateNodeKeyById;\n  x6Graph.getGraphData = getGraphData;\n  return x6Graph;\n};","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@ant-design/flowchart/es/graph/appendUtils.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","getGraphData","appendUtils","graph","x6Graph","updateNodeKeyById","id","key","data","currentNode","getCellById","prop"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd;AAAiB,YAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AADJ;AAEH;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;AAWA;;;AACA,SAASO,YAAT,QAA6B,SAA7B;AACA,OAAO,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAAUC,KAAV,EAAiB;AACtC,MAAIC,OAAO,GAAGD,KAAd;AACA;AACJ;AACA;AACA;AACA;;AACI,MAAIE,iBAAiB,GAAG,SAApBA,iBAAoB,CAAUC,EAAV,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC7C,QAAIC,WAAW,GAAGL,OAAO,CAACM,WAAR,CAAoBJ,EAApB,CAAlB;;AACA,QAAIG,WAAJ,EAAiB;AACbL,MAAAA,OAAO,CAACM,WAAR,CAAoBJ,EAApB,EAAwBK,IAAxB,CAA6BJ,GAA7B,EAAkCpB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKsB,WAAW,CAACF,GAAD,CAAhB,CAAT,EAAiCC,IAAjC,CAA1C;AACH;AACJ,GALD;;AAMAJ,EAAAA,OAAO,CAACC,iBAAR,GAA4BA,iBAA5B;AACAD,EAAAA,OAAO,CAACH,YAAR,GAAuBA,YAAvB;AACA,SAAOG,OAAP;AACH,CAhBM","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/** 向 graph 原型上挂在一系列方法 */\nimport { getGraphData } from '../util';\nexport var appendUtils = function (graph) {\n    var x6Graph = graph;\n    /** 更新节点指定数据\n     * @param {id} string 节点 id\n     * @param {key} string 需要更新的字段\n     * @param {data} object 更新内容\n     */\n    var updateNodeKeyById = function (id, key, data) {\n        var currentNode = x6Graph.getCellById(id);\n        if (currentNode) {\n            x6Graph.getCellById(id).prop(key, __assign(__assign({}, currentNode[key]), data));\n        }\n    };\n    x6Graph.updateNodeKeyById = updateNodeKeyById;\n    x6Graph.getGraphData = getGraphData;\n    return x6Graph;\n};\n"]},"metadata":{},"sourceType":"module"}