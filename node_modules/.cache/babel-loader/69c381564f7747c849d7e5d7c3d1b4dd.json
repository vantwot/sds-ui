{"ast":null,"code":"import { Interpreter } from \"./interpreter/main\"; // TODO:\n// add tests\n\nexport function createContext(ctx) {\n  if (ctx === void 0) {\n    ctx = Object.create(null);\n  }\n\n  return ctx;\n}\nexport function compileFunction(code, params, options) {\n  if (params === void 0) {\n    params = [];\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var ctx = options.parsingContext;\n  var timeout = options.timeout === undefined ? 0 : options.timeout;\n  var wrapCode = \"\\n    (function anonymous(\" + params.join(\",\") + \"){\\n         \" + code + \"\\n    });\\n    \";\n  var interpreter = new Interpreter(ctx, {\n    ecmaVersion: options.ecmaVersion,\n    timeout: timeout,\n    rootContext: options.rootContext,\n    globalContextInFunction: options.globalContextInFunction\n  });\n  return interpreter.evaluate(wrapCode);\n}\n\nfunction _runInContext(code, ctx, options) {\n  var interpreter = new Interpreter(ctx, options);\n  return interpreter.evaluate(code);\n}\n\nexport { _runInContext as runInContext };\nexport var runInNewContext = _runInContext;\nexport var Script = /*#__PURE__*/function () {\n  function Script(code) {\n    this._code = code;\n  }\n\n  var _proto = Script.prototype;\n\n  _proto.runInContext = function runInContext(ctx) {\n    return _runInContext(this._code, ctx);\n  };\n\n  _proto.runInNewContext = function runInNewContext(ctx) {\n    return _runInContext(this._code, ctx);\n  };\n\n  return Script;\n}();","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/l7eval5/dist/esm/vm.js"],"names":["Interpreter","createContext","ctx","Object","create","compileFunction","code","params","options","parsingContext","timeout","undefined","wrapCode","join","interpreter","ecmaVersion","rootContext","globalContextInFunction","evaluate","_runInContext","runInContext","runInNewContext","Script","_code","_proto","prototype"],"mappings":"AAAA,SAASA,WAAT,QAA4B,oBAA5B,C,CAAkD;AAClD;;AAEA,OAAO,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AACjC,MAAIA,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAClBA,IAAAA,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAN;AACD;;AAED,SAAOF,GAAP;AACD;AACD,OAAO,SAASG,eAAT,CAAyBC,IAAzB,EAA+BC,MAA/B,EAAuCC,OAAvC,EAAgD;AACrD,MAAID,MAAM,KAAK,KAAK,CAApB,EAAuB;AACrBA,IAAAA,MAAM,GAAG,EAAT;AACD;;AAED,MAAIC,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIN,GAAG,GAAGM,OAAO,CAACC,cAAlB;AACA,MAAIC,OAAO,GAAGF,OAAO,CAACE,OAAR,KAAoBC,SAApB,GAAgC,CAAhC,GAAoCH,OAAO,CAACE,OAA1D;AACA,MAAIE,QAAQ,GAAG,+BAA+BL,MAAM,CAACM,IAAP,CAAY,GAAZ,CAA/B,GAAkD,eAAlD,GAAoEP,IAApE,GAA2E,iBAA1F;AACA,MAAIQ,WAAW,GAAG,IAAId,WAAJ,CAAgBE,GAAhB,EAAqB;AACrCa,IAAAA,WAAW,EAAEP,OAAO,CAACO,WADgB;AAErCL,IAAAA,OAAO,EAAEA,OAF4B;AAGrCM,IAAAA,WAAW,EAAER,OAAO,CAACQ,WAHgB;AAIrCC,IAAAA,uBAAuB,EAAET,OAAO,CAACS;AAJI,GAArB,CAAlB;AAMA,SAAOH,WAAW,CAACI,QAAZ,CAAqBN,QAArB,CAAP;AACD;;AAED,SAASO,aAAT,CAAuBb,IAAvB,EAA6BJ,GAA7B,EAAkCM,OAAlC,EAA2C;AACzC,MAAIM,WAAW,GAAG,IAAId,WAAJ,CAAgBE,GAAhB,EAAqBM,OAArB,CAAlB;AACA,SAAOM,WAAW,CAACI,QAAZ,CAAqBZ,IAArB,CAAP;AACD;;AAED,SAASa,aAAa,IAAIC,YAA1B;AACA,OAAO,IAAIC,eAAe,GAAGF,aAAtB;AACP,OAAO,IAAIG,MAAM,GACjB,aACA,YAAY;AACV,WAASA,MAAT,CAAgBhB,IAAhB,EAAsB;AACpB,SAAKiB,KAAL,GAAajB,IAAb;AACD;;AAED,MAAIkB,MAAM,GAAGF,MAAM,CAACG,SAApB;;AAEAD,EAAAA,MAAM,CAACJ,YAAP,GAAsB,SAASA,YAAT,CAAsBlB,GAAtB,EAA2B;AAC/C,WAAOiB,aAAa,CAAC,KAAKI,KAAN,EAAarB,GAAb,CAApB;AACD,GAFD;;AAIAsB,EAAAA,MAAM,CAACH,eAAP,GAAyB,SAASA,eAAT,CAAyBnB,GAAzB,EAA8B;AACrD,WAAOiB,aAAa,CAAC,KAAKI,KAAN,EAAarB,GAAb,CAApB;AACD,GAFD;;AAIA,SAAOoB,MAAP;AACD,CAhBD,EAFO","sourcesContent":["import { Interpreter } from \"./interpreter/main\"; // TODO:\n// add tests\n\nexport function createContext(ctx) {\n  if (ctx === void 0) {\n    ctx = Object.create(null);\n  }\n\n  return ctx;\n}\nexport function compileFunction(code, params, options) {\n  if (params === void 0) {\n    params = [];\n  }\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var ctx = options.parsingContext;\n  var timeout = options.timeout === undefined ? 0 : options.timeout;\n  var wrapCode = \"\\n    (function anonymous(\" + params.join(\",\") + \"){\\n         \" + code + \"\\n    });\\n    \";\n  var interpreter = new Interpreter(ctx, {\n    ecmaVersion: options.ecmaVersion,\n    timeout: timeout,\n    rootContext: options.rootContext,\n    globalContextInFunction: options.globalContextInFunction\n  });\n  return interpreter.evaluate(wrapCode);\n}\n\nfunction _runInContext(code, ctx, options) {\n  var interpreter = new Interpreter(ctx, options);\n  return interpreter.evaluate(code);\n}\n\nexport { _runInContext as runInContext };\nexport var runInNewContext = _runInContext;\nexport var Script =\n/*#__PURE__*/\nfunction () {\n  function Script(code) {\n    this._code = code;\n  }\n\n  var _proto = Script.prototype;\n\n  _proto.runInContext = function runInContext(ctx) {\n    return _runInContext(this._code, ctx);\n  };\n\n  _proto.runInNewContext = function runInNewContext(ctx) {\n    return _runInContext(this._code, ctx);\n  };\n\n  return Script;\n}();"]},"metadata":{},"sourceType":"module"}