{"ast":null,"code":"import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\nexport var DatetimePicker = function (props) {\n  var className = props.className,\n      style = props.style,\n      disabled = props.disabled,\n      value = props.value,\n      onChange = props.onChange;\n\n  var _a = useState(value ? moment(value) : undefined),\n      innerValue = _a[0],\n      setInnerValue = _a[1];\n\n  var mountedRef = useRef(false);\n  useEffect(function () {\n    if (!mountedRef.current) {\n      mountedRef.current = true;\n      return;\n    }\n\n    var valueMoment = moment(value);\n\n    if (valueMoment.isValid()) {\n      setInnerValue(valueMoment);\n    }\n  }, [value]);\n  var onChangeMoment = useCallback(function (_, dateString) {\n    var nextMoment = moment(dateString);\n    setInnerValue(nextMoment.isValid() ? nextMoment : undefined);\n\n    if (typeof onChange === 'function') {\n      onChange(nextMoment.isValid() ? nextMoment.format('YYYY-MM-DD HH:mm:ss') : '');\n    }\n  }, [onChange]);\n  return React.createElement(DatePicker, {\n    showTime: true,\n    allowClear: true,\n    className: className,\n    style: style,\n    disabled: disabled,\n    value: innerValue,\n    onChange: onChangeMoment\n  });\n};","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@ant-design/flowchart/es/components/canvas-json-schema-form/schema-form/control-map/datetime/datetime-picker.js"],"names":["React","useEffect","useRef","useState","useCallback","DatePicker","moment","DatetimePicker","props","className","style","disabled","value","onChange","_a","undefined","innerValue","setInnerValue","mountedRef","current","valueMoment","isValid","onChangeMoment","_","dateString","nextMoment","format","createElement","showTime","allowClear"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,IAAIC,cAAc,GAAG,UAAUC,KAAV,EAAiB;AACzC,MAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AAAA,MAAiCC,KAAK,GAAGF,KAAK,CAACE,KAA/C;AAAA,MAAsDC,QAAQ,GAAGH,KAAK,CAACG,QAAvE;AAAA,MAAiFC,KAAK,GAAGJ,KAAK,CAACI,KAA/F;AAAA,MAAsGC,QAAQ,GAAGL,KAAK,CAACK,QAAvH;;AACA,MAAIC,EAAE,GAAGX,QAAQ,CAACS,KAAK,GAAGN,MAAM,CAACM,KAAD,CAAT,GAAmBG,SAAzB,CAAjB;AAAA,MAAsDC,UAAU,GAAGF,EAAE,CAAC,CAAD,CAArE;AAAA,MAA0EG,aAAa,GAAGH,EAAE,CAAC,CAAD,CAA5F;;AACA,MAAII,UAAU,GAAGhB,MAAM,CAAC,KAAD,CAAvB;AACAD,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI,CAACiB,UAAU,CAACC,OAAhB,EAAyB;AACrBD,MAAAA,UAAU,CAACC,OAAX,GAAqB,IAArB;AACA;AACH;;AACD,QAAIC,WAAW,GAAGd,MAAM,CAACM,KAAD,CAAxB;;AACA,QAAIQ,WAAW,CAACC,OAAZ,EAAJ,EAA2B;AACvBJ,MAAAA,aAAa,CAACG,WAAD,CAAb;AACH;AACJ,GATQ,EASN,CAACR,KAAD,CATM,CAAT;AAUA,MAAIU,cAAc,GAAGlB,WAAW,CAAC,UAAUmB,CAAV,EAAaC,UAAb,EAAyB;AACtD,QAAIC,UAAU,GAAGnB,MAAM,CAACkB,UAAD,CAAvB;AACAP,IAAAA,aAAa,CAACQ,UAAU,CAACJ,OAAX,KAAuBI,UAAvB,GAAoCV,SAArC,CAAb;;AACA,QAAI,OAAOF,QAAP,KAAoB,UAAxB,EAAoC;AAChCA,MAAAA,QAAQ,CAACY,UAAU,CAACJ,OAAX,KAAuBI,UAAU,CAACC,MAAX,CAAkB,qBAAlB,CAAvB,GAAkE,EAAnE,CAAR;AACH;AACJ,GAN+B,EAM7B,CAACb,QAAD,CAN6B,CAAhC;AAOA,SAAQb,KAAK,CAAC2B,aAAN,CAAoBtB,UAApB,EAAgC;AAAEuB,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,UAAU,EAAE,IAA9B;AAAoCpB,IAAAA,SAAS,EAAEA,SAA/C;AAA0DC,IAAAA,KAAK,EAAEA,KAAjE;AAAwEC,IAAAA,QAAQ,EAAEA,QAAlF;AAA4FC,IAAAA,KAAK,EAAEI,UAAnG;AAA+GH,IAAAA,QAAQ,EAAES;AAAzH,GAAhC,CAAR;AACH,CAtBM","sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { DatePicker } from 'antd';\nimport moment from 'moment';\nexport var DatetimePicker = function (props) {\n    var className = props.className, style = props.style, disabled = props.disabled, value = props.value, onChange = props.onChange;\n    var _a = useState(value ? moment(value) : undefined), innerValue = _a[0], setInnerValue = _a[1];\n    var mountedRef = useRef(false);\n    useEffect(function () {\n        if (!mountedRef.current) {\n            mountedRef.current = true;\n            return;\n        }\n        var valueMoment = moment(value);\n        if (valueMoment.isValid()) {\n            setInnerValue(valueMoment);\n        }\n    }, [value]);\n    var onChangeMoment = useCallback(function (_, dateString) {\n        var nextMoment = moment(dateString);\n        setInnerValue(nextMoment.isValid() ? nextMoment : undefined);\n        if (typeof onChange === 'function') {\n            onChange(nextMoment.isValid() ? nextMoment.format('YYYY-MM-DD HH:mm:ss') : '');\n        }\n    }, [onChange]);\n    return (React.createElement(DatePicker, { showTime: true, allowClear: true, className: className, style: style, disabled: disabled, value: innerValue, onChange: onChangeMoment }));\n};\n"]},"metadata":{},"sourceType":"module"}