{"ast":null,"code":"import { getString, getNumber } from './util';\nexport function outline() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var color = getString(args.color, 'blue');\n  var width = getNumber(args.width, 1);\n  var margin = getNumber(args.margin, 2);\n  var opacity = getNumber(args.opacity, 1);\n  var innerRadius = margin;\n  var outerRadius = margin + width;\n  return \"\\n    <filter>\\n      <feFlood flood-color=\\\"\".concat(color, \"\\\" flood-opacity=\\\"\").concat(opacity, \"\\\" result=\\\"colored\\\"/>\\n      <feMorphology in=\\\"SourceAlpha\\\" result=\\\"morphedOuter\\\" operator=\\\"dilate\\\" radius=\\\"\").concat(outerRadius, \"\\\" />\\n      <feMorphology in=\\\"SourceAlpha\\\" result=\\\"morphedInner\\\" operator=\\\"dilate\\\" radius=\\\"\").concat(innerRadius, \"\\\" />\\n      <feComposite result=\\\"morphedOuterColored\\\" in=\\\"colored\\\" in2=\\\"morphedOuter\\\" operator=\\\"in\\\"/>\\n      <feComposite operator=\\\"xor\\\" in=\\\"morphedOuterColored\\\" in2=\\\"morphedInner\\\" result=\\\"outline\\\"/>\\n      <feMerge>\\n        <feMergeNode in=\\\"outline\\\"/>\\n        <feMergeNode in=\\\"SourceGraphic\\\"/>\\n      </feMerge>\\n    </filter>\\n  \").trim();\n}","map":{"version":3,"sources":["../../../src/registry/filter/outline.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,EAAoB,SAApB,QAAqC,QAArC;AAqBA,OAAM,SAAU,OAAV,GAAwC;AAAA,MAAtB,IAAsB,uEAAF,EAAE;AAC5C,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,KAAN,EAAa,MAAb,CAAvB;AACA,MAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,KAAN,EAAa,CAAb,CAAvB;AACA,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,MAAN,EAAc,CAAd,CAAxB;AACA,MAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,OAAN,EAAe,CAAf,CAAzB;AAEA,MAAM,WAAW,GAAG,MAApB;AACA,MAAM,WAAW,GAAG,MAAM,GAAG,KAA7B;AAEA,SAAO,uDAEqB,KAFrB,gCAE8C,OAF9C,kIAG8E,WAH9E,gHAI8E,WAJ9E,wWAYL,IAZK,EAAP;AAaD","sourceRoot":"","sourcesContent":["import { getString, getNumber } from './util';\nexport function outline(args = {}) {\n    const color = getString(args.color, 'blue');\n    const width = getNumber(args.width, 1);\n    const margin = getNumber(args.margin, 2);\n    const opacity = getNumber(args.opacity, 1);\n    const innerRadius = margin;\n    const outerRadius = margin + width;\n    return `\n    <filter>\n      <feFlood flood-color=\"${color}\" flood-opacity=\"${opacity}\" result=\"colored\"/>\n      <feMorphology in=\"SourceAlpha\" result=\"morphedOuter\" operator=\"dilate\" radius=\"${outerRadius}\" />\n      <feMorphology in=\"SourceAlpha\" result=\"morphedInner\" operator=\"dilate\" radius=\"${innerRadius}\" />\n      <feComposite result=\"morphedOuterColored\" in=\"colored\" in2=\"morphedOuter\" operator=\"in\"/>\n      <feComposite operator=\"xor\" in=\"morphedOuterColored\" in2=\"morphedInner\" result=\"outline\"/>\n      <feMerge>\n        <feMergeNode in=\"outline\"/>\n        <feMergeNode in=\"SourceGraphic\"/>\n      </feMerge>\n    </filter>\n  `.trim();\n}\n//# sourceMappingURL=outline.js.map"]},"metadata":{},"sourceType":"module"}