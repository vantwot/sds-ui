{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n/* eslint-disable @typescript-eslint/no-redeclare */\n\n\nimport 'reflect-metadata';\n/** Toolbar扩展点依赖 */\n\nimport { KeyBindingRegistry } from './keybinding-registry';\nimport { IKeyBindingContribution, IKeyBindingOptionProvider } from './interface';\nimport { Contribution, Module, Syringe } from 'mana-syringe';\nexport var registerKeybindingConfig = function registerKeybindingConfig(register, config) {\n  register(IKeyBindingOptionProvider, {\n    useDynamic: function useDynamic() {\n      return {\n        getOption: function getOption() {\n          return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    return _context.abrupt(\"return\", config.getConfig());\n\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n        }\n      };\n    },\n    lifecycle: Syringe.Lifecycle.singleton\n  });\n};\n/** 依赖扩展模块，必须要加载 */\n\nexport var createModule = function createModule(keyBindingConfig) {\n  return Module(function (register) {\n    /** 绑定 context 配置 */\n    registerKeybindingConfig(register, keyBindingConfig);\n    /** 注册 IContextContribution */\n\n    Contribution.register(register, IKeyBindingContribution);\n    /** 注册 KeyBindingRegistry 到 IFrontendApplicationContribution  */\n\n    /** 注册 KeyBindingRegistry */\n\n    /** 注册 KeyBindingRegistry alias  IKeybindingService */\n\n    register(KeyBindingRegistry);\n  });\n};","map":{"version":3,"sources":["../../src/keybinding/module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AACA,OAAO,kBAAP;AAIA;;AACA,SAAS,kBAAT,QAAmC,uBAAnC;AACA,SAAS,uBAAT,EAAkC,yBAAlC,QAAmE,aAAnE;AACA,SAAS,YAAT,EAAuB,MAAvB,EAA+B,OAA/B,QAA8C,cAA9C;AAEA,OAAO,IAAM,wBAAwB,GAAG,SAA3B,wBAA2B,CAAC,QAAD,EAA6B,MAA7B,EAAyD;AAC/F,EAAA,QAAQ,CAA4B,yBAA5B,EAAuD;AAC7D,IAAA,UAAU,EAAE,sBAAK;AACf,aAAO;AACL,QAAA,SAAS,EAAE;AAAA,iBAAW,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDACb,MAAM,CAAC,SAAP,EADa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAA,EAAX;AAAA;AADN,OAAP;AAKD,KAP4D;AAQ7D,IAAA,SAAS,EAAE,OAAO,CAAC,SAAR,CAAkB;AARgC,GAAvD,CAAR;AAUD,CAXM;AAaP;;AACA,OAAO,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,gBAAD,EAAuC;AACjE,SAAO,MAAM,CAAC,UAAA,QAAQ,EAAG;AACvB;AACA,IAAA,wBAAwB,CAAC,QAAD,EAAW,gBAAX,CAAxB;AAEA;;AACA,IAAA,YAAY,CAAC,QAAb,CAAsB,QAAtB,EAAgC,uBAAhC;AAEA;;AACA;;AACA;;AACA,IAAA,QAAQ,CAAC,kBAAD,CAAR;AACD,GAXY,CAAb;AAYD,CAbM","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/* eslint-disable @typescript-eslint/no-redeclare */\nimport 'reflect-metadata';\n/** Toolbar扩展点依赖 */\nimport { KeyBindingRegistry } from './keybinding-registry';\nimport { IKeyBindingContribution, IKeyBindingOptionProvider } from './interface';\nimport { Contribution, Module, Syringe } from 'mana-syringe';\nexport const registerKeybindingConfig = (register, config) => {\n    register(IKeyBindingOptionProvider, {\n        useDynamic: () => {\n            return {\n                getOption: () => __awaiter(void 0, void 0, void 0, function* () {\n                    return config.getConfig();\n                }),\n            };\n        },\n        lifecycle: Syringe.Lifecycle.singleton,\n    });\n};\n/** 依赖扩展模块，必须要加载 */\nexport const createModule = (keyBindingConfig) => {\n    return Module(register => {\n        /** 绑定 context 配置 */\n        registerKeybindingConfig(register, keyBindingConfig);\n        /** 注册 IContextContribution */\n        Contribution.register(register, IKeyBindingContribution);\n        /** 注册 KeyBindingRegistry 到 IFrontendApplicationContribution  */\n        /** 注册 KeyBindingRegistry */\n        /** 注册 KeyBindingRegistry alias  IKeybindingService */\n        register(KeyBindingRegistry);\n    });\n};\n//# sourceMappingURL=module.js.map"]},"metadata":{},"sourceType":"module"}