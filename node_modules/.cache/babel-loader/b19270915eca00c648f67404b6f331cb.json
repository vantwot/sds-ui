{"ast":null,"code":"var _ = require(\"../lodash\");\n\nvar barycenter = require(\"./barycenter\");\n\nvar resolveConflicts = require(\"./resolve-conflicts\");\n\nvar sort = require(\"./sort\");\n\nmodule.exports = sortSubgraph;\n\nfunction sortSubgraph(g, v, cg, biasRight, usePrev) {\n  var movable = g.children(v); // fixorder的点不参与排序（这个方案不合适，只排了新增节点，和原来的分离）\n  // var movable = _.filter(g.children(v), function(v) { return g.node(v).fixorder === undefined; });\n\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight : undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n\n  _.forEach(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n\n      if (_.has(subgraphResult, \"barycenter\")) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs); // 添加fixorder信息到entries里边\n  // TODO: 不考虑复合情况，只用第一个点的fixorder信息，后续考虑更完备的实现\n\n  _.forEach(entries, function (e) {\n    var node = g.node(e.vs[0]);\n    e.fixorder = node.fixorder;\n    e.order = node.order;\n  });\n\n  var result = sort(entries, biasRight, usePrev);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br], true);\n\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n          brPred = g.node(g.predecessors(br)[0]);\n\n      if (!_.has(result, \"barycenter\")) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n\n      result.barycenter = (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function (entry) {\n    entry.vs = _.flatten(entry.vs.map(function (v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight + other.barycenter * other.weight) / (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/dagrejs/lib/order/sort-subgraph.js"],"names":["_","require","barycenter","resolveConflicts","sort","module","exports","sortSubgraph","g","v","cg","biasRight","usePrev","movable","children","node","bl","borderLeft","undefined","br","borderRight","subgraphs","filter","w","barycenters","forEach","entry","length","subgraphResult","has","mergeBarycenters","entries","expandSubgraphs","e","vs","fixorder","order","result","flatten","predecessors","blPred","brPred","weight","map","target","other","isUndefined"],"mappings":"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","sourcesContent":["var _ = require(\"../lodash\");\nvar barycenter = require(\"./barycenter\");\nvar resolveConflicts = require(\"./resolve-conflicts\");\nvar sort = require(\"./sort\");\n\nmodule.exports = sortSubgraph;\n\nfunction sortSubgraph(g, v, cg, biasRight, usePrev) {\n  var movable = g.children(v);\n  // fixorder的点不参与排序（这个方案不合适，只排了新增节点，和原来的分离）\n  // var movable = _.filter(g.children(v), function(v) { return g.node(v).fixorder === undefined; });\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight: undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function(w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function(entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_.has(subgraphResult, \"barycenter\")) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  // 添加fixorder信息到entries里边\n  // TODO: 不考虑复合情况，只用第一个点的fixorder信息，后续考虑更完备的实现\n  _.forEach(entries, function (e) {\n    var node = g.node(e.vs[0]);\n    e.fixorder = node.fixorder;\n    e.order = node.order;\n  });\n\n  var result = sort(entries, biasRight, usePrev);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br], true);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n        brPred = g.node(g.predecessors(br)[0]);\n      if (!_.has(result, \"barycenter\")) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight +\n                           blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function(entry) {\n    entry.vs = _.flatten(entry.vs.map(function(v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight +\n                         other.barycenter * other.weight) /\n                        (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}