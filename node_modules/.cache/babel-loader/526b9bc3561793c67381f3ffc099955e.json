{"ast":null,"code":"import _defineProperty from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport JQuery from 'jquery';\nimport { Dom, FunctionExt } from '../util';\nimport { Cell } from '../model';\nimport { Config } from '../global';\nimport { View, Markup } from '../view';\nexport var GraphView = /*#__PURE__*/function (_View) {\n  _inherits(GraphView, _View);\n\n  var _super = _createSuper(GraphView);\n\n  function GraphView(graph) {\n    var _this;\n\n    _classCallCheck(this, GraphView);\n\n    _this = _super.call(this);\n    _this.graph = graph;\n\n    var _Markup$parseJSONMark = Markup.parseJSONMarkup(GraphView.markup),\n        selectors = _Markup$parseJSONMark.selectors,\n        fragment = _Markup$parseJSONMark.fragment;\n\n    _this.background = selectors.background;\n    _this.grid = selectors.grid;\n    _this.svg = selectors.svg;\n    _this.defs = selectors.defs;\n    _this.viewport = selectors.viewport;\n    _this.primer = selectors.primer;\n    _this.stage = selectors.stage;\n    _this.decorator = selectors.decorator;\n    _this.overlay = selectors.overlay;\n    _this.container = _this.options.container;\n    _this.restore = GraphView.snapshoot(_this.container);\n\n    _this.$(_this.container).addClass(_this.prefixClassName('graph')).append(fragment);\n\n    _this.delegateEvents();\n\n    return _this;\n  }\n\n  _createClass(GraphView, [{\n    key: \"model\",\n    get: function get() {\n      return this.graph.model;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this.graph.options;\n    }\n  }, {\n    key: \"delegateEvents\",\n    value: function delegateEvents() {\n      var ctor = this.constructor;\n\n      _get(_getPrototypeOf(GraphView.prototype), \"delegateEvents\", this).call(this, ctor.events);\n\n      return this;\n    }\n    /**\n     * Guard the specified event. If the event is not interesting, it\n     * returns `true`, otherwise returns `false`.\n     */\n\n  }, {\n    key: \"guard\",\n    value: function guard(e, view) {\n      // handled as `contextmenu` type\n      if (e.type === 'mousedown' && e.button === 2) {\n        return true;\n      }\n\n      if (this.options.guard && this.options.guard(e, view)) {\n        return true;\n      }\n\n      if (e.data && e.data.guarded !== undefined) {\n        return e.data.guarded;\n      }\n\n      if (view && view.cell && Cell.isCell(view.cell)) {\n        return false;\n      }\n\n      if (this.svg === e.target || this.container === e.target || JQuery.contains(this.svg, e.target)) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"findView\",\n    value: function findView(elem) {\n      return this.graph.renderer.findViewByElem(elem);\n    }\n  }, {\n    key: \"onDblClick\",\n    value: function onDblClick(evt) {\n      if (this.options.preventDefaultDblClick) {\n        evt.preventDefault();\n      }\n\n      var e = this.normalizeEvent(evt);\n      var view = this.findView(e.target);\n\n      if (this.guard(e, view)) {\n        return;\n      }\n\n      var localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n\n      if (view) {\n        view.onDblClick(e, localPoint.x, localPoint.y);\n      } else {\n        this.graph.trigger('blank:dblclick', {\n          e: e,\n          x: localPoint.x,\n          y: localPoint.y\n        });\n      }\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(evt) {\n      if (this.getMouseMovedCount(evt) <= this.options.clickThreshold) {\n        var e = this.normalizeEvent(evt);\n        var view = this.findView(e.target);\n\n        if (this.guard(e, view)) {\n          return;\n        }\n\n        var localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n\n        if (view) {\n          view.onClick(e, localPoint.x, localPoint.y);\n        } else {\n          this.graph.trigger('blank:click', {\n            e: e,\n            x: localPoint.x,\n            y: localPoint.y\n          });\n        }\n      }\n    }\n  }, {\n    key: \"onContextMenu\",\n    value: function onContextMenu(evt) {\n      if (this.options.preventDefaultContextMenu) {\n        evt.preventDefault();\n      }\n\n      var e = this.normalizeEvent(evt);\n      var view = this.findView(e.target);\n\n      if (this.guard(e, view)) {\n        return;\n      }\n\n      var localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n\n      if (view) {\n        view.onContextMenu(e, localPoint.x, localPoint.y);\n      } else {\n        this.graph.trigger('blank:contextmenu', {\n          e: e,\n          x: localPoint.x,\n          y: localPoint.y\n        });\n      }\n    }\n  }, {\n    key: \"delegateDragEvents\",\n    value: function delegateDragEvents(e, view) {\n      if (e.data == null) {\n        e.data = {};\n      }\n\n      this.setEventData(e, {\n        currentView: view || null,\n        mouseMovedCount: 0,\n        startPosition: {\n          x: e.clientX,\n          y: e.clientY\n        }\n      });\n      var ctor = this.constructor;\n      this.delegateDocumentEvents(ctor.documentEvents, e.data);\n      this.undelegateEvents();\n    }\n  }, {\n    key: \"getMouseMovedCount\",\n    value: function getMouseMovedCount(e) {\n      var data = this.getEventData(e);\n      return data.mouseMovedCount || 0;\n    }\n  }, {\n    key: \"onMouseDown\",\n    value: function onMouseDown(evt) {\n      var e = this.normalizeEvent(evt);\n      var view = this.findView(e.target);\n\n      if (this.guard(e, view)) {\n        return;\n      }\n\n      if (this.options.preventDefaultMouseDown) {\n        e.preventDefault();\n      }\n\n      var localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n\n      if (view) {\n        view.onMouseDown(e, localPoint.x, localPoint.y);\n      } else {\n        if (this.options.preventDefaultBlankAction) {\n          e.preventDefault();\n        }\n\n        this.graph.trigger('blank:mousedown', {\n          e: e,\n          x: localPoint.x,\n          y: localPoint.y\n        });\n      }\n\n      this.delegateDragEvents(e, view);\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(evt) {\n      var data = this.getEventData(evt);\n      var startPosition = data.startPosition;\n\n      if (startPosition && startPosition.x === evt.clientX && startPosition.y === evt.clientY) {\n        return;\n      }\n\n      if (data.mouseMovedCount == null) {\n        data.mouseMovedCount = 0;\n      }\n\n      data.mouseMovedCount += 1;\n      var mouseMovedCount = data.mouseMovedCount;\n\n      if (mouseMovedCount <= this.options.moveThreshold) {\n        return;\n      }\n\n      var e = this.normalizeEvent(evt);\n      var localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n      var view = data.currentView;\n\n      if (view) {\n        view.onMouseMove(e, localPoint.x, localPoint.y);\n      } else {\n        this.graph.trigger('blank:mousemove', {\n          e: e,\n          x: localPoint.x,\n          y: localPoint.y\n        });\n      }\n\n      this.setEventData(e, data);\n    }\n  }, {\n    key: \"onMouseUp\",\n    value: function onMouseUp(e) {\n      this.undelegateDocumentEvents();\n      var normalized = this.normalizeEvent(e);\n      var localPoint = this.graph.snapToGrid(normalized.clientX, normalized.clientY);\n      var data = this.getEventData(e);\n      var view = data.currentView;\n\n      if (view) {\n        view.onMouseUp(normalized, localPoint.x, localPoint.y);\n      } else {\n        this.graph.trigger('blank:mouseup', {\n          e: normalized,\n          x: localPoint.x,\n          y: localPoint.y\n        });\n      }\n\n      if (!e.isPropagationStopped()) {\n        this.onClick(JQuery.Event(e, {\n          type: 'click',\n          data: e.data\n        }));\n      }\n\n      e.stopImmediatePropagation();\n      this.delegateEvents();\n    }\n  }, {\n    key: \"onMouseOver\",\n    value: function onMouseOver(evt) {\n      var e = this.normalizeEvent(evt);\n      var view = this.findView(e.target);\n\n      if (this.guard(e, view)) {\n        return;\n      }\n\n      if (view) {\n        view.onMouseOver(e);\n      } else {\n        // prevent border of paper from triggering this\n        if (this.container === e.target) {\n          return;\n        }\n\n        this.graph.trigger('blank:mouseover', {\n          e: e\n        });\n      }\n    }\n  }, {\n    key: \"onMouseOut\",\n    value: function onMouseOut(evt) {\n      var e = this.normalizeEvent(evt);\n      var view = this.findView(e.target);\n\n      if (this.guard(e, view)) {\n        return;\n      }\n\n      if (view) {\n        view.onMouseOut(e);\n      } else {\n        if (this.container === e.target) {\n          return;\n        }\n\n        this.graph.trigger('blank:mouseout', {\n          e: e\n        });\n      }\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter(evt) {\n      var e = this.normalizeEvent(evt);\n      var view = this.findView(e.target);\n\n      if (this.guard(e, view)) {\n        return;\n      }\n\n      var relatedView = this.graph.renderer.findViewByElem(e.relatedTarget);\n\n      if (view) {\n        if (relatedView === view) {\n          // mouse moved from tool to view\n          return;\n        }\n\n        view.onMouseEnter(e);\n      } else {\n        if (relatedView) {\n          return;\n        }\n\n        this.graph.trigger('graph:mouseenter', {\n          e: e\n        });\n      }\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave(evt) {\n      var e = this.normalizeEvent(evt);\n      var view = this.findView(e.target);\n\n      if (this.guard(e, view)) {\n        return;\n      }\n\n      var relatedView = this.graph.renderer.findViewByElem(e.relatedTarget);\n\n      if (view) {\n        if (relatedView === view) {\n          // mouse moved from view to tool\n          return;\n        }\n\n        view.onMouseLeave(e);\n      } else {\n        if (relatedView) {\n          return;\n        }\n\n        this.graph.trigger('graph:mouseleave', {\n          e: e\n        });\n      }\n    }\n  }, {\n    key: \"onMouseWheel\",\n    value: function onMouseWheel(evt) {\n      var e = this.normalizeEvent(evt);\n      var view = this.findView(e.target);\n\n      if (this.guard(e, view)) {\n        return;\n      }\n\n      var originalEvent = e.originalEvent;\n      var localPoint = this.graph.snapToGrid(originalEvent.clientX, originalEvent.clientY);\n      var delta = Math.max(-1, Math.min(1, originalEvent.wheelDelta || -originalEvent.detail));\n\n      if (view) {\n        view.onMouseWheel(e, localPoint.x, localPoint.y, delta);\n      } else {\n        this.graph.trigger('blank:mousewheel', {\n          e: e,\n          delta: delta,\n          x: localPoint.x,\n          y: localPoint.y\n        });\n      }\n    }\n  }, {\n    key: \"onCustomEvent\",\n    value: function onCustomEvent(evt) {\n      var elem = evt.currentTarget;\n      var event = elem.getAttribute('event') || elem.getAttribute('data-event');\n\n      if (event) {\n        var view = this.findView(elem);\n\n        if (view) {\n          var e = this.normalizeEvent(evt);\n\n          if (this.guard(e, view)) {\n            return;\n          }\n\n          var localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n          view.onCustomEvent(e, event, localPoint.x, localPoint.y);\n        }\n      }\n    }\n  }, {\n    key: \"handleMagnetEvent\",\n    value: function handleMagnetEvent(evt, handler) {\n      var magnetElem = evt.currentTarget;\n      var magnetValue = magnetElem.getAttribute('magnet');\n\n      if (magnetValue && magnetValue.toLowerCase() !== 'false') {\n        var view = this.findView(magnetElem);\n\n        if (view) {\n          var e = this.normalizeEvent(evt);\n\n          if (this.guard(e, view)) {\n            return;\n          }\n\n          var localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n          FunctionExt.call(handler, this.graph, view, e, magnetElem, localPoint.x, localPoint.y);\n        }\n      }\n    }\n  }, {\n    key: \"onMagnetMouseDown\",\n    value: function onMagnetMouseDown(e) {\n      this.handleMagnetEvent(e, function (view, e, magnet, x, y) {\n        view.onMagnetMouseDown(e, magnet, x, y);\n      });\n    }\n  }, {\n    key: \"onMagnetDblClick\",\n    value: function onMagnetDblClick(e) {\n      this.handleMagnetEvent(e, function (view, e, magnet, x, y) {\n        view.onMagnetDblClick(e, magnet, x, y);\n      });\n    }\n  }, {\n    key: \"onMagnetContextMenu\",\n    value: function onMagnetContextMenu(e) {\n      if (this.options.preventDefaultContextMenu) {\n        e.preventDefault();\n      }\n\n      this.handleMagnetEvent(e, function (view, e, magnet, x, y) {\n        view.onMagnetContextMenu(e, magnet, x, y);\n      });\n    }\n  }, {\n    key: \"onLabelMouseDown\",\n    value: function onLabelMouseDown(evt) {\n      var labelNode = evt.currentTarget;\n      var view = this.findView(labelNode);\n\n      if (view) {\n        var e = this.normalizeEvent(evt);\n\n        if (this.guard(e, view)) {\n          return;\n        }\n\n        var localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        view.onLabelMouseDown(e, localPoint.x, localPoint.y);\n      }\n    }\n  }, {\n    key: \"onImageDragStart\",\n    value: function onImageDragStart() {\n      // This is the only way to prevent image dragging in Firefox that works.\n      // Setting -moz-user-select: none, draggable=\"false\" attribute or\n      // user-drag: none didn't help.\n      return false;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.undelegateEvents();\n      this.undelegateDocumentEvents();\n      this.restore();\n\n      this.restore = function () {};\n    }\n  }]);\n\n  return GraphView;\n}(View);\n\n__decorate([View.dispose()], GraphView.prototype, \"dispose\", null);\n\n(function (GraphView) {\n  var prefixCls = \"\".concat(Config.prefixCls, \"-graph\");\n  GraphView.markup = [{\n    ns: Dom.ns.xhtml,\n    tagName: 'div',\n    selector: 'background',\n    className: \"\".concat(prefixCls, \"-background\")\n  }, {\n    ns: Dom.ns.xhtml,\n    tagName: 'div',\n    selector: 'grid',\n    className: \"\".concat(prefixCls, \"-grid\")\n  }, {\n    ns: Dom.ns.svg,\n    tagName: 'svg',\n    selector: 'svg',\n    className: \"\".concat(prefixCls, \"-svg\"),\n    attrs: {\n      width: '100%',\n      height: '100%',\n      'xmlns:xlink': Dom.ns.xlink\n    },\n    children: [{\n      tagName: 'defs',\n      selector: 'defs'\n    }, {\n      tagName: 'g',\n      selector: 'viewport',\n      className: \"\".concat(prefixCls, \"-svg-viewport\"),\n      children: [{\n        tagName: 'g',\n        selector: 'primer',\n        className: \"\".concat(prefixCls, \"-svg-primer\")\n      }, {\n        tagName: 'g',\n        selector: 'stage',\n        className: \"\".concat(prefixCls, \"-svg-stage\")\n      }, {\n        tagName: 'g',\n        selector: 'decorator',\n        className: \"\".concat(prefixCls, \"-svg-decorator\")\n      }, {\n        tagName: 'g',\n        selector: 'overlay',\n        className: \"\".concat(prefixCls, \"-svg-overlay\")\n      }]\n    }]\n  }];\n\n  function snapshoot(elem) {\n    var cloned = elem.cloneNode();\n    elem.childNodes.forEach(function (child) {\n      return cloned.appendChild(child);\n    });\n    return function () {\n      // remove all children\n      Dom.empty(elem); // remove all attributes\n\n      while (elem.attributes.length > 0) {\n        elem.removeAttribute(elem.attributes[0].name);\n      } // restore attributes\n\n\n      for (var i = 0, l = cloned.attributes.length; i < l; i += 1) {\n        var attr = cloned.attributes[i];\n        elem.setAttribute(attr.name, attr.value);\n      } // restore children\n\n\n      cloned.childNodes.forEach(function (child) {\n        return elem.appendChild(child);\n      });\n    };\n  }\n\n  GraphView.snapshoot = snapshoot;\n})(GraphView || (GraphView = {}));\n\n(function (GraphView) {\n  var _GraphView$events;\n\n  var prefixCls = Config.prefixCls;\n  GraphView.events = (_GraphView$events = {\n    dblclick: 'onDblClick',\n    contextmenu: 'onContextMenu',\n    touchstart: 'onMouseDown',\n    mousedown: 'onMouseDown',\n    mouseover: 'onMouseOver',\n    mouseout: 'onMouseOut',\n    mouseenter: 'onMouseEnter',\n    mouseleave: 'onMouseLeave',\n    mousewheel: 'onMouseWheel',\n    DOMMouseScroll: 'onMouseWheel'\n  }, _defineProperty(_GraphView$events, \"mouseenter  .\".concat(prefixCls, \"-cell\"), 'onMouseEnter'), _defineProperty(_GraphView$events, \"mouseleave  .\".concat(prefixCls, \"-cell\"), 'onMouseLeave'), _defineProperty(_GraphView$events, \"mouseenter  .\".concat(prefixCls, \"-cell-tools\"), 'onMouseEnter'), _defineProperty(_GraphView$events, \"mouseleave  .\".concat(prefixCls, \"-cell-tools\"), 'onMouseLeave'), _defineProperty(_GraphView$events, \"mousedown   .\".concat(prefixCls, \"-cell [event]\"), 'onCustomEvent'), _defineProperty(_GraphView$events, \"touchstart  .\".concat(prefixCls, \"-cell [event]\"), 'onCustomEvent'), _defineProperty(_GraphView$events, \"mousedown   .\".concat(prefixCls, \"-cell [data-event]\"), 'onCustomEvent'), _defineProperty(_GraphView$events, \"touchstart  .\".concat(prefixCls, \"-cell [data-event]\"), 'onCustomEvent'), _defineProperty(_GraphView$events, \"dblclick    .\".concat(prefixCls, \"-cell [magnet]\"), 'onMagnetDblClick'), _defineProperty(_GraphView$events, \"contextmenu .\".concat(prefixCls, \"-cell [magnet]\"), 'onMagnetContextMenu'), _defineProperty(_GraphView$events, \"mousedown   .\".concat(prefixCls, \"-cell [magnet]\"), 'onMagnetMouseDown'), _defineProperty(_GraphView$events, \"touchstart  .\".concat(prefixCls, \"-cell [magnet]\"), 'onMagnetMouseDown'), _defineProperty(_GraphView$events, \"dblclick    .\".concat(prefixCls, \"-cell [data-magnet]\"), 'onMagnetDblClick'), _defineProperty(_GraphView$events, \"contextmenu .\".concat(prefixCls, \"-cell [data-magnet]\"), 'onMagnetContextMenu'), _defineProperty(_GraphView$events, \"mousedown   .\".concat(prefixCls, \"-cell [data-magnet]\"), 'onMagnetMouseDown'), _defineProperty(_GraphView$events, \"touchstart  .\".concat(prefixCls, \"-cell [data-magnet]\"), 'onMagnetMouseDown'), _defineProperty(_GraphView$events, \"dragstart   .\".concat(prefixCls, \"-cell image\"), 'onImageDragStart'), _defineProperty(_GraphView$events, \"mousedown   .\".concat(prefixCls, \"-edge .\").concat(prefixCls, \"-edge-label\"), 'onLabelMouseDown'), _defineProperty(_GraphView$events, \"touchstart  .\".concat(prefixCls, \"-edge .\").concat(prefixCls, \"-edge-label\"), 'onLabelMouseDown'), _GraphView$events);\n  GraphView.documentEvents = {\n    mousemove: 'onMouseMove',\n    touchmove: 'onMouseMove',\n    mouseup: 'onMouseUp',\n    touchend: 'onMouseUp',\n    touchcancel: 'onMouseUp'\n  };\n})(GraphView || (GraphView = {}));","map":{"version":3,"sources":["../../src/graph/view.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,MAAP,MAAmB,QAAnB;AACA,SAAS,GAAT,EAAc,WAAd,QAAiC,SAAjC;AACA,SAAS,IAAT,QAAqB,UAArB;AACA,SAAS,MAAT,QAAuB,WAAvB;AACA,SAAS,IAAT,EAAe,MAAf,QAAuC,SAAvC;AAGA,WAAa,SAAb;AAAA;;AAAA;;AAsBE,qBAA+B,KAA/B,EAA2C;AAAA;;AAAA;;AACzC;AAD6B,UAAA,KAAA,GAAA,KAAA;;AAG7B,gCAAgC,MAAM,CAAC,eAAP,CAAuB,SAAS,CAAC,MAAjC,CAAhC;AAAA,QAAQ,SAAR,yBAAQ,SAAR;AAAA,QAAmB,QAAnB,yBAAmB,QAAnB;;AACA,UAAK,UAAL,GAAkB,SAAS,CAAC,UAA5B;AACA,UAAK,IAAL,GAAY,SAAS,CAAC,IAAtB;AACA,UAAK,GAAL,GAAW,SAAS,CAAC,GAArB;AACA,UAAK,IAAL,GAAY,SAAS,CAAC,IAAtB;AACA,UAAK,QAAL,GAAgB,SAAS,CAAC,QAA1B;AACA,UAAK,MAAL,GAAc,SAAS,CAAC,MAAxB;AACA,UAAK,KAAL,GAAa,SAAS,CAAC,KAAvB;AACA,UAAK,SAAL,GAAiB,SAAS,CAAC,SAA3B;AACA,UAAK,OAAL,GAAe,SAAS,CAAC,OAAzB;AACA,UAAK,SAAL,GAAiB,MAAK,OAAL,CAAa,SAA9B;AACA,UAAK,OAAL,GAAe,SAAS,CAAC,SAAV,CAAoB,MAAK,SAAzB,CAAf;;AAEA,UAAK,CAAL,CAAO,MAAK,SAAZ,EACG,QADH,CACY,MAAK,eAAL,CAAqB,OAArB,CADZ,EAEG,MAFH,CAEU,QAFV;;AAIA,UAAK,cAAL;;AApByC;AAqB1C;;AA3CH;AAAA;AAAA,SAcE,eAAmB;AACjB,aAAO,KAAK,KAAL,CAAW,KAAlB;AACD;AAhBH;AAAA;AAAA,SAkBE,eAAqB;AACnB,aAAO,KAAK,KAAL,CAAW,OAAlB;AACD;AApBH;AAAA;AAAA,WA6CE,0BAAc;AACZ,UAAM,IAAI,GAAG,KAAK,WAAlB;;AACA,oFAAqB,IAAI,CAAC,MAA1B;;AACA,aAAO,IAAP;AACD;AAED;;;AAGG;;AAtDL;AAAA;AAAA,WAuDE,eAAM,CAAN,EAAgC,IAAhC,EAAsD;AACpD;AACA,UAAI,CAAC,CAAC,IAAF,KAAW,WAAX,IAA0B,CAAC,CAAC,MAAF,KAAa,CAA3C,EAA8C;AAC5C,eAAO,IAAP;AACD;;AAED,UAAI,KAAK,OAAL,CAAa,KAAb,IAAsB,KAAK,OAAL,CAAa,KAAb,CAAmB,CAAnB,EAAsB,IAAtB,CAA1B,EAAuD;AACrD,eAAO,IAAP;AACD;;AAED,UAAI,CAAC,CAAC,IAAF,IAAU,CAAC,CAAC,IAAF,CAAO,OAAP,KAAmB,SAAjC,EAA4C;AAC1C,eAAO,CAAC,CAAC,IAAF,CAAO,OAAd;AACD;;AAED,UAAI,IAAI,IAAI,IAAI,CAAC,IAAb,IAAqB,IAAI,CAAC,MAAL,CAAY,IAAI,CAAC,IAAjB,CAAzB,EAAiD;AAC/C,eAAO,KAAP;AACD;;AAED,UACE,KAAK,GAAL,KAAa,CAAC,CAAC,MAAf,IACA,KAAK,SAAL,KAAmB,CAAC,CAAC,MADrB,IAEA,MAAM,CAAC,QAAP,CAAgB,KAAK,GAArB,EAA0B,CAAC,CAAC,MAA5B,CAHF,EAIE;AACA,eAAO,KAAP;AACD;;AAED,aAAO,IAAP;AACD;AAlFH;AAAA;AAAA,WAoFY,kBAAS,IAAT,EAAsB;AAC9B,aAAO,KAAK,KAAL,CAAW,QAAX,CAAoB,cAApB,CAAmC,IAAnC,CAAP;AACD;AAtFH;AAAA;AAAA,WAwFY,oBAAW,GAAX,EAAuC;AAC/C,UAAI,KAAK,OAAL,CAAa,sBAAjB,EAAyC;AACvC,QAAA,GAAG,CAAC,cAAJ;AACD;;AAED,UAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAV;AACA,UAAM,IAAI,GAAG,KAAK,QAAL,CAAc,CAAC,CAAC,MAAhB,CAAb;;AAEA,UAAI,KAAK,KAAL,CAAW,CAAX,EAAc,IAAd,CAAJ,EAAyB;AACvB;AACD;;AAED,UAAM,UAAU,GAAG,KAAK,KAAL,CAAW,UAAX,CAAsB,CAAC,CAAC,OAAxB,EAAiC,CAAC,CAAC,OAAnC,CAAnB;;AAEA,UAAI,IAAJ,EAAU;AACR,QAAA,IAAI,CAAC,UAAL,CAAgB,CAAhB,EAAmB,UAAU,CAAC,CAA9B,EAAiC,UAAU,CAAC,CAA5C;AACD,OAFD,MAEO;AACL,aAAK,KAAL,CAAW,OAAX,CAAmB,gBAAnB,EAAqC;AACnC,UAAA,CAAC,EAAD,CADmC;AAEnC,UAAA,CAAC,EAAE,UAAU,CAAC,CAFqB;AAGnC,UAAA,CAAC,EAAE,UAAU,CAAC;AAHqB,SAArC;AAKD;AACF;AA/GH;AAAA;AAAA,WAiHY,iBAAQ,GAAR,EAA8B;AACtC,UAAI,KAAK,kBAAL,CAAwB,GAAxB,KAAgC,KAAK,OAAL,CAAa,cAAjD,EAAiE;AAC/D,YAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAV;AACA,YAAM,IAAI,GAAG,KAAK,QAAL,CAAc,CAAC,CAAC,MAAhB,CAAb;;AACA,YAAI,KAAK,KAAL,CAAW,CAAX,EAAc,IAAd,CAAJ,EAAyB;AACvB;AACD;;AAED,YAAM,UAAU,GAAG,KAAK,KAAL,CAAW,UAAX,CAAsB,CAAC,CAAC,OAAxB,EAAiC,CAAC,CAAC,OAAnC,CAAnB;;AACA,YAAI,IAAJ,EAAU;AACR,UAAA,IAAI,CAAC,OAAL,CAAa,CAAb,EAAgB,UAAU,CAAC,CAA3B,EAA8B,UAAU,CAAC,CAAzC;AACD,SAFD,MAEO;AACL,eAAK,KAAL,CAAW,OAAX,CAAmB,aAAnB,EAAkC;AAChC,YAAA,CAAC,EAAD,CADgC;AAEhC,YAAA,CAAC,EAAE,UAAU,CAAC,CAFkB;AAGhC,YAAA,CAAC,EAAE,UAAU,CAAC;AAHkB,WAAlC;AAKD;AACF;AACF;AApIH;AAAA;AAAA,WAsIY,uBAAc,GAAd,EAA0C;AAClD,UAAI,KAAK,OAAL,CAAa,yBAAjB,EAA4C;AAC1C,QAAA,GAAG,CAAC,cAAJ;AACD;;AAED,UAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAV;AACA,UAAM,IAAI,GAAG,KAAK,QAAL,CAAc,CAAC,CAAC,MAAhB,CAAb;;AACA,UAAI,KAAK,KAAL,CAAW,CAAX,EAAc,IAAd,CAAJ,EAAyB;AACvB;AACD;;AAED,UAAM,UAAU,GAAG,KAAK,KAAL,CAAW,UAAX,CAAsB,CAAC,CAAC,OAAxB,EAAiC,CAAC,CAAC,OAAnC,CAAnB;;AAEA,UAAI,IAAJ,EAAU;AACR,QAAA,IAAI,CAAC,aAAL,CAAmB,CAAnB,EAAsB,UAAU,CAAC,CAAjC,EAAoC,UAAU,CAAC,CAA/C;AACD,OAFD,MAEO;AACL,aAAK,KAAL,CAAW,OAAX,CAAmB,mBAAnB,EAAwC;AACtC,UAAA,CAAC,EAAD,CADsC;AAEtC,UAAA,CAAC,EAAE,UAAU,CAAC,CAFwB;AAGtC,UAAA,CAAC,EAAE,UAAU,CAAC;AAHwB,SAAxC;AAKD;AACF;AA5JH;AAAA;AAAA,WA8JE,4BAAmB,CAAnB,EAA6C,IAA7C,EAAkE;AAChE,UAAI,CAAC,CAAC,IAAF,IAAU,IAAd,EAAoB;AAClB,QAAA,CAAC,CAAC,IAAF,GAAS,EAAT;AACD;;AACD,WAAK,YAAL,CAAoC,CAApC,EAAuC;AACrC,QAAA,WAAW,EAAE,IAAI,IAAI,IADgB;AAErC,QAAA,eAAe,EAAE,CAFoB;AAGrC,QAAA,aAAa,EAAE;AACb,UAAA,CAAC,EAAE,CAAC,CAAC,OADQ;AAEb,UAAA,CAAC,EAAE,CAAC,CAAC;AAFQ;AAHsB,OAAvC;AAQA,UAAM,IAAI,GAAG,KAAK,WAAlB;AACA,WAAK,sBAAL,CAA4B,IAAI,CAAC,cAAjC,EAAiD,CAAC,CAAC,IAAnD;AACA,WAAK,gBAAL;AACD;AA7KH;AAAA;AAAA,WA+KE,4BAAmB,CAAnB,EAA2C;AACzC,UAAM,IAAI,GAAG,KAAK,YAAL,CAAoC,CAApC,CAAb;AACA,aAAO,IAAI,CAAC,eAAL,IAAwB,CAA/B;AACD;AAlLH;AAAA;AAAA,WAoLY,qBAAY,GAAZ,EAAsC;AAC9C,UAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAV;AACA,UAAM,IAAI,GAAG,KAAK,QAAL,CAAc,CAAC,CAAC,MAAhB,CAAb;;AACA,UAAI,KAAK,KAAL,CAAW,CAAX,EAAc,IAAd,CAAJ,EAAyB;AACvB;AACD;;AAED,UAAI,KAAK,OAAL,CAAa,uBAAjB,EAA0C;AACxC,QAAA,CAAC,CAAC,cAAF;AACD;;AAED,UAAM,UAAU,GAAG,KAAK,KAAL,CAAW,UAAX,CAAsB,CAAC,CAAC,OAAxB,EAAiC,CAAC,CAAC,OAAnC,CAAnB;;AAEA,UAAI,IAAJ,EAAU;AACR,QAAA,IAAI,CAAC,WAAL,CAAiB,CAAjB,EAAoB,UAAU,CAAC,CAA/B,EAAkC,UAAU,CAAC,CAA7C;AACD,OAFD,MAEO;AACL,YAAI,KAAK,OAAL,CAAa,yBAAjB,EAA4C;AAC1C,UAAA,CAAC,CAAC,cAAF;AACD;;AAED,aAAK,KAAL,CAAW,OAAX,CAAmB,iBAAnB,EAAsC;AACpC,UAAA,CAAC,EAAD,CADoC;AAEpC,UAAA,CAAC,EAAE,UAAU,CAAC,CAFsB;AAGpC,UAAA,CAAC,EAAE,UAAU,CAAC;AAHsB,SAAtC;AAKD;;AAED,WAAK,kBAAL,CAAwB,CAAxB,EAA2B,IAA3B;AACD;AAhNH;AAAA;AAAA,WAkNY,qBAAY,GAAZ,EAAsC;AAC9C,UAAM,IAAI,GAAG,KAAK,YAAL,CAAoC,GAApC,CAAb;AAEA,UAAM,aAAa,GAAG,IAAI,CAAC,aAA3B;;AACA,UACE,aAAa,IACb,aAAa,CAAC,CAAd,KAAoB,GAAG,CAAC,OADxB,IAEA,aAAa,CAAC,CAAd,KAAoB,GAAG,CAAC,OAH1B,EAIE;AACA;AACD;;AAED,UAAI,IAAI,CAAC,eAAL,IAAwB,IAA5B,EAAkC;AAChC,QAAA,IAAI,CAAC,eAAL,GAAuB,CAAvB;AACD;;AACD,MAAA,IAAI,CAAC,eAAL,IAAwB,CAAxB;AACA,UAAM,eAAe,GAAG,IAAI,CAAC,eAA7B;;AACA,UAAI,eAAe,IAAI,KAAK,OAAL,CAAa,aAApC,EAAmD;AACjD;AACD;;AAED,UAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAV;AACA,UAAM,UAAU,GAAG,KAAK,KAAL,CAAW,UAAX,CAAsB,CAAC,CAAC,OAAxB,EAAiC,CAAC,CAAC,OAAnC,CAAnB;AAEA,UAAM,IAAI,GAAG,IAAI,CAAC,WAAlB;;AACA,UAAI,IAAJ,EAAU;AACR,QAAA,IAAI,CAAC,WAAL,CAAiB,CAAjB,EAAoB,UAAU,CAAC,CAA/B,EAAkC,UAAU,CAAC,CAA7C;AACD,OAFD,MAEO;AACL,aAAK,KAAL,CAAW,OAAX,CAAmB,iBAAnB,EAAsC;AACpC,UAAA,CAAC,EAAD,CADoC;AAEpC,UAAA,CAAC,EAAE,UAAU,CAAC,CAFsB;AAGpC,UAAA,CAAC,EAAE,UAAU,CAAC;AAHsB,SAAtC;AAKD;;AAED,WAAK,YAAL,CAAkB,CAAlB,EAAqB,IAArB;AACD;AAtPH;AAAA;AAAA,WAwPY,mBAAU,CAAV,EAAgC;AACxC,WAAK,wBAAL;AAEA,UAAM,UAAU,GAAG,KAAK,cAAL,CAAoB,CAApB,CAAnB;AACA,UAAM,UAAU,GAAG,KAAK,KAAL,CAAW,UAAX,CACjB,UAAU,CAAC,OADM,EAEjB,UAAU,CAAC,OAFM,CAAnB;AAIA,UAAM,IAAI,GAAG,KAAK,YAAL,CAAoC,CAApC,CAAb;AACA,UAAM,IAAI,GAAG,IAAI,CAAC,WAAlB;;AACA,UAAI,IAAJ,EAAU;AACR,QAAA,IAAI,CAAC,SAAL,CAAe,UAAf,EAA2B,UAAU,CAAC,CAAtC,EAAyC,UAAU,CAAC,CAApD;AACD,OAFD,MAEO;AACL,aAAK,KAAL,CAAW,OAAX,CAAmB,eAAnB,EAAoC;AAClC,UAAA,CAAC,EAAE,UAD+B;AAElC,UAAA,CAAC,EAAE,UAAU,CAAC,CAFoB;AAGlC,UAAA,CAAC,EAAE,UAAU,CAAC;AAHoB,SAApC;AAKD;;AAED,UAAI,CAAC,CAAC,CAAC,oBAAF,EAAL,EAA+B;AAC7B,aAAK,OAAL,CACE,MAAM,CAAC,KAAP,CAAa,CAAb,EAAuB;AACrB,UAAA,IAAI,EAAE,OADe;AAErB,UAAA,IAAI,EAAE,CAAC,CAAC;AAFa,SAAvB,CADF;AAMD;;AAED,MAAA,CAAC,CAAC,wBAAF;AAEA,WAAK,cAAL;AACD;AAxRH;AAAA;AAAA,WA0RY,qBAAY,GAAZ,EAAsC;AAC9C,UAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAV;AACA,UAAM,IAAI,GAAG,KAAK,QAAL,CAAc,CAAC,CAAC,MAAhB,CAAb;;AACA,UAAI,KAAK,KAAL,CAAW,CAAX,EAAc,IAAd,CAAJ,EAAyB;AACvB;AACD;;AAED,UAAI,IAAJ,EAAU;AACR,QAAA,IAAI,CAAC,WAAL,CAAiB,CAAjB;AACD,OAFD,MAEO;AACL;AACA,YAAI,KAAK,SAAL,KAAmB,CAAC,CAAC,MAAzB,EAAiC;AAC/B;AACD;;AACD,aAAK,KAAL,CAAW,OAAX,CAAmB,iBAAnB,EAAsC;AAAE,UAAA,CAAC,EAAD;AAAF,SAAtC;AACD;AACF;AA1SH;AAAA;AAAA,WA4SY,oBAAW,GAAX,EAAoC;AAC5C,UAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAV;AACA,UAAM,IAAI,GAAG,KAAK,QAAL,CAAc,CAAC,CAAC,MAAhB,CAAb;;AAEA,UAAI,KAAK,KAAL,CAAW,CAAX,EAAc,IAAd,CAAJ,EAAyB;AACvB;AACD;;AAED,UAAI,IAAJ,EAAU;AACR,QAAA,IAAI,CAAC,UAAL,CAAgB,CAAhB;AACD,OAFD,MAEO;AACL,YAAI,KAAK,SAAL,KAAmB,CAAC,CAAC,MAAzB,EAAiC;AAC/B;AACD;;AACD,aAAK,KAAL,CAAW,OAAX,CAAmB,gBAAnB,EAAqC;AAAE,UAAA,CAAC,EAAD;AAAF,SAArC;AACD;AACF;AA5TH;AAAA;AAAA,WA8TY,sBAAa,GAAb,EAAwC;AAChD,UAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAV;AACA,UAAM,IAAI,GAAG,KAAK,QAAL,CAAc,CAAC,CAAC,MAAhB,CAAb;;AACA,UAAI,KAAK,KAAL,CAAW,CAAX,EAAc,IAAd,CAAJ,EAAyB;AACvB;AACD;;AAED,UAAM,WAAW,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,cAApB,CAClB,CAAC,CAAC,aADgB,CAApB;;AAGA,UAAI,IAAJ,EAAU;AACR,YAAI,WAAW,KAAK,IAApB,EAA0B;AACxB;AACA;AACD;;AACD,QAAA,IAAI,CAAC,YAAL,CAAkB,CAAlB;AACD,OAND,MAMO;AACL,YAAI,WAAJ,EAAiB;AACf;AACD;;AACD,aAAK,KAAL,CAAW,OAAX,CAAmB,kBAAnB,EAAuC;AAAE,UAAA,CAAC,EAAD;AAAF,SAAvC;AACD;AACF;AApVH;AAAA;AAAA,WAsVY,sBAAa,GAAb,EAAwC;AAChD,UAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAV;AACA,UAAM,IAAI,GAAG,KAAK,QAAL,CAAc,CAAC,CAAC,MAAhB,CAAb;;AACA,UAAI,KAAK,KAAL,CAAW,CAAX,EAAc,IAAd,CAAJ,EAAyB;AACvB;AACD;;AAED,UAAM,WAAW,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,cAApB,CAClB,CAAC,CAAC,aADgB,CAApB;;AAIA,UAAI,IAAJ,EAAU;AACR,YAAI,WAAW,KAAK,IAApB,EAA0B;AACxB;AACA;AACD;;AACD,QAAA,IAAI,CAAC,YAAL,CAAkB,CAAlB;AACD,OAND,MAMO;AACL,YAAI,WAAJ,EAAiB;AACf;AACD;;AACD,aAAK,KAAL,CAAW,OAAX,CAAmB,kBAAnB,EAAuC;AAAE,UAAA,CAAC,EAAD;AAAF,SAAvC;AACD;AACF;AA7WH;AAAA;AAAA,WA+WY,sBAAa,GAAb,EAAuC;AAC/C,UAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAV;AACA,UAAM,IAAI,GAAG,KAAK,QAAL,CAAc,CAAC,CAAC,MAAhB,CAAb;;AACA,UAAI,KAAK,KAAL,CAAW,CAAX,EAAc,IAAd,CAAJ,EAAyB;AACvB;AACD;;AAED,UAAM,aAAa,GAAG,CAAC,CAAC,aAAxB;AACA,UAAM,UAAU,GAAG,KAAK,KAAL,CAAW,UAAX,CACjB,aAAa,CAAC,OADG,EAEjB,aAAa,CAAC,OAFG,CAAnB;AAIA,UAAM,KAAK,GAAG,IAAI,CAAC,GAAL,CACZ,CAAC,CADW,EAEZ,IAAI,CAAC,GAAL,CAAS,CAAT,EAAa,aAAqB,CAAC,UAAtB,IAAoC,CAAC,aAAa,CAAC,MAAhE,CAFY,CAAd;;AAKA,UAAI,IAAJ,EAAU;AACR,QAAA,IAAI,CAAC,YAAL,CAAkB,CAAlB,EAAqB,UAAU,CAAC,CAAhC,EAAmC,UAAU,CAAC,CAA9C,EAAiD,KAAjD;AACD,OAFD,MAEO;AACL,aAAK,KAAL,CAAW,OAAX,CAAmB,kBAAnB,EAAuC;AACrC,UAAA,CAAC,EAAD,CADqC;AAErC,UAAA,KAAK,EAAL,KAFqC;AAGrC,UAAA,CAAC,EAAE,UAAU,CAAC,CAHuB;AAIrC,UAAA,CAAC,EAAE,UAAU,CAAC;AAJuB,SAAvC;AAMD;AACF;AA1YH;AAAA;AAAA,WA4YY,uBAAc,GAAd,EAAwC;AAChD,UAAM,IAAI,GAAG,GAAG,CAAC,aAAjB;AACA,UAAM,KAAK,GAAG,IAAI,CAAC,YAAL,CAAkB,OAAlB,KAA8B,IAAI,CAAC,YAAL,CAAkB,YAAlB,CAA5C;;AACA,UAAI,KAAJ,EAAW;AACT,YAAM,IAAI,GAAG,KAAK,QAAL,CAAc,IAAd,CAAb;;AACA,YAAI,IAAJ,EAAU;AACR,cAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAV;;AACA,cAAI,KAAK,KAAL,CAAW,CAAX,EAAc,IAAd,CAAJ,EAAyB;AACvB;AACD;;AAED,cAAM,UAAU,GAAG,KAAK,KAAL,CAAW,UAAX,CACjB,CAAC,CAAC,OADe,EAEjB,CAAC,CAAC,OAFe,CAAnB;AAIA,UAAA,IAAI,CAAC,aAAL,CAAmB,CAAnB,EAAsB,KAAtB,EAA6B,UAAU,CAAC,CAAxC,EAA2C,UAAU,CAAC,CAAtD;AACD;AACF;AACF;AA9ZH;AAAA;AAAA,WAgaY,2BACR,GADQ,EAER,OAFQ,EASC;AAET,UAAM,UAAU,GAAG,GAAG,CAAC,aAAvB;AACA,UAAM,WAAW,GAAG,UAAU,CAAC,YAAX,CAAwB,QAAxB,CAApB;;AACA,UAAI,WAAW,IAAI,WAAW,CAAC,WAAZ,OAA8B,OAAjD,EAA0D;AACxD,YAAM,IAAI,GAAG,KAAK,QAAL,CAAc,UAAd,CAAb;;AACA,YAAI,IAAJ,EAAU;AACR,cAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAV;;AACA,cAAI,KAAK,KAAL,CAAW,CAAX,EAAc,IAAd,CAAJ,EAAyB;AACvB;AACD;;AACD,cAAM,UAAU,GAAG,KAAK,KAAL,CAAW,UAAX,CACjB,CAAC,CAAC,OADe,EAEjB,CAAC,CAAC,OAFe,CAAnB;AAIA,UAAA,WAAW,CAAC,IAAZ,CACE,OADF,EAEE,KAAK,KAFP,EAGE,IAHF,EAIE,CAJF,EAKE,UALF,EAME,UAAU,CAAC,CANb,EAOE,UAAU,CAAC,CAPb;AASD;AACF;AACF;AAncH;AAAA;AAAA,WAqcY,2BAAkB,CAAlB,EAA0C;AAClD,WAAK,iBAAL,CAAuB,CAAvB,EAA0B,UAAC,IAAD,EAAO,CAAP,EAAU,MAAV,EAAkB,CAAlB,EAAqB,CAArB,EAA0B;AAClD,QAAA,IAAI,CAAC,iBAAL,CAAuB,CAAvB,EAA0B,MAA1B,EAAkC,CAAlC,EAAqC,CAArC;AACD,OAFD;AAGD;AAzcH;AAAA;AAAA,WA2cY,0BAAiB,CAAjB,EAA2C;AACnD,WAAK,iBAAL,CAAuB,CAAvB,EAA0B,UAAC,IAAD,EAAO,CAAP,EAAU,MAAV,EAAkB,CAAlB,EAAqB,CAArB,EAA0B;AAClD,QAAA,IAAI,CAAC,gBAAL,CAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC,EAAoC,CAApC;AACD,OAFD;AAGD;AA/cH;AAAA;AAAA,WAidY,6BAAoB,CAApB,EAA8C;AACtD,UAAI,KAAK,OAAL,CAAa,yBAAjB,EAA4C;AAC1C,QAAA,CAAC,CAAC,cAAF;AACD;;AACD,WAAK,iBAAL,CAAuB,CAAvB,EAA0B,UAAC,IAAD,EAAO,CAAP,EAAU,MAAV,EAAkB,CAAlB,EAAqB,CAArB,EAA0B;AAClD,QAAA,IAAI,CAAC,mBAAL,CAAyB,CAAzB,EAA4B,MAA5B,EAAoC,CAApC,EAAuC,CAAvC;AACD,OAFD;AAGD;AAxdH;AAAA;AAAA,WA0dY,0BAAiB,GAAjB,EAA2C;AACnD,UAAM,SAAS,GAAG,GAAG,CAAC,aAAtB;AACA,UAAM,IAAI,GAAG,KAAK,QAAL,CAAc,SAAd,CAAb;;AACA,UAAI,IAAJ,EAAU;AACR,YAAM,CAAC,GAAG,KAAK,cAAL,CAAoB,GAApB,CAAV;;AACA,YAAI,KAAK,KAAL,CAAW,CAAX,EAAc,IAAd,CAAJ,EAAyB;AACvB;AACD;;AAED,YAAM,UAAU,GAAG,KAAK,KAAL,CAAW,UAAX,CAAsB,CAAC,CAAC,OAAxB,EAAiC,CAAC,CAAC,OAAnC,CAAnB;AACA,QAAA,IAAI,CAAC,gBAAL,CAAsB,CAAtB,EAAyB,UAAU,CAAC,CAApC,EAAuC,UAAU,CAAC,CAAlD;AACD;AACF;AAteH;AAAA;AAAA,WAweY,4BAAgB;AACxB;AACA;AACA;AACA,aAAO,KAAP;AACD;AA7eH;AAAA;AAAA,WAgfE,mBAAO;AACL,WAAK,gBAAL;AACA,WAAK,wBAAL;AACA,WAAK,OAAL;;AACA,WAAK,OAAL,GAAe,YAAK,CAAG,CAAvB;AACD;AArfH;;AAAA;AAAA,EAA+B,IAA/B;;AAgfE,UAAA,CAAA,CADC,IAAI,CAAC,OAAL,EACD,CAAA,E,mBAAA,E,SAAA,EAKC,IALD,CAAA;;AAYF,CAAA,UAAiB,SAAjB,EAA0B;AACxB,MAAM,SAAS,aAAM,MAAM,CAAC,SAAb,WAAf;AAEa,EAAA,SAAA,CAAA,MAAA,GAA8B,CACzC;AACE,IAAA,EAAE,EAAE,GAAG,CAAC,EAAJ,CAAO,KADb;AAEE,IAAA,OAAO,EAAE,KAFX;AAGE,IAAA,QAAQ,EAAE,YAHZ;AAIE,IAAA,SAAS,YAAK,SAAL;AAJX,GADyC,EAOzC;AACE,IAAA,EAAE,EAAE,GAAG,CAAC,EAAJ,CAAO,KADb;AAEE,IAAA,OAAO,EAAE,KAFX;AAGE,IAAA,QAAQ,EAAE,MAHZ;AAIE,IAAA,SAAS,YAAK,SAAL;AAJX,GAPyC,EAazC;AACE,IAAA,EAAE,EAAE,GAAG,CAAC,EAAJ,CAAO,GADb;AAEE,IAAA,OAAO,EAAE,KAFX;AAGE,IAAA,QAAQ,EAAE,KAHZ;AAIE,IAAA,SAAS,YAAK,SAAL,SAJX;AAKE,IAAA,KAAK,EAAE;AACL,MAAA,KAAK,EAAE,MADF;AAEL,MAAA,MAAM,EAAE,MAFH;AAGL,qBAAe,GAAG,CAAC,EAAJ,CAAO;AAHjB,KALT;AAUE,IAAA,QAAQ,EAAE,CACR;AACE,MAAA,OAAO,EAAE,MADX;AAEE,MAAA,QAAQ,EAAE;AAFZ,KADQ,EAKR;AACE,MAAA,OAAO,EAAE,GADX;AAEE,MAAA,QAAQ,EAAE,UAFZ;AAGE,MAAA,SAAS,YAAK,SAAL,kBAHX;AAIE,MAAA,QAAQ,EAAE,CACR;AACE,QAAA,OAAO,EAAE,GADX;AAEE,QAAA,QAAQ,EAAE,QAFZ;AAGE,QAAA,SAAS,YAAK,SAAL;AAHX,OADQ,EAMR;AACE,QAAA,OAAO,EAAE,GADX;AAEE,QAAA,QAAQ,EAAE,OAFZ;AAGE,QAAA,SAAS,YAAK,SAAL;AAHX,OANQ,EAWR;AACE,QAAA,OAAO,EAAE,GADX;AAEE,QAAA,QAAQ,EAAE,WAFZ;AAGE,QAAA,SAAS,YAAK,SAAL;AAHX,OAXQ,EAgBR;AACE,QAAA,OAAO,EAAE,GADX;AAEE,QAAA,QAAQ,EAAE,SAFZ;AAGE,QAAA,SAAS,YAAK,SAAL;AAHX,OAhBQ;AAJZ,KALQ;AAVZ,GAbyC,CAA9B;;AA2Db,WAAgB,SAAhB,CAA0B,IAA1B,EAAuC;AACrC,QAAM,MAAM,GAAG,IAAI,CAAC,SAAL,EAAf;AACA,IAAA,IAAI,CAAC,UAAL,CAAgB,OAAhB,CAAwB,UAAC,KAAD;AAAA,aAAW,MAAM,CAAC,WAAP,CAAmB,KAAnB,CAAX;AAAA,KAAxB;AAEA,WAAO,YAAK;AACV;AACA,MAAA,GAAG,CAAC,KAAJ,CAAU,IAAV,EAFU,CAIV;;AACA,aAAO,IAAI,CAAC,UAAL,CAAgB,MAAhB,GAAyB,CAAhC,EAAmC;AACjC,QAAA,IAAI,CAAC,eAAL,CAAqB,IAAI,CAAC,UAAL,CAAgB,CAAhB,EAAmB,IAAxC;AACD,OAPS,CASV;;;AACA,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,MAAM,CAAC,UAAP,CAAkB,MAAtC,EAA8C,CAAC,GAAG,CAAlD,EAAqD,CAAC,IAAI,CAA1D,EAA6D;AAC3D,YAAM,IAAI,GAAG,MAAM,CAAC,UAAP,CAAkB,CAAlB,CAAb;AACA,QAAA,IAAI,CAAC,YAAL,CAAkB,IAAI,CAAC,IAAvB,EAA6B,IAAI,CAAC,KAAlC;AACD,OAbS,CAeV;;;AACA,MAAA,MAAM,CAAC,UAAP,CAAkB,OAAlB,CAA0B,UAAC,KAAD;AAAA,eAAW,IAAI,CAAC,WAAL,CAAiB,KAAjB,CAAX;AAAA,OAA1B;AACD,KAjBD;AAkBD;;AAtBe,EAAA,SAAA,CAAA,SAAA,GAAS,SAAT;AAuBjB,CArFD,EAAiB,SAAS,KAAT,SAAS,GAAA,EAAA,CAA1B;;AAuFA,CAAA,UAAiB,SAAjB,EAA0B;AAAA;;AACxB,MAAM,SAAS,GAAG,MAAM,CAAC,SAAzB;AAEa,EAAA,SAAA,CAAA,MAAA;AACX,IAAA,QAAQ,EAAE,YADC;AAEX,IAAA,WAAW,EAAE,eAFF;AAGX,IAAA,UAAU,EAAE,aAHD;AAIX,IAAA,SAAS,EAAE,aAJA;AAKX,IAAA,SAAS,EAAE,aALA;AAMX,IAAA,QAAQ,EAAE,YANC;AAOX,IAAA,UAAU,EAAE,cAPD;AAQX,IAAA,UAAU,EAAE,cARD;AASX,IAAA,UAAU,EAAE,cATD;AAUX,IAAA,cAAc,EAAE;AAVL,+DAWM,SAXN,YAWyB,cAXzB,6DAYM,SAZN,YAYyB,cAZzB,6DAaM,SAbN,kBAa+B,cAb/B,6DAcM,SAdN,kBAc+B,cAd/B,6DAeM,SAfN,oBAeiC,eAfjC,6DAgBM,SAhBN,oBAgBiC,eAhBjC,6DAiBM,SAjBN,yBAiBsC,eAjBtC,6DAkBM,SAlBN,yBAkBsC,eAlBtC,6DAmBM,SAnBN,qBAmBkC,kBAnBlC,6DAoBM,SApBN,qBAoBkC,qBApBlC,6DAqBM,SArBN,qBAqBkC,mBArBlC,6DAsBM,SAtBN,qBAsBkC,mBAtBlC,6DAuBM,SAvBN,0BAuBuC,kBAvBvC,6DAwBM,SAxBN,0BAwBuC,qBAxBvC,6DAyBM,SAzBN,0BAyBuC,mBAzBvC,6DA0BM,SA1BN,0BA0BuC,mBA1BvC,6DA2BM,SA3BN,kBA2B+B,kBA3B/B,6DA4BM,SA5BN,oBA4ByB,SA5BzB,kBA6BT,kBA7BS,6DA8BM,SA9BN,oBA8ByB,SA9BzB,kBA+BT,kBA/BS;AAkCA,EAAA,SAAA,CAAA,cAAA,GAAiB;AAC5B,IAAA,SAAS,EAAE,aADiB;AAE5B,IAAA,SAAS,EAAE,aAFiB;AAG5B,IAAA,OAAO,EAAE,WAHmB;AAI5B,IAAA,QAAQ,EAAE,WAJkB;AAK5B,IAAA,WAAW,EAAE;AALe,GAAjB;AAOd,CA5CD,EAAiB,SAAS,KAAT,SAAS,GAAA,EAAA,CAA1B","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport JQuery from 'jquery';\nimport { Dom, FunctionExt } from '../util';\nimport { Cell } from '../model';\nimport { Config } from '../global';\nimport { View, Markup } from '../view';\nexport class GraphView extends View {\n    constructor(graph) {\n        super();\n        this.graph = graph;\n        const { selectors, fragment } = Markup.parseJSONMarkup(GraphView.markup);\n        this.background = selectors.background;\n        this.grid = selectors.grid;\n        this.svg = selectors.svg;\n        this.defs = selectors.defs;\n        this.viewport = selectors.viewport;\n        this.primer = selectors.primer;\n        this.stage = selectors.stage;\n        this.decorator = selectors.decorator;\n        this.overlay = selectors.overlay;\n        this.container = this.options.container;\n        this.restore = GraphView.snapshoot(this.container);\n        this.$(this.container)\n            .addClass(this.prefixClassName('graph'))\n            .append(fragment);\n        this.delegateEvents();\n    }\n    get model() {\n        return this.graph.model;\n    }\n    get options() {\n        return this.graph.options;\n    }\n    delegateEvents() {\n        const ctor = this.constructor;\n        super.delegateEvents(ctor.events);\n        return this;\n    }\n    /**\n     * Guard the specified event. If the event is not interesting, it\n     * returns `true`, otherwise returns `false`.\n     */\n    guard(e, view) {\n        // handled as `contextmenu` type\n        if (e.type === 'mousedown' && e.button === 2) {\n            return true;\n        }\n        if (this.options.guard && this.options.guard(e, view)) {\n            return true;\n        }\n        if (e.data && e.data.guarded !== undefined) {\n            return e.data.guarded;\n        }\n        if (view && view.cell && Cell.isCell(view.cell)) {\n            return false;\n        }\n        if (this.svg === e.target ||\n            this.container === e.target ||\n            JQuery.contains(this.svg, e.target)) {\n            return false;\n        }\n        return true;\n    }\n    findView(elem) {\n        return this.graph.renderer.findViewByElem(elem);\n    }\n    onDblClick(evt) {\n        if (this.options.preventDefaultDblClick) {\n            evt.preventDefault();\n        }\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        if (view) {\n            view.onDblClick(e, localPoint.x, localPoint.y);\n        }\n        else {\n            this.graph.trigger('blank:dblclick', {\n                e,\n                x: localPoint.x,\n                y: localPoint.y,\n            });\n        }\n    }\n    onClick(evt) {\n        if (this.getMouseMovedCount(evt) <= this.options.clickThreshold) {\n            const e = this.normalizeEvent(evt);\n            const view = this.findView(e.target);\n            if (this.guard(e, view)) {\n                return;\n            }\n            const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n            if (view) {\n                view.onClick(e, localPoint.x, localPoint.y);\n            }\n            else {\n                this.graph.trigger('blank:click', {\n                    e,\n                    x: localPoint.x,\n                    y: localPoint.y,\n                });\n            }\n        }\n    }\n    onContextMenu(evt) {\n        if (this.options.preventDefaultContextMenu) {\n            evt.preventDefault();\n        }\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        if (view) {\n            view.onContextMenu(e, localPoint.x, localPoint.y);\n        }\n        else {\n            this.graph.trigger('blank:contextmenu', {\n                e,\n                x: localPoint.x,\n                y: localPoint.y,\n            });\n        }\n    }\n    delegateDragEvents(e, view) {\n        if (e.data == null) {\n            e.data = {};\n        }\n        this.setEventData(e, {\n            currentView: view || null,\n            mouseMovedCount: 0,\n            startPosition: {\n                x: e.clientX,\n                y: e.clientY,\n            },\n        });\n        const ctor = this.constructor;\n        this.delegateDocumentEvents(ctor.documentEvents, e.data);\n        this.undelegateEvents();\n    }\n    getMouseMovedCount(e) {\n        const data = this.getEventData(e);\n        return data.mouseMovedCount || 0;\n    }\n    onMouseDown(evt) {\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        if (this.options.preventDefaultMouseDown) {\n            e.preventDefault();\n        }\n        const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        if (view) {\n            view.onMouseDown(e, localPoint.x, localPoint.y);\n        }\n        else {\n            if (this.options.preventDefaultBlankAction) {\n                e.preventDefault();\n            }\n            this.graph.trigger('blank:mousedown', {\n                e,\n                x: localPoint.x,\n                y: localPoint.y,\n            });\n        }\n        this.delegateDragEvents(e, view);\n    }\n    onMouseMove(evt) {\n        const data = this.getEventData(evt);\n        const startPosition = data.startPosition;\n        if (startPosition &&\n            startPosition.x === evt.clientX &&\n            startPosition.y === evt.clientY) {\n            return;\n        }\n        if (data.mouseMovedCount == null) {\n            data.mouseMovedCount = 0;\n        }\n        data.mouseMovedCount += 1;\n        const mouseMovedCount = data.mouseMovedCount;\n        if (mouseMovedCount <= this.options.moveThreshold) {\n            return;\n        }\n        const e = this.normalizeEvent(evt);\n        const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        const view = data.currentView;\n        if (view) {\n            view.onMouseMove(e, localPoint.x, localPoint.y);\n        }\n        else {\n            this.graph.trigger('blank:mousemove', {\n                e,\n                x: localPoint.x,\n                y: localPoint.y,\n            });\n        }\n        this.setEventData(e, data);\n    }\n    onMouseUp(e) {\n        this.undelegateDocumentEvents();\n        const normalized = this.normalizeEvent(e);\n        const localPoint = this.graph.snapToGrid(normalized.clientX, normalized.clientY);\n        const data = this.getEventData(e);\n        const view = data.currentView;\n        if (view) {\n            view.onMouseUp(normalized, localPoint.x, localPoint.y);\n        }\n        else {\n            this.graph.trigger('blank:mouseup', {\n                e: normalized,\n                x: localPoint.x,\n                y: localPoint.y,\n            });\n        }\n        if (!e.isPropagationStopped()) {\n            this.onClick(JQuery.Event(e, {\n                type: 'click',\n                data: e.data,\n            }));\n        }\n        e.stopImmediatePropagation();\n        this.delegateEvents();\n    }\n    onMouseOver(evt) {\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        if (view) {\n            view.onMouseOver(e);\n        }\n        else {\n            // prevent border of paper from triggering this\n            if (this.container === e.target) {\n                return;\n            }\n            this.graph.trigger('blank:mouseover', { e });\n        }\n    }\n    onMouseOut(evt) {\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        if (view) {\n            view.onMouseOut(e);\n        }\n        else {\n            if (this.container === e.target) {\n                return;\n            }\n            this.graph.trigger('blank:mouseout', { e });\n        }\n    }\n    onMouseEnter(evt) {\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        const relatedView = this.graph.renderer.findViewByElem(e.relatedTarget);\n        if (view) {\n            if (relatedView === view) {\n                // mouse moved from tool to view\n                return;\n            }\n            view.onMouseEnter(e);\n        }\n        else {\n            if (relatedView) {\n                return;\n            }\n            this.graph.trigger('graph:mouseenter', { e });\n        }\n    }\n    onMouseLeave(evt) {\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        const relatedView = this.graph.renderer.findViewByElem(e.relatedTarget);\n        if (view) {\n            if (relatedView === view) {\n                // mouse moved from view to tool\n                return;\n            }\n            view.onMouseLeave(e);\n        }\n        else {\n            if (relatedView) {\n                return;\n            }\n            this.graph.trigger('graph:mouseleave', { e });\n        }\n    }\n    onMouseWheel(evt) {\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        const originalEvent = e.originalEvent;\n        const localPoint = this.graph.snapToGrid(originalEvent.clientX, originalEvent.clientY);\n        const delta = Math.max(-1, Math.min(1, originalEvent.wheelDelta || -originalEvent.detail));\n        if (view) {\n            view.onMouseWheel(e, localPoint.x, localPoint.y, delta);\n        }\n        else {\n            this.graph.trigger('blank:mousewheel', {\n                e,\n                delta,\n                x: localPoint.x,\n                y: localPoint.y,\n            });\n        }\n    }\n    onCustomEvent(evt) {\n        const elem = evt.currentTarget;\n        const event = elem.getAttribute('event') || elem.getAttribute('data-event');\n        if (event) {\n            const view = this.findView(elem);\n            if (view) {\n                const e = this.normalizeEvent(evt);\n                if (this.guard(e, view)) {\n                    return;\n                }\n                const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n                view.onCustomEvent(e, event, localPoint.x, localPoint.y);\n            }\n        }\n    }\n    handleMagnetEvent(evt, handler) {\n        const magnetElem = evt.currentTarget;\n        const magnetValue = magnetElem.getAttribute('magnet');\n        if (magnetValue && magnetValue.toLowerCase() !== 'false') {\n            const view = this.findView(magnetElem);\n            if (view) {\n                const e = this.normalizeEvent(evt);\n                if (this.guard(e, view)) {\n                    return;\n                }\n                const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n                FunctionExt.call(handler, this.graph, view, e, magnetElem, localPoint.x, localPoint.y);\n            }\n        }\n    }\n    onMagnetMouseDown(e) {\n        this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n            view.onMagnetMouseDown(e, magnet, x, y);\n        });\n    }\n    onMagnetDblClick(e) {\n        this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n            view.onMagnetDblClick(e, magnet, x, y);\n        });\n    }\n    onMagnetContextMenu(e) {\n        if (this.options.preventDefaultContextMenu) {\n            e.preventDefault();\n        }\n        this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n            view.onMagnetContextMenu(e, magnet, x, y);\n        });\n    }\n    onLabelMouseDown(evt) {\n        const labelNode = evt.currentTarget;\n        const view = this.findView(labelNode);\n        if (view) {\n            const e = this.normalizeEvent(evt);\n            if (this.guard(e, view)) {\n                return;\n            }\n            const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n            view.onLabelMouseDown(e, localPoint.x, localPoint.y);\n        }\n    }\n    onImageDragStart() {\n        // This is the only way to prevent image dragging in Firefox that works.\n        // Setting -moz-user-select: none, draggable=\"false\" attribute or\n        // user-drag: none didn't help.\n        return false;\n    }\n    dispose() {\n        this.undelegateEvents();\n        this.undelegateDocumentEvents();\n        this.restore();\n        this.restore = () => { };\n    }\n}\n__decorate([\n    View.dispose()\n], GraphView.prototype, \"dispose\", null);\n(function (GraphView) {\n    const prefixCls = `${Config.prefixCls}-graph`;\n    GraphView.markup = [\n        {\n            ns: Dom.ns.xhtml,\n            tagName: 'div',\n            selector: 'background',\n            className: `${prefixCls}-background`,\n        },\n        {\n            ns: Dom.ns.xhtml,\n            tagName: 'div',\n            selector: 'grid',\n            className: `${prefixCls}-grid`,\n        },\n        {\n            ns: Dom.ns.svg,\n            tagName: 'svg',\n            selector: 'svg',\n            className: `${prefixCls}-svg`,\n            attrs: {\n                width: '100%',\n                height: '100%',\n                'xmlns:xlink': Dom.ns.xlink,\n            },\n            children: [\n                {\n                    tagName: 'defs',\n                    selector: 'defs',\n                },\n                {\n                    tagName: 'g',\n                    selector: 'viewport',\n                    className: `${prefixCls}-svg-viewport`,\n                    children: [\n                        {\n                            tagName: 'g',\n                            selector: 'primer',\n                            className: `${prefixCls}-svg-primer`,\n                        },\n                        {\n                            tagName: 'g',\n                            selector: 'stage',\n                            className: `${prefixCls}-svg-stage`,\n                        },\n                        {\n                            tagName: 'g',\n                            selector: 'decorator',\n                            className: `${prefixCls}-svg-decorator`,\n                        },\n                        {\n                            tagName: 'g',\n                            selector: 'overlay',\n                            className: `${prefixCls}-svg-overlay`,\n                        },\n                    ],\n                },\n            ],\n        },\n    ];\n    function snapshoot(elem) {\n        const cloned = elem.cloneNode();\n        elem.childNodes.forEach((child) => cloned.appendChild(child));\n        return () => {\n            // remove all children\n            Dom.empty(elem);\n            // remove all attributes\n            while (elem.attributes.length > 0) {\n                elem.removeAttribute(elem.attributes[0].name);\n            }\n            // restore attributes\n            for (let i = 0, l = cloned.attributes.length; i < l; i += 1) {\n                const attr = cloned.attributes[i];\n                elem.setAttribute(attr.name, attr.value);\n            }\n            // restore children\n            cloned.childNodes.forEach((child) => elem.appendChild(child));\n        };\n    }\n    GraphView.snapshoot = snapshoot;\n})(GraphView || (GraphView = {}));\n(function (GraphView) {\n    const prefixCls = Config.prefixCls;\n    GraphView.events = {\n        dblclick: 'onDblClick',\n        contextmenu: 'onContextMenu',\n        touchstart: 'onMouseDown',\n        mousedown: 'onMouseDown',\n        mouseover: 'onMouseOver',\n        mouseout: 'onMouseOut',\n        mouseenter: 'onMouseEnter',\n        mouseleave: 'onMouseLeave',\n        mousewheel: 'onMouseWheel',\n        DOMMouseScroll: 'onMouseWheel',\n        [`mouseenter  .${prefixCls}-cell`]: 'onMouseEnter',\n        [`mouseleave  .${prefixCls}-cell`]: 'onMouseLeave',\n        [`mouseenter  .${prefixCls}-cell-tools`]: 'onMouseEnter',\n        [`mouseleave  .${prefixCls}-cell-tools`]: 'onMouseLeave',\n        [`mousedown   .${prefixCls}-cell [event]`]: 'onCustomEvent',\n        [`touchstart  .${prefixCls}-cell [event]`]: 'onCustomEvent',\n        [`mousedown   .${prefixCls}-cell [data-event]`]: 'onCustomEvent',\n        [`touchstart  .${prefixCls}-cell [data-event]`]: 'onCustomEvent',\n        [`dblclick    .${prefixCls}-cell [magnet]`]: 'onMagnetDblClick',\n        [`contextmenu .${prefixCls}-cell [magnet]`]: 'onMagnetContextMenu',\n        [`mousedown   .${prefixCls}-cell [magnet]`]: 'onMagnetMouseDown',\n        [`touchstart  .${prefixCls}-cell [magnet]`]: 'onMagnetMouseDown',\n        [`dblclick    .${prefixCls}-cell [data-magnet]`]: 'onMagnetDblClick',\n        [`contextmenu .${prefixCls}-cell [data-magnet]`]: 'onMagnetContextMenu',\n        [`mousedown   .${prefixCls}-cell [data-magnet]`]: 'onMagnetMouseDown',\n        [`touchstart  .${prefixCls}-cell [data-magnet]`]: 'onMagnetMouseDown',\n        [`dragstart   .${prefixCls}-cell image`]: 'onImageDragStart',\n        [`mousedown   .${prefixCls}-edge .${prefixCls}-edge-label`]: 'onLabelMouseDown',\n        [`touchstart  .${prefixCls}-edge .${prefixCls}-edge-label`]: 'onLabelMouseDown',\n    };\n    GraphView.documentEvents = {\n        mousemove: 'onMouseMove',\n        touchmove: 'onMouseMove',\n        mouseup: 'onMouseUp',\n        touchend: 'onMouseUp',\n        touchcancel: 'onMouseUp',\n    };\n})(GraphView || (GraphView = {}));\n//# sourceMappingURL=view.js.map"]},"metadata":{},"sourceType":"module"}