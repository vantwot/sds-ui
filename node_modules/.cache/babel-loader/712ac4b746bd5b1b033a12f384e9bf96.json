{"ast":null,"code":"import { Base } from './base';\nimport { Dom } from '../util';\nimport { Point, Rectangle } from '../geometry';\nexport class CoordManager extends Base {\n  getClientMatrix() {\n    return Dom.createSVGMatrix(this.view.stage.getScreenCTM());\n  }\n  /**\n   * Returns coordinates of the graph viewport, relative to the window.\n   */\n\n\n  getClientOffset() {\n    // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    const rect = this.view.svg.getBoundingClientRect();\n    return new Point(rect.left, rect.top);\n  }\n  /**\n   * Returns coordinates of the graph viewport, relative to the document.\n   */\n\n\n  getPageOffset() {\n    // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    return this.getClientOffset().translate(window.scrollX, window.scrollY);\n  }\n\n  snapToGrid(x, y) {\n    const p = typeof x === 'number' ? this.clientToLocalPoint(x, y) : this.clientToLocalPoint(x.x, x.y);\n    return p.snapToGrid(this.graph.getGridSize());\n  }\n\n  localToGraphPoint(x, y) {\n    const localPoint = Point.create(x, y);\n    return Dom.transformPoint(localPoint, this.graph.matrix());\n  }\n\n  localToClientPoint(x, y) {\n    const localPoint = Point.create(x, y);\n    return Dom.transformPoint(localPoint, this.getClientMatrix());\n  }\n\n  localToPagePoint(x, y) {\n    const p = typeof x === 'number' ? this.localToGraphPoint(x, y) : this.localToGraphPoint(x);\n    return p.translate(this.getPageOffset());\n  }\n\n  localToGraphRect(x, y, width, height) {\n    const localRect = Rectangle.create(x, y, width, height);\n    return Dom.transformRectangle(localRect, this.graph.matrix());\n  }\n\n  localToClientRect(x, y, width, height) {\n    const localRect = Rectangle.create(x, y, width, height);\n    return Dom.transformRectangle(localRect, this.getClientMatrix());\n  }\n\n  localToPageRect(x, y, width, height) {\n    const rect = typeof x === 'number' ? this.localToGraphRect(x, y, width, height) : this.localToGraphRect(x);\n    return rect.translate(this.getPageOffset());\n  }\n\n  graphToLocalPoint(x, y) {\n    const graphPoint = Point.create(x, y);\n    return Dom.transformPoint(graphPoint, this.graph.matrix().inverse());\n  }\n\n  clientToLocalPoint(x, y) {\n    const clientPoint = Point.create(x, y);\n    return Dom.transformPoint(clientPoint, this.getClientMatrix().inverse());\n  }\n\n  clientToGraphPoint(x, y) {\n    const clientPoint = Point.create(x, y);\n    return Dom.transformPoint(clientPoint, this.graph.matrix().multiply(this.getClientMatrix().inverse()));\n  }\n\n  pageToLocalPoint(x, y) {\n    const pagePoint = Point.create(x, y);\n    const graphPoint = pagePoint.diff(this.getPageOffset());\n    return this.graphToLocalPoint(graphPoint);\n  }\n\n  graphToLocalRect(x, y, width, height) {\n    const graphRect = Rectangle.create(x, y, width, height);\n    return Dom.transformRectangle(graphRect, this.graph.matrix().inverse());\n  }\n\n  clientToLocalRect(x, y, width, height) {\n    const clientRect = Rectangle.create(x, y, width, height);\n    return Dom.transformRectangle(clientRect, this.getClientMatrix().inverse());\n  }\n\n  clientToGraphRect(x, y, width, height) {\n    const clientRect = Rectangle.create(x, y, width, height);\n    return Dom.transformRectangle(clientRect, this.graph.matrix().multiply(this.getClientMatrix().inverse()));\n  }\n\n  pageToLocalRect(x, y, width, height) {\n    const graphRect = Rectangle.create(x, y, width, height);\n    const pageOffset = this.getPageOffset();\n    graphRect.x -= pageOffset.x;\n    graphRect.y -= pageOffset.y;\n    return this.graphToLocalRect(graphRect);\n  }\n\n}","map":{"version":3,"sources":["../../src/graph/coord.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Base } from './base';\nimport { Dom } from '../util';\nimport { Point, Rectangle } from '../geometry';\nexport class CoordManager extends Base {\n    getClientMatrix() {\n        return Dom.createSVGMatrix(this.view.stage.getScreenCTM());\n    }\n    /**\n     * Returns coordinates of the graph viewport, relative to the window.\n     */\n    getClientOffset() {\n        // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n        const rect = this.view.svg.getBoundingClientRect();\n        return new Point(rect.left, rect.top);\n    }\n    /**\n     * Returns coordinates of the graph viewport, relative to the document.\n     */\n    getPageOffset() {\n        // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n        return this.getClientOffset().translate(window.scrollX, window.scrollY);\n    }\n    snapToGrid(x, y) {\n        const p = typeof x === 'number'\n            ? this.clientToLocalPoint(x, y)\n            : this.clientToLocalPoint(x.x, x.y);\n        return p.snapToGrid(this.graph.getGridSize());\n    }\n    localToGraphPoint(x, y) {\n        const localPoint = Point.create(x, y);\n        return Dom.transformPoint(localPoint, this.graph.matrix());\n    }\n    localToClientPoint(x, y) {\n        const localPoint = Point.create(x, y);\n        return Dom.transformPoint(localPoint, this.getClientMatrix());\n    }\n    localToPagePoint(x, y) {\n        const p = typeof x === 'number'\n            ? this.localToGraphPoint(x, y)\n            : this.localToGraphPoint(x);\n        return p.translate(this.getPageOffset());\n    }\n    localToGraphRect(x, y, width, height) {\n        const localRect = Rectangle.create(x, y, width, height);\n        return Dom.transformRectangle(localRect, this.graph.matrix());\n    }\n    localToClientRect(x, y, width, height) {\n        const localRect = Rectangle.create(x, y, width, height);\n        return Dom.transformRectangle(localRect, this.getClientMatrix());\n    }\n    localToPageRect(x, y, width, height) {\n        const rect = typeof x === 'number'\n            ? this.localToGraphRect(x, y, width, height)\n            : this.localToGraphRect(x);\n        return rect.translate(this.getPageOffset());\n    }\n    graphToLocalPoint(x, y) {\n        const graphPoint = Point.create(x, y);\n        return Dom.transformPoint(graphPoint, this.graph.matrix().inverse());\n    }\n    clientToLocalPoint(x, y) {\n        const clientPoint = Point.create(x, y);\n        return Dom.transformPoint(clientPoint, this.getClientMatrix().inverse());\n    }\n    clientToGraphPoint(x, y) {\n        const clientPoint = Point.create(x, y);\n        return Dom.transformPoint(clientPoint, this.graph.matrix().multiply(this.getClientMatrix().inverse()));\n    }\n    pageToLocalPoint(x, y) {\n        const pagePoint = Point.create(x, y);\n        const graphPoint = pagePoint.diff(this.getPageOffset());\n        return this.graphToLocalPoint(graphPoint);\n    }\n    graphToLocalRect(x, y, width, height) {\n        const graphRect = Rectangle.create(x, y, width, height);\n        return Dom.transformRectangle(graphRect, this.graph.matrix().inverse());\n    }\n    clientToLocalRect(x, y, width, height) {\n        const clientRect = Rectangle.create(x, y, width, height);\n        return Dom.transformRectangle(clientRect, this.getClientMatrix().inverse());\n    }\n    clientToGraphRect(x, y, width, height) {\n        const clientRect = Rectangle.create(x, y, width, height);\n        return Dom.transformRectangle(clientRect, this.graph.matrix().multiply(this.getClientMatrix().inverse()));\n    }\n    pageToLocalRect(x, y, width, height) {\n        const graphRect = Rectangle.create(x, y, width, height);\n        const pageOffset = this.getPageOffset();\n        graphRect.x -= pageOffset.x;\n        graphRect.y -= pageOffset.y;\n        return this.graphToLocalRect(graphRect);\n    }\n}\n//# sourceMappingURL=coord.js.map"]},"metadata":{},"sourceType":"module"}