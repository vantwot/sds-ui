{"ast":null,"code":"import React, { useState, useMemo } from 'react';\nimport { Form } from 'antd';\nimport { makeUpdaterByDependencies, makeFormItemControlledProps, isEmptyParamValue } from './util';\nexport var FormItemWrapper = function FormItemWrapper(props) {\n  var schema = props.schema,\n      children = props.children;\n\n  var _a = useState(),\n      updateReasonField = _a[0],\n      setUpdateReasonField = _a[1];\n\n  var dependencies = schema.dependencies,\n      value = schema.value,\n      defaultValue = schema.defaultValue,\n      hidden = schema.hidden,\n      disabled = schema.disabled;\n  var updater = useMemo(function () {\n    return (dependencies === null || dependencies === void 0 ? void 0 : dependencies.length) ? makeUpdaterByDependencies(dependencies, setUpdateReasonField) : undefined;\n  }, [dependencies]);\n\n  if (typeof children !== 'function') {\n    throw new Error('[Schema Form]: chilren of FormItemWrapper should be a render prop.');\n  }\n\n  var initValue = isEmptyParamValue(value) ? defaultValue : value;\n\n  if (updater) {\n    return React.createElement(Form.Item, {\n      noStyle: true,\n      shouldUpdate: updater\n    }, function (form) {\n      var _a = makeFormItemControlledProps(form, schema, updateReasonField),\n          isHidden = _a.hidden,\n          isDisabled = _a.disabled;\n\n      return children({\n        hidden: isHidden,\n        disabled: isDisabled,\n        initialValue: initValue\n      });\n    });\n  }\n\n  return children({\n    hidden: hidden,\n    disabled: disabled,\n    initialValue: initValue\n  });\n};","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@ant-design/flowchart/es/components/canvas-json-schema-form/schema-form/common/form-item-wrapper/index.js"],"names":["React","useState","useMemo","Form","makeUpdaterByDependencies","makeFormItemControlledProps","isEmptyParamValue","FormItemWrapper","props","schema","children","_a","updateReasonField","setUpdateReasonField","dependencies","value","defaultValue","hidden","disabled","updater","length","undefined","Error","initValue","createElement","Item","noStyle","shouldUpdate","form","isHidden","isDisabled","initialValue"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,yBAAT,EAAoCC,2BAApC,EAAiEC,iBAAjE,QAA0F,QAA1F;AACA,OAAO,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,KAAV,EAAiB;AAC1C,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,MAA2BC,QAAQ,GAAGF,KAAK,CAACE,QAA5C;;AACA,MAAIC,EAAE,GAAGV,QAAQ,EAAjB;AAAA,MAAqBW,iBAAiB,GAAGD,EAAE,CAAC,CAAD,CAA3C;AAAA,MAAgDE,oBAAoB,GAAGF,EAAE,CAAC,CAAD,CAAzE;;AACA,MAAIG,YAAY,GAAGL,MAAM,CAACK,YAA1B;AAAA,MAAwCC,KAAK,GAAGN,MAAM,CAACM,KAAvD;AAAA,MAA8DC,YAAY,GAAGP,MAAM,CAACO,YAApF;AAAA,MAAkGC,MAAM,GAAGR,MAAM,CAACQ,MAAlH;AAAA,MAA0HC,QAAQ,GAAGT,MAAM,CAACS,QAA5I;AACA,MAAIC,OAAO,GAAGjB,OAAO,CAAC,YAAY;AAC9B,WAAO,CAACY,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACM,MAA1E,IAAoFhB,yBAAyB,CAACU,YAAD,EAAeD,oBAAf,CAA7G,GAAoJQ,SAA3J;AACH,GAFoB,EAElB,CAACP,YAAD,CAFkB,CAArB;;AAGA,MAAI,OAAOJ,QAAP,KAAoB,UAAxB,EAAoC;AAChC,UAAM,IAAIY,KAAJ,CAAU,oEAAV,CAAN;AACH;;AACD,MAAIC,SAAS,GAAGjB,iBAAiB,CAACS,KAAD,CAAjB,GAA2BC,YAA3B,GAA0CD,KAA1D;;AACA,MAAII,OAAJ,EAAa;AACT,WAAQnB,KAAK,CAACwB,aAAN,CAAoBrB,IAAI,CAACsB,IAAzB,EAA+B;AAAEC,MAAAA,OAAO,EAAE,IAAX;AAAiBC,MAAAA,YAAY,EAAER;AAA/B,KAA/B,EAAyE,UAAUS,IAAV,EAAgB;AAC7F,UAAIjB,EAAE,GAAGN,2BAA2B,CAACuB,IAAD,EAAOnB,MAAP,EAAeG,iBAAf,CAApC;AAAA,UAAuEiB,QAAQ,GAAGlB,EAAE,CAACM,MAArF;AAAA,UAA6Fa,UAAU,GAAGnB,EAAE,CAACO,QAA7G;;AACA,aAAOR,QAAQ,CAAC;AACZO,QAAAA,MAAM,EAAEY,QADI;AAEZX,QAAAA,QAAQ,EAAEY,UAFE;AAGZC,QAAAA,YAAY,EAAER;AAHF,OAAD,CAAf;AAKH,KAPO,CAAR;AAQH;;AACD,SAAOb,QAAQ,CAAC;AACZO,IAAAA,MAAM,EAAEA,MADI;AAEZC,IAAAA,QAAQ,EAAEA,QAFE;AAGZa,IAAAA,YAAY,EAAER;AAHF,GAAD,CAAf;AAKH,CA1BM","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { Form } from 'antd';\nimport { makeUpdaterByDependencies, makeFormItemControlledProps, isEmptyParamValue } from './util';\nexport var FormItemWrapper = function (props) {\n    var schema = props.schema, children = props.children;\n    var _a = useState(), updateReasonField = _a[0], setUpdateReasonField = _a[1];\n    var dependencies = schema.dependencies, value = schema.value, defaultValue = schema.defaultValue, hidden = schema.hidden, disabled = schema.disabled;\n    var updater = useMemo(function () {\n        return (dependencies === null || dependencies === void 0 ? void 0 : dependencies.length) ? makeUpdaterByDependencies(dependencies, setUpdateReasonField) : undefined;\n    }, [dependencies]);\n    if (typeof children !== 'function') {\n        throw new Error('[Schema Form]: chilren of FormItemWrapper should be a render prop.');\n    }\n    var initValue = isEmptyParamValue(value) ? defaultValue : value;\n    if (updater) {\n        return (React.createElement(Form.Item, { noStyle: true, shouldUpdate: updater }, function (form) {\n            var _a = makeFormItemControlledProps(form, schema, updateReasonField), isHidden = _a.hidden, isDisabled = _a.disabled;\n            return children({\n                hidden: isHidden,\n                disabled: isDisabled,\n                initialValue: initValue,\n            });\n        }));\n    }\n    return children({\n        hidden: hidden,\n        disabled: disabled,\n        initialValue: initValue,\n    });\n};\n"]},"metadata":{},"sourceType":"module"}