{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport { getCanvas } from './register';\nimport * as Mixin from './util/mixin';\nexport var Image = function Image() {\n  _classCallCheck(this, Image);\n\n  var canvas = getCanvas();\n  var image = canvas.createImage && canvas.createImage() || {};\n\n  if (!('tagName' in image)) {\n    image.tagName = 'IMG';\n    image.__proto__ = Image.prototype;\n  }\n\n  Mixin.parentNode(image);\n  Mixin.classList(image);\n  Object.assign(image, {\n    addEventListener: function addEventListener(name, cb) {\n      image[\"on\".concat(name)] = cb.bind(image);\n    },\n    removeEventListener: function removeEventListener(name) {\n      image[\"on\".concat(name)] = null;\n    }\n  });\n  return image;\n};","map":{"version":3,"sources":["../../src/mini-adapter/Image.ts"],"names":["Image","canvas","getCanvas","image","Mixin","Object","addEventListener","cb","removeEventListener"],"mappings":";AAEA,SAAA,SAAA,QAAA,YAAA;AACA,OAAO,KAAP,KAAA,MAAA,cAAA;AAEA,OAAA,IAAaA,KAAb,GACE,SAAA,KAAA,GAAc;AAAA,EAAA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AACZ,MAAMC,MAAM,GAAGC,SAAf,EAAA;AAEA,MAAMC,KAAK,GAAIF,MAAM,CAANA,WAAAA,IAAsBA,MAAM,CAA7B,WAAuBA,EAAtBA,IAAf,EAAA;;AAEA,MAAI,EAAE,aAAN,KAAI,CAAJ,EAA2B;AACzBE,IAAAA,KAAK,CAALA,OAAAA,GAAAA,KAAAA;AACAA,IAAAA,KAAK,CAALA,SAAAA,GAAkBH,KAAK,CAAvBG,SAAAA;AACD;;AAEDC,EAAAA,KAAK,CAALA,UAAAA,CAAAA,KAAAA;AACAA,EAAAA,KAAK,CAALA,SAAAA,CAAAA,KAAAA;AAEAC,EAAAA,MAAM,CAANA,MAAAA,CAAAA,KAAAA,EAAqB;AACnBC,IAAAA,gBADmB,EAAA,SAAA,gBAAA,CAAA,IAAA,EAAA,EAAA,EACQ;AACzBH,MAAAA,KAAK,CAAA,KAAA,MAAA,CAALA,IAAK,CAAA,CAALA,GAAqBI,EAAE,CAAFA,IAAAA,CAArBJ,KAAqBI,CAArBJ;AAFiB,KAAA;AAInBK,IAAAA,mBAJmB,EAAA,SAAA,mBAAA,CAAA,IAAA,EAIO;AACxBL,MAAAA,KAAK,CAAA,KAAA,MAAA,CAALA,IAAK,CAAA,CAALA,GAAAA,IAAAA;AACD;AANkB,GAArBE;AASA,SAAA,KAAA;AAvBJ,CAAA","sourcesContent":["// @ts-nocheck\n// tslint:disable\nimport { getCanvas } from './register';\nimport * as Mixin from './util/mixin';\n\nexport class Image {\n  constructor() {\n    const canvas = getCanvas();\n\n    const image = (canvas.createImage && canvas.createImage()) || {};\n\n    if (!('tagName' in image)) {\n      image.tagName = 'IMG';\n      image.__proto__ = Image.prototype;\n    }\n\n    Mixin.parentNode(image);\n    Mixin.classList(image);\n\n    Object.assign(image, {\n      addEventListener(name, cb) {\n        image[`on${name}`] = cb.bind(image);\n      },\n      removeEventListener(name) {\n        image[`on${name}`] = null;\n      },\n    });\n\n    return image;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}