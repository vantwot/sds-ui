{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { TYPES } from '@antv/l7-core';\nimport { anchorTranslate, anchorType, applyAnchorClass, bindAll, DOM } from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\n\nvar Popup = function (_EventEmitter) {\n  _inherits(Popup, _EventEmitter);\n\n  var _super = _createSuper(Popup);\n\n  function Popup(cfg) {\n    var _this;\n\n    _classCallCheck(this, Popup);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"popupOption\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"mapsService\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"sceneSerive\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"lngLat\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"content\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"closeButton\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"timeoutInstance\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"tip\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"scene\", void 0);\n\n    _this.popupOption = _objectSpread(_objectSpread({}, _this.getdefault()), cfg);\n    bindAll(['update', 'onClickClose', 'remove'], _assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Popup, [{\n    key: \"addTo\",\n    value: function addTo(scene) {\n      var _this2 = this;\n\n      this.mapsService = scene.get(TYPES.IMapService);\n      this.sceneSerive = scene.get(TYPES.ISceneService);\n      this.mapsService.on('camerachange', this.update);\n      this.mapsService.on('viewchange', this.update);\n      this.scene = scene;\n      this.update();\n\n      if (this.popupOption.closeOnClick) {\n        this.timeoutInstance = setTimeout(function () {\n          _this2.mapsService.on('click', _this2.onClickClose);\n        }, 30);\n      }\n\n      this.emit('open');\n      return this;\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.remove();\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.addTo(this.scene);\n    }\n  }, {\n    key: \"setHTML\",\n    value: function setHTML(html) {\n      var frag = window.document.createDocumentFragment();\n      var temp = window.document.createElement('body');\n      var child;\n      temp.innerHTML = html;\n\n      while (true) {\n        child = temp.firstChild;\n\n        if (!child) {\n          break;\n        }\n\n        frag.appendChild(child);\n      }\n\n      return this.setDOMContent(frag);\n    }\n  }, {\n    key: \"setLnglat\",\n    value: function setLnglat(lngLat) {\n      this.lngLat = lngLat;\n\n      if (Array.isArray(lngLat)) {\n        this.lngLat = {\n          lng: lngLat[0],\n          lat: lngLat[1]\n        };\n      }\n\n      if (this.mapsService) {\n        this.mapsService.on('camerachange', this.update);\n        this.mapsService.on('viewchange', this.update);\n      }\n\n      this.update();\n      return this;\n    }\n  }, {\n    key: \"getLnglat\",\n    value: function getLnglat() {\n      return this.lngLat;\n    }\n  }, {\n    key: \"setText\",\n    value: function setText(text) {\n      return this.setDOMContent(window.document.createTextNode(text));\n    }\n  }, {\n    key: \"setMaxWidth\",\n    value: function setMaxWidth(maxWidth) {\n      this.popupOption.maxWidth = maxWidth;\n      this.update();\n      return this;\n    }\n  }, {\n    key: \"setDOMContent\",\n    value: function setDOMContent(htmlNode) {\n      this.createContent();\n      this.content.appendChild(htmlNode);\n      this.update();\n      return this;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      if (this.content) {\n        this.removeDom(this.content);\n      }\n\n      if (this.container) {\n        this.removeDom(this.container);\n        delete this.container;\n      }\n\n      if (this.mapsService) {\n        this.mapsService.off('camerachange', this.update);\n        this.mapsService.off('viewchange', this.update);\n        this.mapsService.off('click', this.onClickClose);\n        delete this.mapsService;\n      }\n\n      clearTimeout(this.timeoutInstance);\n      this.emit('close');\n      return this;\n    }\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return !!this.mapsService;\n    }\n  }, {\n    key: \"createContent\",\n    value: function createContent() {\n      if (this.content) {\n        DOM.remove(this.content);\n      }\n\n      this.content = DOM.create('div', 'l7-popup-content', this.container);\n\n      if (this.popupOption.closeButton) {\n        this.closeButton = DOM.create('button', 'l7-popup-close-button', this.content);\n\n        if (this.popupOption.closeButtonOffsets) {\n          this.closeButton.style.right = this.popupOption.closeButtonOffsets[0] + 'px';\n          this.closeButton.style.top = this.popupOption.closeButtonOffsets[1] + 'px';\n        }\n\n        this.closeButton.setAttribute('aria-label', 'Close popup');\n        this.closeButton.innerHTML = '&#215;';\n        this.closeButton.addEventListener('click', this.onClickClose);\n      }\n    }\n  }, {\n    key: \"creatDom\",\n    value: function creatDom(tagName, className, container) {\n      var el = window.document.createElement(tagName);\n\n      if (className !== undefined) {\n        el.className = className;\n      }\n\n      if (container) {\n        container.appendChild(el);\n      }\n\n      return el;\n    }\n  }, {\n    key: \"removeDom\",\n    value: function removeDom(node) {\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    }\n  }, {\n    key: \"getdefault\",\n    value: function getdefault() {\n      return {\n        closeButton: true,\n        closeOnClick: true,\n        maxWidth: '240px',\n        offsets: [0, 0],\n        anchor: anchorType.BOTTOM,\n        className: '',\n        stopPropagation: true\n      };\n    }\n  }, {\n    key: \"onClickClose\",\n    value: function onClickClose(e) {\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      }\n\n      this.remove();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this3 = this;\n\n      var hasPosition = this.lngLat;\n      var _this$popupOption = this.popupOption,\n          className = _this$popupOption.className,\n          maxWidth = _this$popupOption.maxWidth,\n          anchor = _this$popupOption.anchor;\n\n      if (!this.mapsService || !hasPosition || !this.content) {\n        return;\n      }\n\n      var popupContainer = this.mapsService.getMarkerContainer();\n\n      if (!this.container && popupContainer) {\n        this.container = this.creatDom('div', 'l7-popup', popupContainer);\n        this.tip = this.creatDom('div', 'l7-popup-tip', this.container);\n        this.container.appendChild(this.content);\n\n        if (className) {\n          className.split(' ').forEach(function (name) {\n            return _this3.container.classList.add(name);\n          });\n        }\n\n        var stopPropagation = this.popupOption.stopPropagation;\n\n        if (stopPropagation) {\n          ['mousemove', 'mousedown', 'mouseup', 'click', 'dblclick'].forEach(function (type) {\n            _this3.container.addEventListener(type, function (e) {\n              e.stopPropagation();\n            });\n          });\n        }\n      }\n\n      if (maxWidth && this.container.style.maxWidth !== maxWidth) {\n        this.container.style.maxWidth = maxWidth;\n      }\n\n      this.updatePosition();\n      DOM.setTransform(this.container, \"\".concat(anchorTranslate[anchor]));\n      applyAnchorClass(this.container, anchor, 'popup');\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      if (!this.mapsService) {\n        return;\n      }\n\n      var _this$lngLat = this.lngLat,\n          lng = _this$lngLat.lng,\n          lat = _this$lngLat.lat;\n      var offsets = this.popupOption.offsets;\n      var pos = this.mapsService.lngLatToContainer([lng, lat]);\n      this.container.style.left = pos.x + offsets[0] + 'px';\n      this.container.style.top = pos.y - offsets[1] + 'px';\n    }\n  }]);\n\n  return Popup;\n}(EventEmitter);\n\nexport { Popup as default };","map":{"version":3,"sources":["../src/popup.ts"],"names":["Popup","EventEmitter","bindAll","scene","TYPES","setTimeout","frag","window","temp","child","Array","lng","lngLat","lat","clearTimeout","DOM","el","className","container","node","closeButton","closeOnClick","maxWidth","offsets","anchor","anchorType","stopPropagation","e","hasPosition","popupContainer","anchorTranslate","applyAnchorClass","pos"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,KAAA,QAAA,eAAA;AASA,SAAA,eAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,OAAA,EAAA,GAAA,QAAA,gBAAA;AAOA,SAAA,YAAA,QAAA,eAAA;;IAKqBA,K;;;;;AAYnB,WAAA,KAAA,CAAA,GAAA,EAAyC;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AACvC,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA;;AADuC,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,aAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,iBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA;;AAEvC,IAAA,KAAA,CAAA,WAAA,GAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EACK,KAAA,CADL,UACK,EADL,CAAA,EAAA,GAAA,CAAA;AAIAE,IAAAA,OAAO,CAAC,CAAA,QAAA,EAAA,cAAA,EAAD,QAAC,CAAD,EAAA,sBAAA,CAAPA,KAAO,CAAA,CAAPA;AANuC,WAAA,KAAA;AAOxC;;;;WAED,SAAA,KAAA,CAAA,KAAA,EAA+B;AAAA,UAAA,MAAA,GAAA,IAAA;;AAC7B,WAAA,WAAA,GAAmBC,KAAK,CAALA,GAAAA,CAAuBC,KAAK,CAA/C,WAAmBD,CAAnB;AACA,WAAA,WAAA,GAAmBA,KAAK,CAALA,GAAAA,CAAyBC,KAAK,CAAjD,aAAmBD,CAAnB;AACA,WAAA,WAAA,CAAA,EAAA,CAAA,cAAA,EAAoC,KAApC,MAAA;AACA,WAAA,WAAA,CAAA,EAAA,CAAA,YAAA,EAAkC,KAAlC,MAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,MAAA;;AACA,UAAI,KAAA,WAAA,CAAJ,YAAA,EAAmC;AACjC,aAAA,eAAA,GAAuBE,UAAU,CAAC,YAAM;AACtC,UAAA,MAAI,CAAJ,WAAA,CAAA,EAAA,CAAA,OAAA,EAA6B,MAAI,CAAjC,YAAA;AAD+B,SAAA,EAAjC,EAAiC,CAAjC;AAGD;;AACD,WAAA,IAAA,CAAA,MAAA;AACA,aAAA,IAAA;AACD;;;WAED,SAAA,KAAA,GAAqB;AACnB,WAAA,MAAA;AACD;;;WAED,SAAA,IAAA,GAAoB;AAClB,WAAA,KAAA,CAAW,KAAX,KAAA;AACD;;;WAED,SAAA,OAAA,CAAA,IAAA,EAA6B;AAC3B,UAAMC,IAAI,GAAGC,MAAM,CAANA,QAAAA,CAAb,sBAAaA,EAAb;AACA,UAAMC,IAAI,GAAGD,MAAM,CAANA,QAAAA,CAAAA,aAAAA,CAAb,MAAaA,CAAb;AACA,UAAA,KAAA;AACAC,MAAAA,IAAI,CAAJA,SAAAA,GAAAA,IAAAA;;AACA,aAAA,IAAA,EAAa;AACXC,QAAAA,KAAK,GAAGD,IAAI,CAAZC,UAAAA;;AACA,YAAI,CAAJ,KAAA,EAAY;AACV;AACD;;AACDH,QAAAA,IAAI,CAAJA,WAAAA,CAAAA,KAAAA;AACD;;AAED,aAAO,KAAA,aAAA,CAAP,IAAO,CAAP;AACD;;;WAED,SAAA,SAAA,CAAA,MAAA,EAAmD;AACjD,WAAA,MAAA,GAAA,MAAA;;AACA,UAAII,KAAK,CAALA,OAAAA,CAAJ,MAAIA,CAAJ,EAA2B;AACzB,aAAA,MAAA,GAAc;AACZC,UAAAA,GAAG,EAAEC,MAAM,CADC,CACD,CADC;AAEZC,UAAAA,GAAG,EAAED,MAAM,CAAA,CAAA;AAFC,SAAd;AAID;;AACD,UAAI,KAAJ,WAAA,EAAsB;AACpB,aAAA,WAAA,CAAA,EAAA,CAAA,cAAA,EAAoC,KAApC,MAAA;AACA,aAAA,WAAA,CAAA,EAAA,CAAA,YAAA,EAAkC,KAAlC,MAAA;AACD;;AACD,WAAA,MAAA;AACA,aAAA,IAAA;AACD;;;WACD,SAAA,SAAA,GAA4B;AAC1B,aAAO,KAAP,MAAA;AACD;;;WACD,SAAA,OAAA,CAAA,IAAA,EAA6B;AAC3B,aAAO,KAAA,aAAA,CAAmBL,MAAM,CAANA,QAAAA,CAAAA,cAAAA,CAA1B,IAA0BA,CAAnB,CAAP;AACD;;;WAED,SAAA,WAAA,CAAA,QAAA,EAA2C;AACzC,WAAA,WAAA,CAAA,QAAA,GAAA,QAAA;AACA,WAAA,MAAA;AACA,aAAA,IAAA;AACD;;;WAED,SAAA,aAAA,CAAA,QAAA,EAA6D;AAC3D,WAAA,aAAA;AACA,WAAA,OAAA,CAAA,WAAA,CAAA,QAAA;AACA,WAAA,MAAA;AACA,aAAA,IAAA;AACD;;;WAGD,SAAA,MAAA,GAAgB;AACd,UAAI,KAAJ,OAAA,EAAkB;AAChB,aAAA,SAAA,CAAe,KAAf,OAAA;AACD;;AAED,UAAI,KAAJ,SAAA,EAAoB;AAClB,aAAA,SAAA,CAAe,KAAf,SAAA;AAEA,eAAO,KAAP,SAAA;AACD;;AACD,UAAI,KAAJ,WAAA,EAAsB;AAEpB,aAAA,WAAA,CAAA,GAAA,CAAA,cAAA,EAAqC,KAArC,MAAA;AACA,aAAA,WAAA,CAAA,GAAA,CAAA,YAAA,EAAmC,KAAnC,MAAA;AACA,aAAA,WAAA,CAAA,GAAA,CAAA,OAAA,EAA8B,KAA9B,YAAA;AAEA,eAAO,KAAP,WAAA;AACD;;AACDO,MAAAA,YAAY,CAAC,KAAbA,eAAY,CAAZA;AACA,WAAA,IAAA,CAAA,OAAA;AACA,aAAA,IAAA;AACD;;;WACD,SAAA,MAAA,GAAgB;AACd,aAAO,CAAC,CAAC,KAAT,WAAA;AACD;;;WAED,SAAA,aAAA,GAAwB;AACtB,UAAI,KAAJ,OAAA,EAAkB;AAChBC,QAAAA,GAAG,CAAHA,MAAAA,CAAW,KAAXA,OAAAA;AACD;;AACD,WAAA,OAAA,GAAeA,GAAG,CAAHA,MAAAA,CAAAA,KAAAA,EAAAA,kBAAAA,EAAsC,KAArD,SAAeA,CAAf;;AACA,UAAI,KAAA,WAAA,CAAJ,WAAA,EAAkC;AAChC,aAAA,WAAA,GAAmBA,GAAG,CAAHA,MAAAA,CAAAA,QAAAA,EAAAA,uBAAAA,EAGjB,KAHF,OAAmBA,CAAnB;;AAMA,YAAI,KAAA,WAAA,CAAJ,kBAAA,EAAyC;AAEvC,eAAA,WAAA,CAAA,KAAA,CAAA,KAAA,GACE,KAAA,WAAA,CAAA,kBAAA,CAAA,CAAA,IADF,IAAA;AAEA,eAAA,WAAA,CAAA,KAAA,CAAA,GAAA,GACE,KAAA,WAAA,CAAA,kBAAA,CAAA,CAAA,IADF,IAAA;AAED;;AAGD,aAAA,WAAA,CAAA,YAAA,CAAA,YAAA,EAAA,aAAA;AACA,aAAA,WAAA,CAAA,SAAA,GAAA,QAAA;AACA,aAAA,WAAA,CAAA,gBAAA,CAAA,OAAA,EAA2C,KAA3C,YAAA;AACD;AACF;;;WAED,SAAA,QAAA,CAAA,OAAA,EAAA,SAAA,EAAA,SAAA,EAA6E;AAC3E,UAAMC,EAAE,GAAGT,MAAM,CAANA,QAAAA,CAAAA,aAAAA,CAAX,OAAWA,CAAX;;AACA,UAAIU,SAAS,KAAb,SAAA,EAA6B;AAC3BD,QAAAA,EAAE,CAAFA,SAAAA,GAAAA,SAAAA;AACD;;AACD,UAAA,SAAA,EAAe;AACbE,QAAAA,SAAS,CAATA,WAAAA,CAAAA,EAAAA;AACD;;AACD,aAAA,EAAA;AACD;;;WAED,SAAA,SAAA,CAAA,IAAA,EAAmC;AACjC,UAAIC,IAAI,CAAR,UAAA,EAAqB;AACnBA,QAAAA,IAAI,CAAJA,UAAAA,CAAAA,WAAAA,CAAAA,IAAAA;AACD;AACF;;;WAED,SAAA,UAAA,GAAqB;AACnB,aAAO;AACLC,QAAAA,WAAW,EADN,IAAA;AAELC,QAAAA,YAAY,EAFP,IAAA;AAGLC,QAAAA,QAAQ,EAHH,OAAA;AAILC,QAAAA,OAAO,EAAE,CAAA,CAAA,EAJJ,CAII,CAJJ;AAKLC,QAAAA,MAAM,EAAEC,UAAU,CALb,MAAA;AAMLR,QAAAA,SAAS,EANJ,EAAA;AAOLS,QAAAA,eAAe,EAAE;AAPZ,OAAP;AASD;;;WAED,SAAA,YAAA,CAAA,CAAA,EAA+B;AAC7B,UAAIC,CAAC,CAAL,eAAA,EAAuB;AACrBA,QAAAA,CAAC,CAADA,eAAAA;AACD;;AACD,WAAA,MAAA;AACD;;;WAED,SAAA,MAAA,GAAiB;AAAA,UAAA,MAAA,GAAA,IAAA;;AACf,UAAMC,WAAW,GAAG,KAApB,MAAA;AACA,UAAA,iBAAA,GAAwC,KAAxC,WAAA;AAAA,UAAQX,SAAR,GAAA,iBAAA,CAAA,SAAA;AAAA,UAAmBK,QAAnB,GAAA,iBAAA,CAAA,QAAA;AAAA,UAA6BE,MAA7B,GAAA,iBAAA,CAAA,MAAA;;AACA,UAAI,CAAC,KAAD,WAAA,IAAqB,CAArB,WAAA,IAAqC,CAAC,KAA1C,OAAA,EAAwD;AACtD;AACD;;AACD,UAAMK,cAAc,GAAG,KAAA,WAAA,CAAvB,kBAAuB,EAAvB;;AACA,UAAI,CAAC,KAAD,SAAA,IAAJ,cAAA,EAAuC;AACrC,aAAA,SAAA,GAAiB,KAAA,QAAA,CAAA,KAAA,EAAA,UAAA,EAAjB,cAAiB,CAAjB;AAMA,aAAA,GAAA,GAAW,KAAA,QAAA,CAAA,KAAA,EAAA,cAAA,EAAqC,KAAhD,SAAW,CAAX;AACA,aAAA,SAAA,CAAA,WAAA,CAA2B,KAA3B,OAAA;;AACA,YAAA,SAAA,EAAe;AACbZ,UAAAA,SAAS,CAATA,KAAAA,CAAAA,GAAAA,EAAAA,OAAAA,CAEW,UAAA,IAAA,EAAA;AAAA,mBAAU,MAAI,CAAJ,SAAA,CAAA,SAAA,CAAA,GAAA,CAAV,IAAU,CAAV;AAFXA,WAAAA;AAGD;;AAGD,YAAQS,eAAR,GAA4B,KAA5B,WAA4B,CAA5B,eAAA;;AACA,YAAA,eAAA,EAAqB;AACnB,WAAA,WAAA,EAAA,WAAA,EAAA,SAAA,EAAA,OAAA,EAAA,UAAA,EAAA,OAAA,CACE,UAAA,IAAA,EAAU;AACR,YAAA,MAAI,CAAJ,SAAA,CAAA,gBAAA,CAAA,IAAA,EAAsC,UAAA,CAAA,EAAO;AAC3CC,cAAAA,CAAC,CAADA,eAAAA;AADF,aAAA;AAFJ,WAAA;AAOD;AACF;;AACD,UAAIL,QAAQ,IAAI,KAAA,SAAA,CAAA,KAAA,CAAA,QAAA,KAAhB,QAAA,EAA4D;AAC1D,aAAA,SAAA,CAAA,KAAA,CAAA,QAAA,GAAA,QAAA;AACD;;AAED,WAAA,cAAA;AACAP,MAAAA,GAAG,CAAHA,YAAAA,CAAiB,KAAjBA,SAAAA,EAAAA,GAAAA,MAAAA,CAAoCe,eAAe,CAAnDf,MAAmD,CAAnDA,CAAAA;AACAgB,MAAAA,gBAAgB,CAAC,KAAD,SAAA,EAAA,MAAA,EAAhBA,OAAgB,CAAhBA;AACD;;;WAED,SAAA,cAAA,GAAyB;AACvB,UAAI,CAAC,KAAL,WAAA,EAAuB;AACrB;AACD;;AACD,UAAA,YAAA,GAAqB,KAArB,MAAA;AAAA,UAAQpB,GAAR,GAAA,YAAA,CAAA,GAAA;AAAA,UAAaE,GAAb,GAAA,YAAA,CAAA,GAAA;AACA,UAAQU,OAAR,GAAoB,KAApB,WAAoB,CAApB,OAAA;AACA,UAAMS,GAAG,GAAG,KAAA,WAAA,CAAA,iBAAA,CAAmC,CAAA,GAAA,EAA/C,GAA+C,CAAnC,CAAZ;AACA,WAAA,SAAA,CAAA,KAAA,CAAA,IAAA,GAA4BA,GAAG,CAAHA,CAAAA,GAAQT,OAAO,CAAfS,CAAe,CAAfA,GAA5B,IAAA;AACA,WAAA,SAAA,CAAA,KAAA,CAAA,GAAA,GAA2BA,GAAG,CAAHA,CAAAA,GAAQT,OAAO,CAAfS,CAAe,CAAfA,GAA3B,IAAA;AACD;;;;EA9OgC/B,Y;;SAAdD,K","sourcesContent":["import {\n  ILngLat,\n  IMapService,\n  IPoint,\n  IPopup,\n  IPopupOption,\n  ISceneService,\n  TYPES,\n} from '@antv/l7-core';\nimport {\n  anchorTranslate,\n  anchorType,\n  applyAnchorClass,\n  bindAll,\n  DOM,\n} from '@antv/l7-utils';\nimport { EventEmitter } from 'eventemitter3';\nimport { Container } from 'inversify';\n\n/** colse event */\n\nexport default class Popup extends EventEmitter implements IPopup {\n  private popupOption: IPopupOption;\n  private mapsService: IMapService<unknown>;\n  private sceneSerive: ISceneService;\n  private lngLat: ILngLat;\n  private content: HTMLElement;\n  private closeButton: HTMLElement;\n  private timeoutInstance: any;\n  private container: HTMLElement;\n  private tip: HTMLElement;\n  private scene: Container;\n\n  constructor(cfg?: Partial<IPopupOption>) {\n    super();\n    this.popupOption = {\n      ...this.getdefault(),\n      ...cfg,\n    };\n    bindAll(['update', 'onClickClose', 'remove'], this);\n  }\n\n  public addTo(scene: Container) {\n    this.mapsService = scene.get<IMapService>(TYPES.IMapService);\n    this.sceneSerive = scene.get<ISceneService>(TYPES.ISceneService);\n    this.mapsService.on('camerachange', this.update);\n    this.mapsService.on('viewchange', this.update);\n    this.scene = scene;\n    this.update();\n    if (this.popupOption.closeOnClick) {\n      this.timeoutInstance = setTimeout(() => {\n        this.mapsService.on('click', this.onClickClose);\n      }, 30);\n    }\n    this.emit('open');\n    return this;\n  }\n\n  public close(): void {\n    this.remove();\n  }\n\n  public open(): void {\n    this.addTo(this.scene);\n  }\n\n  public setHTML(html: string) {\n    const frag = window.document.createDocumentFragment();\n    const temp = window.document.createElement('body');\n    let child: ChildNode | null;\n    temp.innerHTML = html;\n    while (true) {\n      child = temp.firstChild;\n      if (!child) {\n        break;\n      }\n      frag.appendChild(child);\n    }\n\n    return this.setDOMContent(frag);\n  }\n\n  public setLnglat(lngLat: ILngLat | number[]): this {\n    this.lngLat = lngLat as ILngLat;\n    if (Array.isArray(lngLat)) {\n      this.lngLat = {\n        lng: lngLat[0],\n        lat: lngLat[1],\n      };\n    }\n    if (this.mapsService) {\n      this.mapsService.on('camerachange', this.update);\n      this.mapsService.on('viewchange', this.update);\n    }\n    this.update();\n    return this;\n  }\n  public getLnglat(): ILngLat {\n    return this.lngLat;\n  }\n  public setText(text: string) {\n    return this.setDOMContent(window.document.createTextNode(text));\n  }\n\n  public setMaxWidth(maxWidth: string): this {\n    this.popupOption.maxWidth = maxWidth;\n    this.update();\n    return this;\n  }\n\n  public setDOMContent(htmlNode: ChildNode | DocumentFragment) {\n    this.createContent();\n    this.content.appendChild(htmlNode);\n    this.update();\n    return this;\n  }\n\n  // 移除popup\n  public remove() {\n    if (this.content) {\n      this.removeDom(this.content);\n    }\n\n    if (this.container) {\n      this.removeDom(this.container);\n      // @ts-ignore\n      delete this.container;\n    }\n    if (this.mapsService) {\n      // TODO: mapbox AMap 事件同步\n      this.mapsService.off('camerachange', this.update);\n      this.mapsService.off('viewchange', this.update);\n      this.mapsService.off('click', this.onClickClose);\n      // @ts-ignore\n      delete this.mapsService;\n    }\n    clearTimeout(this.timeoutInstance);\n    this.emit('close');\n    return this;\n  }\n  public isOpen() {\n    return !!this.mapsService;\n  }\n\n  private createContent() {\n    if (this.content) {\n      DOM.remove(this.content);\n    }\n    this.content = DOM.create('div', 'l7-popup-content', this.container);\n    if (this.popupOption.closeButton) {\n      this.closeButton = DOM.create(\n        'button',\n        'l7-popup-close-button',\n        this.content,\n      );\n\n      if (this.popupOption.closeButtonOffsets) {\n        // 关闭按钮的偏移\n        this.closeButton.style.right =\n          this.popupOption.closeButtonOffsets[0] + 'px';\n        this.closeButton.style.top =\n          this.popupOption.closeButtonOffsets[1] + 'px';\n      }\n\n      // this.closeButton.type = 'button';\n      this.closeButton.setAttribute('aria-label', 'Close popup');\n      this.closeButton.innerHTML = '&#215;';\n      this.closeButton.addEventListener('click', this.onClickClose);\n    }\n  }\n\n  private creatDom(tagName: string, className: string, container: HTMLElement) {\n    const el = window.document.createElement(tagName);\n    if (className !== undefined) {\n      el.className = className;\n    }\n    if (container) {\n      container.appendChild(el);\n    }\n    return el;\n  }\n\n  private removeDom(node: ChildNode) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n  }\n\n  private getdefault() {\n    return {\n      closeButton: true,\n      closeOnClick: true,\n      maxWidth: '240px',\n      offsets: [0, 0],\n      anchor: anchorType.BOTTOM,\n      className: '',\n      stopPropagation: true,\n    };\n  }\n\n  private onClickClose(e: Event) {\n    if (e.stopPropagation) {\n      e.stopPropagation();\n    }\n    this.remove();\n  }\n\n  private update() {\n    const hasPosition = this.lngLat;\n    const { className, maxWidth, anchor } = this.popupOption;\n    if (!this.mapsService || !hasPosition || !this.content) {\n      return;\n    }\n    const popupContainer = this.mapsService.getMarkerContainer();\n    if (!this.container && popupContainer) {\n      this.container = this.creatDom(\n        'div',\n        'l7-popup',\n        popupContainer as HTMLElement,\n      );\n\n      this.tip = this.creatDom('div', 'l7-popup-tip', this.container);\n      this.container.appendChild(this.content);\n      if (className) {\n        className\n          .split(' ')\n          .forEach((name) => this.container.classList.add(name));\n      }\n\n      // 高德地图需要阻止事件冒泡 // 测试mapbox 地图不需要添加\n      const { stopPropagation } = this.popupOption;\n      if (stopPropagation) {\n        ['mousemove', 'mousedown', 'mouseup', 'click', 'dblclick'].forEach(\n          (type) => {\n            this.container.addEventListener(type, (e) => {\n              e.stopPropagation();\n            });\n          },\n        );\n      }\n    }\n    if (maxWidth && this.container.style.maxWidth !== maxWidth) {\n      this.container.style.maxWidth = maxWidth;\n    }\n\n    this.updatePosition();\n    DOM.setTransform(this.container, `${anchorTranslate[anchor]}`);\n    applyAnchorClass(this.container, anchor, 'popup');\n  }\n\n  private updatePosition() {\n    if (!this.mapsService) {\n      return;\n    }\n    const { lng, lat } = this.lngLat;\n    const { offsets } = this.popupOption;\n    const pos = this.mapsService.lngLatToContainer([lng, lat]);\n    this.container.style.left = pos.x + offsets[0] + 'px';\n    this.container.style.top = pos.y - offsets[1] + 'px';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}