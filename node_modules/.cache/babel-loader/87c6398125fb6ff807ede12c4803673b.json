{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { singleton, inject } from 'mana-syringe';\nimport { IGraphOptionProvider } from '../../xflow-main/graph/config';\nimport { XFlowGraphCommands } from '../../command-contributions/constant';\nimport { DisposableCollection, Disposable } from '../../common/disposable';\nimport { IHookContribution } from '../interface';\nimport { throttle } from '../../common/utils';\nexport var NsGraphEventPlugin;\n\n(function (NsGraphEventPlugin) {\n  NsGraphEventPlugin.pluginId = 'GraphEventPlugin';\n})(NsGraphEventPlugin || (NsGraphEventPlugin = {}));\n/**\n * 内置的hook contribution\n * 处理graph config 的 evnets props\n */\n\n\nvar GraphEventContribution = function GraphEventContribution() {\n  var _this = this;\n\n  _classCallCheck(this, GraphEventContribution);\n\n  this.toDispose = new DisposableCollection();\n\n  this.registerHookHub = function () {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", Disposable.create(function () {}));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n  /** 扩展Hook */\n\n\n  this.registerHook = function (hooks) {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var _this2 = this;\n\n      var toDispose, disposables;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              toDispose = new DisposableCollection();\n              disposables = [\n              /** 在graph启动前, 注册外部事件到x6Events的hooks上*/\n              hooks.x6Events.registerHook({\n                name: NsGraphEventPlugin.pluginId,\n                handler: function handler(args) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                    var _yield$this$graphOpti, events;\n\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            _context2.next = 2;\n                            return this.graphOptions.getOptions();\n\n                          case 2:\n                            _yield$this$graphOpti = _context2.sent;\n                            events = _yield$this$graphOpti.events;\n                            events.forEach(function (event) {\n                              args.push(event);\n                            });\n\n                          case 5:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, this);\n                  }));\n                }\n              }),\n              /** 在graph init后, 外部事件 */\n              hooks.afterGraphInit.registerHook({\n                name: NsGraphEventPlugin.pluginId,\n                handler: function handler(args) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                    var _this3 = this;\n\n                    var commandService, modelService, graph, todo;\n                    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            commandService = args.commandService, modelService = args.modelService, graph = args.graph;\n                            /** 注册事件 */\n\n                            _context4.next = 3;\n                            return hooks.x6Events.call([], function (mergedEvents) {\n                              return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                                  while (1) {\n                                    switch (_context3.prev = _context3.next) {\n                                      case 0:\n                                        return _context3.abrupt(\"return\", mergedEvents.map(function (e) {\n                                          var handler = function handler(handlerArgs) {\n                                            e.callback(handlerArgs, commandService, modelService);\n                                          };\n\n                                          graph.on(e.eventName, handler);\n                                          return {\n                                            dispose: function dispose() {\n                                              graph.off(e.eventName, handler);\n                                            }\n                                          };\n                                        }));\n\n                                      case 1:\n                                      case \"end\":\n                                        return _context3.stop();\n                                    }\n                                  }\n                                }, _callee3);\n                              }));\n                            });\n\n                          case 3:\n                            todo = _context4.sent;\n                            toDispose.pushAll(todo);\n\n                          case 5:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n                }\n              }),\n              /** 监听window的resize事件，实现自动resize */\n              hooks.afterGraphInit.registerHook({\n                name: 'add auto resize event',\n                handler: function handler(args) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                    var commandService, resizeHandler;\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            commandService = args.commandService;\n                            resizeHandler = throttle(function () {\n                              commandService.executeCommand(XFlowGraphCommands.GRAPH_RESIZE.id, {});\n                            });\n                            window.addEventListener('resize', resizeHandler);\n                            toDispose.push(Disposable.create(function () {\n                              window.removeEventListener('resize', resizeHandler);\n                            }));\n\n                          case 4:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n                }\n              }),\n              /** 在graph停止时 取消外部事件 */\n              hooks.beforeGraphDestory.registerHook({\n                name: NsGraphEventPlugin.pluginId,\n                handler: function handler() {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n                    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                      while (1) {\n                        switch (_context6.prev = _context6.next) {\n                          case 0:\n                            toDispose.dispose();\n\n                          case 1:\n                          case \"end\":\n                            return _context6.stop();\n                        }\n                      }\n                    }, _callee6);\n                  }));\n                }\n              })];\n              toDispose.pushAll(disposables);\n              return _context7.abrupt(\"return\", toDispose);\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n  };\n};\n\n__decorate([inject(IGraphOptionProvider), __metadata(\"design:type\", Object)], GraphEventContribution.prototype, \"graphOptions\", void 0);\n\nGraphEventContribution = __decorate([singleton({\n  contrib: IHookContribution\n})], GraphEventContribution);\nexport { GraphEventContribution };","map":{"version":3,"sources":["../../../src/hooks/contributions/graph.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAT,EAAoB,MAApB,QAAkC,cAAlC;AACA,SAAS,oBAAT,QAAqC,+BAArC;AACA,SAAS,kBAAT,QAAmC,sCAAnC;AACA,SAAS,oBAAT,EAA+B,UAA/B,QAAiD,yBAAjD;AACA,SAAS,iBAAT,QAAkC,cAAlC;AACA,SAAS,QAAT,QAAyB,oBAAzB;AAGA,OAAM,IAAW,kBAAX;;AAAN,CAAA,UAAiB,kBAAjB,EAAmC;AACpB,EAAA,kBAAA,CAAA,QAAA,GAAW,kBAAX;AACd,CAFD,EAAiB,kBAAkB,KAAlB,kBAAkB,GAAA,EAAA,CAAnC;AAIA;;;AAGG;;;AAEH,IAAa,sBAAb,GAAA,kCAAA;AAAA;;AAAA;;AAIE,OAAA,SAAA,GAAY,IAAI,oBAAJ,EAAZ;;AAEA,OAAA,eAAA,GAAkB;AAAA,WAAW,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACpB,UAAU,CAAC,MAAX,CAAkB,YAAK,CAAG,CAA1B,CADoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA,EAAX;AAAA,GAAlB;AAIA;;;AACA,OAAA,YAAA,GAAe,UAAO,KAAP;AAAA,WAAwB,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/B,cAAA,SAD+B,GACnB,IAAI,oBAAJ,EADmB;AAG/B,cAAA,WAH+B,GAGjB;AAClB;AACA,cAAA,KAAK,CAAC,QAAN,CAAe,YAAf,CAA4B;AAC1B,gBAAA,IAAI,EAAE,kBAAkB,CAAC,QADC;AAE1B,gBAAA,OAAO,EAAE,iBAAM,IAAN;AAAA,yBAAa,SAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,mCAAM,KAAK,YAAL,CAAkB,UAAlB,EAAN;;AADC;AAAA;AACZ,4BAAA,MADY,yBACZ,MADY;AAEpB,4BAAA,MAAM,CAAC,OAAP,CAAe,UAAA,KAAK,EAAG;AACrB,8BAAA,IAAI,CAAC,IAAL,CAAU,KAAV;AACD,6BAFD;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA,EAAb;AAAA;AAFiB,eAA5B,CAFkB;AAYlB;AACA,cAAA,KAAK,CAAC,cAAN,CAAqB,YAArB,CAAkC;AAChC,gBAAA,IAAI,EAAE,kBAAkB,CAAC,QADO;AAEhC,gBAAA,OAAO,EAAE,iBAAM,IAAN;AAAA,yBAAa,SAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ,4BAAA,cADY,GAC4B,IAD5B,CACZ,cADY,EACI,YADJ,GAC4B,IAD5B,CACI,YADJ,EACkB,KADlB,GAC4B,IAD5B,CACkB,KADlB;AAEpB;;AAFoB;AAGP,mCAAM,KAAK,CAAC,QAAN,CAAe,IAAf,CAAoB,EAApB,EAAwB,UAAM,YAAN;AAAA,qCAAqB,SAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0EACvD,YAAY,CAAC,GAAb,CAAiB,UAAA,CAAC,EAAG;AAC1B,8CAAM,OAAO,GAAG,SAAV,OAAU,CAAA,WAAW,EAAG;AAC5B,4CAAA,CAAC,CAAC,QAAF,CAAW,WAAX,EAAwB,cAAxB,EAAwC,YAAxC;AACD,2CAFD;;AAGA,0CAAA,KAAK,CAAC,EAAN,CAAS,CAAC,CAAC,SAAX,EAAsB,OAAtB;AACA,iDAAO;AACL,4CAAA,OAAO,EAAE,mBAAK;AACZ,8CAAA,KAAK,CAAC,GAAN,CAAU,CAAC,CAAC,SAAZ,EAAuB,OAAvB;AACD;AAHI,2CAAP;AAKD,yCAVM,CADuD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAA,EAArB;AAAA,6BAAxB,CAAN;;AAHO;AAGd,4BAAA,IAHc;AAgBpB,4BAAA,SAAS,CAAC,OAAV,CAAkB,IAAlB;;AAhBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA,EAAb;AAAA;AAFuB,eAAlC,CAbkB;AAkClB;AACA,cAAA,KAAK,CAAC,cAAN,CAAqB,YAArB,CAAkC;AAChC,gBAAA,IAAI,EAAE,uBAD0B;AAEhC,gBAAA,OAAO,EAAE,iBAAM,IAAN;AAAA,yBAAa,SAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ,4BAAA,cADY,GACO,IADP,CACZ,cADY;AAEd,4BAAA,aAFc,GAEE,QAAQ,CAAC,YAAK;AAClC,8BAAA,cAAc,CAAC,cAAf,CAA8B,kBAAkB,CAAC,YAAnB,CAAgC,EAA9D,EAAkE,EAAlE;AACD,6BAF6B,CAFV;AAMpB,4BAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,aAAlC;AAEA,4BAAA,SAAS,CAAC,IAAV,CACE,UAAU,CAAC,MAAX,CAAkB,YAAK;AACrB,8BAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,aAArC;AACD,6BAFD,CADF;;AARoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA,EAAb;AAAA;AAFuB,eAAlC,CAnCkB;AAqDlB;AACA,cAAA,KAAK,CAAC,kBAAN,CAAyB,YAAzB,CAAsC;AACpC,gBAAA,IAAI,EAAE,kBAAkB,CAAC,QADW;AAEpC,gBAAA,OAAO,EAAE;AAAA,yBAAW,SAAA,CAAA,MAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAClB,4BAAA,SAAS,CAAC,OAAV;;AADkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA,EAAX;AAAA;AAF2B,eAAtC,CAtDkB,CAHiB;AAiErC,cAAA,SAAS,CAAC,OAAV,CAAkB,WAAlB;AAjEqC,gDAkE9B,SAlE8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA,EAAxB;AAAA,GAAf;AAoED,CA/ED;;AAEgC,UAAA,CAAA,CAA7B,MAAM,CAAC,oBAAD,CAAuB,E,iCAAA,CAAA,E,gCAAA,E,cAAA,E,KAAkC,CAAlC,CAAA;;AAFnB,sBAAsB,GAAA,UAAA,CAAA,CADlC,SAAS,CAAC;AAAE,EAAA,OAAO,EAAE;AAAX,CAAD,CACyB,CAAA,EAAtB,sBAAsB,CAAtB;SAAA,sB","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { singleton, inject } from 'mana-syringe';\nimport { IGraphOptionProvider } from '../../xflow-main/graph/config';\nimport { XFlowGraphCommands } from '../../command-contributions/constant';\nimport { DisposableCollection, Disposable } from '../../common/disposable';\nimport { IHookContribution } from '../interface';\nimport { throttle } from '../../common/utils';\nexport var NsGraphEventPlugin;\n(function (NsGraphEventPlugin) {\n    NsGraphEventPlugin.pluginId = 'GraphEventPlugin';\n})(NsGraphEventPlugin || (NsGraphEventPlugin = {}));\n/**\n * 内置的hook contribution\n * 处理graph config 的 evnets props\n */\nlet GraphEventContribution = class GraphEventContribution {\n    constructor() {\n        this.toDispose = new DisposableCollection();\n        this.registerHookHub = () => __awaiter(this, void 0, void 0, function* () {\n            return Disposable.create(() => { });\n        });\n        /** 扩展Hook */\n        this.registerHook = (hooks) => __awaiter(this, void 0, void 0, function* () {\n            const toDispose = new DisposableCollection();\n            const disposables = [\n                /** 在graph启动前, 注册外部事件到x6Events的hooks上*/\n                hooks.x6Events.registerHook({\n                    name: NsGraphEventPlugin.pluginId,\n                    handler: (args) => __awaiter(this, void 0, void 0, function* () {\n                        const { events } = yield this.graphOptions.getOptions();\n                        events.forEach(event => {\n                            args.push(event);\n                        });\n                    }),\n                }),\n                /** 在graph init后, 外部事件 */\n                hooks.afterGraphInit.registerHook({\n                    name: NsGraphEventPlugin.pluginId,\n                    handler: (args) => __awaiter(this, void 0, void 0, function* () {\n                        const { commandService, modelService, graph } = args;\n                        /** 注册事件 */\n                        const todo = yield hooks.x6Events.call([], (mergedEvents) => __awaiter(this, void 0, void 0, function* () {\n                            return mergedEvents.map(e => {\n                                const handler = handlerArgs => {\n                                    e.callback(handlerArgs, commandService, modelService);\n                                };\n                                graph.on(e.eventName, handler);\n                                return {\n                                    dispose: () => {\n                                        graph.off(e.eventName, handler);\n                                    },\n                                };\n                            });\n                        }));\n                        toDispose.pushAll(todo);\n                    }),\n                }),\n                /** 监听window的resize事件，实现自动resize */\n                hooks.afterGraphInit.registerHook({\n                    name: 'add auto resize event',\n                    handler: (args) => __awaiter(this, void 0, void 0, function* () {\n                        const { commandService } = args;\n                        const resizeHandler = throttle(() => {\n                            commandService.executeCommand(XFlowGraphCommands.GRAPH_RESIZE.id, {});\n                        });\n                        window.addEventListener('resize', resizeHandler);\n                        toDispose.push(Disposable.create(() => {\n                            window.removeEventListener('resize', resizeHandler);\n                        }));\n                    }),\n                }),\n                /** 在graph停止时 取消外部事件 */\n                hooks.beforeGraphDestory.registerHook({\n                    name: NsGraphEventPlugin.pluginId,\n                    handler: () => __awaiter(this, void 0, void 0, function* () {\n                        toDispose.dispose();\n                    }),\n                }),\n            ];\n            toDispose.pushAll(disposables);\n            return toDispose;\n        });\n    }\n};\n__decorate([\n    inject(IGraphOptionProvider),\n    __metadata(\"design:type\", Object)\n], GraphEventContribution.prototype, \"graphOptions\", void 0);\nGraphEventContribution = __decorate([\n    singleton({ contrib: IHookContribution })\n], GraphEventContribution);\nexport { GraphEventContribution };\n//# sourceMappingURL=graph.js.map"]},"metadata":{},"sourceType":"module"}