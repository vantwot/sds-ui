{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { MODELS } from '../../model-service';\nimport { XFlowGraphCommands } from '../constant';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nexport var NsGraphSaveData;\n\n(function (NsGraphSaveData) {\n  /** Command Id: 用于注册named factory */\n  NsGraphSaveData.command = XFlowGraphCommands.SAVE_GRAPH_DATA;\n  /** hookName */\n\n  NsGraphSaveData.hookKey = 'saveGrpahData';\n})(NsGraphSaveData || (NsGraphSaveData = {}));\n\nlet GraphSaveDataCommand =\n/** 创建节点命令 */\nclass GraphSaveDataCommand {\n  constructor() {\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.ctx;\n      const args = ctx.getArgs();\n      const hooks = ctx.getHooks();\n      /** 执行hooks */\n\n      yield hooks.saveGrpahData.call(\n      /** 执行hooks pipeline处理args */\n      args.args,\n      /** 执行 callback */\n      handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const {\n          saveGraphDataService,\n          includeAttrs\n        } = handlerArgs;\n        const x6Graph = yield ctx.getX6Graph();\n        const x6Nodes = x6Graph.getNodes();\n        const x6Edges = x6Graph.getEdges();\n        const nodes = x6Nodes.map(node => {\n          const data = node.getData();\n          const position = node.position();\n          const size = node.size();\n          const model = Object.assign(Object.assign(Object.assign({\n            id: node.id\n          }, data), position), size);\n\n          if (includeAttrs) {\n            model.attrs = node.getAttrs();\n          }\n\n          return model;\n        });\n        const edges = x6Edges.map(edge => {\n          const data = edge.getData();\n          const model = Object.assign({\n            id: edge.id\n          }, data);\n\n          if (includeAttrs) {\n            model.attrs = edge.getAttrs();\n          }\n\n          return model;\n        });\n        const graphData = {\n          nodes,\n          edges\n        };\n        const graphMeta = yield MODELS.GRAPH_META.useValue(ctx.getModelService());\n        /** 执行 service */\n\n        if (saveGraphDataService) {\n          const result = yield saveGraphDataService(graphMeta, graphData);\n          /** 设置结果 */\n\n          if (result) {\n            this.ctx.setResult(result);\n          }\n        }\n\n        return {};\n      }),\n      /** 外部的 hook */\n      args.hooks);\n      return this;\n    });\n    /** undo cmd */\n\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n    /** redo cmd */\n\n\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n\n      return this;\n    });\n  }\n\n  init() {\n    this.ctx = this.contextProvider();\n  }\n  /** isUndoable */\n\n\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n\n};\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphSaveDataCommand.prototype, \"contextProvider\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], GraphSaveDataCommand.prototype, \"init\", null);\n\nGraphSaveDataCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsGraphSaveData.command.id\n  }\n})\n/** 创建节点命令 */\n], GraphSaveDataCommand);\nexport { GraphSaveDataCommand };","map":{"version":3,"sources":["../../../src/command-contributions/graph/graph-save-data.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { MODELS } from '../../model-service';\nimport { XFlowGraphCommands } from '../constant';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nexport var NsGraphSaveData;\n(function (NsGraphSaveData) {\n    /** Command Id: 用于注册named factory */\n    NsGraphSaveData.command = XFlowGraphCommands.SAVE_GRAPH_DATA;\n    /** hookName */\n    NsGraphSaveData.hookKey = 'saveGrpahData';\n})(NsGraphSaveData || (NsGraphSaveData = {}));\nlet GraphSaveDataCommand = \n/** 创建节点命令 */\nclass GraphSaveDataCommand {\n    constructor() {\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.ctx;\n            const args = ctx.getArgs();\n            const hooks = ctx.getHooks();\n            /** 执行hooks */\n            yield hooks.saveGrpahData.call(\n            /** 执行hooks pipeline处理args */\n            args.args, \n            /** 执行 callback */\n            (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                const { saveGraphDataService, includeAttrs } = handlerArgs;\n                const x6Graph = yield ctx.getX6Graph();\n                const x6Nodes = x6Graph.getNodes();\n                const x6Edges = x6Graph.getEdges();\n                const nodes = x6Nodes.map(node => {\n                    const data = node.getData();\n                    const position = node.position();\n                    const size = node.size();\n                    const model = Object.assign(Object.assign(Object.assign({ id: node.id }, data), position), size);\n                    if (includeAttrs) {\n                        model.attrs = node.getAttrs();\n                    }\n                    return model;\n                });\n                const edges = x6Edges.map(edge => {\n                    const data = edge.getData();\n                    const model = Object.assign({ id: edge.id }, data);\n                    if (includeAttrs) {\n                        model.attrs = edge.getAttrs();\n                    }\n                    return model;\n                });\n                const graphData = { nodes, edges };\n                const graphMeta = yield MODELS.GRAPH_META.useValue(ctx.getModelService());\n                /** 执行 service */\n                if (saveGraphDataService) {\n                    const result = yield saveGraphDataService(graphMeta, graphData);\n                    /** 设置结果 */\n                    if (result) {\n                        this.ctx.setResult(result);\n                    }\n                }\n                return {};\n            }), \n            /** 外部的 hook */\n            args.hooks);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            this.ctx.undo();\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.ctx.isUndoable) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    init() {\n        this.ctx = this.contextProvider();\n    }\n    /** isUndoable */\n    isUndoable() {\n        return this.ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], GraphSaveDataCommand.prototype, \"contextProvider\", void 0);\n__decorate([\n    postConstruct(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], GraphSaveDataCommand.prototype, \"init\", null);\nGraphSaveDataCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsGraphSaveData.command.id },\n    })\n    /** 创建节点命令 */\n], GraphSaveDataCommand);\nexport { GraphSaveDataCommand };\n//# sourceMappingURL=graph-save-data.js.map"]},"metadata":{},"sourceType":"module"}