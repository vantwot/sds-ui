{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nimport { mix } from '@antv/util';\n/**\n * 基本的椭圆，可以添加文本，默认文本居中\n */\n\nregisterNode('ellipse', {\n  // 自定义节点时的配置\n  options: {\n    size: [80, 40],\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'ellipse',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n        icon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('ellipse', {\n      attrs: style,\n      className: 'ellipse-keyShape',\n      name: 'ellipse-keyShape',\n      draggable: true\n    });\n    group['shapeMap']['ellipse-keyShape'] = keyShape;\n    var width = icon.width,\n        height = icon.height,\n        show = icon.show,\n        text = icon.text;\n\n    if (show) {\n      if (text) {\n        group['shapeMap'][this.type + \"-icon\"] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: this.type + \"-icon\",\n          name: this.type + \"-icon\",\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][this.type + \"-icon\"] = group.addShape('image', {\n          attrs: __assign({\n            x: -width / 2,\n            y: -height / 2\n          }, icon),\n          className: this.type + \"-icon\",\n          name: this.type + \"-icon\",\n          draggable: true\n        });\n      }\n    }\n\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n        linkPoints = _a === void 0 ? {} : _a;\n\n    var top = linkPoints.top,\n        left = linkPoints.left,\n        right = linkPoints.right,\n        bottom = linkPoints.bottom,\n        markSize = linkPoints.size,\n        markR = linkPoints.r,\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = mix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n\n    var styles = __assign({\n      x: 0,\n      y: 0,\n      rx: rx,\n      ry: ry\n    }, style);\n\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer(); // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n\n    var defaultStyle = this.getOptions({}).style;\n    var size = this.getSize(cfg);\n    var strokeStyle = {\n      stroke: cfg.color,\n      rx: size[0] / 2,\n      ry: size[1] / 2\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n\n    var keyShape = item.get('keyShape');\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, true, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@antv/g6-element/es/nodes/ellipse.js"],"names":["__assign","__rest","registerNode","BaseGlobal","Global","mix","options","size","style","x","y","stroke","defaultNode","fill","lineWidth","labelCfg","nodeLabel","fontSize","fontFamily","windowFontFamily","linkPoints","top","right","bottom","left","icon","show","img","width","height","stateStyles","nodeStateStyles","shapeType","labelPosition","drawShape","cfg","group","_a","mergeStyle","getOptions","getShapeStyle","keyShape","addShape","attrs","className","name","draggable","text","type","textBaseline","textAlign","drawLinkPoints","markSize","markR","r","markStyle","getSize","rx","ry","isAnchorPoint","defaultStyle","strokeStyle","color","styles","update","item","updateType","getContainer","get","attr","updateShape","updateLinkPoints"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,UAAU,IAAIC,MAArC,QAAmD,eAAnD;AACA,SAASC,GAAT,QAAoB,YAApB;AACA;AACA;AACA;;AAEAH,YAAY,CAAC,SAAD,EAAY;AACtB;AACAI,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,CADC;AAEPC,IAAAA,KAAK,EAAE;AACLC,MAAAA,CAAC,EAAE,CADE;AAELC,MAAAA,CAAC,EAAE,CAFE;AAGLC,MAAAA,MAAM,EAAEP,MAAM,CAACQ,WAAP,CAAmBJ,KAAnB,CAAyBG,MAH5B;AAILE,MAAAA,IAAI,EAAET,MAAM,CAACQ,WAAP,CAAmBJ,KAAnB,CAAyBK,IAJ1B;AAKLC,MAAAA,SAAS,EAAEV,MAAM,CAACQ,WAAP,CAAmBJ,KAAnB,CAAyBM;AAL/B,KAFA;AASP;AACAC,IAAAA,QAAQ,EAAE;AACRP,MAAAA,KAAK,EAAE;AACLK,QAAAA,IAAI,EAAET,MAAM,CAACY,SAAP,CAAiBR,KAAjB,CAAuBK,IADxB;AAELI,QAAAA,QAAQ,EAAEb,MAAM,CAACY,SAAP,CAAiBR,KAAjB,CAAuBS,QAF5B;AAGLC,QAAAA,UAAU,EAAEd,MAAM,CAACe;AAHd;AADC,KAVH;AAiBP;AACAC,IAAAA,UAAU,EAAE;AACVC,MAAAA,GAAG,EAAE,KADK;AAEVC,MAAAA,KAAK,EAAE,KAFG;AAGVC,MAAAA,MAAM,EAAE,KAHE;AAIVC,MAAAA,IAAI,EAAE,KAJI;AAKV;AACAjB,MAAAA,IAAI,EAAEH,MAAM,CAACQ,WAAP,CAAmBQ,UAAnB,CAA8Bb,IAN1B;AAOVO,MAAAA,SAAS,EAAEV,MAAM,CAACQ,WAAP,CAAmBQ,UAAnB,CAA8BN,SAP/B;AAQVD,MAAAA,IAAI,EAAET,MAAM,CAACQ,WAAP,CAAmBQ,UAAnB,CAA8BP,IAR1B;AASVF,MAAAA,MAAM,EAAEP,MAAM,CAACQ,WAAP,CAAmBQ,UAAnB,CAA8BT;AAT5B,KAlBL;AA6BP;AACAc,IAAAA,IAAI,EAAE;AACJ;AACAC,MAAAA,IAAI,EAAE,KAFF;AAGJ;AACAC,MAAAA,GAAG,EAAE,oFAJD;AAKJC,MAAAA,KAAK,EAAE,EALH;AAMJC,MAAAA,MAAM,EAAE;AANJ,KA9BC;AAsCPC,IAAAA,WAAW,EAAE9B,QAAQ,CAAC,EAAD,EAAKI,MAAM,CAAC2B,eAAZ;AAtCd,GAFa;AA0CtBC,EAAAA,SAAS,EAAE,SA1CW;AA2CtB;AACAC,EAAAA,aAAa,EAAE,QA5CO;AA6CtBC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,KAAxB,EAA+B;AACxC,QAAIC,EAAE,GAAG,CAAC,KAAKC,UAAL,IAAmB,KAAKC,UAAL,CAAgBJ,GAAhB,CAApB,EAA0CV,IAAnD;AAAA,QACIA,IAAI,GAAGY,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EADhC;AAEA,QAAI7B,KAAK,GAAG,KAAKgC,aAAL,CAAmBL,GAAnB,CAAZ;AACA,QAAIM,QAAQ,GAAGL,KAAK,CAACM,QAAN,CAAe,SAAf,EAA0B;AACvCC,MAAAA,KAAK,EAAEnC,KADgC;AAEvCoC,MAAAA,SAAS,EAAE,kBAF4B;AAGvCC,MAAAA,IAAI,EAAE,kBAHiC;AAIvCC,MAAAA,SAAS,EAAE;AAJ4B,KAA1B,CAAf;AAMAV,IAAAA,KAAK,CAAC,UAAD,CAAL,CAAkB,kBAAlB,IAAwCK,QAAxC;AACA,QAAIb,KAAK,GAAGH,IAAI,CAACG,KAAjB;AAAA,QACIC,MAAM,GAAGJ,IAAI,CAACI,MADlB;AAAA,QAEIH,IAAI,GAAGD,IAAI,CAACC,IAFhB;AAAA,QAGIqB,IAAI,GAAGtB,IAAI,CAACsB,IAHhB;;AAKA,QAAIrB,IAAJ,EAAU;AACR,UAAIqB,IAAJ,EAAU;AACRX,QAAAA,KAAK,CAAC,UAAD,CAAL,CAAkB,KAAKY,IAAL,GAAY,OAA9B,IAAyCZ,KAAK,CAACM,QAAN,CAAe,MAAf,EAAuB;AAC9DC,UAAAA,KAAK,EAAE3C,QAAQ,CAAC;AACdS,YAAAA,CAAC,EAAE,CADW;AAEdC,YAAAA,CAAC,EAAE,CAFW;AAGdO,YAAAA,QAAQ,EAAE,EAHI;AAIdJ,YAAAA,IAAI,EAAE,MAJQ;AAKdF,YAAAA,MAAM,EAAE,MALM;AAMdsC,YAAAA,YAAY,EAAE,QANA;AAOdC,YAAAA,SAAS,EAAE;AAPG,WAAD,EAQZzB,IARY,CAD+C;AAU9DmB,UAAAA,SAAS,EAAE,KAAKI,IAAL,GAAY,OAVuC;AAW9DH,UAAAA,IAAI,EAAE,KAAKG,IAAL,GAAY,OAX4C;AAY9DF,UAAAA,SAAS,EAAE;AAZmD,SAAvB,CAAzC;AAcD,OAfD,MAeO;AACLV,QAAAA,KAAK,CAAC,UAAD,CAAL,CAAkB,KAAKY,IAAL,GAAY,OAA9B,IAAyCZ,KAAK,CAACM,QAAN,CAAe,OAAf,EAAwB;AAC/DC,UAAAA,KAAK,EAAE3C,QAAQ,CAAC;AACdS,YAAAA,CAAC,EAAE,CAACmB,KAAD,GAAS,CADE;AAEdlB,YAAAA,CAAC,EAAE,CAACmB,MAAD,GAAU;AAFC,WAAD,EAGZJ,IAHY,CADgD;AAK/DmB,UAAAA,SAAS,EAAE,KAAKI,IAAL,GAAY,OALwC;AAM/DH,UAAAA,IAAI,EAAE,KAAKG,IAAL,GAAY,OAN6C;AAO/DF,UAAAA,SAAS,EAAE;AAPoD,SAAxB,CAAzC;AASD;AACF;;AAED,SAAKK,cAAL,CAAoBhB,GAApB,EAAyBC,KAAzB;AACA,WAAOK,QAAP;AACD,GA5FqB;;AA8FtB;AACF;AACA;AACA;AACA;AACEU,EAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBhB,GAAxB,EAA6BC,KAA7B,EAAoC;AAClD,QAAIC,EAAE,GAAG,CAAC,KAAKC,UAAL,IAAmB,KAAKC,UAAL,CAAgBJ,GAAhB,CAApB,EAA0Cf,UAAnD;AAAA,QACIA,UAAU,GAAGiB,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EADtC;;AAGA,QAAIhB,GAAG,GAAGD,UAAU,CAACC,GAArB;AAAA,QACIG,IAAI,GAAGJ,UAAU,CAACI,IADtB;AAAA,QAEIF,KAAK,GAAGF,UAAU,CAACE,KAFvB;AAAA,QAGIC,MAAM,GAAGH,UAAU,CAACG,MAHxB;AAAA,QAII6B,QAAQ,GAAGhC,UAAU,CAACb,IAJ1B;AAAA,QAKI8C,KAAK,GAAGjC,UAAU,CAACkC,CALvB;AAAA,QAMIC,SAAS,GAAGtD,MAAM,CAACmB,UAAD,EAAa,CAAC,KAAD,EAAQ,MAAR,EAAgB,OAAhB,EAAyB,QAAzB,EAAmC,MAAnC,EAA2C,GAA3C,CAAb,CANtB;;AAQA,QAAIb,IAAI,GAAG,KAAKiD,OAAL,CAAarB,GAAb,CAAX;AACA,QAAIsB,EAAE,GAAGlD,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAnB;AACA,QAAImD,EAAE,GAAGnD,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAnB;;AAEA,QAAIiB,IAAJ,EAAU;AACR;AACAY,MAAAA,KAAK,CAAC,UAAD,CAAL,CAAkB,iBAAlB,IAAuCA,KAAK,CAACM,QAAN,CAAe,QAAf,EAAyB;AAC9DC,QAAAA,KAAK,EAAE3C,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKuD,SAAL,CAAT,EAA0B;AACvC9C,UAAAA,CAAC,EAAE,CAACgD,EADmC;AAEvC/C,UAAAA,CAAC,EAAE,CAFoC;AAGvC4C,UAAAA,CAAC,EAAEF,QAAQ,GAAG,CAAX,IAAgBC,KAAhB,IAAyB;AAHW,SAA1B,CAD+C;AAM9DT,QAAAA,SAAS,EAAE,iBANmD;AAO9DC,QAAAA,IAAI,EAAE,iBAPwD;AAQ9Dc,QAAAA,aAAa,EAAE;AAR+C,OAAzB,CAAvC;AAUD;;AAED,QAAIrC,KAAJ,EAAW;AACT;AACAc,MAAAA,KAAK,CAAC,UAAD,CAAL,CAAkB,kBAAlB,IAAwCA,KAAK,CAACM,QAAN,CAAe,QAAf,EAAyB;AAC/DC,QAAAA,KAAK,EAAE3C,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKuD,SAAL,CAAT,EAA0B;AACvC9C,UAAAA,CAAC,EAAEgD,EADoC;AAEvC/C,UAAAA,CAAC,EAAE,CAFoC;AAGvC4C,UAAAA,CAAC,EAAEF,QAAQ,GAAG,CAAX,IAAgBC,KAAhB,IAAyB;AAHW,SAA1B,CADgD;AAM/DT,QAAAA,SAAS,EAAE,kBANoD;AAO/DC,QAAAA,IAAI,EAAE,kBAPyD;AAQ/Dc,QAAAA,aAAa,EAAE;AARgD,OAAzB,CAAxC;AAUD;;AAED,QAAItC,GAAJ,EAAS;AACP;AACAe,MAAAA,KAAK,CAAC,UAAD,CAAL,CAAkB,gBAAlB,IAAsCA,KAAK,CAACM,QAAN,CAAe,QAAf,EAAyB;AAC7DC,QAAAA,KAAK,EAAE3C,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKuD,SAAL,CAAT,EAA0B;AACvC9C,UAAAA,CAAC,EAAE,CADoC;AAEvCC,UAAAA,CAAC,EAAE,CAACgD,EAFmC;AAGvCJ,UAAAA,CAAC,EAAEF,QAAQ,GAAG,CAAX,IAAgBC,KAAhB,IAAyB;AAHW,SAA1B,CAD8C;AAM7DT,QAAAA,SAAS,EAAE,gBANkD;AAO7DC,QAAAA,IAAI,EAAE,gBAPuD;AAQ7Dc,QAAAA,aAAa,EAAE;AAR8C,OAAzB,CAAtC;AAUD;;AAED,QAAIpC,MAAJ,EAAY;AACV;AACAa,MAAAA,KAAK,CAAC,UAAD,CAAL,CAAkB,mBAAlB,IAAyCA,KAAK,CAACM,QAAN,CAAe,QAAf,EAAyB;AAChEC,QAAAA,KAAK,EAAE3C,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKuD,SAAL,CAAT,EAA0B;AACvC9C,UAAAA,CAAC,EAAE,CADoC;AAEvCC,UAAAA,CAAC,EAAEgD,EAFoC;AAGvCJ,UAAAA,CAAC,EAAEF,QAAQ,GAAG,CAAX,IAAgBC,KAAhB,IAAyB;AAHW,SAA1B,CADiD;AAMhET,QAAAA,SAAS,EAAE,mBANqD;AAOhEC,QAAAA,IAAI,EAAE,mBAP0D;AAQhEc,QAAAA,aAAa,EAAE;AARiD,OAAzB,CAAzC;AAUD;AACF,GA1KqB;;AA4KtB;AACF;AACA;AACA;AACA;AACEnB,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBL,GAAvB,EAA4B;AACzC,QAAIyB,YAAY,GAAG,CAAC,KAAKtB,UAAL,IAAmB,KAAKC,UAAL,CAAgBJ,GAAhB,CAApB,EAA0C3B,KAA7D;AACA,QAAIqD,WAAW,GAAG;AAChBlD,MAAAA,MAAM,EAAEwB,GAAG,CAAC2B;AADI,KAAlB,CAFyC,CAItC;;AAEH,QAAItD,KAAK,GAAGH,GAAG,CAAC,EAAD,EAAKuD,YAAL,EAAmBC,WAAnB,CAAf;AACA,QAAItD,IAAI,GAAG,KAAKiD,OAAL,CAAarB,GAAb,CAAX;AACA,QAAIsB,EAAE,GAAGlD,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAnB;AACA,QAAImD,EAAE,GAAGnD,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAnB;;AAEA,QAAIwD,MAAM,GAAG/D,QAAQ,CAAC;AACpBS,MAAAA,CAAC,EAAE,CADiB;AAEpBC,MAAAA,CAAC,EAAE,CAFiB;AAGpB+C,MAAAA,EAAE,EAAEA,EAHgB;AAIpBC,MAAAA,EAAE,EAAEA;AAJgB,KAAD,EAKlBlD,KALkB,CAArB;;AAOA,WAAOuD,MAAP;AACD,GApMqB;AAqMtBC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgB7B,GAAhB,EAAqB8B,IAArB,EAA2BC,UAA3B,EAAuC;AAC7C,QAAI9B,KAAK,GAAG6B,IAAI,CAACE,YAAL,EAAZ,CAD6C,CACZ;;AAEjC,QAAIP,YAAY,GAAG,KAAKrB,UAAL,CAAgB,EAAhB,EAAoB/B,KAAvC;AACA,QAAID,IAAI,GAAG,KAAKiD,OAAL,CAAarB,GAAb,CAAX;AACA,QAAI0B,WAAW,GAAG;AAChBlD,MAAAA,MAAM,EAAEwB,GAAG,CAAC2B,KADI;AAEhBL,MAAAA,EAAE,EAAElD,IAAI,CAAC,CAAD,CAAJ,GAAU,CAFE;AAGhBmD,MAAAA,EAAE,EAAEnD,IAAI,CAAC,CAAD,CAAJ,GAAU;AAHE,KAAlB,CAL6C,CAS1C;;AAEH,QAAIkC,QAAQ,GAAGwB,IAAI,CAACG,GAAL,CAAS,UAAT,CAAf;AACA,QAAI5D,KAAK,GAAGH,GAAG,CAAC,EAAD,EAAKuD,YAAL,EAAmBnB,QAAQ,CAAC4B,IAAT,EAAnB,EAAoCR,WAApC,CAAf;AACArD,IAAAA,KAAK,GAAGH,GAAG,CAACG,KAAD,EAAQ2B,GAAG,CAAC3B,KAAZ,CAAX;AACA,SAAK8D,WAAL,CAAiBnC,GAAjB,EAAsB8B,IAAtB,EAA4BzD,KAA5B,EAAmC,IAAnC,EAAyC0D,UAAzC;AACA,SAAKK,gBAAL,CAAsBpC,GAAtB,EAA2BC,KAA3B;AACD;AArNqB,CAAZ,EAsNT,aAtNS,CAAZ","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nimport { mix } from '@antv/util';\n/**\n * 基本的椭圆，可以添加文本，默认文本居中\n */\n\nregisterNode('ellipse', {\n  // 自定义节点时的配置\n  options: {\n    size: [80, 40],\n    style: {\n      x: 0,\n      y: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'ellipse',\n  // 文本位置\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).icon,\n        icon = _a === void 0 ? {} : _a;\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('ellipse', {\n      attrs: style,\n      className: 'ellipse-keyShape',\n      name: 'ellipse-keyShape',\n      draggable: true\n    });\n    group['shapeMap']['ellipse-keyShape'] = keyShape;\n    var width = icon.width,\n        height = icon.height,\n        show = icon.show,\n        text = icon.text;\n\n    if (show) {\n      if (text) {\n        group['shapeMap'][this.type + \"-icon\"] = group.addShape('text', {\n          attrs: __assign({\n            x: 0,\n            y: 0,\n            fontSize: 12,\n            fill: '#000',\n            stroke: '#000',\n            textBaseline: 'middle',\n            textAlign: 'center'\n          }, icon),\n          className: this.type + \"-icon\",\n          name: this.type + \"-icon\",\n          draggable: true\n        });\n      } else {\n        group['shapeMap'][this.type + \"-icon\"] = group.addShape('image', {\n          attrs: __assign({\n            x: -width / 2,\n            y: -height / 2\n          }, icon),\n          className: this.type + \"-icon\",\n          name: this.type + \"-icon\",\n          draggable: true\n        });\n      }\n    }\n\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n        linkPoints = _a === void 0 ? {} : _a;\n\n    var top = linkPoints.top,\n        left = linkPoints.left,\n        right = linkPoints.right,\n        bottom = linkPoints.bottom,\n        markSize = linkPoints.size,\n        markR = linkPoints.r,\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: rx,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: ry,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = mix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var rx = size[0] / 2;\n    var ry = size[1] / 2;\n\n    var styles = __assign({\n      x: 0,\n      y: 0,\n      rx: rx,\n      ry: ry\n    }, style);\n\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer(); // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n\n    var defaultStyle = this.getOptions({}).style;\n    var size = this.getSize(cfg);\n    var strokeStyle = {\n      stroke: cfg.color,\n      rx: size[0] / 2,\n      ry: size[1] / 2\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n\n    var keyShape = item.get('keyShape');\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, true, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');"]},"metadata":{},"sourceType":"module"}