{"ast":null,"code":"export class Deferred {\n  constructor() {\n    var _this = this;\n\n    this.isResolved = false;\n    this.isRejected = false;\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = function () {\n        _this.isResolved = true;\n        resolve(...arguments);\n      };\n\n      this.reject = function () {\n        _this.isRejected = true;\n        reject(...arguments);\n      };\n    });\n  }\n\n}","map":{"version":3,"sources":["../../src/common/deferred.ts"],"names":[],"mappings":"AAAA,OAAM,MAAO,QAAP,CAAe;AAWnB,EAAA,WAAA,GAAA;AAAA;;AAVA,SAAA,UAAA,GAAsB,KAAtB;AAEA,SAAA,UAAA,GAAsB,KAAtB;AASE,SAAK,OAAL,GAAe,IAAI,OAAJ,CAAe,CAAC,OAAD,EAAU,MAAV,KAAoB;AAChD,WAAK,OAAL,GAAe,YAAY;AACzB,QAAA,KAAI,CAAC,UAAL,GAAkB,IAAlB;AACA,QAAA,OAAO,CAAC,YAAD,CAAP;AACD,OAHD;;AAIA,WAAK,MAAL,GAAc,YAAY;AACxB,QAAA,KAAI,CAAC,UAAL,GAAkB,IAAlB;AACA,QAAA,MAAM,CAAC,YAAD,CAAN;AACD,OAHD;AAID,KATc,CAAf;AAUD;;AAtBkB","sourceRoot":"","sourcesContent":["export class Deferred {\n    constructor() {\n        this.isResolved = false;\n        this.isRejected = false;\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (...args) => {\n                this.isResolved = true;\n                resolve(...args);\n            };\n            this.reject = (...args) => {\n                this.isRejected = true;\n                reject(...args);\n            };\n        });\n    }\n}\n//# sourceMappingURL=deferred.js.map"]},"metadata":{},"sourceType":"module"}