{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nimport { cellsToJson } from '../../common/graph-utils';\nimport { LOCAL_STORAGE_KEY } from '../../constants';\nexport var NsGraphCopySelection;\n\n(function (NsGraphCopySelection) {\n  /** Command: 用于注册named factory */\n  NsGraphCopySelection.command = XFlowGraphCommands.GRAPH_COPY;\n  /** hookName */\n\n  NsGraphCopySelection.hookKey = 'graphCopySelection';\n})(NsGraphCopySelection || (NsGraphCopySelection = {}));\n\nlet GraphCopySelectionCommand =\n/** 创建节点命令 */\nclass GraphCopySelectionCommand {\n  constructor() {\n    this.parseCells = cells => {\n      // if groupNode add its group children\n      cells.forEach(cell => {\n        const data = cell.getData();\n\n        if (cell.isNode() && data.isGroup) {\n          const children = cell.getChildren();\n          children.forEach(child => {\n            cells.push(child);\n          });\n        }\n      }); // filter edges target not in selections\n\n      const nodeIds = cells.filter(cell => cell.isNode()).map(cell => cell.id);\n      const map = cells.reduce((acc, cell) => {\n        if (cell.isEdge()) {\n          const source = cell.getSourceCellId();\n          const target = cell.getTargetCellId();\n\n          if (source && target) {\n            if (nodeIds.includes(source) && nodeIds.includes(target)) {\n              acc.set(cell.id, cell);\n            }\n          }\n        } else {\n          acc.set(cell.id, cell);\n        }\n\n        return acc;\n      }, new Map());\n      const uniqeList = Array.from(map.values());\n      return cellsToJson(uniqeList);\n    };\n    /** 执行Cmd */\n\n\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n      const {\n        args,\n        hooks: runtimeHook\n      } = ctx.getArgs();\n      const hooks = ctx.getHooks();\n      const result = yield hooks.graphCopySelection.call(args, () => __awaiter(this, void 0, void 0, function* () {\n        const graph = yield ctx.getX6Graph();\n        const cells = graph.getSelectedCells(); // 处理 Group cells/过滤无效的edges\n\n        const jsonObject = this.parseCells(cells);\n        const oldJsonString = window.localStorage.getItem(LOCAL_STORAGE_KEY); // 写cache\n\n        window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(jsonObject)); // undo 写cache\n\n        ctx.addUndo(Disposable.create(() => __awaiter(this, void 0, void 0, function* () {\n          window.localStorage.setItem(LOCAL_STORAGE_KEY, oldJsonString);\n        })));\n        return {\n          err: null\n        };\n      }), runtimeHook);\n      ctx.setResult(result);\n      return this;\n    });\n    /** undo cmd */\n\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.contextProvider();\n\n      if (this.isUndoable()) {\n        ctx.undo();\n      }\n\n      return this;\n    });\n    /** redo cmd */\n\n\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.isUndoable()) {\n        yield this.execute();\n      }\n\n      return this;\n    });\n  }\n\n  isUndoable() {\n    const ctx = this.contextProvider();\n    return ctx.isUndoable();\n  }\n\n};\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphCopySelectionCommand.prototype, \"contextProvider\", void 0);\n\nGraphCopySelectionCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsGraphCopySelection.command.id\n  }\n})\n/** 创建节点命令 */\n], GraphCopySelectionCommand);\nexport { GraphCopySelectionCommand };","map":{"version":3,"sources":["../../../src/command-contributions/graph/graph-copy.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nimport { cellsToJson } from '../../common/graph-utils';\nimport { LOCAL_STORAGE_KEY } from '../../constants';\nexport var NsGraphCopySelection;\n(function (NsGraphCopySelection) {\n    /** Command: 用于注册named factory */\n    NsGraphCopySelection.command = XFlowGraphCommands.GRAPH_COPY;\n    /** hookName */\n    NsGraphCopySelection.hookKey = 'graphCopySelection';\n})(NsGraphCopySelection || (NsGraphCopySelection = {}));\nlet GraphCopySelectionCommand = \n/** 创建节点命令 */\nclass GraphCopySelectionCommand {\n    constructor() {\n        this.parseCells = (cells) => {\n            // if groupNode add its group children\n            cells.forEach(cell => {\n                const data = cell.getData();\n                if (cell.isNode() && data.isGroup) {\n                    const children = cell.getChildren();\n                    children.forEach(child => {\n                        cells.push(child);\n                    });\n                }\n            });\n            // filter edges target not in selections\n            const nodeIds = cells.filter(cell => cell.isNode()).map(cell => cell.id);\n            const map = cells.reduce((acc, cell) => {\n                if (cell.isEdge()) {\n                    const source = cell.getSourceCellId();\n                    const target = cell.getTargetCellId();\n                    if (source && target) {\n                        if (nodeIds.includes(source) && nodeIds.includes(target)) {\n                            acc.set(cell.id, cell);\n                        }\n                    }\n                }\n                else {\n                    acc.set(cell.id, cell);\n                }\n                return acc;\n            }, new Map());\n            const uniqeList = Array.from(map.values());\n            return cellsToJson(uniqeList);\n        };\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            const { args, hooks: runtimeHook } = ctx.getArgs();\n            const hooks = ctx.getHooks();\n            const result = yield hooks.graphCopySelection.call(args, () => __awaiter(this, void 0, void 0, function* () {\n                const graph = yield ctx.getX6Graph();\n                const cells = graph.getSelectedCells();\n                // 处理 Group cells/过滤无效的edges\n                const jsonObject = this.parseCells(cells);\n                const oldJsonString = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n                // 写cache\n                window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(jsonObject));\n                // undo 写cache\n                ctx.addUndo(Disposable.create(() => __awaiter(this, void 0, void 0, function* () {\n                    window.localStorage.setItem(LOCAL_STORAGE_KEY, oldJsonString);\n                })));\n                return { err: null };\n            }), runtimeHook);\n            ctx.setResult(result);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.contextProvider();\n            if (this.isUndoable()) {\n                ctx.undo();\n            }\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.isUndoable()) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    isUndoable() {\n        const ctx = this.contextProvider();\n        return ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], GraphCopySelectionCommand.prototype, \"contextProvider\", void 0);\nGraphCopySelectionCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsGraphCopySelection.command.id },\n    })\n    /** 创建节点命令 */\n], GraphCopySelectionCommand);\nexport { GraphCopySelectionCommand };\n//# sourceMappingURL=graph-copy.js.map"]},"metadata":{},"sourceType":"module"}