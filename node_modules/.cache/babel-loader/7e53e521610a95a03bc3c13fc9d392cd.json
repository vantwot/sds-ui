{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nexport var NsPortEvent;\n\n(function (NsPortEvent) {\n  NsPortEvent.MOUSE_ENTER = 'node-port:mouseenter';\n  NsPortEvent.MOUSE_LEAVE = 'node-port:mouseleave';\n})(NsPortEvent || (NsPortEvent = {}));\n\nexport var ACTIVE_NODE_PORT;\n\n(function (ACTIVE_NODE_PORT) {\n  ACTIVE_NODE_PORT.id = 'ACTIVE_NODE_PORT';\n\n  ACTIVE_NODE_PORT.useModel = modelService => __awaiter(this, void 0, void 0, function* () {\n    const model = yield modelService.awaitModel(ACTIVE_NODE_PORT.id);\n    const data = yield model.getValidValue();\n    return {\n      data,\n      model\n    };\n  });\n})(ACTIVE_NODE_PORT || (ACTIVE_NODE_PORT = {}));","map":{"version":3,"sources":["../../src/canvas-node-port-tooltip/interface.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAM,IAAW,WAAX;;AAAN,CAAA,UAAiB,WAAjB,EAA4B;AACb,EAAA,WAAA,CAAA,WAAA,GAAc,sBAAd;AAUA,EAAA,WAAA,CAAA,WAAA,GAAc,sBAAd;AACd,CAZD,EAAiB,WAAW,KAAX,WAAW,GAAA,EAAA,CAA5B;;AAcA,OAAM,IAAW,gBAAX;;AAAN,CAAA,UAAiB,gBAAjB,EAAiC;AAClB,EAAA,gBAAA,CAAA,EAAA,GAAK,kBAAL;;AAWA,EAAA,gBAAA,CAAA,QAAA,GAAkB,YAAP,IAAsC,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAC5D,UAAM,KAAK,GAAG,MAAM,YAAY,CAAC,UAAb,CAAgC,gBAAA,CAAA,EAAhC,CAApB;AACA,UAAM,IAAI,GAAG,MAAM,KAAK,CAAC,aAAN,EAAnB;AACA,WAAO;AAAE,MAAA,IAAF;AAAQ,MAAA;AAAR,KAAP;AACD,GAJ6D,CAAjD;AAKd,CAjBD,EAAiB,gBAAgB,KAAhB,gBAAgB,GAAA,EAAA,CAAjC","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport var NsPortEvent;\n(function (NsPortEvent) {\n    NsPortEvent.MOUSE_ENTER = 'node-port:mouseenter';\n    NsPortEvent.MOUSE_LEAVE = 'node-port:mouseleave';\n})(NsPortEvent || (NsPortEvent = {}));\nexport var ACTIVE_NODE_PORT;\n(function (ACTIVE_NODE_PORT) {\n    ACTIVE_NODE_PORT.id = 'ACTIVE_NODE_PORT';\n    ACTIVE_NODE_PORT.useModel = (modelService) => __awaiter(this, void 0, void 0, function* () {\n        const model = yield modelService.awaitModel(ACTIVE_NODE_PORT.id);\n        const data = yield model.getValidValue();\n        return { data, model };\n    });\n})(ACTIVE_NODE_PORT || (ACTIVE_NODE_PORT = {}));\n//# sourceMappingURL=interface.js.map"]},"metadata":{},"sourceType":"module"}