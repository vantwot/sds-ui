{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nimport { MODELS } from '../../model-service';\nexport var NsGraphMeta;\n\n(function (NsGraphMeta) {\n  /** Command Id: 用于注册named factory */\n  NsGraphMeta.command = XFlowGraphCommands.LOAD_META;\n  /** hookName */\n\n  NsGraphMeta.hookKey = 'graphMeta';\n})(NsGraphMeta || (NsGraphMeta = {}));\n\nlet GraphMetaCommand =\n/** 创建节点命令 */\nclass GraphMetaCommand {\n  constructor() {\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const {\n        args,\n        hooks: runtimeHook\n      } = this.ctx.getArgs();\n      const hooks = this.ctx.getHooks();\n      const result = yield hooks.graphMeta.call(\n      /** 执行hooks pipeline处理args */\n      args,\n      /** 执行 callback */\n      handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        var _a;\n\n        const {\n          graphMetaService\n        } = handlerArgs;\n        const meta = graphMetaService ? yield graphMetaService(handlerArgs) : {\n          flowId: (_a = handlerArgs === null || handlerArgs === void 0 ? void 0 : handlerArgs.meta) === null || _a === void 0 ? void 0 : _a.flowId\n        };\n        return {\n          graphMeta: meta,\n          flowId: meta === null || meta === void 0 ? void 0 : meta.flowId\n        };\n      }),\n      /** 外部的 hook */\n      runtimeHook);\n      const modelService = this.ctx.getModelService();\n      /** 如果已经注册，直接更新已有的值 */\n\n      const model = yield MODELS.GRAPH_META.getModel(modelService);\n      model.setValue(result.graphMeta);\n      /** 设置结果 */\n\n      this.ctx.setResult(result);\n      return this;\n    });\n    /** undo cmd */\n\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n    /** redo cmd */\n\n\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n\n      return this;\n    });\n  }\n\n  init() {\n    this.ctx = this.contextProvider();\n  }\n  /** isUndoable */\n\n\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n\n};\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphMetaCommand.prototype, \"contextProvider\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], GraphMetaCommand.prototype, \"init\", null);\n\nGraphMetaCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsGraphMeta.command.id\n  }\n})\n/** 创建节点命令 */\n], GraphMetaCommand);\nexport { GraphMetaCommand };","map":{"version":3,"sources":["../../../src/command-contributions/graph/graph-meta.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,MAAT,EAAiB,UAAjB,EAA6B,aAA7B,QAAkD,cAAlD;AAGA,SAAS,eAAT,EAA0B,uBAA1B,QAAyD,yBAAzD;AAIA,SAAS,kBAAT,QAAmC,aAAnC;AACA,SAAS,MAAT,QAAuB,qBAAvB;AAIA,OAAM,IAAW,WAAX;;AAAN,CAAA,UAAiB,WAAjB,EAA4B;AAC1B;AACa,EAAA,WAAA,CAAA,OAAA,GAAU,kBAAkB,CAAC,SAA7B;AACb;;AACa,EAAA,WAAA,CAAA,OAAA,GAAU,WAAV;AAkBd,CAtBD,EAAiB,WAAW,KAAX,WAAW,GAAA,EAAA,CAA5B;;AA4BA,IAAa,gBAAgB;AAD7B;AACA,MAAa,gBAAb,CAA6B;AAA7B,EAAA,WAAA,GAAA;AAWE;AACA,SAAA,OAAA,GAAU,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACnB,YAAM;AAAE,QAAA,IAAF;AAAQ,QAAA,KAAK,EAAE;AAAf,UAA+B,KAAK,GAAL,CAAS,OAAT,EAArC;AACA,YAAM,KAAK,GAAG,KAAK,GAAL,CAAS,QAAT,EAAd;AACA,YAAM,MAAM,GAAG,MAAM,KAAK,CAAC,SAAN,CAAgB,IAAhB;AACnB;AACA,MAAA,IAFmB;AAGnB;AACM,MAAA,WAAN,IAAoB,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;;;AAClB,cAAM;AAAE,UAAA;AAAF,YAAuB,WAA7B;AACA,cAAM,IAAI,GAAG,gBAAgB,GACzB,MAAM,gBAAgB,CAAC,WAAD,CADG,GAEzB;AAAE,UAAA,MAAM,EAAE,CAAA,EAAA,GAAA,WAAW,KAAA,IAAX,IAAA,WAAW,KAAA,KAAA,CAAX,GAAW,KAAA,CAAX,GAAA,WAAW,CAAE,IAAb,MAAiB,IAAjB,IAAiB,EAAA,KAAA,KAAA,CAAjB,GAAiB,KAAA,CAAjB,GAAiB,EAAA,CAAE;AAA7B,SAFJ;AAGA,eAAO;AAAE,UAAA,SAAS,EAAE,IAAb;AAAmB,UAAA,MAAM,EAAE,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE;AAAjC,SAAP;AACD,OANmB,CAJD;AAWnB;AACA,MAAA,WAZmB,CAArB;AAeA,YAAM,YAAY,GAAG,KAAK,GAAL,CAAS,eAAT,EAArB;AACA;;AACA,YAAM,KAAK,GAAG,MAAM,MAAM,CAAC,UAAP,CAAkB,QAAlB,CAA2B,YAA3B,CAApB;AACA,MAAA,KAAK,CAAC,QAAN,CAAe,MAAM,CAAC,SAAtB;AAEA;;AACA,WAAK,GAAL,CAAS,SAAT,CAAmB,MAAnB;AACA,aAAO,IAAP;AACD,KA1BoB,CAArB;AA4BA;;;AACA,SAAA,IAAA,GAAO,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAChB,WAAK,GAAL,CAAS,IAAT;AACA,aAAO,IAAP;AACD,KAHiB,CAAlB;AAKA;;;AACA,SAAA,IAAA,GAAO,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAChB,UAAI,CAAC,KAAK,GAAL,CAAS,UAAd,EAA0B;AACxB,cAAM,KAAK,OAAL,EAAN;AACD;;AACD,aAAO,IAAP;AACD,KALiB,CAAlB;AAWD;;AAnDC,EAAA,IAAI,GAAA;AACF,SAAK,GAAL,GAAW,KAAK,eAAL,EAAX;AACD;AA6CD;;;AACA,EAAA,UAAU,GAAA;AACR,WAAO,KAAK,GAAL,CAAS,UAAT,EAAP;AACD;;AAzD0B,CAA7B;;AAEmC,UAAA,CAAA,CAAhC,MAAM,CAAC,uBAAD,CAA0B,E,iCAAA,CAAA,E,0BAAA,E,iBAAA,E,KAA4C,CAA5C,CAAA;;AAKjC,UAAA,CAAA,CADC,aAAa,EACd,E,mCAAA,E,mCAAA,E,uCAAA,CAAA,E,0BAAA,E,MAAA,EAEC,IAFD,CAAA;;AAPW,gBAAgB,GAAA,UAAA,CAAA,CAJ5B,UAAU,CAAC;AACV,EAAA,KAAK,EAAE;AAAE,IAAA,KAAK,EAAE,eAAT;AAA0B,IAAA,KAAK,EAAE,WAAW,CAAC,OAAZ,CAAoB;AAArD;AADG,CAAD;AAGX;AAC6B,CAAA,EAAhB,gBAAgB,CAAhB;SAAA,gB","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nimport { MODELS } from '../../model-service';\nexport var NsGraphMeta;\n(function (NsGraphMeta) {\n    /** Command Id: 用于注册named factory */\n    NsGraphMeta.command = XFlowGraphCommands.LOAD_META;\n    /** hookName */\n    NsGraphMeta.hookKey = 'graphMeta';\n})(NsGraphMeta || (NsGraphMeta = {}));\nlet GraphMetaCommand = \n/** 创建节点命令 */\nclass GraphMetaCommand {\n    constructor() {\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const { args, hooks: runtimeHook } = this.ctx.getArgs();\n            const hooks = this.ctx.getHooks();\n            const result = yield hooks.graphMeta.call(\n            /** 执行hooks pipeline处理args */\n            args, \n            /** 执行 callback */\n            (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                const { graphMetaService } = handlerArgs;\n                const meta = graphMetaService\n                    ? yield graphMetaService(handlerArgs)\n                    : { flowId: (_a = handlerArgs === null || handlerArgs === void 0 ? void 0 : handlerArgs.meta) === null || _a === void 0 ? void 0 : _a.flowId };\n                return { graphMeta: meta, flowId: meta === null || meta === void 0 ? void 0 : meta.flowId };\n            }), \n            /** 外部的 hook */\n            runtimeHook);\n            const modelService = this.ctx.getModelService();\n            /** 如果已经注册，直接更新已有的值 */\n            const model = yield MODELS.GRAPH_META.getModel(modelService);\n            model.setValue(result.graphMeta);\n            /** 设置结果 */\n            this.ctx.setResult(result);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            this.ctx.undo();\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.ctx.isUndoable) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    init() {\n        this.ctx = this.contextProvider();\n    }\n    /** isUndoable */\n    isUndoable() {\n        return this.ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], GraphMetaCommand.prototype, \"contextProvider\", void 0);\n__decorate([\n    postConstruct(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], GraphMetaCommand.prototype, \"init\", null);\nGraphMetaCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsGraphMeta.command.id },\n    })\n    /** 创建节点命令 */\n], GraphMetaCommand);\nexport { GraphMetaCommand };\n//# sourceMappingURL=graph-meta.js.map"]},"metadata":{},"sourceType":"module"}