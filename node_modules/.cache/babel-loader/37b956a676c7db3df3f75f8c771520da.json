{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar bounds_1 = require(\"../geometry/bounds\");\n\nvar lng_lat_1 = require(\"../geometry/lng-lat\");\n\nvar util_1 = require(\"../../util\");\n\nvar spherical_mercator_1 = require(\"../projection/spherical-mercator\");\n\nvar transformation_1 = require(\"../transformation\");\n\nvar lng_lat_bounds_1 = require(\"../geometry/lng-lat-bounds\");\n\nvar scale = 0.5 / (Math.PI * spherical_mercator_1.sphericalMercator.R);\nvar transform = new transformation_1.Transformation(scale, 0.5, -scale, 0.5);\nexports.CRS = {\n  wrapLng: [-180, 180],\n  wrapLat: null,\n  projection: spherical_mercator_1.sphericalMercator,\n  transformation: transform,\n  lngLatToPoint: function (lnglat, zoom) {\n    var projectedPoint = this.projection.project(lnglat);\n    var scale = this.scale(zoom);\n    return this.transformation.transform(projectedPoint, scale);\n  },\n  pointToLngLat: function (point, zoom) {\n    var scale = this.scale(zoom);\n    var untransformedPoint = this.transformation.untransform(point, scale);\n    return this.projection.unproject(untransformedPoint);\n  },\n  project: function (lnglat) {\n    return this.projection.project(lnglat);\n  },\n  unproject: function (point) {\n    return this.projection.unproject(point);\n  },\n  zoom: function (scale) {\n    return Math.log(scale / 256) / Math.LN2;\n  },\n  scale: function (zoom) {\n    return 256 * Math.pow(2, zoom);\n  },\n  getProjectedBounds: function (zoom) {\n    if (this.infinite) {\n      return new bounds_1.Bounds([[Infinity, Infinity], [Infinity, Infinity]]);\n    }\n\n    var b = this.projection.bounds;\n    var s = this.scale(zoom);\n    var min = this.transformation.transform(b.min, s);\n    var max = this.transformation.transform(b.max, s);\n    return new bounds_1.Bounds(min, max);\n  },\n  infinite: false,\n  wrapLngLat: function (lnglat) {\n    var lng = Array.isArray(this.wrapLng) ? util_1.wrapNum(lnglat.lng, this.wrapLng, true) : lnglat.lng;\n    var lat = Array.isArray(this.wrapLat) ? util_1.wrapNum(lnglat.lat, this.wrapLat, true) : lnglat.lat;\n    var alt = lnglat.alt;\n    return new lng_lat_1.LngLat(lng, lat, alt);\n  },\n  wrapLngLatBounds: function (bounds) {\n    var center = bounds.getCenter();\n    var newCenter = this.wrapLngLat(center);\n    var latShift = center.lat - newCenter.lat;\n    var lngShift = center.lng - newCenter.lng;\n\n    if (latShift === 0 && lngShift === 0) {\n      return bounds;\n    }\n\n    var sw = bounds.getSouthWest();\n    var ne = bounds.getNorthEast();\n    var newSw = new lng_lat_1.LngLat(sw.lng - lngShift, sw.lat - latShift);\n    var newNe = new lng_lat_1.LngLat(ne.lng - lngShift, ne.lat - latShift);\n    return new lng_lat_bounds_1.LngLatBounds(newSw, newNe);\n  }\n};","map":{"version":3,"sources":["../../../src/geo/crs/crs.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar bounds_1 = require(\"../geometry/bounds\");\nvar lng_lat_1 = require(\"../geometry/lng-lat\");\nvar util_1 = require(\"../../util\");\nvar spherical_mercator_1 = require(\"../projection/spherical-mercator\");\nvar transformation_1 = require(\"../transformation\");\nvar lng_lat_bounds_1 = require(\"../geometry/lng-lat-bounds\");\nvar scale = 0.5 / (Math.PI * spherical_mercator_1.sphericalMercator.R);\nvar transform = new transformation_1.Transformation(scale, 0.5, -scale, 0.5);\nexports.CRS = {\n    wrapLng: [-180, 180],\n    wrapLat: null,\n    projection: spherical_mercator_1.sphericalMercator,\n    transformation: transform,\n    lngLatToPoint: function (lnglat, zoom) {\n        var projectedPoint = this.projection.project(lnglat);\n        var scale = this.scale(zoom);\n        return this.transformation.transform(projectedPoint, scale);\n    },\n    pointToLngLat: function (point, zoom) {\n        var scale = this.scale(zoom);\n        var untransformedPoint = this.transformation.untransform(point, scale);\n        return this.projection.unproject(untransformedPoint);\n    },\n    project: function (lnglat) {\n        return this.projection.project(lnglat);\n    },\n    unproject: function (point) {\n        return this.projection.unproject(point);\n    },\n    zoom: function (scale) {\n        return Math.log(scale / 256) / Math.LN2;\n    },\n    scale: function (zoom) {\n        return 256 * Math.pow(2, zoom);\n    },\n    getProjectedBounds: function (zoom) {\n        if (this.infinite) {\n            return new bounds_1.Bounds([[Infinity, Infinity], [Infinity, Infinity]]);\n        }\n        var b = this.projection.bounds;\n        var s = this.scale(zoom);\n        var min = this.transformation.transform(b.min, s);\n        var max = this.transformation.transform(b.max, s);\n        return new bounds_1.Bounds(min, max);\n    },\n    infinite: false,\n    wrapLngLat: function (lnglat) {\n        var lng = Array.isArray(this.wrapLng) ? util_1.wrapNum(lnglat.lng, this.wrapLng, true) : lnglat.lng;\n        var lat = Array.isArray(this.wrapLat) ? util_1.wrapNum(lnglat.lat, this.wrapLat, true) : lnglat.lat;\n        var alt = lnglat.alt;\n        return new lng_lat_1.LngLat(lng, lat, alt);\n    },\n    wrapLngLatBounds: function (bounds) {\n        var center = bounds.getCenter();\n        var newCenter = this.wrapLngLat(center);\n        var latShift = center.lat - newCenter.lat;\n        var lngShift = center.lng - newCenter.lng;\n        if (latShift === 0 && lngShift === 0) {\n            return bounds;\n        }\n        var sw = bounds.getSouthWest();\n        var ne = bounds.getNorthEast();\n        var newSw = new lng_lat_1.LngLat(sw.lng - lngShift, sw.lat - latShift);\n        var newNe = new lng_lat_1.LngLat(ne.lng - lngShift, ne.lat - latShift);\n        return new lng_lat_bounds_1.LngLatBounds(newSw, newNe);\n    }\n};\n//# sourceMappingURL=crs.js.map"]},"metadata":{},"sourceType":"script"}