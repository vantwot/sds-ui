{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Util } from '../global';\nimport { ObjectExt } from '../util';\nimport { Edge as StandardEdge } from '../shape/standard/edge';\nexport var Options;\n\n(function (Options) {\n  function parseOptionGroup(graph, arg, options) {\n    const result = {};\n    Object.keys(options || {}).forEach(key => {\n      const val = options[key];\n      result[key] = typeof val === 'function' ? val.call(graph, arg) : val;\n    });\n    return result;\n  }\n\n  Options.parseOptionGroup = parseOptionGroup;\n})(Options || (Options = {}));\n\n(function (Options) {\n  function get(options) {\n    const {\n      grid,\n      panning,\n      selecting,\n      embedding,\n      snapline,\n      resizing,\n      rotating,\n      knob,\n      clipboard,\n      history,\n      scroller,\n      minimap,\n      keyboard,\n      mousewheel\n    } = options,\n          others = __rest(options // size\n    // ----\n    , [\"grid\", \"panning\", \"selecting\", \"embedding\", \"snapline\", \"resizing\", \"rotating\", \"knob\", \"clipboard\", \"history\", \"scroller\", \"minimap\", \"keyboard\", \"mousewheel\"]); // size\n    // ----\n\n\n    const container = options.container;\n\n    if (container != null) {\n      if (others.width == null) {\n        others.width = container.clientWidth;\n      }\n\n      if (others.height == null) {\n        others.height = container.clientHeight;\n      }\n    } else {\n      throw new Error(`Ensure the container of the graph is specified and valid`);\n    }\n\n    const result = ObjectExt.merge({}, Options.defaults, others); // grid\n    // ----\n\n    const defaultGrid = {\n      size: 10,\n      visible: false\n    };\n\n    if (typeof grid === 'number') {\n      result.grid = {\n        size: grid,\n        visible: false\n      };\n    } else if (typeof grid === 'boolean') {\n      result.grid = Object.assign(Object.assign({}, defaultGrid), {\n        visible: grid\n      });\n    } else {\n      result.grid = Object.assign(Object.assign({}, defaultGrid), grid);\n    } // booleas\n    // -------\n\n\n    const booleas = ['panning', 'selecting', 'embedding', 'snapline', 'resizing', 'rotating', 'knob', 'clipboard', 'history', 'scroller', 'minimap', 'keyboard', 'mousewheel'];\n    booleas.forEach(key => {\n      const val = options[key];\n\n      if (typeof val === 'boolean') {\n        result[key].enabled = val;\n      } else {\n        result[key] = Object.assign(Object.assign({}, result[key]), val);\n      }\n    }); // background\n    // ----------\n\n    if (result.background && result.scroller.enabled && result.scroller.background == null) {\n      result.scroller.background = result.background;\n      delete result.background;\n    }\n\n    return result;\n  }\n\n  Options.get = get;\n})(Options || (Options = {}));\n\n(function (Options) {\n  Options.defaults = {\n    x: 0,\n    y: 0,\n    grid: {\n      size: 10,\n      visible: false\n    },\n    scaling: {\n      min: 0.01,\n      max: 16\n    },\n    background: false,\n    highlighting: {\n      default: {\n        name: 'stroke',\n        args: {\n          padding: 3\n        }\n      },\n      nodeAvailable: {\n        name: 'className',\n        args: {\n          className: Util.prefix('available-node')\n        }\n      },\n      magnetAvailable: {\n        name: 'className',\n        args: {\n          className: Util.prefix('available-magnet')\n        }\n      }\n    },\n    connecting: {\n      snap: false,\n      multi: true,\n      // TODO: Unannotation the next line when the `multi` option was removed in the next major version.\n      // allowMulti: true,\n      dangling: true,\n      // TODO: Unannotation the next line when the `dangling` option was removed in the next major version.\n      // allowBlank: true,\n      allowLoop: true,\n      allowNode: true,\n      allowEdge: false,\n      allowPort: true,\n      highlight: false,\n      anchor: 'center',\n      edgeAnchor: 'ratio',\n      connectionPoint: 'boundary',\n      strategy: null,\n      router: 'normal',\n      connector: 'normal',\n\n      validateConnection(_ref) {\n        let {\n          type,\n          sourceView,\n          targetView\n        } = _ref;\n        const view = type === 'target' ? targetView : sourceView;\n        return view != null;\n      },\n\n      createEdge() {\n        return new StandardEdge();\n      }\n\n    },\n    transforming: {\n      clearAll: true,\n      clearOnBlankMouseDown: true\n    },\n    resizing: {\n      enabled: false,\n      minWidth: 0,\n      minHeight: 0,\n      maxWidth: Number.MAX_SAFE_INTEGER,\n      maxHeight: Number.MAX_SAFE_INTEGER,\n      orthogonal: true,\n      restricted: false,\n      autoScroll: true,\n      preserveAspectRatio: false,\n      allowReverse: true\n    },\n    rotating: {\n      enabled: false,\n      grid: 15\n    },\n    translating: {\n      restrict: false\n    },\n    knob: {\n      enabled: false,\n      clearAll: true,\n      clearOnBlankMouseDown: true\n    },\n    embedding: {\n      enabled: false,\n      findParent: 'bbox',\n      frontOnly: true,\n      validate: () => true\n    },\n    selecting: {\n      enabled: false,\n      rubberband: false,\n      rubberNode: true,\n      rubberEdge: false,\n      pointerEvents: 'auto',\n      multiple: true,\n      movable: true,\n      strict: false,\n      useCellGeometry: false,\n      selectCellOnMoved: false,\n      selectNodeOnMoved: false,\n      selectEdgeOnMoved: false,\n      content: null,\n      handles: null\n    },\n    panning: {\n      enabled: false,\n      eventTypes: ['leftMouseDown']\n    },\n    snapline: {\n      enabled: false\n    },\n    clipboard: {\n      enabled: false\n    },\n    history: {\n      enabled: false\n    },\n    scroller: {\n      enabled: false\n    },\n    keyboard: {\n      enabled: false\n    },\n    mousewheel: {\n      enabled: false,\n      factor: 1.2,\n      zoomAtMousePosition: true\n    },\n    async: false,\n    frozen: false,\n    sorting: 'exact',\n    moveThreshold: 0,\n    clickThreshold: 0,\n    magnetThreshold: 0,\n    preventDefaultDblClick: true,\n    preventDefaultMouseDown: false,\n    preventDefaultContextMenu: true,\n    preventDefaultBlankAction: true,\n    interacting: {\n      edgeLabelMovable: false\n    },\n    guard: () => false\n  };\n})(Options || (Options = {}));","map":{"version":3,"sources":["../../src/graph/options.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Util } from '../global';\nimport { ObjectExt } from '../util';\nimport { Edge as StandardEdge } from '../shape/standard/edge';\nexport var Options;\n(function (Options) {\n    function parseOptionGroup(graph, arg, options) {\n        const result = {};\n        Object.keys(options || {}).forEach((key) => {\n            const val = options[key];\n            result[key] = typeof val === 'function' ? val.call(graph, arg) : val;\n        });\n        return result;\n    }\n    Options.parseOptionGroup = parseOptionGroup;\n})(Options || (Options = {}));\n(function (Options) {\n    function get(options) {\n        const { grid, panning, selecting, embedding, snapline, resizing, rotating, knob, clipboard, history, scroller, minimap, keyboard, mousewheel } = options, others = __rest(options\n        // size\n        // ----\n        , [\"grid\", \"panning\", \"selecting\", \"embedding\", \"snapline\", \"resizing\", \"rotating\", \"knob\", \"clipboard\", \"history\", \"scroller\", \"minimap\", \"keyboard\", \"mousewheel\"]);\n        // size\n        // ----\n        const container = options.container;\n        if (container != null) {\n            if (others.width == null) {\n                others.width = container.clientWidth;\n            }\n            if (others.height == null) {\n                others.height = container.clientHeight;\n            }\n        }\n        else {\n            throw new Error(`Ensure the container of the graph is specified and valid`);\n        }\n        const result = ObjectExt.merge({}, Options.defaults, others);\n        // grid\n        // ----\n        const defaultGrid = { size: 10, visible: false };\n        if (typeof grid === 'number') {\n            result.grid = { size: grid, visible: false };\n        }\n        else if (typeof grid === 'boolean') {\n            result.grid = Object.assign(Object.assign({}, defaultGrid), { visible: grid });\n        }\n        else {\n            result.grid = Object.assign(Object.assign({}, defaultGrid), grid);\n        }\n        // booleas\n        // -------\n        const booleas = [\n            'panning',\n            'selecting',\n            'embedding',\n            'snapline',\n            'resizing',\n            'rotating',\n            'knob',\n            'clipboard',\n            'history',\n            'scroller',\n            'minimap',\n            'keyboard',\n            'mousewheel',\n        ];\n        booleas.forEach((key) => {\n            const val = options[key];\n            if (typeof val === 'boolean') {\n                result[key].enabled = val;\n            }\n            else {\n                result[key] = Object.assign(Object.assign({}, result[key]), val);\n            }\n        });\n        // background\n        // ----------\n        if (result.background &&\n            result.scroller.enabled &&\n            result.scroller.background == null) {\n            result.scroller.background = result.background;\n            delete result.background;\n        }\n        return result;\n    }\n    Options.get = get;\n})(Options || (Options = {}));\n(function (Options) {\n    Options.defaults = {\n        x: 0,\n        y: 0,\n        grid: {\n            size: 10,\n            visible: false,\n        },\n        scaling: {\n            min: 0.01,\n            max: 16,\n        },\n        background: false,\n        highlighting: {\n            default: {\n                name: 'stroke',\n                args: {\n                    padding: 3,\n                },\n            },\n            nodeAvailable: {\n                name: 'className',\n                args: {\n                    className: Util.prefix('available-node'),\n                },\n            },\n            magnetAvailable: {\n                name: 'className',\n                args: {\n                    className: Util.prefix('available-magnet'),\n                },\n            },\n        },\n        connecting: {\n            snap: false,\n            multi: true,\n            // TODO: Unannotation the next line when the `multi` option was removed in the next major version.\n            // allowMulti: true,\n            dangling: true,\n            // TODO: Unannotation the next line when the `dangling` option was removed in the next major version.\n            // allowBlank: true,\n            allowLoop: true,\n            allowNode: true,\n            allowEdge: false,\n            allowPort: true,\n            highlight: false,\n            anchor: 'center',\n            edgeAnchor: 'ratio',\n            connectionPoint: 'boundary',\n            strategy: null,\n            router: 'normal',\n            connector: 'normal',\n            validateConnection({ type, sourceView, targetView }) {\n                const view = type === 'target' ? targetView : sourceView;\n                return view != null;\n            },\n            createEdge() {\n                return new StandardEdge();\n            },\n        },\n        transforming: {\n            clearAll: true,\n            clearOnBlankMouseDown: true,\n        },\n        resizing: {\n            enabled: false,\n            minWidth: 0,\n            minHeight: 0,\n            maxWidth: Number.MAX_SAFE_INTEGER,\n            maxHeight: Number.MAX_SAFE_INTEGER,\n            orthogonal: true,\n            restricted: false,\n            autoScroll: true,\n            preserveAspectRatio: false,\n            allowReverse: true,\n        },\n        rotating: {\n            enabled: false,\n            grid: 15,\n        },\n        translating: {\n            restrict: false,\n        },\n        knob: {\n            enabled: false,\n            clearAll: true,\n            clearOnBlankMouseDown: true,\n        },\n        embedding: {\n            enabled: false,\n            findParent: 'bbox',\n            frontOnly: true,\n            validate: () => true,\n        },\n        selecting: {\n            enabled: false,\n            rubberband: false,\n            rubberNode: true,\n            rubberEdge: false,\n            pointerEvents: 'auto',\n            multiple: true,\n            movable: true,\n            strict: false,\n            useCellGeometry: false,\n            selectCellOnMoved: false,\n            selectNodeOnMoved: false,\n            selectEdgeOnMoved: false,\n            content: null,\n            handles: null,\n        },\n        panning: {\n            enabled: false,\n            eventTypes: ['leftMouseDown'],\n        },\n        snapline: {\n            enabled: false,\n        },\n        clipboard: {\n            enabled: false,\n        },\n        history: {\n            enabled: false,\n        },\n        scroller: {\n            enabled: false,\n        },\n        keyboard: {\n            enabled: false,\n        },\n        mousewheel: {\n            enabled: false,\n            factor: 1.2,\n            zoomAtMousePosition: true,\n        },\n        async: false,\n        frozen: false,\n        sorting: 'exact',\n        moveThreshold: 0,\n        clickThreshold: 0,\n        magnetThreshold: 0,\n        preventDefaultDblClick: true,\n        preventDefaultMouseDown: false,\n        preventDefaultContextMenu: true,\n        preventDefaultBlankAction: true,\n        interacting: {\n            edgeLabelMovable: false,\n        },\n        guard: () => false,\n    };\n})(Options || (Options = {}));\n//# sourceMappingURL=options.js.map"]},"metadata":{},"sourceType":"module"}