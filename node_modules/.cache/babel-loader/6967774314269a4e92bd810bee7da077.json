{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React from 'react';\nimport { createDagExtensionModule } from '../module';\nimport { useExtensionRegistry, XFlowAppExtensionMoudle } from '@antv/xflow-core';\nexport const DagGraphExtension = props => {\n  /** 获取扩展Registry */\n  const extensionRegistry = useExtensionRegistry();\n  React.useEffect(() => {\n    /** 添加 container的classname */\n    extensionRegistry.addContainerClassNames('dag-extension-container');\n  }, [extensionRegistry]);\n  const config = React.useMemo(() => ({\n    CONFIG_TYPE: 'DAG_EXTENSION',\n    getConfig: () => __awaiter(void 0, void 0, void 0, function* () {\n      return props;\n    })\n  }), [props]);\n  return React.createElement(XFlowAppExtensionMoudle, {\n    config: config,\n    createModule: createDagExtensionModule\n  });\n};","map":{"version":3,"sources":["../../../src/canvas-dag-extension/components/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,wBAAT,QAAyC,WAAzC;AAEA,SAAS,oBAAT,EAA+B,uBAA/B,QAA8D,kBAA9D;AAIA,OAAO,MAAM,iBAAiB,GAAqB,KAAK,IAAG;AACzD;AACA,QAAM,iBAAiB,GAAG,oBAAoB,EAA9C;AACA,EAAA,KAAK,CAAC,SAAN,CAAgB,MAAK;AACnB;AACA,IAAA,iBAAiB,CAAC,sBAAlB,CAAyC,yBAAzC;AACD,GAHD,EAGG,CAAC,iBAAD,CAHH;AAKA,QAAM,MAAM,GAAG,KAAK,CAAC,OAAN,CACb,OAAO;AACL,IAAA,WAAW,EAAE,eADR;AAEL,IAAA,SAAS,EAAE,MAAW,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAAC,aAAA,KAAA;AAAK,KAAN;AAFjB,GAAP,CADa,EAKb,CAAC,KAAD,CALa,CAAf;AAQA,SAAO,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB;AAAS,IAAA,MAAM,EAAE,MAAjB;AAAyB,IAAA,YAAY,EAAE;AAAvC,GAAxB,CAAP;AACD,CAjBM","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from 'react';\nimport { createDagExtensionModule } from '../module';\nimport { useExtensionRegistry, XFlowAppExtensionMoudle } from '@antv/xflow-core';\nexport const DagGraphExtension = props => {\n    /** 获取扩展Registry */\n    const extensionRegistry = useExtensionRegistry();\n    React.useEffect(() => {\n        /** 添加 container的classname */\n        extensionRegistry.addContainerClassNames('dag-extension-container');\n    }, [extensionRegistry]);\n    const config = React.useMemo(() => ({\n        CONFIG_TYPE: 'DAG_EXTENSION',\n        getConfig: () => __awaiter(void 0, void 0, void 0, function* () { return props; }),\n    }), [props]);\n    return React.createElement(XFlowAppExtensionMoudle, { config: config, createModule: createDagExtensionModule });\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}