{"ast":null,"code":"export class EdgePreset {\n  constructor(halo) {\n    this.halo = halo;\n  }\n\n  get options() {\n    return this.halo.options;\n  }\n\n  get graph() {\n    return this.halo.graph;\n  }\n\n  get model() {\n    return this.halo.model;\n  }\n\n  get view() {\n    return this.halo.view;\n  }\n\n  get cell() {\n    return this.halo.cell;\n  }\n\n  get edge() {\n    return this.cell;\n  }\n\n  getPresets() {\n    return {\n      className: 'type-edge',\n      handles: [{\n        name: 'remove',\n        position: 'nw',\n        icon: null,\n        events: {\n          mousedown: this.removeEdge.bind(this)\n        }\n      }, {\n        name: 'direction',\n        position: 'se',\n        icon: null,\n        events: {\n          mousedown: this.directionSwap.bind(this)\n        }\n      }],\n      content: false,\n\n      bbox(view) {\n        return view.graph.localToGraph(view.getPointAtRatio(0.5));\n      },\n\n      tinyThreshold: -1,\n      smallThreshold: -1\n    };\n  }\n\n  removeEdge() {\n    this.cell.remove();\n  }\n\n  directionSwap() {\n    const source = this.edge.getSource();\n    const target = this.edge.getTarget();\n    this.edge.prop({\n      source: target,\n      target: source\n    });\n  }\n\n}","map":{"version":3,"sources":["../../../src/addon/halo/edge-preset.ts"],"names":[],"mappings":"AAIA,OAAM,MAAO,UAAP,CAAiB;AACrB,EAAA,WAAA,CAAoB,IAApB,EAA8B;AAAV,SAAA,IAAA,GAAA,IAAA;AAAc;;AAEvB,MAAP,OAAO,GAAA;AACT,WAAO,KAAK,IAAL,CAAU,OAAjB;AACD;;AAEQ,MAAL,KAAK,GAAA;AACP,WAAO,KAAK,IAAL,CAAU,KAAjB;AACD;;AAEQ,MAAL,KAAK,GAAA;AACP,WAAO,KAAK,IAAL,CAAU,KAAjB;AACD;;AAEO,MAAJ,IAAI,GAAA;AACN,WAAO,KAAK,IAAL,CAAU,IAAjB;AACD;;AAEO,MAAJ,IAAI,GAAA;AACN,WAAO,KAAK,IAAL,CAAU,IAAjB;AACD;;AAEO,MAAJ,IAAI,GAAA;AACN,WAAO,KAAK,IAAZ;AACD;;AAED,EAAA,UAAU,GAAA;AACR,WAAO;AACL,MAAA,SAAS,EAAE,WADN;AAEL,MAAA,OAAO,EAAE,CACP;AACE,QAAA,IAAI,EAAE,QADR;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,IAAI,EAAE,IAHR;AAIE,QAAA,MAAM,EAAE;AACN,UAAA,SAAS,EAAE,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB;AADL;AAJV,OADO,EASP;AACE,QAAA,IAAI,EAAE,WADR;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,IAAI,EAAE,IAHR;AAIE,QAAA,MAAM,EAAE;AACN,UAAA,SAAS,EAAE,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB;AADL;AAJV,OATO,CAFJ;AAoBL,MAAA,OAAO,EAAE,KApBJ;;AAqBL,MAAA,IAAI,CAAC,IAAD,EAAe;AACjB,eAAO,IAAI,CAAC,KAAL,CAAW,YAAX,CAAwB,IAAI,CAAC,eAAL,CAAqB,GAArB,CAAxB,CAAP;AACD,OAvBI;;AAwBL,MAAA,aAAa,EAAE,CAAC,CAxBX;AAyBL,MAAA,cAAc,EAAE,CAAC;AAzBZ,KAAP;AA2BD;;AAED,EAAA,UAAU,GAAA;AACR,SAAK,IAAL,CAAU,MAAV;AACD;;AAED,EAAA,aAAa,GAAA;AACX,UAAM,MAAM,GAAG,KAAK,IAAL,CAAU,SAAV,EAAf;AACA,UAAM,MAAM,GAAG,KAAK,IAAL,CAAU,SAAV,EAAf;AAEA,SAAK,IAAL,CAAU,IAAV,CAAe;AACb,MAAA,MAAM,EAAE,MADK;AAEb,MAAA,MAAM,EAAE;AAFK,KAAf;AAID;;AArEoB","sourceRoot":"","sourcesContent":["export class EdgePreset {\n    constructor(halo) {\n        this.halo = halo;\n    }\n    get options() {\n        return this.halo.options;\n    }\n    get graph() {\n        return this.halo.graph;\n    }\n    get model() {\n        return this.halo.model;\n    }\n    get view() {\n        return this.halo.view;\n    }\n    get cell() {\n        return this.halo.cell;\n    }\n    get edge() {\n        return this.cell;\n    }\n    getPresets() {\n        return {\n            className: 'type-edge',\n            handles: [\n                {\n                    name: 'remove',\n                    position: 'nw',\n                    icon: null,\n                    events: {\n                        mousedown: this.removeEdge.bind(this),\n                    },\n                },\n                {\n                    name: 'direction',\n                    position: 'se',\n                    icon: null,\n                    events: {\n                        mousedown: this.directionSwap.bind(this),\n                    },\n                },\n            ],\n            content: false,\n            bbox(view) {\n                return view.graph.localToGraph(view.getPointAtRatio(0.5));\n            },\n            tinyThreshold: -1,\n            smallThreshold: -1,\n        };\n    }\n    removeEdge() {\n        this.cell.remove();\n    }\n    directionSwap() {\n        const source = this.edge.getSource();\n        const target = this.edge.getTarget();\n        this.edge.prop({\n            source: target,\n            target: source,\n        });\n    }\n}\n//# sourceMappingURL=edge-preset.js.map"]},"metadata":{},"sourceType":"module"}