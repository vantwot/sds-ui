{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-redeclare */\nimport 'reflect-metadata';\n/** Application */\n\nimport { FrontendApplication, IFrontendApplicationContribution } from './application';\n/** Command 模块 */\n\nimport { commandRegistryModule } from '../command/module';\nimport { modelServiceModule } from '../model-service/module';\n/** Extension 注册中心 */\n\nimport { ExtensionRegistry } from './components/extension-registry';\n/** 类型定义 */\n\nimport { Contribution, Container, Module } from 'mana-syringe';\nexport { ExtensionRegistry };\n/** application */\n\nconst appMainModule = Module(register => {\n  /** 声明IFrontendApplicationContribution扩展点*/\n  Contribution.register(register, IFrontendApplicationContribution);\n  /** 声明 FrontendApplication */\n\n  register(FrontendApplication);\n});\nexport const initApp = moduleRegistry => {\n  const extensions = moduleRegistry.getAllExtensions();\n  const container = new Container();\n  /** command */\n\n  /** react renderer */\n\n  /** 批量创建 extension module */\n\n  const modules = extensions.map(module => {\n    const {\n      createModule,\n      config\n    } = module;\n    return createModule(config);\n  });\n  /** 单独加载 appMainModule */\n\n  container.load(appMainModule);\n  /** 单独加载 commandRegistryModule */\n\n  container.load(commandRegistryModule); // /** 单独加载 modelServiceModule */\n\n  container.load(modelServiceModule);\n  /**\n   * 批量加载 extension module\n   * 包括：menu/toolbar/keybinding/graph\n   */\n\n  modules.forEach(module => {\n    container.load(module);\n  });\n  const app = container.get(FrontendApplication);\n  return app;\n};","map":{"version":3,"sources":["../../src/xflow-main/application-module.ts"],"names":[],"mappings":"AAAA;AACA,OAAO,kBAAP;AAEA;;AACA,SAAS,mBAAT,EAA8B,gCAA9B,QAAsE,eAAtE;AAEA;;AACA,SAAS,qBAAT,QAAsC,mBAAtC;AACA,SAAS,kBAAT,QAAmC,yBAAnC;AAEA;;AACA,SAAS,iBAAT,QAAkC,iCAAlC;AAEA;;AACA,SAAS,YAAT,EAAuB,SAAvB,EAAkC,MAAlC,QAAgD,cAAhD;AAEA,SAAS,iBAAT;AAIA;;AACA,MAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,IAAG;AACtC;AACA,EAAA,YAAY,CAAC,QAAb,CAAsB,QAAtB,EAAgC,gCAAhC;AACA;;AACA,EAAA,QAAQ,CAAC,mBAAD,CAAR;AACD,CAL2B,CAA5B;AAOA,OAAO,MAAM,OAAO,GAAgB,cAAD,IAAsC;AACvE,QAAM,UAAU,GAAG,cAAc,CAAC,gBAAf,EAAnB;AACA,QAAM,SAAS,GAAG,IAAI,SAAJ,EAAlB;AAEA;;AACA;;AACA;;AACA,QAAM,OAAO,GAAG,UAAU,CAAC,GAAX,CAAe,MAAM,IAAG;AACtC,UAAM;AAAE,MAAA,YAAF;AAAgB,MAAA;AAAhB,QAA2B,MAAjC;AACA,WAAO,YAAY,CAAC,MAAD,CAAnB;AACD,GAHe,CAAhB;AAKA;;AACA,EAAA,SAAS,CAAC,IAAV,CAAe,aAAf;AACA;;AACA,EAAA,SAAS,CAAC,IAAV,CAAe,qBAAf,EAfuE,CAgBvE;;AACA,EAAA,SAAS,CAAC,IAAV,CAAe,kBAAf;AAEA;;;AAGG;;AACH,EAAA,OAAO,CAAC,OAAR,CAAgB,MAAM,IAAG;AACvB,IAAA,SAAS,CAAC,IAAV,CAAe,MAAf;AACD,GAFD;AAIA,QAAM,GAAG,GAAG,SAAS,CAAC,GAAV,CAAc,mBAAd,CAAZ;AACA,SAAO,GAAP;AACD,CA7BM","sourceRoot":"","sourcesContent":["/* eslint-disable @typescript-eslint/no-redeclare */\nimport 'reflect-metadata';\n/** Application */\nimport { FrontendApplication, IFrontendApplicationContribution } from './application';\n/** Command 模块 */\nimport { commandRegistryModule } from '../command/module';\nimport { modelServiceModule } from '../model-service/module';\n/** Extension 注册中心 */\nimport { ExtensionRegistry } from './components/extension-registry';\n/** 类型定义 */\nimport { Contribution, Container, Module } from 'mana-syringe';\nexport { ExtensionRegistry };\n/** application */\nconst appMainModule = Module(register => {\n    /** 声明IFrontendApplicationContribution扩展点*/\n    Contribution.register(register, IFrontendApplicationContribution);\n    /** 声明 FrontendApplication */\n    register(FrontendApplication);\n});\nexport const initApp = (moduleRegistry) => {\n    const extensions = moduleRegistry.getAllExtensions();\n    const container = new Container();\n    /** command */\n    /** react renderer */\n    /** 批量创建 extension module */\n    const modules = extensions.map(module => {\n        const { createModule, config } = module;\n        return createModule(config);\n    });\n    /** 单独加载 appMainModule */\n    container.load(appMainModule);\n    /** 单独加载 commandRegistryModule */\n    container.load(commandRegistryModule);\n    // /** 单独加载 modelServiceModule */\n    container.load(modelServiceModule);\n    /**\n     * 批量加载 extension module\n     * 包括：menu/toolbar/keybinding/graph\n     */\n    modules.forEach(module => {\n        container.load(module);\n    });\n    const app = container.get(FrontendApplication);\n    return app;\n};\n//# sourceMappingURL=application-module.js.map"]},"metadata":{},"sourceType":"module"}