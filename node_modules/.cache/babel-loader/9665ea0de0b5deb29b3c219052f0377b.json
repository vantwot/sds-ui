{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport { __awaiter, __extends, __generator } from \"tslib\";\nimport { AbstractLayout } from '@antv/g6-core';\nimport { Layout } from '../../layout';\nimport { LayoutWorker } from '../../layout/worker/layout.worker';\nimport { LAYOUT_MESSAGE } from '../../layout/worker/layoutConst';\nimport { gpuDetector } from '../../util/gpu';\nimport { mix, clone } from '@antv/util'; // eslint-disable-next-line @typescript-eslint/no-implied-eval\n\nvar mockRaf = function mockRaf(cb) {\n  return setTimeout(cb, 16);\n};\n\nvar mockCaf = function mockCaf(reqId) {\n  return clearTimeout(reqId);\n};\n\nvar helper = {\n  // pollyfill\n  requestAnimationFrame: function requestAnimationFrame(callback) {\n    var fn = typeof window !== 'undefined' ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || mockRaf : mockRaf;\n    return fn(callback);\n  },\n  cancelAnimationFrame: function cancelAnimationFrame(requestId) {\n    var fn = typeof window !== 'undefined' ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || mockCaf : mockCaf;\n    return fn(requestId);\n  }\n};\nvar GPU_LAYOUT_NAMES = ['fruchterman', 'gForce'];\nvar LAYOUT_PIPES_ADJUST_NAMES = ['force', 'grid', 'circular'];\n\nvar LayoutController =\n/** @class */\nfunction (_super) {\n  __extends(LayoutController, _super); // the configurations of the layout\n  // private layoutCfg: any; // LayoutOptions\n  // the type name of the layout\n  // private layoutType: string;\n  // private data: GraphData;\n  // private layoutMethods: typeof Layout;\n\n\n  function LayoutController(graph) {\n    var _this = _super.call(this, graph) || this;\n\n    _this.graph = graph;\n    _this.layoutCfg = graph.get('layout') || {};\n    _this.layoutType = _this.getLayoutType();\n    _this.worker = null;\n    _this.workerData = {};\n\n    _this.initLayout();\n\n    return _this;\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.initLayout = function () {// no data before rendering\n  }; // get layout worker and create one if not exists\n\n\n  LayoutController.prototype.getWorker = function () {\n    if (this.worker) {\n      return this.worker;\n    }\n\n    if (typeof Worker === 'undefined') {\n      // 如果当前浏览器不支持 web worker，则不使用 web worker\n      console.warn('Web worker is not supported in current browser.');\n      this.worker = null;\n    } else {\n      this.worker = LayoutWorker(this.layoutCfg.workerScriptURL);\n    }\n\n    return this.worker;\n  }; // stop layout worker\n\n\n  LayoutController.prototype.stopWorker = function () {\n    var workerData = this.workerData;\n\n    if (!this.worker) {\n      return;\n    }\n\n    this.worker.terminate();\n    this.worker = null; // 重新开始新的布局之前，先取消之前布局的requestAnimationFrame。\n\n    if (workerData.requestId) {\n      helper.cancelAnimationFrame(workerData.requestId);\n      workerData.requestId = null;\n    }\n\n    if (workerData.requestId2) {\n      helper.cancelAnimationFrame(workerData.requestId2);\n      workerData.requestId2 = null;\n    }\n  };\n\n  LayoutController.prototype.execLayoutMethod = function (layoutCfg, order) {\n    var _this = this;\n\n    return new Promise(function (reslove, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var graph, layoutType, isForce, onTick_1, tick, enableTick, layoutMethod, onTick_2, tick, layoutData;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              graph = this.graph;\n              if (!graph || graph.get('destroyed')) return [2\n              /*return*/\n              ];\n              layoutType = layoutCfg.type; // 每个布局方法都需要注册\n\n              layoutCfg.onLayoutEnd = function () {\n                graph.emit('aftersublayout', {\n                  type: layoutType\n                });\n                reslove();\n              }; // 若用户指定开启 gpu，且当前浏览器支持 webgl，且该算法存在 GPU 版本（目前仅支持 fruchterman 和 gForce），使用 gpu 版本的布局\n\n\n              if (layoutType && this.isGPU) {\n                if (!this.hasGPUVersion(layoutType)) {\n                  console.warn(\"The '\" + layoutType + \"' layout does not support GPU calculation for now, it will run in CPU.\");\n                } else {\n                  layoutType = layoutType + \"-gpu\";\n                }\n              }\n\n              isForce = layoutType === 'force' || layoutType === 'g6force' || layoutType === 'gForce';\n\n              if (isForce) {\n                onTick_1 = layoutCfg.onTick;\n\n                tick = function tick() {\n                  if (onTick_1) {\n                    onTick_1();\n                  }\n\n                  graph.refreshPositions();\n                };\n\n                layoutCfg.tick = tick;\n              } else if (layoutCfg.type === 'comboForce') {\n                layoutCfg.comboTrees = graph.get('comboTrees');\n              }\n\n              enableTick = false;\n\n              try {\n                layoutMethod = new Layout[layoutType](layoutCfg);\n              } catch (e) {\n                console.warn(\"The layout method: '\" + layoutType + \"' does not exist! Please specify it first.\");\n                reject();\n              } // 是否需要迭代的方式完成布局。这里是来自布局对象的实例属性，是由布局的定义者在布局类定义的。\n\n\n              enableTick = layoutMethod.enableTick;\n\n              if (enableTick) {\n                onTick_2 = layoutCfg.onTick;\n\n                tick = function tick() {\n                  if (onTick_2) {\n                    onTick_2();\n                  }\n\n                  graph.refreshPositions();\n                };\n\n                layoutMethod.tick = tick;\n              }\n\n              layoutData = this.filterLayoutData(this.data, layoutCfg);\n              addLayoutOrder(layoutData, order);\n              layoutMethod.init(layoutData); // 若存在节点没有位置信息，且没有设置 layout，在 initPositions 中 random 给出了所有节点的位置，不需要再次执行 random 布局\n              // 所有节点都有位置信息，且指定了 layout，则执行布局（代表不是第一次进行布局）\n\n              graph.emit('beforesublayout', {\n                type: layoutType\n              });\n              return [4\n              /*yield*/\n              , layoutMethod.execute()];\n\n            case 1:\n              _a.sent();\n\n              if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n              this.layoutMethods[order] = layoutMethod;\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n\n  LayoutController.prototype.updateLayoutMethod = function (layoutMethod, layoutCfg) {\n    var _this = this;\n\n    return new Promise(function (reslove, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var graph, layoutType, layoutData;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              graph = this.graph;\n              layoutType = layoutCfg === null || layoutCfg === void 0 ? void 0 : layoutCfg.type; // 每个布局方法都需要注册\n\n              layoutCfg.onLayoutEnd = function () {\n                graph.emit('aftersublayout', {\n                  type: layoutType\n                });\n                reslove();\n              };\n\n              layoutData = this.filterLayoutData(this.data, layoutCfg);\n              layoutMethod.init(layoutData);\n              layoutMethod.updateCfg(layoutCfg);\n              graph.emit('beforesublayout', {\n                type: layoutType\n              });\n              return [4\n              /*yield*/\n              , layoutMethod.execute()];\n\n            case 1:\n              _a.sent();\n\n              if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n  /**\n   * @param {function} success callback\n   * @return {boolean} 是否使用web worker布局\n   */\n\n\n  LayoutController.prototype.layout = function (success) {\n    var _this = this;\n\n    var graph = this.graph;\n    this.data = this.setDataFromGraph();\n    var _a = this.data,\n        nodes = _a.nodes,\n        hiddenNodes = _a.hiddenNodes;\n\n    if (!nodes) {\n      return false;\n    }\n\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var layoutCfg = {};\n    Object.assign(layoutCfg, {\n      width: width,\n      height: height,\n      center: [width / 2, height / 2]\n    }, this.layoutCfg);\n    this.layoutCfg = layoutCfg;\n    this.destoryLayoutMethods();\n    graph.emit('beforelayout');\n    this.initPositions(layoutCfg.center, nodes); // init hidden nodes\n\n    this.initPositions(layoutCfg.center, hiddenNodes); // 防止用户直接用 -gpu 结尾指定布局\n\n    var layoutType = layoutCfg.type;\n\n    if (layoutType && layoutType.split('-')[1] === 'gpu') {\n      layoutType = layoutType.split('-')[0];\n      layoutCfg.gpuEnabled = true;\n    } // 若用户指定开启 gpu，且当前浏览器支持 webgl，且该算法存在 GPU 版本（目前仅支持 fruchterman 和 gForce），使用 gpu 版本的布局\n\n\n    var enableGPU = false;\n\n    if (layoutCfg.gpuEnabled) {\n      enableGPU = true; // 打开下面语句将会导致 webworker 报找不到 window\n\n      if (!gpuDetector().webgl) {\n        console.warn(\"Your browser does not support webGL or GPGPU. The layout will run in CPU.\");\n        enableGPU = false;\n      }\n    }\n\n    this.isGPU = enableGPU; // 在 onAllLayoutEnd 中执行用户自定义 onLayoutEnd，触发 afterlayout、更新节点位置、fitView/fitCenter、触发 afterrender\n\n    var onLayoutEnd = layoutCfg.onLayoutEnd,\n        layoutEndFormatted = layoutCfg.layoutEndFormatted,\n        adjust = layoutCfg.adjust;\n\n    if (!layoutEndFormatted) {\n      layoutCfg.layoutEndFormatted = true;\n\n      layoutCfg.onAllLayoutEnd = function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                // 执行用户自定义 onLayoutEnd\n                if (onLayoutEnd) {\n                  onLayoutEnd();\n                } // 更新节点位置\n\n\n                this.refreshLayout();\n                if (!(adjust && layoutCfg.pipes)) return [3\n                /*break*/\n                , 2];\n                return [4\n                /*yield*/\n                , this.adjustPipesBox(this.data, adjust)];\n\n              case 1:\n                _a.sent();\n\n                this.refreshLayout();\n                _a.label = 2;\n\n              case 2:\n                // 触发 afterlayout\n                graph.emit('afterlayout');\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      };\n    }\n\n    this.stopWorker();\n\n    if (layoutCfg.workerEnabled && this.layoutWithWorker(this.data)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return true;\n    }\n\n    var start = Promise.resolve();\n\n    if (layoutCfg.type) {\n      start = start.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , this.execLayoutMethod(layoutCfg, 0)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _a.sent()];\n            }\n          });\n        });\n      });\n    } else if (layoutCfg.pipes) {\n      layoutCfg.pipes.forEach(function (cfg, index) {\n        start = start.then(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.execLayoutMethod(cfg, index)];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _a.sent()];\n              }\n            });\n          });\n        });\n      });\n    } // 最后统一在外部调用onAllLayoutEnd\n\n\n    start.then(function () {\n      if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd(); // 在执行 execute 后立即执行 success，且在 timeBar 中有 throttle，可以防止 timeBar 监听 afterrender 进行 changeData 后 layout，从而死循环\n      // 对于 force 一类布局完成后的 fitView 需要用户自己在 onLayoutEnd 中配置\n\n      if (success) success();\n    }).catch(function (error) {\n      console.warn('graph layout failed,', error);\n    });\n    return false;\n  };\n  /**\n   * layout with web worker\n   * @param {object} data graph data\n   * @return {boolean} 是否支持web worker\n   */\n\n\n  LayoutController.prototype.layoutWithWorker = function (data) {\n    var _this = this;\n\n    var _a = this,\n        layoutCfg = _a.layoutCfg,\n        graph = _a.graph;\n\n    var worker = this.getWorker(); // 每次worker message event handler调用之间的共享数据，会被修改。\n\n    var workerData = this.workerData;\n\n    if (!worker) {\n      return false;\n    }\n\n    workerData.requestId = null;\n    workerData.requestId2 = null;\n    workerData.currentTick = null;\n    workerData.currentTickData = null;\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n\n    if (layoutCfg.type) {\n      start = start.then(function () {\n        return _this.runWebworker(worker, data, layoutCfg);\n      });\n    } else if (layoutCfg.pipes) {\n      var _loop_1 = function _loop_1(cfg) {\n        start = start.then(function () {\n          return _this.runWebworker(worker, data, cfg);\n        });\n      };\n\n      for (var _i = 0, _b = layoutCfg.pipes; _i < _b.length; _i++) {\n        var cfg = _b[_i];\n\n        _loop_1(cfg);\n      }\n    } // 最后统一在外部调用onAllLayoutEnd\n\n\n    start.then(function () {\n      if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n    }).catch(function (error) {\n      console.error('layout failed', error);\n    });\n    return true;\n  };\n\n  LayoutController.prototype.runWebworker = function (worker, allData, layoutCfg) {\n    var _this = this;\n\n    var isGPU = this.isGPU;\n    var data = this.filterLayoutData(allData, layoutCfg);\n    var nodes = data.nodes,\n        edges = data.edges;\n    var offScreenCanvas = document.createElement('canvas');\n    var gpuWorkerAbility = isGPU && typeof window !== 'undefined' && // eslint-disable-next-line @typescript-eslint/dot-notation\n    window.navigator && !navigator[\"gpu\"] && // WebGPU 还不支持 OffscreenCanvas\n    'OffscreenCanvas' in window && 'transferControlToOffscreen' in offScreenCanvas; // NOTE: postMessage的message参数里面不能包含函数，否则postMessage会报错，\n    // 例如：'function could not be cloned'。\n    // 详情参考：https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n    // 所以这里需要把过滤layoutCfg里的函数字段过滤掉。\n\n    var filteredLayoutCfg = filterObject(layoutCfg, function (value) {\n      return typeof value !== 'function';\n    });\n\n    if (!gpuWorkerAbility) {\n      worker.postMessage({\n        type: LAYOUT_MESSAGE.RUN,\n        nodes: nodes,\n        edges: edges,\n        layoutCfg: filteredLayoutCfg\n      });\n    } else {\n      var offscreen = offScreenCanvas.transferControlToOffscreen(); // filteredLayoutCfg.canvas = offscreen;\n\n      filteredLayoutCfg.type = filteredLayoutCfg.type + \"-gpu\";\n      worker.postMessage({\n        type: LAYOUT_MESSAGE.GPURUN,\n        nodes: nodes,\n        edges: edges,\n        layoutCfg: filteredLayoutCfg,\n        canvas: offscreen\n      }, [offscreen]);\n    }\n\n    return new Promise(function (reslove, reject) {\n      worker.onmessage = function (event) {\n        _this.handleWorkerMessage(reslove, reject, event, data, layoutCfg);\n      };\n    });\n  }; // success callback will be called when updating graph positions for the first time.\n\n\n  LayoutController.prototype.handleWorkerMessage = function (reslove, reject, event, data, layoutCfg) {\n    var _a = this,\n        graph = _a.graph,\n        workerData = _a.workerData;\n\n    var eventData = event.data;\n    var type = eventData.type;\n\n    var onTick = function onTick() {\n      if (layoutCfg.onTick) {\n        layoutCfg.onTick();\n      }\n    };\n\n    switch (type) {\n      case LAYOUT_MESSAGE.TICK:\n        workerData.currentTick = eventData.currentTick;\n        workerData.currentTickData = eventData;\n\n        if (!workerData.requestId) {\n          workerData.requestId = helper.requestAnimationFrame(function requestId() {\n            updateLayoutPosition(data, eventData);\n            graph.refreshPositions();\n            onTick();\n\n            if (eventData.currentTick === eventData.totalTicks) {\n              // 如果是最后一次tick\n              reslove();\n            } else if (workerData.currentTick === eventData.totalTicks) {\n              // 注意这里workerData.currentTick可能已经不再是前面赋值时候的值了，\n              // 因为在requestAnimationFrame等待时间里，可能产生新的tick。\n              // 如果当前tick不是最后一次tick，并且所有的tick消息都已发出来了，那么需要用最后一次tick的数据再刷新一次。\n              workerData.requestId2 = helper.requestAnimationFrame(function requestId2() {\n                updateLayoutPosition(data, workerData.currentTickData);\n                graph.refreshPositions();\n                workerData.requestId2 = null;\n                onTick();\n                reslove();\n              });\n            }\n\n            workerData.requestId = null;\n          });\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.END:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateLayoutPosition(data, eventData);\n          reslove();\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.GPUEND:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateGPUWorkerLayoutPosition(data, eventData);\n          reslove();\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.ERROR:\n        console.warn('Web-Worker layout error!', eventData.message);\n        reject();\n        break;\n\n      default:\n        reject();\n        break;\n    }\n  }; // 更新布局参数\n\n\n  LayoutController.prototype.updateLayoutCfg = function (cfg) {\n    var _this = this;\n\n    var _a = this,\n        graph = _a.graph,\n        layoutMethods = _a.layoutMethods;\n\n    var layoutCfg = mix({}, this.layoutCfg, cfg);\n    this.layoutCfg = layoutCfg;\n\n    if (!(layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.length)) {\n      this.layout();\n      return;\n    }\n\n    this.data = this.setDataFromGraph();\n    this.stopWorker();\n\n    if (cfg.workerEnabled && this.layoutWithWorker(this.data)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return;\n    }\n\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n\n    if (layoutMethods.length === 1) {\n      start = start.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , this.updateLayoutMethod(layoutMethods[0], layoutCfg)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _a.sent()];\n            }\n          });\n        });\n      });\n    } else {\n      layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.forEach(function (layoutMethod, index) {\n        var currentCfg = layoutCfg.pipes[index];\n        start = start.then(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.updateLayoutMethod(layoutMethod, currentCfg)];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _a.sent()];\n              }\n            });\n          });\n        });\n      });\n    }\n\n    start.then(function () {\n      if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n    }).catch(function (error) {\n      console.warn('layout failed', error);\n    });\n  };\n\n  LayoutController.prototype.adjustPipesBox = function (data, adjust) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      var nodes = data.nodes;\n\n      if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) {\n        resolve();\n      }\n\n      if (!LAYOUT_PIPES_ADJUST_NAMES.includes(adjust)) {\n        console.warn(\"The adjust type \" + adjust + \" is not supported yet, please assign it with 'force', 'grid', or 'circular'.\");\n        resolve();\n      }\n\n      var layoutCfg = {\n        center: _this.layoutCfg.center,\n        nodeSize: function nodeSize(d) {\n          return Math.max(d.height, d.width);\n        },\n        preventOverlap: true,\n        onLayoutEnd: function onLayoutEnd() {}\n      }; // 计算出大单元\n\n      var _a = _this.getLayoutBBox(nodes),\n          groupNodes = _a.groupNodes,\n          layoutNodes = _a.layoutNodes;\n\n      var preNodes = clone(layoutNodes); // 根据大单元坐标的变化，调整这里面每个小单元nodes\n\n      layoutCfg.onLayoutEnd = function () {\n        layoutNodes === null || layoutNodes === void 0 ? void 0 : layoutNodes.forEach(function (ele, index) {\n          var _a, _b, _c;\n\n          var dx = ele.x - ((_a = preNodes[index]) === null || _a === void 0 ? void 0 : _a.x);\n          var dy = ele.y - ((_b = preNodes[index]) === null || _b === void 0 ? void 0 : _b.y);\n          (_c = groupNodes[index]) === null || _c === void 0 ? void 0 : _c.forEach(function (n) {\n            n.x += dx;\n            n.y += dy;\n          });\n        });\n        resolve();\n      };\n\n      var layoutMethod = new Layout[adjust](layoutCfg);\n      layoutMethod.layout({\n        nodes: layoutNodes\n      });\n    });\n  };\n\n  LayoutController.prototype.hasGPUVersion = function (layoutName) {\n    return GPU_LAYOUT_NAMES.includes(layoutName);\n  };\n\n  LayoutController.prototype.destroy = function () {\n    this.destoryLayoutMethods();\n    var worker = this.worker;\n\n    if (worker) {\n      worker.terminate();\n      this.worker = null;\n    }\n\n    this.destroyed = true;\n    this.graph.set('layout', undefined);\n    this.layoutCfg = undefined;\n    this.layoutType = undefined;\n    this.layoutMethods = undefined;\n    this.graph = null;\n  };\n\n  return LayoutController;\n}(AbstractLayout);\n\nexport default LayoutController;\n\nfunction updateLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var layoutNodes = layoutData.nodes;\n  var nodeLength = nodes.length;\n\n  for (var i = 0; i < nodeLength; i++) {\n    var node = nodes[i];\n    node.x = layoutNodes[i].x;\n    node.y = layoutNodes[i].y;\n  }\n}\n\nfunction filterObject(collection, callback) {\n  var result = {};\n\n  if (collection && _typeof(collection) === 'object') {\n    Object.keys(collection).forEach(function (key) {\n      if (collection.hasOwnProperty(key) && callback(collection[key])) {\n        result[key] = collection[key];\n      }\n    });\n    return result;\n  }\n\n  return collection;\n}\n\nfunction updateGPUWorkerLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var vertexEdgeData = layoutData.vertexEdgeData;\n  var nodeLength = nodes.length;\n\n  for (var i = 0; i < nodeLength; i++) {\n    var node = nodes[i];\n    var x = vertexEdgeData[4 * i];\n    var y = vertexEdgeData[4 * i + 1];\n    node.x = x;\n    node.y = y;\n  }\n}\n\nfunction addLayoutOrder(data, order) {\n  var _a;\n\n  if (!((_a = data === null || data === void 0 ? void 0 : data.nodes) === null || _a === void 0 ? void 0 : _a.length)) {\n    return;\n  }\n\n  var nodes = data.nodes;\n  nodes.forEach(function (node) {\n    node.layoutOrder = order;\n  });\n}","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@antv/g6-pc/es/graph/controller/layout.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","__awaiter","__extends","__generator","AbstractLayout","Layout","LayoutWorker","LAYOUT_MESSAGE","gpuDetector","mix","clone","mockRaf","cb","setTimeout","mockCaf","reqId","clearTimeout","helper","requestAnimationFrame","callback","fn","window","webkitRequestAnimationFrame","cancelAnimationFrame","requestId","webkitCancelAnimationFrame","GPU_LAYOUT_NAMES","LAYOUT_PIPES_ADJUST_NAMES","LayoutController","_super","graph","_this","call","layoutCfg","get","layoutType","getLayoutType","worker","workerData","initLayout","getWorker","Worker","console","warn","workerScriptURL","stopWorker","terminate","requestId2","execLayoutMethod","order","Promise","reslove","reject","isForce","onTick_1","tick","enableTick","layoutMethod","onTick_2","layoutData","_a","label","type","onLayoutEnd","emit","isGPU","hasGPUVersion","onTick","refreshPositions","comboTrees","e","filterLayoutData","data","addLayoutOrder","init","execute","sent","isCustomLayout","layoutMethods","updateLayoutMethod","updateCfg","layout","success","setDataFromGraph","nodes","hiddenNodes","width","height","Object","assign","center","destoryLayoutMethods","initPositions","split","gpuEnabled","enableGPU","webgl","layoutEndFormatted","adjust","onAllLayoutEnd","refreshLayout","pipes","adjustPipesBox","workerEnabled","layoutWithWorker","start","resolve","then","forEach","cfg","index","catch","error","currentTick","currentTickData","runWebworker","_loop_1","_i","_b","length","allData","edges","offScreenCanvas","document","createElement","gpuWorkerAbility","navigator","filteredLayoutCfg","filterObject","value","postMessage","RUN","offscreen","transferControlToOffscreen","GPURUN","canvas","onmessage","event","handleWorkerMessage","eventData","TICK","updateLayoutPosition","totalTicks","END","GPUEND","updateGPUWorkerLayoutPosition","ERROR","message","updateLayoutCfg","currentCfg","includes","nodeSize","d","Math","max","preventOverlap","getLayoutBBox","groupNodes","layoutNodes","preNodes","ele","_c","dx","x","dy","y","n","layoutName","destroy","destroyed","set","undefined","nodeLength","i","node","collection","result","keys","key","hasOwnProperty","vertexEdgeData","layoutOrder"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { __awaiter, __extends, __generator } from \"tslib\";\nimport { AbstractLayout } from '@antv/g6-core';\nimport { Layout } from '../../layout';\nimport { LayoutWorker } from '../../layout/worker/layout.worker';\nimport { LAYOUT_MESSAGE } from '../../layout/worker/layoutConst';\nimport { gpuDetector } from '../../util/gpu';\nimport { mix, clone } from '@antv/util'; // eslint-disable-next-line @typescript-eslint/no-implied-eval\n\nvar mockRaf = function mockRaf(cb) {\n  return setTimeout(cb, 16);\n};\n\nvar mockCaf = function mockCaf(reqId) {\n  return clearTimeout(reqId);\n};\n\nvar helper = {\n  // pollyfill\n  requestAnimationFrame: function requestAnimationFrame(callback) {\n    var fn = typeof window !== 'undefined' ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || mockRaf : mockRaf;\n    return fn(callback);\n  },\n  cancelAnimationFrame: function cancelAnimationFrame(requestId) {\n    var fn = typeof window !== 'undefined' ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || mockCaf : mockCaf;\n    return fn(requestId);\n  }\n};\nvar GPU_LAYOUT_NAMES = ['fruchterman', 'gForce'];\nvar LAYOUT_PIPES_ADJUST_NAMES = ['force', 'grid', 'circular'];\n\nvar LayoutController =\n/** @class */\nfunction (_super) {\n  __extends(LayoutController, _super); // the configurations of the layout\n  // private layoutCfg: any; // LayoutOptions\n  // the type name of the layout\n  // private layoutType: string;\n  // private data: GraphData;\n  // private layoutMethods: typeof Layout;\n\n\n  function LayoutController(graph) {\n    var _this = _super.call(this, graph) || this;\n\n    _this.graph = graph;\n    _this.layoutCfg = graph.get('layout') || {};\n    _this.layoutType = _this.getLayoutType();\n    _this.worker = null;\n    _this.workerData = {};\n\n    _this.initLayout();\n\n    return _this;\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  LayoutController.prototype.initLayout = function () {// no data before rendering\n  }; // get layout worker and create one if not exists\n\n\n  LayoutController.prototype.getWorker = function () {\n    if (this.worker) {\n      return this.worker;\n    }\n\n    if (typeof Worker === 'undefined') {\n      // 如果当前浏览器不支持 web worker，则不使用 web worker\n      console.warn('Web worker is not supported in current browser.');\n      this.worker = null;\n    } else {\n      this.worker = LayoutWorker(this.layoutCfg.workerScriptURL);\n    }\n\n    return this.worker;\n  }; // stop layout worker\n\n\n  LayoutController.prototype.stopWorker = function () {\n    var workerData = this.workerData;\n\n    if (!this.worker) {\n      return;\n    }\n\n    this.worker.terminate();\n    this.worker = null; // 重新开始新的布局之前，先取消之前布局的requestAnimationFrame。\n\n    if (workerData.requestId) {\n      helper.cancelAnimationFrame(workerData.requestId);\n      workerData.requestId = null;\n    }\n\n    if (workerData.requestId2) {\n      helper.cancelAnimationFrame(workerData.requestId2);\n      workerData.requestId2 = null;\n    }\n  };\n\n  LayoutController.prototype.execLayoutMethod = function (layoutCfg, order) {\n    var _this = this;\n\n    return new Promise(function (reslove, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var graph, layoutType, isForce, onTick_1, tick, enableTick, layoutMethod, onTick_2, tick, layoutData;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              graph = this.graph;\n              if (!graph || graph.get('destroyed')) return [2\n              /*return*/\n              ];\n              layoutType = layoutCfg.type; // 每个布局方法都需要注册\n\n              layoutCfg.onLayoutEnd = function () {\n                graph.emit('aftersublayout', {\n                  type: layoutType\n                });\n                reslove();\n              }; // 若用户指定开启 gpu，且当前浏览器支持 webgl，且该算法存在 GPU 版本（目前仅支持 fruchterman 和 gForce），使用 gpu 版本的布局\n\n\n              if (layoutType && this.isGPU) {\n                if (!this.hasGPUVersion(layoutType)) {\n                  console.warn(\"The '\" + layoutType + \"' layout does not support GPU calculation for now, it will run in CPU.\");\n                } else {\n                  layoutType = layoutType + \"-gpu\";\n                }\n              }\n\n              isForce = layoutType === 'force' || layoutType === 'g6force' || layoutType === 'gForce';\n\n              if (isForce) {\n                onTick_1 = layoutCfg.onTick;\n\n                tick = function tick() {\n                  if (onTick_1) {\n                    onTick_1();\n                  }\n\n                  graph.refreshPositions();\n                };\n\n                layoutCfg.tick = tick;\n              } else if (layoutCfg.type === 'comboForce') {\n                layoutCfg.comboTrees = graph.get('comboTrees');\n              }\n\n              enableTick = false;\n\n              try {\n                layoutMethod = new Layout[layoutType](layoutCfg);\n              } catch (e) {\n                console.warn(\"The layout method: '\" + layoutType + \"' does not exist! Please specify it first.\");\n                reject();\n              } // 是否需要迭代的方式完成布局。这里是来自布局对象的实例属性，是由布局的定义者在布局类定义的。\n\n\n              enableTick = layoutMethod.enableTick;\n\n              if (enableTick) {\n                onTick_2 = layoutCfg.onTick;\n\n                tick = function tick() {\n                  if (onTick_2) {\n                    onTick_2();\n                  }\n\n                  graph.refreshPositions();\n                };\n\n                layoutMethod.tick = tick;\n              }\n\n              layoutData = this.filterLayoutData(this.data, layoutCfg);\n              addLayoutOrder(layoutData, order);\n              layoutMethod.init(layoutData); // 若存在节点没有位置信息，且没有设置 layout，在 initPositions 中 random 给出了所有节点的位置，不需要再次执行 random 布局\n              // 所有节点都有位置信息，且指定了 layout，则执行布局（代表不是第一次进行布局）\n\n              graph.emit('beforesublayout', {\n                type: layoutType\n              });\n              return [4\n              /*yield*/\n              , layoutMethod.execute()];\n\n            case 1:\n              _a.sent();\n\n              if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n              this.layoutMethods[order] = layoutMethod;\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n\n  LayoutController.prototype.updateLayoutMethod = function (layoutMethod, layoutCfg) {\n    var _this = this;\n\n    return new Promise(function (reslove, reject) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var graph, layoutType, layoutData;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              graph = this.graph;\n              layoutType = layoutCfg === null || layoutCfg === void 0 ? void 0 : layoutCfg.type; // 每个布局方法都需要注册\n\n              layoutCfg.onLayoutEnd = function () {\n                graph.emit('aftersublayout', {\n                  type: layoutType\n                });\n                reslove();\n              };\n\n              layoutData = this.filterLayoutData(this.data, layoutCfg);\n              layoutMethod.init(layoutData);\n              layoutMethod.updateCfg(layoutCfg);\n              graph.emit('beforesublayout', {\n                type: layoutType\n              });\n              return [4\n              /*yield*/\n              , layoutMethod.execute()];\n\n            case 1:\n              _a.sent();\n\n              if (layoutMethod.isCustomLayout && layoutCfg.onLayoutEnd) layoutCfg.onLayoutEnd();\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    });\n  };\n  /**\n   * @param {function} success callback\n   * @return {boolean} 是否使用web worker布局\n   */\n\n\n  LayoutController.prototype.layout = function (success) {\n    var _this = this;\n\n    var graph = this.graph;\n    this.data = this.setDataFromGraph();\n    var _a = this.data,\n        nodes = _a.nodes,\n        hiddenNodes = _a.hiddenNodes;\n\n    if (!nodes) {\n      return false;\n    }\n\n    var width = graph.get('width');\n    var height = graph.get('height');\n    var layoutCfg = {};\n    Object.assign(layoutCfg, {\n      width: width,\n      height: height,\n      center: [width / 2, height / 2]\n    }, this.layoutCfg);\n    this.layoutCfg = layoutCfg;\n    this.destoryLayoutMethods();\n    graph.emit('beforelayout');\n    this.initPositions(layoutCfg.center, nodes); // init hidden nodes\n\n    this.initPositions(layoutCfg.center, hiddenNodes); // 防止用户直接用 -gpu 结尾指定布局\n\n    var layoutType = layoutCfg.type;\n\n    if (layoutType && layoutType.split('-')[1] === 'gpu') {\n      layoutType = layoutType.split('-')[0];\n      layoutCfg.gpuEnabled = true;\n    } // 若用户指定开启 gpu，且当前浏览器支持 webgl，且该算法存在 GPU 版本（目前仅支持 fruchterman 和 gForce），使用 gpu 版本的布局\n\n\n    var enableGPU = false;\n\n    if (layoutCfg.gpuEnabled) {\n      enableGPU = true; // 打开下面语句将会导致 webworker 报找不到 window\n\n      if (!gpuDetector().webgl) {\n        console.warn(\"Your browser does not support webGL or GPGPU. The layout will run in CPU.\");\n        enableGPU = false;\n      }\n    }\n\n    this.isGPU = enableGPU; // 在 onAllLayoutEnd 中执行用户自定义 onLayoutEnd，触发 afterlayout、更新节点位置、fitView/fitCenter、触发 afterrender\n\n    var onLayoutEnd = layoutCfg.onLayoutEnd,\n        layoutEndFormatted = layoutCfg.layoutEndFormatted,\n        adjust = layoutCfg.adjust;\n\n    if (!layoutEndFormatted) {\n      layoutCfg.layoutEndFormatted = true;\n\n      layoutCfg.onAllLayoutEnd = function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                // 执行用户自定义 onLayoutEnd\n                if (onLayoutEnd) {\n                  onLayoutEnd();\n                } // 更新节点位置\n\n\n                this.refreshLayout();\n                if (!(adjust && layoutCfg.pipes)) return [3\n                /*break*/\n                , 2];\n                return [4\n                /*yield*/\n                , this.adjustPipesBox(this.data, adjust)];\n\n              case 1:\n                _a.sent();\n\n                this.refreshLayout();\n                _a.label = 2;\n\n              case 2:\n                // 触发 afterlayout\n                graph.emit('afterlayout');\n                return [2\n                /*return*/\n                ];\n            }\n          });\n        });\n      };\n    }\n\n    this.stopWorker();\n\n    if (layoutCfg.workerEnabled && this.layoutWithWorker(this.data)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return true;\n    }\n\n    var start = Promise.resolve();\n\n    if (layoutCfg.type) {\n      start = start.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , this.execLayoutMethod(layoutCfg, 0)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _a.sent()];\n            }\n          });\n        });\n      });\n    } else if (layoutCfg.pipes) {\n      layoutCfg.pipes.forEach(function (cfg, index) {\n        start = start.then(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.execLayoutMethod(cfg, index)];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _a.sent()];\n              }\n            });\n          });\n        });\n      });\n    } // 最后统一在外部调用onAllLayoutEnd\n\n\n    start.then(function () {\n      if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd(); // 在执行 execute 后立即执行 success，且在 timeBar 中有 throttle，可以防止 timeBar 监听 afterrender 进行 changeData 后 layout，从而死循环\n      // 对于 force 一类布局完成后的 fitView 需要用户自己在 onLayoutEnd 中配置\n\n      if (success) success();\n    }).catch(function (error) {\n      console.warn('graph layout failed,', error);\n    });\n    return false;\n  };\n  /**\n   * layout with web worker\n   * @param {object} data graph data\n   * @return {boolean} 是否支持web worker\n   */\n\n\n  LayoutController.prototype.layoutWithWorker = function (data) {\n    var _this = this;\n\n    var _a = this,\n        layoutCfg = _a.layoutCfg,\n        graph = _a.graph;\n\n    var worker = this.getWorker(); // 每次worker message event handler调用之间的共享数据，会被修改。\n\n    var workerData = this.workerData;\n\n    if (!worker) {\n      return false;\n    }\n\n    workerData.requestId = null;\n    workerData.requestId2 = null;\n    workerData.currentTick = null;\n    workerData.currentTickData = null;\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n\n    if (layoutCfg.type) {\n      start = start.then(function () {\n        return _this.runWebworker(worker, data, layoutCfg);\n      });\n    } else if (layoutCfg.pipes) {\n      var _loop_1 = function _loop_1(cfg) {\n        start = start.then(function () {\n          return _this.runWebworker(worker, data, cfg);\n        });\n      };\n\n      for (var _i = 0, _b = layoutCfg.pipes; _i < _b.length; _i++) {\n        var cfg = _b[_i];\n\n        _loop_1(cfg);\n      }\n    } // 最后统一在外部调用onAllLayoutEnd\n\n\n    start.then(function () {\n      if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n    }).catch(function (error) {\n      console.error('layout failed', error);\n    });\n    return true;\n  };\n\n  LayoutController.prototype.runWebworker = function (worker, allData, layoutCfg) {\n    var _this = this;\n\n    var isGPU = this.isGPU;\n    var data = this.filterLayoutData(allData, layoutCfg);\n    var nodes = data.nodes,\n        edges = data.edges;\n    var offScreenCanvas = document.createElement('canvas');\n    var gpuWorkerAbility = isGPU && typeof window !== 'undefined' && // eslint-disable-next-line @typescript-eslint/dot-notation\n    window.navigator && !navigator[\"gpu\"] && // WebGPU 还不支持 OffscreenCanvas\n    'OffscreenCanvas' in window && 'transferControlToOffscreen' in offScreenCanvas; // NOTE: postMessage的message参数里面不能包含函数，否则postMessage会报错，\n    // 例如：'function could not be cloned'。\n    // 详情参考：https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm\n    // 所以这里需要把过滤layoutCfg里的函数字段过滤掉。\n\n    var filteredLayoutCfg = filterObject(layoutCfg, function (value) {\n      return typeof value !== 'function';\n    });\n\n    if (!gpuWorkerAbility) {\n      worker.postMessage({\n        type: LAYOUT_MESSAGE.RUN,\n        nodes: nodes,\n        edges: edges,\n        layoutCfg: filteredLayoutCfg\n      });\n    } else {\n      var offscreen = offScreenCanvas.transferControlToOffscreen(); // filteredLayoutCfg.canvas = offscreen;\n\n      filteredLayoutCfg.type = filteredLayoutCfg.type + \"-gpu\";\n      worker.postMessage({\n        type: LAYOUT_MESSAGE.GPURUN,\n        nodes: nodes,\n        edges: edges,\n        layoutCfg: filteredLayoutCfg,\n        canvas: offscreen\n      }, [offscreen]);\n    }\n\n    return new Promise(function (reslove, reject) {\n      worker.onmessage = function (event) {\n        _this.handleWorkerMessage(reslove, reject, event, data, layoutCfg);\n      };\n    });\n  }; // success callback will be called when updating graph positions for the first time.\n\n\n  LayoutController.prototype.handleWorkerMessage = function (reslove, reject, event, data, layoutCfg) {\n    var _a = this,\n        graph = _a.graph,\n        workerData = _a.workerData;\n\n    var eventData = event.data;\n    var type = eventData.type;\n\n    var onTick = function onTick() {\n      if (layoutCfg.onTick) {\n        layoutCfg.onTick();\n      }\n    };\n\n    switch (type) {\n      case LAYOUT_MESSAGE.TICK:\n        workerData.currentTick = eventData.currentTick;\n        workerData.currentTickData = eventData;\n\n        if (!workerData.requestId) {\n          workerData.requestId = helper.requestAnimationFrame(function requestId() {\n            updateLayoutPosition(data, eventData);\n            graph.refreshPositions();\n            onTick();\n\n            if (eventData.currentTick === eventData.totalTicks) {\n              // 如果是最后一次tick\n              reslove();\n            } else if (workerData.currentTick === eventData.totalTicks) {\n              // 注意这里workerData.currentTick可能已经不再是前面赋值时候的值了，\n              // 因为在requestAnimationFrame等待时间里，可能产生新的tick。\n              // 如果当前tick不是最后一次tick，并且所有的tick消息都已发出来了，那么需要用最后一次tick的数据再刷新一次。\n              workerData.requestId2 = helper.requestAnimationFrame(function requestId2() {\n                updateLayoutPosition(data, workerData.currentTickData);\n                graph.refreshPositions();\n                workerData.requestId2 = null;\n                onTick();\n                reslove();\n              });\n            }\n\n            workerData.requestId = null;\n          });\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.END:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateLayoutPosition(data, eventData);\n          reslove();\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.GPUEND:\n        // 如果没有tick消息（非力导布局）\n        if (workerData.currentTick == null) {\n          updateGPUWorkerLayoutPosition(data, eventData);\n          reslove();\n        }\n\n        break;\n\n      case LAYOUT_MESSAGE.ERROR:\n        console.warn('Web-Worker layout error!', eventData.message);\n        reject();\n        break;\n\n      default:\n        reject();\n        break;\n    }\n  }; // 更新布局参数\n\n\n  LayoutController.prototype.updateLayoutCfg = function (cfg) {\n    var _this = this;\n\n    var _a = this,\n        graph = _a.graph,\n        layoutMethods = _a.layoutMethods;\n\n    var layoutCfg = mix({}, this.layoutCfg, cfg);\n    this.layoutCfg = layoutCfg;\n\n    if (!(layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.length)) {\n      this.layout();\n      return;\n    }\n\n    this.data = this.setDataFromGraph();\n    this.stopWorker();\n\n    if (cfg.workerEnabled && this.layoutWithWorker(this.data)) {\n      // 如果启用布局web worker并且浏览器支持web worker，用web worker布局。否则回退到不用web worker布局。\n      return;\n    }\n\n    graph.emit('beforelayout');\n    var start = Promise.resolve();\n\n    if (layoutMethods.length === 1) {\n      start = start.then(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            switch (_a.label) {\n              case 0:\n                return [4\n                /*yield*/\n                , this.updateLayoutMethod(layoutMethods[0], layoutCfg)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _a.sent()];\n            }\n          });\n        });\n      });\n    } else {\n      layoutMethods === null || layoutMethods === void 0 ? void 0 : layoutMethods.forEach(function (layoutMethod, index) {\n        var currentCfg = layoutCfg.pipes[index];\n        start = start.then(function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , this.updateLayoutMethod(layoutMethod, currentCfg)];\n\n                case 1:\n                  return [2\n                  /*return*/\n                  , _a.sent()];\n              }\n            });\n          });\n        });\n      });\n    }\n\n    start.then(function () {\n      if (layoutCfg.onAllLayoutEnd) layoutCfg.onAllLayoutEnd();\n    }).catch(function (error) {\n      console.warn('layout failed', error);\n    });\n  };\n\n  LayoutController.prototype.adjustPipesBox = function (data, adjust) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      var nodes = data.nodes;\n\n      if (!(nodes === null || nodes === void 0 ? void 0 : nodes.length)) {\n        resolve();\n      }\n\n      if (!LAYOUT_PIPES_ADJUST_NAMES.includes(adjust)) {\n        console.warn(\"The adjust type \" + adjust + \" is not supported yet, please assign it with 'force', 'grid', or 'circular'.\");\n        resolve();\n      }\n\n      var layoutCfg = {\n        center: _this.layoutCfg.center,\n        nodeSize: function nodeSize(d) {\n          return Math.max(d.height, d.width);\n        },\n        preventOverlap: true,\n        onLayoutEnd: function onLayoutEnd() {}\n      }; // 计算出大单元\n\n      var _a = _this.getLayoutBBox(nodes),\n          groupNodes = _a.groupNodes,\n          layoutNodes = _a.layoutNodes;\n\n      var preNodes = clone(layoutNodes); // 根据大单元坐标的变化，调整这里面每个小单元nodes\n\n      layoutCfg.onLayoutEnd = function () {\n        layoutNodes === null || layoutNodes === void 0 ? void 0 : layoutNodes.forEach(function (ele, index) {\n          var _a, _b, _c;\n\n          var dx = ele.x - ((_a = preNodes[index]) === null || _a === void 0 ? void 0 : _a.x);\n          var dy = ele.y - ((_b = preNodes[index]) === null || _b === void 0 ? void 0 : _b.y);\n          (_c = groupNodes[index]) === null || _c === void 0 ? void 0 : _c.forEach(function (n) {\n            n.x += dx;\n            n.y += dy;\n          });\n        });\n        resolve();\n      };\n\n      var layoutMethod = new Layout[adjust](layoutCfg);\n      layoutMethod.layout({\n        nodes: layoutNodes\n      });\n    });\n  };\n\n  LayoutController.prototype.hasGPUVersion = function (layoutName) {\n    return GPU_LAYOUT_NAMES.includes(layoutName);\n  };\n\n  LayoutController.prototype.destroy = function () {\n    this.destoryLayoutMethods();\n    var worker = this.worker;\n\n    if (worker) {\n      worker.terminate();\n      this.worker = null;\n    }\n\n    this.destroyed = true;\n    this.graph.set('layout', undefined);\n    this.layoutCfg = undefined;\n    this.layoutType = undefined;\n    this.layoutMethods = undefined;\n    this.graph = null;\n  };\n\n  return LayoutController;\n}(AbstractLayout);\n\nexport default LayoutController;\n\nfunction updateLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var layoutNodes = layoutData.nodes;\n  var nodeLength = nodes.length;\n\n  for (var i = 0; i < nodeLength; i++) {\n    var node = nodes[i];\n    node.x = layoutNodes[i].x;\n    node.y = layoutNodes[i].y;\n  }\n}\n\nfunction filterObject(collection, callback) {\n  var result = {};\n\n  if (collection && _typeof(collection) === 'object') {\n    Object.keys(collection).forEach(function (key) {\n      if (collection.hasOwnProperty(key) && callback(collection[key])) {\n        result[key] = collection[key];\n      }\n    });\n    return result;\n  }\n\n  return collection;\n}\n\nfunction updateGPUWorkerLayoutPosition(data, layoutData) {\n  var nodes = data.nodes;\n  var vertexEdgeData = layoutData.vertexEdgeData;\n  var nodeLength = nodes.length;\n\n  for (var i = 0; i < nodeLength; i++) {\n    var node = nodes[i];\n    var x = vertexEdgeData[4 * i];\n    var y = vertexEdgeData[4 * i + 1];\n    node.x = x;\n    node.y = y;\n  }\n}\n\nfunction addLayoutOrder(data, order) {\n  var _a;\n\n  if (!((_a = data === null || data === void 0 ? void 0 : data.nodes) === null || _a === void 0 ? void 0 : _a.length)) {\n    return;\n  }\n\n  var nodes = data.nodes;\n  nodes.forEach(function (node) {\n    node.layoutOrder = order;\n  });\n}"]},"metadata":{},"sourceType":"module"}