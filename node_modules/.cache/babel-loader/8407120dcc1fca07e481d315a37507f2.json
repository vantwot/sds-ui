{"ast":null,"code":"import React from 'react';\nimport classNames from 'classnames';\nimport { MenuItem } from './item';\nimport { MenuDivider } from './divider';\nimport { MenuContext } from './context';\nimport { MenuSubMenu } from './submenu';\nexport class Menu extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    this.onClick = (name, e) => {\n      if (this.props.stopPropagation && e != null) {\n        e.stopPropagation();\n      }\n\n      if (this.props.onClick) {\n        this.props.onClick(name);\n      }\n    };\n\n    this.registerHotkey = (hotkey, handler) => {\n      if (this.props.registerHotkey) {\n        this.props.registerHotkey(hotkey, handler);\n      }\n    };\n\n    this.unregisterHotkey = (hotkey, handler) => {\n      if (this.props.unregisterHotkey) {\n        this.props.unregisterHotkey(hotkey, handler);\n      }\n    };\n  }\n\n  render() {\n    const {\n      prefixCls,\n      className,\n      children,\n      hasIcon\n    } = this.props;\n    const baseCls = `${prefixCls}-menu`;\n    const ContextProvider = MenuContext.Provider;\n    const contextValue = {\n      prefixCls: baseCls,\n      onClick: this.onClick,\n      registerHotkey: this.registerHotkey,\n      unregisterHotkey: this.unregisterHotkey\n    };\n    return React.createElement(\"div\", {\n      className: classNames(baseCls, {\n        [`${baseCls}-has-icon`]: hasIcon\n      }, className)\n    }, React.createElement(ContextProvider, {\n      value: contextValue\n    }, children));\n  }\n\n}\n\n(function (Menu) {\n  Menu.Item = MenuItem;\n  Menu.Divider = MenuDivider;\n  Menu.SubMenu = MenuSubMenu;\n  Menu.defaultProps = {\n    prefixCls: 'x6',\n    stopPropagation: false\n  };\n})(Menu || (Menu = {}));","map":{"version":3,"sources":["../../src/menu/menu.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkC,OAAlC;AACA,OAAO,UAAP,MAAuB,YAAvB;AACA,SAAS,QAAT,QAAyB,QAAzB;AACA,SAAS,WAAT,QAA4B,WAA5B;AACA,SAAS,WAAT,QAA4B,WAA5B;AACA,SAAS,WAAT,QAA4B,WAA5B;AAEA,OAAM,MAAO,IAAP,SAAoB,KAAK,CAAC,aAA1B,CAAmD;AAAzD,EAAA,WAAA,GAAA;;;AACU,SAAA,OAAA,GAAU,CAAC,IAAD,EAAe,CAAf,KAAiC;AACjD,UAAI,KAAK,KAAL,CAAW,eAAX,IAA8B,CAAC,IAAI,IAAvC,EAA6C;AAC3C,QAAA,CAAC,CAAC,eAAF;AACD;;AAED,UAAI,KAAK,KAAL,CAAW,OAAf,EAAwB;AACtB,aAAK,KAAL,CAAW,OAAX,CAAmB,IAAnB;AACD;AACF,KARO;;AAUA,SAAA,cAAA,GAAiB,CAAC,MAAD,EAAiB,OAAjB,KAAuC;AAC9D,UAAI,KAAK,KAAL,CAAW,cAAf,EAA+B;AAC7B,aAAK,KAAL,CAAW,cAAX,CAA0B,MAA1B,EAAkC,OAAlC;AACD;AACF,KAJO;;AAMA,SAAA,gBAAA,GAAmB,CAAC,MAAD,EAAiB,OAAjB,KAAuC;AAChE,UAAI,KAAK,KAAL,CAAW,gBAAf,EAAiC;AAC/B,aAAK,KAAL,CAAW,gBAAX,CAA4B,MAA5B,EAAoC,OAApC;AACD;AACF,KAJO;AA+BT;;AAzBC,EAAA,MAAM,GAAA;AACJ,UAAM;AAAE,MAAA,SAAF;AAAa,MAAA,SAAb;AAAwB,MAAA,QAAxB;AAAkC,MAAA;AAAlC,QAA8C,KAAK,KAAzD;AACA,UAAM,OAAO,GAAG,GAAG,SAAS,OAA5B;AACA,UAAM,eAAe,GAAG,WAAW,CAAC,QAApC;AACA,UAAM,YAAY,GAAyB;AACzC,MAAA,SAAS,EAAE,OAD8B;AAEzC,MAAA,OAAO,EAAE,KAAK,OAF2B;AAGzC,MAAA,cAAc,EAAE,KAAK,cAHoB;AAIzC,MAAA,gBAAgB,EAAE,KAAK;AAJkB,KAA3C;AAOA,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,SAAS,EAAE,UAAU,CACnB,OADmB,EAEnB;AACE,SAAC,GAAG,OAAO,WAAX,GAAyB;AAD3B,OAFmB,EAKnB,SALmB;AADvB,KAAA,EASE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AAAC,MAAA,KAAK,EAAE;AAAR,KAAhB,EAAuC,QAAvC,CATF,CADF;AAaD;;AA/CsD;;AAkDzD,CAAA,UAAiB,IAAjB,EAAqB;AACN,EAAA,IAAA,CAAA,IAAA,GAAO,QAAP;AACA,EAAA,IAAA,CAAA,OAAA,GAAU,WAAV;AACA,EAAA,IAAA,CAAA,OAAA,GAAU,WAAV;AAYA,EAAA,IAAA,CAAA,YAAA,GAAsB;AACjC,IAAA,SAAS,EAAE,IADsB;AAEjC,IAAA,eAAe,EAAE;AAFgB,GAAtB;AAId,CAnBD,EAAiB,IAAI,KAAJ,IAAI,GAAA,EAAA,CAArB","sourceRoot":"","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { MenuItem } from './item';\nimport { MenuDivider } from './divider';\nimport { MenuContext } from './context';\nimport { MenuSubMenu } from './submenu';\nexport class Menu extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.onClick = (name, e) => {\n            if (this.props.stopPropagation && e != null) {\n                e.stopPropagation();\n            }\n            if (this.props.onClick) {\n                this.props.onClick(name);\n            }\n        };\n        this.registerHotkey = (hotkey, handler) => {\n            if (this.props.registerHotkey) {\n                this.props.registerHotkey(hotkey, handler);\n            }\n        };\n        this.unregisterHotkey = (hotkey, handler) => {\n            if (this.props.unregisterHotkey) {\n                this.props.unregisterHotkey(hotkey, handler);\n            }\n        };\n    }\n    render() {\n        const { prefixCls, className, children, hasIcon } = this.props;\n        const baseCls = `${prefixCls}-menu`;\n        const ContextProvider = MenuContext.Provider;\n        const contextValue = {\n            prefixCls: baseCls,\n            onClick: this.onClick,\n            registerHotkey: this.registerHotkey,\n            unregisterHotkey: this.unregisterHotkey,\n        };\n        return (React.createElement(\"div\", { className: classNames(baseCls, {\n                [`${baseCls}-has-icon`]: hasIcon,\n            }, className) },\n            React.createElement(ContextProvider, { value: contextValue }, children)));\n    }\n}\n(function (Menu) {\n    Menu.Item = MenuItem;\n    Menu.Divider = MenuDivider;\n    Menu.SubMenu = MenuSubMenu;\n    Menu.defaultProps = {\n        prefixCls: 'x6',\n        stopPropagation: false,\n    };\n})(Menu || (Menu = {}));\n//# sourceMappingURL=menu.js.map"]},"metadata":{},"sourceType":"module"}