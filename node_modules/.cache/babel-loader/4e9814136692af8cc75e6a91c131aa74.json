{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Platform, Dom, FunctionExt, ObjectExt } from '../../util';\nimport { Attr } from '../../registry';\nimport { Base } from '../base';\nexport var TextBlock = Base.define({\n  shape: 'text-block',\n  markup: [{\n    tagName: 'rect',\n    selector: 'body'\n  }, Platform.SUPPORT_FOREIGNOBJECT ? {\n    tagName: 'foreignObject',\n    selector: 'foreignObject',\n    children: [{\n      tagName: 'div',\n      ns: Dom.ns.xhtml,\n      selector: 'label',\n      style: {\n        width: '100%',\n        height: '100%',\n        position: 'static',\n        backgroundColor: 'transparent',\n        textAlign: 'center',\n        margin: 0,\n        padding: '0px 5px',\n        boxSizing: 'border-box',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    }]\n  } : {\n    tagName: 'text',\n    selector: 'label',\n    attrs: {\n      textAnchor: 'middle'\n    }\n  }],\n  attrs: {\n    body: Object.assign(Object.assign({}, Base.bodyAttr), {\n      refWidth: '100%',\n      refHeight: '100%'\n    }),\n    foreignObject: {\n      refWidth: '100%',\n      refHeight: '100%'\n    },\n    label: {\n      style: {\n        fontSize: 14\n      }\n    }\n  },\n  propHooks: function propHooks(metadata) {\n    var text = metadata.text,\n        others = __rest(metadata, [\"text\"]);\n\n    if (text) {\n      ObjectExt.setByPath(others, 'attrs/label/text', text);\n    }\n\n    return others;\n  },\n  attrHooks: {\n    text: {\n      set: function set(text, _ref) {\n        var cell = _ref.cell,\n            view = _ref.view,\n            refBBox = _ref.refBBox,\n            elem = _ref.elem,\n            attrs = _ref.attrs;\n\n        if (elem instanceof HTMLElement) {\n          elem.textContent = text;\n        } else {\n          // No foreign object\n          var style = attrs.style || {};\n          var wrapValue = {\n            text: text,\n            width: -5,\n            height: '100%'\n          };\n          var wrapAttrs = Object.assign({\n            textVerticalAnchor: 'middle'\n          }, style);\n          var textWrap = Attr.presets.textWrap;\n          FunctionExt.call(textWrap.set, this, wrapValue, {\n            cell: cell,\n            view: view,\n            elem: elem,\n            refBBox: refBBox,\n            attrs: wrapAttrs\n          });\n          return {\n            fill: style.color || null\n          };\n        }\n      },\n      position: function position(text, _ref2) {\n        var refBBox = _ref2.refBBox,\n            elem = _ref2.elem;\n\n        if (elem instanceof SVGElement) {\n          return refBBox.getCenter();\n        }\n      }\n    }\n  }\n});","map":{"version":3,"sources":["../../../src/shape/standard/text-block.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Platform, Dom, FunctionExt, ObjectExt } from '../../util';\nimport { Attr } from '../../registry';\nimport { Base } from '../base';\nexport const TextBlock = Base.define({\n    shape: 'text-block',\n    markup: [\n        {\n            tagName: 'rect',\n            selector: 'body',\n        },\n        Platform.SUPPORT_FOREIGNOBJECT\n            ? {\n                tagName: 'foreignObject',\n                selector: 'foreignObject',\n                children: [\n                    {\n                        tagName: 'div',\n                        ns: Dom.ns.xhtml,\n                        selector: 'label',\n                        style: {\n                            width: '100%',\n                            height: '100%',\n                            position: 'static',\n                            backgroundColor: 'transparent',\n                            textAlign: 'center',\n                            margin: 0,\n                            padding: '0px 5px',\n                            boxSizing: 'border-box',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        },\n                    },\n                ],\n            }\n            : {\n                tagName: 'text',\n                selector: 'label',\n                attrs: {\n                    textAnchor: 'middle',\n                },\n            },\n    ],\n    attrs: {\n        body: Object.assign(Object.assign({}, Base.bodyAttr), { refWidth: '100%', refHeight: '100%' }),\n        foreignObject: {\n            refWidth: '100%',\n            refHeight: '100%',\n        },\n        label: {\n            style: {\n                fontSize: 14,\n            },\n        },\n    },\n    propHooks(metadata) {\n        const { text } = metadata, others = __rest(metadata, [\"text\"]);\n        if (text) {\n            ObjectExt.setByPath(others, 'attrs/label/text', text);\n        }\n        return others;\n    },\n    attrHooks: {\n        text: {\n            set(text, { cell, view, refBBox, elem, attrs }) {\n                if (elem instanceof HTMLElement) {\n                    elem.textContent = text;\n                }\n                else {\n                    // No foreign object\n                    const style = attrs.style || {};\n                    const wrapValue = { text, width: -5, height: '100%' };\n                    const wrapAttrs = Object.assign({ textVerticalAnchor: 'middle' }, style);\n                    const textWrap = Attr.presets.textWrap;\n                    FunctionExt.call(textWrap.set, this, wrapValue, {\n                        cell,\n                        view,\n                        elem,\n                        refBBox,\n                        attrs: wrapAttrs,\n                    });\n                    return { fill: style.color || null };\n                }\n            },\n            position(text, { refBBox, elem }) {\n                if (elem instanceof SVGElement) {\n                    return refBBox.getCenter();\n                }\n            },\n        },\n    },\n});\n//# sourceMappingURL=text-block.js.map"]},"metadata":{},"sourceType":"module"}