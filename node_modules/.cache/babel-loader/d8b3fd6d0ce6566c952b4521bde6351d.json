{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { Syringe } from 'mana-syringe';\nimport { IHookContribution } from '../hooks/interface';\nimport { disposableNoop } from '../common/utils';\nexport var CONFIG_TYPE = 'CommandConfig';\nexport var getDefaultContributions = function getDefaultContributions() {\n  return [];\n};\nexport var CommandConfig = function CommandConfig() {\n  var _this = this;\n\n  _classCallCheck(this, CommandConfig);\n\n  this.setCommandContributions = function (fn) {\n    _this.getContributions = fn;\n  };\n\n  this.getCommandContributions = function () {\n    return _this.getContributions();\n  };\n\n  this.registerHook = function (hooks) {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.registerHookFn) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", this.registerHookFn(hooks));\n\n            case 2:\n              return _context.abrupt(\"return\", disposableNoop);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n  };\n\n  this.registerHookHub = function (registry) {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!this.registerHookHubFn) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", this.registerHookHubFn(registry));\n\n            case 2:\n              return _context2.abrupt(\"return\", disposableNoop);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n  };\n  /** 设置CONFIG类型 */\n\n\n  this.CONFIG_TYPE = CONFIG_TYPE;\n  /** set command hook fn */\n\n  this.setRegisterHookFn = function (fn) {\n    _this.registerHookFn = fn;\n  };\n  /** 注册 command hook hub */\n\n\n  this.setRegisterHookHubFn = function (fn) {\n    _this.registerHookHubFn = fn;\n  };\n  /** 获取config的所有配置*/\n\n\n  this.getConfig = function () {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", {\n                registerHookFn: this.registerHookFn,\n                getContributions: this.getContributions,\n                CONFIG_TYPE: this.CONFIG_TYPE\n              });\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n  };\n\n  this.getContributions = getDefaultContributions;\n};\n/** 提供一个工厂方法 */\n\nexport var createCommandConfig = function createCommandConfig() {\n  return new CommandConfig();\n};\nexport var registerCommandConfig = function registerCommandConfig(register, commandConfig) {\n  register({\n    token: CommandConfig,\n    contrib: [IHookContribution],\n    lifecycle: Syringe.Lifecycle.singleton,\n    useDynamic: function useDynamic() {\n      return commandConfig;\n    }\n  });\n};","map":{"version":3,"sources":["../../src/command-contributions/config.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,OAAT,QAAwB,cAAxB;AAEA,SAAS,iBAAT,QAAkC,oBAAlC;AAEA,SAAS,cAAT,QAA+B,iBAA/B;AAKA,OAAO,IAAM,WAAW,GAAG,eAApB;AAEP,OAAO,IAAM,uBAAuB,GAAG,SAA1B,uBAA0B,GAAK;AAC1C,SAAO,EAAP;AACD,CAFM;AAQP,WAAa,aAAb,GAGE,yBAAA;AAAA;;AAAA;;AAIA,OAAA,uBAAA,GAA0B,UAAC,EAAD,EAAqC;AAC7D,IAAA,KAAI,CAAC,gBAAL,GAAwB,EAAxB;AACD,GAFD;;AAIA,OAAA,uBAAA,GAA0B,YAAK;AAC7B,WAAO,KAAI,CAAC,gBAAL,EAAP;AACD,GAFD;;AAIA,OAAA,YAAA,GAAe,UAAO,KAAP;AAAA,WAA2B,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACpC,KAAK,cAD+B;AAAA;AAAA;AAAA;;AAAA,+CAE/B,KAAK,cAAL,CAAoB,KAApB,CAF+B;;AAAA;AAAA,+CAIjC,cAJiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA,EAA3B;AAAA,GAAf;;AAOA,OAAA,eAAA,GAAkB,UAAO,QAAP;AAAA,WAA4C,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACxD,KAAK,iBADmD;AAAA;AAAA;AAAA;;AAAA,gDAEnD,KAAK,iBAAL,CAAuB,QAAvB,CAFmD;;AAAA;AAAA,gDAIrD,cAJqD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA,EAA5C;AAAA,GAAlB;AAMA;;;AACS,OAAA,WAAA,GAAc,WAAd;AAIT;;AACA,OAAA,iBAAA,GAAoB,UAAC,EAAD,EAAmC;AACrD,IAAA,KAAI,CAAC,cAAL,GAAsB,EAAtB;AACD,GAFD;AAKA;;;AACA,OAAA,oBAAA,GAAuB,UAAC,EAAD,EAAsC;AAC3D,IAAA,KAAI,CAAC,iBAAL,GAAyB,EAAzB;AACD,GAFD;AAGA;;;AACA,OAAA,SAAA,GAAY;AAAA,WAAW,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDACd;AACL,gBAAA,cAAc,EAAE,KAAK,cADhB;AAEL,gBAAA,gBAAgB,EAAE,KAAK,gBAFlB;AAGL,gBAAA,WAAW,EAAE,KAAK;AAHb,eADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA,EAAX;AAAA,GAAZ;;AAxCE,OAAK,gBAAL,GAAwB,uBAAxB;AACD,CALH;AAqDA;;AACA,OAAO,IAAM,mBAAmB,GAAG,SAAtB,mBAAsB,GAAK;AACtC,SAAO,IAAI,aAAJ,EAAP;AACD,CAFM;AAIP,OAAO,IAAM,qBAAqB,GAAG,SAAxB,qBAAwB,CAAC,QAAD,EAA6B,aAA7B,EAA6D;AAChG,EAAA,QAAQ,CAAgB;AACtB,IAAA,KAAK,EAAE,aADe;AAEtB,IAAA,OAAO,EAAE,CAAC,iBAAD,CAFa;AAGtB,IAAA,SAAS,EAAE,OAAO,CAAC,SAAR,CAAkB,SAHP;AAItB,IAAA,UAAU,EAAE,sBAAK;AACf,aAAO,aAAP;AACD;AANqB,GAAhB,CAAR;AAQD,CATM","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Syringe } from 'mana-syringe';\nimport { IHookContribution } from '../hooks/interface';\nimport { disposableNoop } from '../common/utils';\nexport const CONFIG_TYPE = 'CommandConfig';\nexport const getDefaultContributions = () => {\n    return [];\n};\nexport class CommandConfig {\n    constructor() {\n        this.setCommandContributions = (fn) => {\n            this.getContributions = fn;\n        };\n        this.getCommandContributions = () => {\n            return this.getContributions();\n        };\n        this.registerHook = (hooks) => __awaiter(this, void 0, void 0, function* () {\n            if (this.registerHookFn) {\n                return this.registerHookFn(hooks);\n            }\n            return disposableNoop;\n        });\n        this.registerHookHub = (registry) => __awaiter(this, void 0, void 0, function* () {\n            if (this.registerHookHubFn) {\n                return this.registerHookHubFn(registry);\n            }\n            return disposableNoop;\n        });\n        /** 设置CONFIG类型 */\n        this.CONFIG_TYPE = CONFIG_TYPE;\n        /** set command hook fn */\n        this.setRegisterHookFn = (fn) => {\n            this.registerHookFn = fn;\n        };\n        /** 注册 command hook hub */\n        this.setRegisterHookHubFn = (fn) => {\n            this.registerHookHubFn = fn;\n        };\n        /** 获取config的所有配置*/\n        this.getConfig = () => __awaiter(this, void 0, void 0, function* () {\n            return {\n                registerHookFn: this.registerHookFn,\n                getContributions: this.getContributions,\n                CONFIG_TYPE: this.CONFIG_TYPE,\n            };\n        });\n        this.getContributions = getDefaultContributions;\n    }\n}\n/** 提供一个工厂方法 */\nexport const createCommandConfig = () => {\n    return new CommandConfig();\n};\nexport const registerCommandConfig = (register, commandConfig) => {\n    register({\n        token: CommandConfig,\n        contrib: [IHookContribution],\n        lifecycle: Syringe.Lifecycle.singleton,\n        useDynamic: () => {\n            return commandConfig;\n        },\n    });\n};\n//# sourceMappingURL=config.js.map"]},"metadata":{},"sourceType":"module"}