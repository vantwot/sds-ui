{"ast":null,"code":"import addEventListener from 'rc-util/lib/Dom/addEventListener';\nimport { requestAnimationFrame, cancelAnimationFrame } from './animationFrame';\nexport class MouseMoveTracker {\n  constructor(options) {\n    this.onMouseMove = e => {\n      const x = e.clientX;\n      const y = e.clientY;\n      this.deltaX += x - this.clientX;\n      this.deltaY += y - this.clientY;\n\n      if (this.animationFrameID == null) {\n        this.animationFrameID = requestAnimationFrame(this.triggerOnMouseMoveCallback);\n      }\n\n      this.clientX = x;\n      this.clientY = y;\n      e.preventDefault();\n    };\n\n    this.onMouseUp = () => {\n      if (this.animationFrameID) {\n        cancelAnimationFrame(this.animationFrameID);\n        this.triggerOnMouseMoveCallback();\n      }\n\n      this.triggerOnMouseMoveEndCallback(false);\n    };\n\n    this.triggerOnMouseMoveCallback = () => {\n      this.animationFrameID = null;\n      this.onMouseMoveCallback(this.deltaX, this.deltaY, {\n        clientX: this.clientX,\n        clientY: this.clientY\n      });\n      this.deltaX = 0;\n      this.deltaY = 0;\n    };\n\n    this.triggerOnMouseMoveEndCallback = cancel => {\n      this.onMouseMoveEndCallback(cancel);\n    };\n\n    this.elem = options.elem || document.documentElement;\n    this.onMouseMoveCallback = options.onMouseMove;\n    this.onMouseMoveEndCallback = options.onMouseMoveEnd;\n    this.animationFrameID = null;\n  }\n\n  capture(e) {\n    if (!this.captured) {\n      this.removeMouseMoveEvent = addEventListener(this.elem, 'mousemove', this.onMouseMove).remove;\n      this.removeMouseUpEvent = addEventListener(this.elem, 'mouseup', this.onMouseUp).remove;\n    }\n\n    this.captured = true;\n\n    if (!this.dragging) {\n      this.clientX = e.clientX;\n      this.clientY = e.clientY;\n      this.deltaX = 0;\n      this.deltaY = 0;\n      this.dragging = true;\n    }\n\n    e.preventDefault();\n  }\n\n  release() {\n    if (this.captured) {\n      if (this.removeMouseMoveEvent != null) {\n        this.removeMouseMoveEvent();\n        this.removeMouseMoveEvent = null;\n      }\n\n      if (this.removeMouseUpEvent != null) {\n        this.removeMouseUpEvent();\n        this.removeMouseUpEvent = null;\n      }\n    }\n\n    this.captured = false;\n\n    if (this.dragging) {\n      this.dragging = false;\n      this.clientX = 0;\n      this.clientY = 0;\n      this.deltaX = 0;\n      this.deltaY = 0;\n    }\n  }\n\n  isDragging() {\n    return this.dragging;\n  }\n\n}","map":{"version":3,"sources":["../../../src/util/dom/MouseMoveTracker.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import addEventListener from 'rc-util/lib/Dom/addEventListener';\nimport { requestAnimationFrame, cancelAnimationFrame } from './animationFrame';\nexport class MouseMoveTracker {\n    constructor(options) {\n        this.onMouseMove = (e) => {\n            const x = e.clientX;\n            const y = e.clientY;\n            this.deltaX += x - this.clientX;\n            this.deltaY += y - this.clientY;\n            if (this.animationFrameID == null) {\n                this.animationFrameID = requestAnimationFrame(this.triggerOnMouseMoveCallback);\n            }\n            this.clientX = x;\n            this.clientY = y;\n            e.preventDefault();\n        };\n        this.onMouseUp = () => {\n            if (this.animationFrameID) {\n                cancelAnimationFrame(this.animationFrameID);\n                this.triggerOnMouseMoveCallback();\n            }\n            this.triggerOnMouseMoveEndCallback(false);\n        };\n        this.triggerOnMouseMoveCallback = () => {\n            this.animationFrameID = null;\n            this.onMouseMoveCallback(this.deltaX, this.deltaY, {\n                clientX: this.clientX,\n                clientY: this.clientY,\n            });\n            this.deltaX = 0;\n            this.deltaY = 0;\n        };\n        this.triggerOnMouseMoveEndCallback = (cancel) => {\n            this.onMouseMoveEndCallback(cancel);\n        };\n        this.elem = options.elem || document.documentElement;\n        this.onMouseMoveCallback = options.onMouseMove;\n        this.onMouseMoveEndCallback = options.onMouseMoveEnd;\n        this.animationFrameID = null;\n    }\n    capture(e) {\n        if (!this.captured) {\n            this.removeMouseMoveEvent = addEventListener(this.elem, 'mousemove', this.onMouseMove).remove;\n            this.removeMouseUpEvent = addEventListener(this.elem, 'mouseup', this.onMouseUp).remove;\n        }\n        this.captured = true;\n        if (!this.dragging) {\n            this.clientX = e.clientX;\n            this.clientY = e.clientY;\n            this.deltaX = 0;\n            this.deltaY = 0;\n            this.dragging = true;\n        }\n        e.preventDefault();\n    }\n    release() {\n        if (this.captured) {\n            if (this.removeMouseMoveEvent != null) {\n                this.removeMouseMoveEvent();\n                this.removeMouseMoveEvent = null;\n            }\n            if (this.removeMouseUpEvent != null) {\n                this.removeMouseUpEvent();\n                this.removeMouseUpEvent = null;\n            }\n        }\n        this.captured = false;\n        if (this.dragging) {\n            this.dragging = false;\n            this.clientX = 0;\n            this.clientY = 0;\n            this.deltaX = 0;\n            this.deltaY = 0;\n        }\n    }\n    isDragging() {\n        return this.dragging;\n    }\n}\n//# sourceMappingURL=MouseMoveTracker.js.map"]},"metadata":{},"sourceType":"module"}