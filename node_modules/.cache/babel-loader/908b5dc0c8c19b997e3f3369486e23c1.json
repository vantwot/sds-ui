{"ast":null,"code":"export function BKDRHash(str) {\n  var seed = 131;\n  var seed2 = 137;\n  var hash = 0;\n  str += 'x';\n  var MAX_SAFE_INTEGER = Math.floor(9007199254740991 / seed2);\n\n  for (var i = 0; i < str.length; i++) {\n    if (hash > MAX_SAFE_INTEGER) {\n      hash = Math.floor(hash / seed2);\n    }\n\n    hash = hash * seed + str.charCodeAt(i);\n  }\n\n  return hash;\n}\nexport function djb2hash(str) {\n  str = str.toString();\n  var hash = 5381;\n  var i = str.length;\n\n  while (i) {\n    hash = hash * 33 ^ str.charCodeAt(--i);\n  }\n\n  return hash >>> 0;\n}","map":{"version":3,"sources":["../src/hash.ts"],"names":["seed","seed2","hash","str","MAX_SAFE_INTEGER","Math","i"],"mappings":"AAAA,OAAO,SAAA,QAAA,CAAA,GAAA,EAA+B;AACpC,MAAMA,IAAI,GAAV,GAAA;AACA,MAAMC,KAAK,GAAX,GAAA;AACA,MAAIC,IAAI,GAAR,CAAA;AACAC,EAAAA,GAAG,IAAHA,GAAAA;AACA,MAAMC,gBAAgB,GAAGC,IAAI,CAAJA,KAAAA,CAAW,mBAApC,KAAyBA,CAAzB;;AACA,OAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGH,GAAG,CAAvB,MAAA,EAAgCG,CAAhC,EAAA,EAAqC;AACnC,QAAIJ,IAAI,GAAR,gBAAA,EAA6B;AAC3BA,MAAAA,IAAI,GAAGG,IAAI,CAAJA,KAAAA,CAAWH,IAAI,GAAtBA,KAAOG,CAAPH;AACD;;AACDA,IAAAA,IAAI,GAAGA,IAAI,GAAJA,IAAAA,GAAcC,GAAG,CAAHA,UAAAA,CAArBD,CAAqBC,CAArBD;AACD;;AACD,SAAA,IAAA;AACD;AACD,OAAO,SAAA,QAAA,CAAA,GAAA,EAA+B;AACpCC,EAAAA,GAAG,GAAGA,GAAG,CAATA,QAAMA,EAANA;AACA,MAAID,IAAI,GAAR,IAAA;AACA,MAAII,CAAC,GAAGH,GAAG,CAAX,MAAA;;AAEA,SAAA,CAAA,EAAU;AACRD,IAAAA,IAAI,GAAIA,IAAI,GAAL,EAACA,GAAaC,GAAG,CAAHA,UAAAA,CAAe,EAApCD,CAAqBC,CAArBD;AACD;;AACD,SAAOA,IAAI,KAAX,CAAA;AACD","sourcesContent":["export function BKDRHash(str: string) {\n  const seed = 131;\n  const seed2 = 137;\n  let hash = 0;\n  str += 'x';\n  const MAX_SAFE_INTEGER = Math.floor(9007199254740991 / seed2);\n  for (let i = 0; i < str.length; i++) {\n    if (hash > MAX_SAFE_INTEGER) {\n      hash = Math.floor(hash / seed2);\n    }\n    hash = hash * seed + str.charCodeAt(i);\n  }\n  return hash;\n}\nexport function djb2hash(str: string) {\n  str = str.toString();\n  let hash = 5381;\n  let i = str.length;\n\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n  return hash >>> 0;\n}\n"]},"metadata":{},"sourceType":"module"}