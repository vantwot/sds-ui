{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MappingLayer = exports.getMappingFunction = void 0;\n\nvar util_1 = require(\"@antv/util\");\n/**\n * 获得映射函数\n * @param mappingFields\n * @param callback\n */\n\n\nfunction getMappingFunction(mappingFields, callback) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var params = {};\n    mappingFields.forEach(function (f, index) {\n      params[f] = args[index];\n    });\n    delete params['undefined'];\n    return callback(params);\n  };\n}\n\nexports.getMappingFunction = getMappingFunction;\n\nvar MappingLayer =\n/** @class */\nfunction () {\n  function MappingLayer() {}\n\n  MappingLayer.shape = function (layer, shape) {\n    /**\n     * shape 的几种情况\n     * layer.shape('cicle');\n     * layer.shape('shape', ['cicle', 'square']);\n     * layer.shape('x', (x) => 'cicle');\n     * layer.shape('x*y', (x, y) => 'cicle');\n     */\n    if ((0, util_1.isString)(shape)) {\n      layer.shape(shape);\n    } else if ((0, util_1.isFunction)(shape)) {\n      // TODO: shape mappingFields\n      var mappingFields = [];\n      layer.shape(mappingFields.join('*'), getMappingFunction(mappingFields, shape));\n    } else if ((0, util_1.isObject)(shape)) {\n      var field = shape.field ? shape.field : '';\n\n      if ((0, util_1.isFunction)(shape.value)) {\n        var mappingFields = (0, util_1.isArray)(field) ? field : field.split('*');\n        layer.shape(field, getMappingFunction(mappingFields, shape.value));\n      } else {\n        layer.shape(field, shape.value);\n      } // scale\n\n\n      if ((0, util_1.isString)(field) && shape.scale) {\n        MappingLayer.scale(layer, field, shape.scale);\n      }\n    }\n  };\n\n  MappingLayer.size = function (layer, size) {\n    /**\n     * size 的几种情况\n     * layer.size(10);\n     * layer.size('size', [10, 20]);\n     * layer.size('x', (x) => 10);\n     * layer.size('x*y', (x, y) => 10);\n     */\n    if ((0, util_1.isNumber)(size)) {\n      layer.size(size);\n    } else if ((0, util_1.isArray)(size)) {\n      layer.size(size);\n    } else if ((0, util_1.isFunction)(size)) {\n      // TODO: size mappingFields\n      var mappingFields = [];\n      layer.size(mappingFields.join('*'), getMappingFunction(mappingFields, size));\n    } else if ((0, util_1.isObject)(size)) {\n      var field = size.field ? size.field : '';\n\n      if ((0, util_1.isFunction)(size.value)) {\n        var mappingFields = (0, util_1.isArray)(field) ? field : field.split('*');\n        layer.size(field, getMappingFunction(mappingFields, size.value));\n      } else {\n        layer.size(field, size.value);\n      } // scale\n\n\n      if ((0, util_1.isString)(field) && size.scale) {\n        MappingLayer.scale(layer, field, size.scale);\n      }\n    }\n  };\n\n  MappingLayer.color = function (layer, color) {\n    /**\n     * color 的几种情况\n     * layer.color('red');\n     * layer.color('color', ['red', 'blue']);\n     * layer.color('x', (x) => 'red');\n     * layer.color('x*y', (x, y) => 'red');\n     */\n    if ((0, util_1.isString)(color)) {\n      layer.color(color);\n    } else if ((0, util_1.isFunction)(color)) {\n      // TODO: color mappingFields\n      var mappingFields = [];\n      layer.color(mappingFields.join('*'), getMappingFunction(mappingFields, color));\n    } else if ((0, util_1.isObject)(color)) {\n      var field = color.field ? color.field : '';\n\n      if ((0, util_1.isFunction)(color.value)) {\n        var mappingFields = (0, util_1.isArray)(field) ? field : field.split('*');\n        layer.color(field, getMappingFunction(mappingFields, color.value));\n      } else {\n        layer.color(field, color.value);\n      } // scale\n\n\n      if ((0, util_1.isString)(field) && color.scale) {\n        MappingLayer.scale(layer, field, color.scale);\n      }\n    }\n  };\n\n  MappingLayer.style = function (layer, style) {\n    style && layer.style(style);\n  };\n\n  MappingLayer.state = function (layer, state) {\n    var active = state.active,\n        select = state.select;\n    active && layer.active(active);\n    select && layer.select(select);\n  };\n\n  MappingLayer.rotate = function (layer, rotate) {\n    /**\n     * rotate 的几种情况\n     * layer.rotate(45);\n     * layer.rotate('rotate', [45, 90]);\n     * layer.rotate('x', (x) => 45);\n     * layer.rotate('x*y', (x, y) => 45);\n     */\n    if ((0, util_1.isString)(rotate)) {// TODO: L7 rotate\n      // layer.rotate(rotate);\n    } else if ((0, util_1.isFunction)(rotate)) {// TODO: rotate isFunction\n    } else if ((0, util_1.isObject)(rotate)) {// TODO: L7 rotate\n    }\n  };\n\n  MappingLayer.texture = function (layer, texture) {\n    /**\n     * texture 的几种情况\n     * layer.texture('plane');\n     */\n    if ((0, util_1.isString)(texture)) {\n      layer.texture(texture);\n    }\n  };\n\n  MappingLayer.animate = function (layer, animate) {\n    /**\n     * animate 的几种情况\n     * layer.animate(true);\n     * layer.animate({rings: 10});\n     */\n    if ((0, util_1.isBoolean)(animate) || (0, util_1.isObject)(animate)) {\n      layer.animate(animate);\n    }\n  };\n\n  MappingLayer.scale = function (layer, field, cfg) {\n    /**\n     * scale 的几种情况\n     * layer.scale('name', {type: 'cat'});\n     * layer.scale({name: {type: 'cat'}, value: {type: 'linear'}});\n     */\n    layer.scale(field, cfg);\n  };\n\n  MappingLayer.filter = function (layer, filter) {\n    /**\n     * scale 的几种情况\n     * layer.filter('name', ({ name }) => name === 'name');\n     */\n    var field = filter.field ? filter.field : '';\n    var mappingFields = (0, util_1.isArray)(field) ? field : field.split('*');\n    layer.filter(mappingFields.join('*'), getMappingFunction(mappingFields, filter.value));\n  };\n\n  return MappingLayer;\n}();\n\nexports.MappingLayer = MappingLayer;","map":{"version":3,"sources":["../../../../src/adaptor/layer/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MappingLayer = exports.getMappingFunction = void 0;\nvar util_1 = require(\"@antv/util\");\n/**\n * 获得映射函数\n * @param mappingFields\n * @param callback\n */\nfunction getMappingFunction(mappingFields, callback) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var params = {};\n        mappingFields.forEach(function (f, index) {\n            params[f] = args[index];\n        });\n        delete params['undefined'];\n        return callback(params);\n    };\n}\nexports.getMappingFunction = getMappingFunction;\nvar MappingLayer = /** @class */ (function () {\n    function MappingLayer() {\n    }\n    MappingLayer.shape = function (layer, shape) {\n        /**\n         * shape 的几种情况\n         * layer.shape('cicle');\n         * layer.shape('shape', ['cicle', 'square']);\n         * layer.shape('x', (x) => 'cicle');\n         * layer.shape('x*y', (x, y) => 'cicle');\n         */\n        if ((0, util_1.isString)(shape)) {\n            layer.shape(shape);\n        }\n        else if ((0, util_1.isFunction)(shape)) {\n            // TODO: shape mappingFields\n            var mappingFields = [];\n            layer.shape(mappingFields.join('*'), getMappingFunction(mappingFields, shape));\n        }\n        else if ((0, util_1.isObject)(shape)) {\n            var field = shape.field ? shape.field : '';\n            if ((0, util_1.isFunction)(shape.value)) {\n                var mappingFields = (0, util_1.isArray)(field) ? field : field.split('*');\n                layer.shape(field, getMappingFunction(mappingFields, shape.value));\n            }\n            else {\n                layer.shape(field, shape.value);\n            }\n            // scale\n            if ((0, util_1.isString)(field) && shape.scale) {\n                MappingLayer.scale(layer, field, shape.scale);\n            }\n        }\n    };\n    MappingLayer.size = function (layer, size) {\n        /**\n         * size 的几种情况\n         * layer.size(10);\n         * layer.size('size', [10, 20]);\n         * layer.size('x', (x) => 10);\n         * layer.size('x*y', (x, y) => 10);\n         */\n        if ((0, util_1.isNumber)(size)) {\n            layer.size(size);\n        }\n        else if ((0, util_1.isArray)(size)) {\n            layer.size(size);\n        }\n        else if ((0, util_1.isFunction)(size)) {\n            // TODO: size mappingFields\n            var mappingFields = [];\n            layer.size(mappingFields.join('*'), getMappingFunction(mappingFields, size));\n        }\n        else if ((0, util_1.isObject)(size)) {\n            var field = size.field ? size.field : '';\n            if ((0, util_1.isFunction)(size.value)) {\n                var mappingFields = (0, util_1.isArray)(field) ? field : field.split('*');\n                layer.size(field, getMappingFunction(mappingFields, size.value));\n            }\n            else {\n                layer.size(field, size.value);\n            }\n            // scale\n            if ((0, util_1.isString)(field) && size.scale) {\n                MappingLayer.scale(layer, field, size.scale);\n            }\n        }\n    };\n    MappingLayer.color = function (layer, color) {\n        /**\n         * color 的几种情况\n         * layer.color('red');\n         * layer.color('color', ['red', 'blue']);\n         * layer.color('x', (x) => 'red');\n         * layer.color('x*y', (x, y) => 'red');\n         */\n        if ((0, util_1.isString)(color)) {\n            layer.color(color);\n        }\n        else if ((0, util_1.isFunction)(color)) {\n            // TODO: color mappingFields\n            var mappingFields = [];\n            layer.color(mappingFields.join('*'), getMappingFunction(mappingFields, color));\n        }\n        else if ((0, util_1.isObject)(color)) {\n            var field = color.field ? color.field : '';\n            if ((0, util_1.isFunction)(color.value)) {\n                var mappingFields = (0, util_1.isArray)(field) ? field : field.split('*');\n                layer.color(field, getMappingFunction(mappingFields, color.value));\n            }\n            else {\n                layer.color(field, color.value);\n            }\n            // scale\n            if ((0, util_1.isString)(field) && color.scale) {\n                MappingLayer.scale(layer, field, color.scale);\n            }\n        }\n    };\n    MappingLayer.style = function (layer, style) {\n        style && layer.style(style);\n    };\n    MappingLayer.state = function (layer, state) {\n        var active = state.active, select = state.select;\n        active && layer.active(active);\n        select && layer.select(select);\n    };\n    MappingLayer.rotate = function (layer, rotate) {\n        /**\n         * rotate 的几种情况\n         * layer.rotate(45);\n         * layer.rotate('rotate', [45, 90]);\n         * layer.rotate('x', (x) => 45);\n         * layer.rotate('x*y', (x, y) => 45);\n         */\n        if ((0, util_1.isString)(rotate)) {\n            // TODO: L7 rotate\n            // layer.rotate(rotate);\n        }\n        else if ((0, util_1.isFunction)(rotate)) {\n            // TODO: rotate isFunction\n        }\n        else if ((0, util_1.isObject)(rotate)) {\n            // TODO: L7 rotate\n        }\n    };\n    MappingLayer.texture = function (layer, texture) {\n        /**\n         * texture 的几种情况\n         * layer.texture('plane');\n         */\n        if ((0, util_1.isString)(texture)) {\n            layer.texture(texture);\n        }\n    };\n    MappingLayer.animate = function (layer, animate) {\n        /**\n         * animate 的几种情况\n         * layer.animate(true);\n         * layer.animate({rings: 10});\n         */\n        if ((0, util_1.isBoolean)(animate) || (0, util_1.isObject)(animate)) {\n            layer.animate(animate);\n        }\n    };\n    MappingLayer.scale = function (layer, field, cfg) {\n        /**\n         * scale 的几种情况\n         * layer.scale('name', {type: 'cat'});\n         * layer.scale({name: {type: 'cat'}, value: {type: 'linear'}});\n         */\n        layer.scale(field, cfg);\n    };\n    MappingLayer.filter = function (layer, filter) {\n        /**\n         * scale 的几种情况\n         * layer.filter('name', ({ name }) => name === 'name');\n         */\n        var field = filter.field ? filter.field : '';\n        var mappingFields = (0, util_1.isArray)(field) ? field : field.split('*');\n        layer.filter(mappingFields.join('*'), getMappingFunction(mappingFields, filter.value));\n    };\n    return MappingLayer;\n}());\nexports.MappingLayer = MappingLayer;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}