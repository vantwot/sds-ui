{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { ObjectExt, Dom } from '../util';\nimport { Timing, Interp } from '../common';\nexport var Animation = /*#__PURE__*/function () {\n  function Animation(cell) {\n    _classCallCheck(this, Animation);\n\n    this.cell = cell;\n    this.ids = {};\n    this.cache = {};\n  }\n\n  _createClass(Animation, [{\n    key: \"get\",\n    value: function get() {\n      return Object.keys(this.ids);\n    }\n  }, {\n    key: \"start\",\n    value: function start(path, targetValue) {\n      var _this = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var delim = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '/';\n      var startValue = this.cell.getPropByPath(path);\n      var localOptions = ObjectExt.defaults(options, Animation.defaultOptions);\n      var timing = this.getTiming(localOptions.timing);\n      var interpolate = this.getInterp(localOptions.interp, startValue, targetValue);\n      var startTime = 0;\n      var key = Array.isArray(path) ? path.join(delim) : path;\n      var paths = Array.isArray(path) ? path : path.split(delim);\n\n      var iterate = function iterate() {\n        var now = new Date().getTime();\n\n        if (startTime === 0) {\n          startTime = now;\n        }\n\n        var elaspe = now - startTime;\n        var progress = elaspe / localOptions.duration;\n\n        if (progress < 1) {\n          _this.ids[key] = Dom.requestAnimationFrame(iterate);\n        } else {\n          progress = 1;\n        }\n\n        var currentValue = interpolate(timing(progress));\n\n        _this.cell.setPropByPath(paths, currentValue);\n\n        if (options.progress) {\n          options.progress(Object.assign({\n            progress: progress,\n            currentValue: currentValue\n          }, _this.getArgs(key)));\n        }\n\n        if (progress === 1) {\n          // TODO: remove in the next major version\n          _this.cell.notify('transition:end', _this.getArgs(key));\n\n          _this.cell.notify('transition:complete', _this.getArgs(key));\n\n          options.complete && options.complete(_this.getArgs(key));\n\n          _this.cell.notify('transition:finish', _this.getArgs(key));\n\n          options.finish && options.finish(_this.getArgs(key));\n\n          _this.clean(key);\n        }\n      };\n\n      setTimeout(function () {\n        _this.stop(path, undefined, delim);\n\n        _this.cache[key] = {\n          startValue: startValue,\n          targetValue: targetValue,\n          options: localOptions\n        };\n        _this.ids[key] = Dom.requestAnimationFrame(iterate); // TODO: remove in the next major version\n\n        _this.cell.notify('transition:begin', _this.getArgs(key));\n\n        _this.cell.notify('transition:start', _this.getArgs(key));\n\n        options.start && options.start(_this.getArgs(key));\n      }, options.delay);\n      return this.stop.bind(this, path, delim, options);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(path) {\n      var _this2 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var delim = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '/';\n      var paths = Array.isArray(path) ? path : path.split(delim);\n      Object.keys(this.ids).filter(function (key) {\n        return ObjectExt.isEqual(paths, key.split(delim).slice(0, paths.length));\n      }).forEach(function (key) {\n        Dom.cancelAnimationFrame(_this2.ids[key]);\n        var data = _this2.cache[key];\n\n        var commonArgs = _this2.getArgs(key);\n\n        var localOptions = Object.assign(Object.assign({}, data.options), options);\n        var jumpedToEnd = localOptions.jumpedToEnd;\n\n        if (jumpedToEnd && data.targetValue != null) {\n          _this2.cell.setPropByPath(key, data.targetValue);\n\n          _this2.cell.notify('transition:end', Object.assign({}, commonArgs));\n\n          _this2.cell.notify('transition:complete', Object.assign({}, commonArgs));\n\n          localOptions.complete && localOptions.complete(Object.assign({}, commonArgs));\n        }\n\n        var stopArgs = Object.assign({\n          jumpedToEnd: jumpedToEnd\n        }, commonArgs);\n\n        _this2.cell.notify('transition:stop', Object.assign({}, stopArgs));\n\n        localOptions.stop && localOptions.stop(Object.assign({}, stopArgs));\n\n        _this2.cell.notify('transition:finish', Object.assign({}, commonArgs));\n\n        localOptions.finish && localOptions.finish(Object.assign({}, commonArgs));\n\n        _this2.clean(key);\n      });\n      return this;\n    }\n  }, {\n    key: \"clean\",\n    value: function clean(key) {\n      delete this.ids[key];\n      delete this.cache[key];\n    }\n  }, {\n    key: \"getTiming\",\n    value: function getTiming(timing) {\n      return typeof timing === 'string' ? Timing[timing] : timing;\n    }\n  }, {\n    key: \"getInterp\",\n    value: function getInterp(interp, startValue, targetValue) {\n      if (interp) {\n        return interp(startValue, targetValue);\n      }\n\n      if (typeof targetValue === 'number') {\n        return Interp.number(startValue, targetValue);\n      }\n\n      if (typeof targetValue === 'string') {\n        if (targetValue[0] === '#') {\n          return Interp.color(startValue, targetValue);\n        }\n\n        return Interp.unit(startValue, targetValue);\n      }\n\n      return Interp.object(startValue, targetValue);\n    }\n  }, {\n    key: \"getArgs\",\n    value: function getArgs(key) {\n      var data = this.cache[key];\n      return {\n        path: key,\n        startValue: data.startValue,\n        targetValue: data.targetValue,\n        cell: this.cell\n      };\n    }\n  }]);\n\n  return Animation;\n}();\n\n(function (Animation) {\n  Animation.defaultOptions = {\n    delay: 10,\n    duration: 100,\n    timing: 'linear'\n  };\n})(Animation || (Animation = {}));","map":{"version":3,"sources":["../../src/model/animation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { ObjectExt, Dom } from '../util';\nimport { Timing, Interp } from '../common';\nexport class Animation {\n    constructor(cell) {\n        this.cell = cell;\n        this.ids = {};\n        this.cache = {};\n    }\n    get() {\n        return Object.keys(this.ids);\n    }\n    start(path, targetValue, options = {}, delim = '/') {\n        const startValue = this.cell.getPropByPath(path);\n        const localOptions = ObjectExt.defaults(options, Animation.defaultOptions);\n        const timing = this.getTiming(localOptions.timing);\n        const interpolate = this.getInterp(localOptions.interp, startValue, targetValue);\n        let startTime = 0;\n        const key = Array.isArray(path) ? path.join(delim) : path;\n        const paths = Array.isArray(path) ? path : path.split(delim);\n        const iterate = () => {\n            const now = new Date().getTime();\n            if (startTime === 0) {\n                startTime = now;\n            }\n            const elaspe = now - startTime;\n            let progress = elaspe / localOptions.duration;\n            if (progress < 1) {\n                this.ids[key] = Dom.requestAnimationFrame(iterate);\n            }\n            else {\n                progress = 1;\n            }\n            const currentValue = interpolate(timing(progress));\n            this.cell.setPropByPath(paths, currentValue);\n            if (options.progress) {\n                options.progress(Object.assign({ progress, currentValue }, this.getArgs(key)));\n            }\n            if (progress === 1) {\n                // TODO: remove in the next major version\n                this.cell.notify('transition:end', this.getArgs(key));\n                this.cell.notify('transition:complete', this.getArgs(key));\n                options.complete && options.complete(this.getArgs(key));\n                this.cell.notify('transition:finish', this.getArgs(key));\n                options.finish && options.finish(this.getArgs(key));\n                this.clean(key);\n            }\n        };\n        setTimeout(() => {\n            this.stop(path, undefined, delim);\n            this.cache[key] = { startValue, targetValue, options: localOptions };\n            this.ids[key] = Dom.requestAnimationFrame(iterate);\n            // TODO: remove in the next major version\n            this.cell.notify('transition:begin', this.getArgs(key));\n            this.cell.notify('transition:start', this.getArgs(key));\n            options.start && options.start(this.getArgs(key));\n        }, options.delay);\n        return this.stop.bind(this, path, delim, options);\n    }\n    stop(path, options = {}, delim = '/') {\n        const paths = Array.isArray(path) ? path : path.split(delim);\n        Object.keys(this.ids)\n            .filter((key) => ObjectExt.isEqual(paths, key.split(delim).slice(0, paths.length)))\n            .forEach((key) => {\n            Dom.cancelAnimationFrame(this.ids[key]);\n            const data = this.cache[key];\n            const commonArgs = this.getArgs(key);\n            const localOptions = Object.assign(Object.assign({}, data.options), options);\n            const jumpedToEnd = localOptions.jumpedToEnd;\n            if (jumpedToEnd && data.targetValue != null) {\n                this.cell.setPropByPath(key, data.targetValue);\n                this.cell.notify('transition:end', Object.assign({}, commonArgs));\n                this.cell.notify('transition:complete', Object.assign({}, commonArgs));\n                localOptions.complete && localOptions.complete(Object.assign({}, commonArgs));\n            }\n            const stopArgs = Object.assign({ jumpedToEnd }, commonArgs);\n            this.cell.notify('transition:stop', Object.assign({}, stopArgs));\n            localOptions.stop && localOptions.stop(Object.assign({}, stopArgs));\n            this.cell.notify('transition:finish', Object.assign({}, commonArgs));\n            localOptions.finish && localOptions.finish(Object.assign({}, commonArgs));\n            this.clean(key);\n        });\n        return this;\n    }\n    clean(key) {\n        delete this.ids[key];\n        delete this.cache[key];\n    }\n    getTiming(timing) {\n        return typeof timing === 'string' ? Timing[timing] : timing;\n    }\n    getInterp(interp, startValue, targetValue) {\n        if (interp) {\n            return interp(startValue, targetValue);\n        }\n        if (typeof targetValue === 'number') {\n            return Interp.number(startValue, targetValue);\n        }\n        if (typeof targetValue === 'string') {\n            if (targetValue[0] === '#') {\n                return Interp.color(startValue, targetValue);\n            }\n            return Interp.unit(startValue, targetValue);\n        }\n        return Interp.object(startValue, targetValue);\n    }\n    getArgs(key) {\n        const data = this.cache[key];\n        return {\n            path: key,\n            startValue: data.startValue,\n            targetValue: data.targetValue,\n            cell: this.cell,\n        };\n    }\n}\n(function (Animation) {\n    Animation.defaultOptions = {\n        delay: 10,\n        duration: 100,\n        timing: 'linear',\n    };\n})(Animation || (Animation = {}));\n//# sourceMappingURL=animation.js.map"]},"metadata":{},"sourceType":"module"}