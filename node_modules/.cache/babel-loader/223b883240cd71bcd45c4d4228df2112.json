{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React from 'react';\nimport { Spin } from 'antd';\nimport classnames from 'classnames';\nimport { usePositionStyle } from '@antv/xflow-core'; // component\n\nimport { Toolbar } from '@antv/x6-react-components';\nimport { ToolbarGroup } from './toolbar-group';\nimport { useToolbarModel } from '../service';\nimport classNames from 'classnames';\n/** render toolbar */\n\nvar ToolbarRender = function (props) {\n  var idx = props.idx,\n      groups = props.groups,\n      layout = props.layout,\n      toolbarOptions = props.toolbarOptions;\n  var _a = toolbarOptions.hoverEffect,\n      hoverEffect = _a === void 0 ? true : _a;\n  return React.createElement(Toolbar, {\n    hoverEffect: hoverEffect\n  }, groups.map(function (g, gIdx) {\n    var key = idx + gIdx;\n    return React.createElement(ToolbarGroup, {\n      key: key,\n      group: g,\n      layout: layout\n    });\n  }));\n};\n\nvar InnerRender = function (props) {\n  var _a;\n\n  var _b = useToolbarModel(props),\n      isModelReady = _b.isModelReady,\n      state = _b.state;\n\n  var positionStyle = usePositionStyle(props.position);\n  var _c = state.mainGroups,\n      mainGroups = _c === void 0 ? [] : _c,\n      _d = state.extraGroups,\n      extraGroups = _d === void 0 ? [] : _d,\n      layout = state.layout,\n      customRender = state.customRender;\n  var containerClz = classNames(props.className, layout, 'flowchart-toolbar');\n  var clz = classnames((_a = {}, _a[layout] = true, _a['xflow-toolbar-root'] = true, _a)); // loading\n\n  if (!isModelReady) {\n    return React.createElement(\"div\", {\n      className: containerClz,\n      style: __assign(__assign({}, positionStyle), props.style)\n    }, React.createElement(Spin, {\n      spinning: true,\n      size: \"small\"\n    }));\n  } // render custom component\n\n\n  if (customRender) {\n    return React.createElement(\"div\", {\n      className: containerClz,\n      style: __assign(__assign({}, positionStyle), props.style)\n    }, React.createElement(customRender, {\n      config: state\n    }));\n  } // render toolbars\n\n\n  return React.createElement(\"div\", {\n    className: containerClz,\n    style: __assign(__assign({}, positionStyle), props.style)\n  }, React.createElement(\"div\", {\n    className: clz\n  }, mainGroups.length > 0 && React.createElement(ToolbarRender, {\n    idx: \"mainGroups\",\n    groups: mainGroups,\n    layout: layout,\n    toolbarOptions: state\n  }), extraGroups.length > 0 && React.createElement(ToolbarRender, {\n    idx: \"extraGroups\",\n    groups: extraGroups,\n    layout: layout,\n    toolbarOptions: state\n  })));\n};\n/** connect 数据 */\n\n\nexport var XFlowToolbar = React.memo(InnerRender);","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@ant-design/flowchart/es/components/canvas-toolbar/render-components/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","Spin","classnames","usePositionStyle","Toolbar","ToolbarGroup","useToolbarModel","classNames","ToolbarRender","props","idx","groups","layout","toolbarOptions","_a","hoverEffect","createElement","map","g","gIdx","key","group","InnerRender","_b","isModelReady","state","positionStyle","position","_c","mainGroups","_d","extraGroups","customRender","containerClz","className","clz","style","spinning","size","config","XFlowToolbar","memo"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAOO,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,gBAAT,QAAiC,kBAAjC,C,CACA;;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA;;AACA,IAAIC,aAAa,GAAG,UAAUC,KAAV,EAAiB;AACjC,MAAIC,GAAG,GAAGD,KAAK,CAACC,GAAhB;AAAA,MAAqBC,MAAM,GAAGF,KAAK,CAACE,MAApC;AAAA,MAA4CC,MAAM,GAAGH,KAAK,CAACG,MAA3D;AAAA,MAAmEC,cAAc,GAAGJ,KAAK,CAACI,cAA1F;AACA,MAAIC,EAAE,GAAGD,cAAc,CAACE,WAAxB;AAAA,MAAqCA,WAAW,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAA1E;AACA,SAAQd,KAAK,CAACgB,aAAN,CAAoBZ,OAApB,EAA6B;AAAEW,IAAAA,WAAW,EAAEA;AAAf,GAA7B,EAA2DJ,MAAM,CAACM,GAAP,CAAW,UAAUC,CAAV,EAAaC,IAAb,EAAmB;AAC7F,QAAIC,GAAG,GAAGV,GAAG,GAAGS,IAAhB;AACA,WAAOnB,KAAK,CAACgB,aAAN,CAAoBX,YAApB,EAAkC;AAAEe,MAAAA,GAAG,EAAEA,GAAP;AAAYC,MAAAA,KAAK,EAAEH,CAAnB;AAAsBN,MAAAA,MAAM,EAAEA;AAA9B,KAAlC,CAAP;AACH,GAHkE,CAA3D,CAAR;AAIH,CAPD;;AAQA,IAAIU,WAAW,GAAG,UAAUb,KAAV,EAAiB;AAC/B,MAAIK,EAAJ;;AACA,MAAIS,EAAE,GAAGjB,eAAe,CAACG,KAAD,CAAxB;AAAA,MAAiCe,YAAY,GAAGD,EAAE,CAACC,YAAnD;AAAA,MAAiEC,KAAK,GAAGF,EAAE,CAACE,KAA5E;;AACA,MAAIC,aAAa,GAAGvB,gBAAgB,CAACM,KAAK,CAACkB,QAAP,CAApC;AACA,MAAIC,EAAE,GAAGH,KAAK,CAACI,UAAf;AAAA,MAA2BA,UAAU,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA7D;AAAA,MAAiEE,EAAE,GAAGL,KAAK,CAACM,WAA5E;AAAA,MAAyFA,WAAW,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA5H;AAAA,MAAgIlB,MAAM,GAAGa,KAAK,CAACb,MAA/I;AAAA,MAAuJoB,YAAY,GAAGP,KAAK,CAACO,YAA5K;AACA,MAAIC,YAAY,GAAG1B,UAAU,CAACE,KAAK,CAACyB,SAAP,EAAkBtB,MAAlB,EAA0B,mBAA1B,CAA7B;AACA,MAAIuB,GAAG,GAAGjC,UAAU,EAAEY,EAAE,GAAG,EAAL,EAClBA,EAAE,CAACF,MAAD,CAAF,GAAa,IADK,EAElBE,EAAE,CAAC,oBAAD,CAAF,GAA2B,IAFT,EAGlBA,EAHgB,EAApB,CAN+B,CAU/B;;AACA,MAAI,CAACU,YAAL,EAAmB;AACf,WAAQxB,KAAK,CAACgB,aAAN,CAAoB,KAApB,EAA2B;AAAEkB,MAAAA,SAAS,EAAED,YAAb;AAA2BG,MAAAA,KAAK,EAAElD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKwC,aAAL,CAAT,EAA8BjB,KAAK,CAAC2B,KAApC;AAA1C,KAA3B,EACJpC,KAAK,CAACgB,aAAN,CAAoBf,IAApB,EAA0B;AAAEoC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAA1B,CADI,CAAR;AAEH,GAd8B,CAe/B;;;AACA,MAAIN,YAAJ,EAAkB;AACd,WAAQhC,KAAK,CAACgB,aAAN,CAAoB,KAApB,EAA2B;AAAEkB,MAAAA,SAAS,EAAED,YAAb;AAA2BG,MAAAA,KAAK,EAAElD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKwC,aAAL,CAAT,EAA8BjB,KAAK,CAAC2B,KAApC;AAA1C,KAA3B,EAAmHpC,KAAK,CAACgB,aAAN,CAAoBgB,YAApB,EAAkC;AAAEO,MAAAA,MAAM,EAAEd;AAAV,KAAlC,CAAnH,CAAR;AACH,GAlB8B,CAmB/B;;;AACA,SAAQzB,KAAK,CAACgB,aAAN,CAAoB,KAApB,EAA2B;AAAEkB,IAAAA,SAAS,EAAED,YAAb;AAA2BG,IAAAA,KAAK,EAAElD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKwC,aAAL,CAAT,EAA8BjB,KAAK,CAAC2B,KAApC;AAA1C,GAA3B,EACJpC,KAAK,CAACgB,aAAN,CAAoB,KAApB,EAA2B;AAAEkB,IAAAA,SAAS,EAAEC;AAAb,GAA3B,EACIN,UAAU,CAACnC,MAAX,GAAoB,CAApB,IAA0BM,KAAK,CAACgB,aAAN,CAAoBR,aAApB,EAAmC;AAAEE,IAAAA,GAAG,EAAE,YAAP;AAAqBC,IAAAA,MAAM,EAAEkB,UAA7B;AAAyCjB,IAAAA,MAAM,EAAEA,MAAjD;AAAyDC,IAAAA,cAAc,EAAEY;AAAzE,GAAnC,CAD9B,EAEIM,WAAW,CAACrC,MAAZ,GAAqB,CAArB,IAA2BM,KAAK,CAACgB,aAAN,CAAoBR,aAApB,EAAmC;AAAEE,IAAAA,GAAG,EAAE,aAAP;AAAsBC,IAAAA,MAAM,EAAEoB,WAA9B;AAA2CnB,IAAAA,MAAM,EAAEA,MAAnD;AAA2DC,IAAAA,cAAc,EAAEY;AAA3E,GAAnC,CAF/B,CADI,CAAR;AAIH,CAxBD;AAyBA;;;AACA,OAAO,IAAIe,YAAY,GAAGxC,KAAK,CAACyC,IAAN,CAAWnB,WAAX,CAAnB","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { Spin } from 'antd';\nimport classnames from 'classnames';\nimport { usePositionStyle } from '@antv/xflow-core';\n// component\nimport { Toolbar } from '@antv/x6-react-components';\nimport { ToolbarGroup } from './toolbar-group';\nimport { useToolbarModel } from '../service';\nimport classNames from 'classnames';\n/** render toolbar */\nvar ToolbarRender = function (props) {\n    var idx = props.idx, groups = props.groups, layout = props.layout, toolbarOptions = props.toolbarOptions;\n    var _a = toolbarOptions.hoverEffect, hoverEffect = _a === void 0 ? true : _a;\n    return (React.createElement(Toolbar, { hoverEffect: hoverEffect }, groups.map(function (g, gIdx) {\n        var key = idx + gIdx;\n        return React.createElement(ToolbarGroup, { key: key, group: g, layout: layout });\n    })));\n};\nvar InnerRender = function (props) {\n    var _a;\n    var _b = useToolbarModel(props), isModelReady = _b.isModelReady, state = _b.state;\n    var positionStyle = usePositionStyle(props.position);\n    var _c = state.mainGroups, mainGroups = _c === void 0 ? [] : _c, _d = state.extraGroups, extraGroups = _d === void 0 ? [] : _d, layout = state.layout, customRender = state.customRender;\n    var containerClz = classNames(props.className, layout, 'flowchart-toolbar');\n    var clz = classnames((_a = {},\n        _a[layout] = true,\n        _a['xflow-toolbar-root'] = true,\n        _a));\n    // loading\n    if (!isModelReady) {\n        return (React.createElement(\"div\", { className: containerClz, style: __assign(__assign({}, positionStyle), props.style) },\n            React.createElement(Spin, { spinning: true, size: \"small\" })));\n    }\n    // render custom component\n    if (customRender) {\n        return (React.createElement(\"div\", { className: containerClz, style: __assign(__assign({}, positionStyle), props.style) }, React.createElement(customRender, { config: state })));\n    }\n    // render toolbars\n    return (React.createElement(\"div\", { className: containerClz, style: __assign(__assign({}, positionStyle), props.style) },\n        React.createElement(\"div\", { className: clz },\n            mainGroups.length > 0 && (React.createElement(ToolbarRender, { idx: \"mainGroups\", groups: mainGroups, layout: layout, toolbarOptions: state })),\n            extraGroups.length > 0 && (React.createElement(ToolbarRender, { idx: \"extraGroups\", groups: extraGroups, layout: layout, toolbarOptions: state })))));\n};\n/** connect 数据 */\nexport var XFlowToolbar = React.memo(InnerRender);\n"]},"metadata":{},"sourceType":"module"}