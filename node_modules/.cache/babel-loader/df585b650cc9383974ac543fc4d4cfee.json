{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Line } from '../line';\nimport { LineTo } from './lineto';\nimport { Segment } from './segment';\nexport var Close = /*#__PURE__*/function (_Segment) {\n  _inherits(Close, _Segment);\n\n  var _super = _createSuper(Close);\n\n  function Close() {\n    _classCallCheck(this, Close);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Close, [{\n    key: \"end\",\n    get: function get() {\n      if (!this.subpathStartSegment) {\n        throw new Error('Missing subpath start segment. (This segment needs a subpath ' + 'start segment (e.g. MoveTo), or segment has not yet been added' + ' to a path.)');\n      }\n\n      return this.subpathStartSegment.end;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return 'Z';\n    }\n  }, {\n    key: \"line\",\n    get: function get() {\n      return new Line(this.start, this.end);\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      return this.line.bbox();\n    }\n  }, {\n    key: \"closestPoint\",\n    value: function closestPoint(p) {\n      return this.line.closestPoint(p);\n    }\n  }, {\n    key: \"closestPointLength\",\n    value: function closestPointLength(p) {\n      return this.line.closestPointLength(p);\n    }\n  }, {\n    key: \"closestPointNormalizedLength\",\n    value: function closestPointNormalizedLength(p) {\n      return this.line.closestPointNormalizedLength(p);\n    }\n  }, {\n    key: \"closestPointTangent\",\n    value: function closestPointTangent(p) {\n      return this.line.closestPointTangent(p);\n    }\n  }, {\n    key: \"length\",\n    value: function length() {\n      return this.line.length();\n    }\n  }, {\n    key: \"divideAt\",\n    value: function divideAt(ratio) {\n      var divided = this.line.divideAt(ratio);\n      return [// do not actually cut into the segment, first divided part can stay as Z\n      divided[1].isDifferentiable() ? new LineTo(divided[0]) : this.clone(), new LineTo(divided[1])];\n    }\n  }, {\n    key: \"divideAtLength\",\n    value: function divideAtLength(length) {\n      var divided = this.line.divideAtLength(length);\n      return [divided[1].isDifferentiable() ? new LineTo(divided[0]) : this.clone(), new LineTo(divided[1])];\n    }\n  }, {\n    key: \"getSubdivisions\",\n    value: function getSubdivisions() {\n      return [];\n    }\n  }, {\n    key: \"pointAt\",\n    value: function pointAt(ratio) {\n      return this.line.pointAt(ratio);\n    }\n  }, {\n    key: \"pointAtLength\",\n    value: function pointAtLength(length) {\n      return this.line.pointAtLength(length);\n    }\n  }, {\n    key: \"tangentAt\",\n    value: function tangentAt(ratio) {\n      return this.line.tangentAt(ratio);\n    }\n  }, {\n    key: \"tangentAtLength\",\n    value: function tangentAtLength(length) {\n      return this.line.tangentAtLength(length);\n    }\n  }, {\n    key: \"isDifferentiable\",\n    value: function isDifferentiable() {\n      if (!this.previousSegment || !this.subpathStartSegment) {\n        return false;\n      }\n\n      return !this.start.equals(this.end);\n    }\n  }, {\n    key: \"scale\",\n    value: function scale() {\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate() {\n      return this;\n    }\n  }, {\n    key: \"translate\",\n    value: function translate() {\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(s) {\n      return this.type === s.type && this.start.equals(s.start) && this.end.equals(s.end);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Close();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        type: this.type,\n        start: this.start.toJSON(),\n        end: this.end.toJSON()\n      };\n    }\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      return this.type;\n    }\n  }]);\n\n  return Close;\n}(Segment);\n\n(function (Close) {\n  function create() {\n    return new Close();\n  }\n\n  Close.create = create;\n})(Close || (Close = {}));","map":{"version":3,"sources":["../../../src/geometry/path/close.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Line } from '../line';\nimport { LineTo } from './lineto';\nimport { Segment } from './segment';\nexport class Close extends Segment {\n    get end() {\n        if (!this.subpathStartSegment) {\n            throw new Error('Missing subpath start segment. (This segment needs a subpath ' +\n                'start segment (e.g. MoveTo), or segment has not yet been added' +\n                ' to a path.)');\n        }\n        return this.subpathStartSegment.end;\n    }\n    get type() {\n        return 'Z';\n    }\n    get line() {\n        return new Line(this.start, this.end);\n    }\n    bbox() {\n        return this.line.bbox();\n    }\n    closestPoint(p) {\n        return this.line.closestPoint(p);\n    }\n    closestPointLength(p) {\n        return this.line.closestPointLength(p);\n    }\n    closestPointNormalizedLength(p) {\n        return this.line.closestPointNormalizedLength(p);\n    }\n    closestPointTangent(p) {\n        return this.line.closestPointTangent(p);\n    }\n    length() {\n        return this.line.length();\n    }\n    divideAt(ratio) {\n        const divided = this.line.divideAt(ratio);\n        return [\n            // do not actually cut into the segment, first divided part can stay as Z\n            divided[1].isDifferentiable() ? new LineTo(divided[0]) : this.clone(),\n            new LineTo(divided[1]),\n        ];\n    }\n    divideAtLength(length) {\n        const divided = this.line.divideAtLength(length);\n        return [\n            divided[1].isDifferentiable() ? new LineTo(divided[0]) : this.clone(),\n            new LineTo(divided[1]),\n        ];\n    }\n    getSubdivisions() {\n        return [];\n    }\n    pointAt(ratio) {\n        return this.line.pointAt(ratio);\n    }\n    pointAtLength(length) {\n        return this.line.pointAtLength(length);\n    }\n    tangentAt(ratio) {\n        return this.line.tangentAt(ratio);\n    }\n    tangentAtLength(length) {\n        return this.line.tangentAtLength(length);\n    }\n    isDifferentiable() {\n        if (!this.previousSegment || !this.subpathStartSegment) {\n            return false;\n        }\n        return !this.start.equals(this.end);\n    }\n    scale() {\n        return this;\n    }\n    rotate() {\n        return this;\n    }\n    translate() {\n        return this;\n    }\n    equals(s) {\n        return (this.type === s.type &&\n            this.start.equals(s.start) &&\n            this.end.equals(s.end));\n    }\n    clone() {\n        return new Close();\n    }\n    toJSON() {\n        return {\n            type: this.type,\n            start: this.start.toJSON(),\n            end: this.end.toJSON(),\n        };\n    }\n    serialize() {\n        return this.type;\n    }\n}\n(function (Close) {\n    function create() {\n        return new Close();\n    }\n    Close.create = create;\n})(Close || (Close = {}));\n//# sourceMappingURL=close.js.map"]},"metadata":{},"sourceType":"module"}