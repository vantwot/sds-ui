{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { uuidv4 } from '@antv/xflow-core';\nimport { isNumber } from 'lodash';\nimport * as NodesComponent from './nodes';\nimport { NODE_HEIGHT, NODE_WIDTH, NODEPOOL } from './constants';\n/** 和 graph config 注册的节点保持一致 */\n\nconst getAnchorStyle = position => {\n  return {\n    position: {\n      name: position\n    },\n    attrs: {\n      circle: {\n        r: 4,\n        magnet: true,\n        stroke: '#31d0c6',\n        strokeWidth: 2,\n        fill: '#fff',\n        style: {\n          visibility: 'hidden'\n        }\n      }\n    },\n    zIndex: 10\n  };\n};\n\nconst getPorts = function () {\n  let position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['top', 'right', 'bottom', 'left'];\n  return {\n    items: position.map(name => {\n      return {\n        group: name,\n        id: uuidv4()\n      };\n    }),\n    groups: {\n      top: getAnchorStyle('top'),\n      right: getAnchorStyle('right'),\n      bottom: getAnchorStyle('bottom'),\n      left: getAnchorStyle('left')\n    }\n  };\n};\n\nexport const getRegisterNode = nodes => {\n  return (nodes || []).map(item => {\n    const {\n      name,\n      popover,\n      label = '',\n      width = NODE_HEIGHT,\n      height = NODE_HEIGHT,\n      ports\n    } = item;\n    const id = uuidv4(); // 暂不使用上层数据\n\n    return {\n      id,\n      renderKey: name,\n      name,\n      label,\n      popoverContent: popover,\n      width,\n      height,\n      ports: ports || getPorts(),\n      originData: Object.assign({}, item),\n      isCustom: true\n    };\n  });\n};\nexport const nodeService = nodes => __awaiter(void 0, void 0, void 0, function* () {\n  const customNodes = getRegisterNode(nodes);\n  return [...customNodes, ...NODEPOOL.map(_ref => {\n    let {\n      name,\n      ports,\n      width = NODE_WIDTH,\n      height = NODE_HEIGHT,\n      label = ''\n    } = _ref;\n    return {\n      id: uuidv4(),\n      renderKey: name,\n      name,\n      label,\n      popoverContent: () => name,\n      width,\n      height,\n      ports: getPorts(ports)\n    };\n  })];\n});\nexport const setNodeRender = function (config) {\n  let nodes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  // 自定义节点\n  if (nodes === null || nodes === void 0 ? void 0 : nodes.length) {\n    nodes.forEach(item => {\n      const {\n        name,\n        component\n      } = item;\n      config.setNodeRender(name, component);\n    });\n  }\n  /** 默认节点，通过 Terminal 标识，避免多次调用*/\n\n\n  if (!config.nodeRender.get('Terminal')) {\n    NODEPOOL.forEach(item => {\n      config.setNodeRender(item.name, NodesComponent[`${item.name.replace(/\\s+/g, '')}Node`]);\n    });\n  }\n}; // 创建节点路径\n\nexport const createPath = function (paths) {\n  let offsetX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let offsetY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!paths.length) {\n    return null;\n  }\n\n  let path = ''; // @ts-ignore\n\n  paths.forEach(item => {\n    const [c, x, y, c2x, c2y] = item;\n    path += isNumber(y) ? ` ${c} ${x + offsetX} ${y + offsetY}` : ` ${c}`;\n\n    if (c2y) {\n      path += ` ${c2x + offsetX} ${c2y + offsetY}`;\n    }\n  });\n  return path;\n};","map":{"version":3,"sources":["../../src/flowchart-node-panel/utils.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { uuidv4 } from '@antv/xflow-core';\nimport { isNumber } from 'lodash';\nimport * as NodesComponent from './nodes';\nimport { NODE_HEIGHT, NODE_WIDTH, NODEPOOL } from './constants';\n/** 和 graph config 注册的节点保持一致 */\nconst getAnchorStyle = (position) => {\n    return {\n        position: { name: position },\n        attrs: {\n            circle: {\n                r: 4,\n                magnet: true,\n                stroke: '#31d0c6',\n                strokeWidth: 2,\n                fill: '#fff',\n                style: {\n                    visibility: 'hidden',\n                },\n            },\n        },\n        zIndex: 10,\n    };\n};\nconst getPorts = (position = ['top', 'right', 'bottom', 'left']) => {\n    return {\n        items: position.map(name => {\n            return { group: name, id: uuidv4() };\n        }),\n        groups: {\n            top: getAnchorStyle('top'),\n            right: getAnchorStyle('right'),\n            bottom: getAnchorStyle('bottom'),\n            left: getAnchorStyle('left'),\n        },\n    };\n};\nexport const getRegisterNode = nodes => {\n    return (nodes || []).map(item => {\n        const { name, popover, label = '', width = NODE_HEIGHT, height = NODE_HEIGHT, ports } = item;\n        const id = uuidv4(); // 暂不使用上层数据\n        return {\n            id,\n            renderKey: name,\n            name,\n            label,\n            popoverContent: popover,\n            width,\n            height,\n            ports: ports || getPorts(),\n            originData: Object.assign({}, item),\n            isCustom: true,\n        };\n    });\n};\nexport const nodeService = (nodes) => __awaiter(void 0, void 0, void 0, function* () {\n    const customNodes = getRegisterNode(nodes);\n    return [\n        ...customNodes,\n        ...NODEPOOL.map(({ name, ports, width = NODE_WIDTH, height = NODE_HEIGHT, label = '' }) => {\n            return {\n                id: uuidv4(),\n                renderKey: name,\n                name,\n                label,\n                popoverContent: () => name,\n                width,\n                height,\n                ports: getPorts(ports),\n            };\n        }),\n    ];\n});\nexport const setNodeRender = (config, nodes = []) => {\n    // 自定义节点\n    if (nodes === null || nodes === void 0 ? void 0 : nodes.length) {\n        nodes.forEach(item => {\n            const { name, component } = item;\n            config.setNodeRender(name, component);\n        });\n    }\n    /** 默认节点，通过 Terminal 标识，避免多次调用*/\n    if (!config.nodeRender.get('Terminal')) {\n        NODEPOOL.forEach(item => {\n            config.setNodeRender(item.name, NodesComponent[`${item.name.replace(/\\s+/g, '')}Node`]);\n        });\n    }\n};\n// 创建节点路径\nexport const createPath = (paths, offsetX = 0, offsetY = 0) => {\n    if (!paths.length) {\n        return null;\n    }\n    let path = '';\n    // @ts-ignore\n    paths.forEach((item) => {\n        const [c, x, y, c2x, c2y] = item;\n        path += isNumber(y) ? ` ${c} ${x + offsetX} ${y + offsetY}` : ` ${c}`;\n        if (c2y) {\n            path += ` ${c2x + offsetX} ${c2y + offsetY}`;\n        }\n    });\n    return path;\n};\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}