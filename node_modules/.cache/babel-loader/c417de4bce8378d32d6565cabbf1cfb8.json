{"ast":null,"code":"import _toConsumableArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from 'react';\nimport { Empty, Spin } from 'antd';\nimport { SchemaForm } from './schema-form';\nimport { makeControlMap, xflowDefaultControls } from './schema-form/control-map/index';\nexport var PanelBody = function PanelBody(props) {\n  var _props$schema = props.schema,\n      schema = _props$schema === void 0 ? {\n    tabs: []\n  } : _props$schema,\n      triggerUpdate = props.triggerUpdate,\n      onFieldsChange = props.onFieldsChange,\n      afterUpdatingCb = props.afterUpdatingCb,\n      defaultControlRender = props.defaultControlRender,\n      loading = props.loading,\n      controlMapService = props.controlMapService,\n      _props$defaultControl = props.defaultControls,\n      defaultControls = _props$defaultControl === void 0 ? [] : _props$defaultControl;\n  var controlMapCache = React.useMemo(function () {\n    var controlMap = makeControlMap([].concat(_toConsumableArray(xflowDefaultControls), _toConsumableArray(defaultControls)));\n\n    if (controlMapService) {\n      controlMapService(controlMap);\n    }\n\n    return controlMap;\n  }, [controlMapService, defaultControls]);\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"\".concat(props.prefixClz, \"-body\"),\n      style: Object.assign(Object.assign({}, props.style), {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      })\n    }, React.createElement(Spin, {\n      spinning: true\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"\".concat(props.prefixClz, \"-body\"),\n    style: props.style\n  }, schema.tabs.length > 0 && React.createElement(SchemaForm, {\n    schema: schema,\n    onFieldsChange: onFieldsChange,\n    controlMap: controlMapCache,\n    defaultControlRender: defaultControlRender,\n    afterUpdatingCb: afterUpdatingCb,\n    triggerUpdate: triggerUpdate\n  }), schema.tabs.length === 0 && React.createElement(Empty, {\n    style: {\n      paddingTop: '64px'\n    }\n  }));\n};","map":{"version":3,"sources":["../../src/canvas-json-schema-form/panel-body.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,KAAT,EAAgB,IAAhB,QAA4B,MAA5B;AAUA,SAAS,UAAT,QAA2B,eAA3B;AACA,SAAS,cAAT,EAAyB,oBAAzB,QAAqD,iCAArD;AAeA,OAAO,IAAM,SAAS,GAAyB,SAAlC,SAAkC,CAAA,KAAK,EAAG;AACrD,sBASI,KATJ,CACE,MADF;AAAA,MACE,MADF,8BACW;AAAE,IAAA,IAAI,EAAE;AAAR,GADX;AAAA,MAEE,aAFF,GASI,KATJ,CAEE,aAFF;AAAA,MAGE,cAHF,GASI,KATJ,CAGE,cAHF;AAAA,MAIE,eAJF,GASI,KATJ,CAIE,eAJF;AAAA,MAKE,oBALF,GASI,KATJ,CAKE,oBALF;AAAA,MAME,OANF,GASI,KATJ,CAME,OANF;AAAA,MAOE,iBAPF,GASI,KATJ,CAOE,iBAPF;AAAA,8BASI,KATJ,CAQE,eARF;AAAA,MAQE,eARF,sCAQoB,EARpB;AAWA,MAAM,eAAe,GAAG,KAAK,CAAC,OAAN,CAAc,YAAK;AACzC,QAAM,UAAU,GAAG,cAAc,8BAAK,oBAAL,sBAA8B,eAA9B,GAAjC;;AACA,QAAI,iBAAJ,EAAuB;AACrB,MAAA,iBAAiB,CAAC,UAAD,CAAjB;AACD;;AACD,WAAO,UAAP;AACD,GANuB,EAMrB,CAAC,iBAAD,EAAoB,eAApB,CANqB,CAAxB;;AAQA,MAAI,OAAJ,EAAa;AACX,WACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,SAAS,YAAK,KAAK,CAAC,SAAX,UADX;AAEE,MAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAO,KAAK,CAAC,KAAb,CAAA,EAAkB;AAAE,QAAA,OAAO,EAAE,MAAX;AAAmB,QAAA,cAAc,EAAE,QAAnC;AAA6C,QAAA,UAAU,EAAE;AAAzD,OAAlB;AAFP,KAAA,EAIE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,MAAA,QAAQ,EAAA;AAAT,KAAL,CAJF,CADF;AAQD;;AACD,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,YAAK,KAAK,CAAC,SAAX,UAAd;AAA2C,IAAA,KAAK,EAAE,KAAK,CAAC;AAAxD,GAAA,EACG,MAAM,CAAC,IAAP,CAAY,MAAZ,GAAqB,CAArB,IACC,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,MAAM,EAAE,MADC;AAET,IAAA,cAAc,EAAE,cAFP;AAGT,IAAA,UAAU,EAAE,eAHH;AAIT,IAAA,oBAAoB,EAAE,oBAJb;AAKT,IAAA,eAAe,EAAE,eALR;AAMT,IAAA,aAAa,EAAE;AANN,GAAX,CAFJ,EAWG,MAAM,CAAC,IAAP,CAAY,MAAZ,KAAuB,CAAvB,IAA4B,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,IAAA,KAAK,EAAE;AAAE,MAAA,UAAU,EAAE;AAAd;AAAR,GAAN,CAX/B,CADF;AAeD,CA7CM","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { Empty, Spin } from 'antd';\nimport { SchemaForm } from './schema-form';\nimport { makeControlMap, xflowDefaultControls } from './schema-form/control-map/index';\nexport const PanelBody = props => {\n    const { schema = { tabs: [] }, triggerUpdate, onFieldsChange, afterUpdatingCb, defaultControlRender, loading, controlMapService, defaultControls = [], } = props;\n    const controlMapCache = React.useMemo(() => {\n        const controlMap = makeControlMap([...xflowDefaultControls, ...defaultControls]);\n        if (controlMapService) {\n            controlMapService(controlMap);\n        }\n        return controlMap;\n    }, [controlMapService, defaultControls]);\n    if (loading) {\n        return (React.createElement(\"div\", { className: `${props.prefixClz}-body`, style: Object.assign(Object.assign({}, props.style), { display: 'flex', justifyContent: 'center', alignItems: 'center' }) },\n            React.createElement(Spin, { spinning: true })));\n    }\n    return (React.createElement(\"div\", { className: `${props.prefixClz}-body`, style: props.style },\n        schema.tabs.length > 0 && (React.createElement(SchemaForm, { schema: schema, onFieldsChange: onFieldsChange, controlMap: controlMapCache, defaultControlRender: defaultControlRender, afterUpdatingCb: afterUpdatingCb, triggerUpdate: triggerUpdate })),\n        schema.tabs.length === 0 && React.createElement(Empty, { style: { paddingTop: '64px' } })));\n};\n//# sourceMappingURL=panel-body.js.map"]},"metadata":{},"sourceType":"module"}