{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport React from 'react';\nimport { FunctionExt } from '@antv/x6';\nexport var Wrap = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Wrap, _React$PureComponent);\n\n  var _super = _createSuper(Wrap);\n\n  function Wrap(props) {\n    var _this;\n\n    _classCallCheck(this, Wrap);\n\n    _this = _super.call(this, props);\n    _this.scheduledAnimationFrame = false;\n\n    _this.throttleUpdateFunc = function () {\n      if (_this.scheduledAnimationFrame) {\n        return;\n      }\n\n      _this.scheduledAnimationFrame = true;\n      window.requestAnimationFrame(function () {\n        _this.setState(function (state) {\n          _this.scheduledAnimationFrame = false;\n          return {\n            tick: state.tick + 1\n          };\n        });\n      });\n    };\n\n    _this.onChange = function (e) {\n      if (Wrap.throttleChangeTypes.includes(e.key)) {\n        _this.throttleUpdateFunc();\n\n        return;\n      } // eslint-disable-next-line react/no-access-state-in-setstate\n\n\n      _this.setState({\n        tick: _this.state.tick + 1\n      });\n    };\n\n    _this.state = {\n      tick: 0\n    };\n    return _this;\n  }\n\n  _createClass(Wrap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.node.on('change:*', this.onChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.node.off('change:*', this.onChange);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(elem) {\n      var node = this.props.node;\n      return typeof elem.type === 'string' ? React.cloneElement(elem) : React.cloneElement(elem, {\n        node: node\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          graph = _this$props.graph,\n          node = _this$props.node,\n          component = _this$props.component;\n\n      if (React.isValidElement(component)) {\n        return this.clone(component);\n      }\n\n      if (typeof component === 'function') {\n        // Calling the component function on every change of the node.\n        var ret = FunctionExt.call(component, graph, node);\n\n        if (React.isValidElement(ret)) {\n          return this.clone(ret);\n        }\n      }\n\n      return component;\n    }\n  }]);\n\n  return Wrap;\n}(React.PureComponent);\nWrap.throttleChangeTypes = ['position', 'size'];","map":{"version":3,"sources":["../src/wrap.ts"],"names":[],"mappings":";;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAgB,WAAhB,QAAmC,UAAnC;AAIA,WAAa,IAAb;AAAA;;AAAA;;AAKE,gBAAY,KAAZ,EAA6B;AAAA;;AAAA;;AAC3B,8BAAM,KAAN;AAHM,UAAA,uBAAA,GAA0B,KAA1B;;AAOR,UAAA,kBAAA,GAAqB,YAAK;AACxB,UAAI,MAAK,uBAAT,EAAkC;AAChC;AACD;;AACD,YAAK,uBAAL,GAA+B,IAA/B;AACA,MAAA,MAAM,CAAC,qBAAP,CAA6B,YAAK;AAChC,cAAK,QAAL,CAAc,UAAC,KAAD,EAAU;AACtB,gBAAK,uBAAL,GAA+B,KAA/B;AACA,iBAAO;AAAE,YAAA,IAAI,EAAE,KAAK,CAAC,IAAN,GAAa;AAArB,WAAP;AACD,SAHD;AAID,OALD;AAMD,KAXD;;AAaA,UAAA,QAAA,GAAW,UAAC,CAAD,EAAW;AACpB,UAAI,IAAI,CAAC,mBAAL,CAAyB,QAAzB,CAAkC,CAAC,CAAC,GAApC,CAAJ,EAA8C;AAC5C,cAAK,kBAAL;;AACA;AACD,OAJmB,CAKpB;;;AACA,YAAK,QAAL,CAAc;AAAE,QAAA,IAAI,EAAE,MAAK,KAAL,CAAW,IAAX,GAAkB;AAA1B,OAAd;AACD,KAPD;;AAhBE,UAAK,KAAL,GAAa;AAAE,MAAA,IAAI,EAAE;AAAR,KAAb;AAF2B;AAG5B;;AARH;AAAA;AAAA,WAgCE,6BAAiB;AACf,WAAK,KAAL,CAAW,IAAX,CAAgB,EAAhB,CAAmB,UAAnB,EAA+B,KAAK,QAApC;AACD;AAlCH;AAAA;AAAA,WAoCE,gCAAoB;AAClB,WAAK,KAAL,CAAW,IAAX,CAAgB,GAAhB,CAAoB,UAApB,EAAgC,KAAK,QAArC;AACD;AAtCH;AAAA;AAAA,WAwCE,eAAM,IAAN,EAA8B;AAC5B,UAAQ,IAAR,GAAiB,KAAK,KAAtB,CAAQ,IAAR;AACA,aAAO,OAAO,IAAI,CAAC,IAAZ,KAAqB,QAArB,GACH,KAAK,CAAC,YAAN,CAAmB,IAAnB,CADG,GAEH,KAAK,CAAC,YAAN,CAAmB,IAAnB,EAAyB;AAAE,QAAA,IAAI,EAAJ;AAAF,OAAzB,CAFJ;AAGD;AA7CH;AAAA;AAAA,WA+CE,kBAAM;AACJ,wBAAmC,KAAK,KAAxC;AAAA,UAAQ,KAAR,eAAQ,KAAR;AAAA,UAAe,IAAf,eAAe,IAAf;AAAA,UAAqB,SAArB,eAAqB,SAArB;;AACA,UAAI,KAAK,CAAC,cAAN,CAAqB,SAArB,CAAJ,EAAqC;AACnC,eAAO,KAAK,KAAL,CAAW,SAAX,CAAP;AACD;;AAED,UAAI,OAAO,SAAP,KAAqB,UAAzB,EAAqC;AACnC;AACA,YAAM,GAAG,GAAG,WAAW,CAAC,IAAZ,CAAiB,SAAjB,EAA4B,KAA5B,EAAmC,IAAnC,CAAZ;;AACA,YAAI,KAAK,CAAC,cAAN,CAAqB,GAArB,CAAJ,EAA+B;AAC7B,iBAAO,KAAK,KAAL,CAAW,GAAX,CAAP;AACD;AACF;;AAED,aAAO,SAAP;AACD;AA9DH;;AAAA;AAAA,EAA0B,KAAK,CAAC,aAAhC;AACS,IAAA,CAAA,mBAAA,GAAsB,CAAC,UAAD,EAAa,MAAb,CAAtB","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { FunctionExt } from '@antv/x6';\nexport class Wrap extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.scheduledAnimationFrame = false;\n        this.throttleUpdateFunc = () => {\n            if (this.scheduledAnimationFrame) {\n                return;\n            }\n            this.scheduledAnimationFrame = true;\n            window.requestAnimationFrame(() => {\n                this.setState((state) => {\n                    this.scheduledAnimationFrame = false;\n                    return { tick: state.tick + 1 };\n                });\n            });\n        };\n        this.onChange = (e) => {\n            if (Wrap.throttleChangeTypes.includes(e.key)) {\n                this.throttleUpdateFunc();\n                return;\n            }\n            // eslint-disable-next-line react/no-access-state-in-setstate\n            this.setState({ tick: this.state.tick + 1 });\n        };\n        this.state = { tick: 0 };\n    }\n    componentDidMount() {\n        this.props.node.on('change:*', this.onChange);\n    }\n    componentWillUnmount() {\n        this.props.node.off('change:*', this.onChange);\n    }\n    clone(elem) {\n        const { node } = this.props;\n        return typeof elem.type === 'string'\n            ? React.cloneElement(elem)\n            : React.cloneElement(elem, { node });\n    }\n    render() {\n        const { graph, node, component } = this.props;\n        if (React.isValidElement(component)) {\n            return this.clone(component);\n        }\n        if (typeof component === 'function') {\n            // Calling the component function on every change of the node.\n            const ret = FunctionExt.call(component, graph, node);\n            if (React.isValidElement(ret)) {\n                return this.clone(ret);\n            }\n        }\n        return component;\n    }\n}\nWrap.throttleChangeTypes = ['position', 'size'];\n//# sourceMappingURL=wrap.js.map"]},"metadata":{},"sourceType":"module"}