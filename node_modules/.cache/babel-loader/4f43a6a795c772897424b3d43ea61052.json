{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport JQuery from 'jquery';\nimport { Dom, FunctionExt } from '../util';\nimport { Cell } from '../model';\nimport { Config } from '../global';\nimport { View, Markup } from '../view';\nexport class GraphView extends View {\n  constructor(graph) {\n    super();\n    this.graph = graph;\n    const {\n      selectors,\n      fragment\n    } = Markup.parseJSONMarkup(GraphView.markup);\n    this.background = selectors.background;\n    this.grid = selectors.grid;\n    this.svg = selectors.svg;\n    this.defs = selectors.defs;\n    this.viewport = selectors.viewport;\n    this.primer = selectors.primer;\n    this.stage = selectors.stage;\n    this.decorator = selectors.decorator;\n    this.overlay = selectors.overlay;\n    this.container = this.options.container;\n    this.restore = GraphView.snapshoot(this.container);\n    this.$(this.container).addClass(this.prefixClassName('graph')).append(fragment);\n    this.delegateEvents();\n  }\n\n  get model() {\n    return this.graph.model;\n  }\n\n  get options() {\n    return this.graph.options;\n  }\n\n  delegateEvents() {\n    const ctor = this.constructor;\n    super.delegateEvents(ctor.events);\n    return this;\n  }\n  /**\n   * Guard the specified event. If the event is not interesting, it\n   * returns `true`, otherwise returns `false`.\n   */\n\n\n  guard(e, view) {\n    // handled as `contextmenu` type\n    if (e.type === 'mousedown' && e.button === 2) {\n      return true;\n    }\n\n    if (this.options.guard && this.options.guard(e, view)) {\n      return true;\n    }\n\n    if (e.data && e.data.guarded !== undefined) {\n      return e.data.guarded;\n    }\n\n    if (view && view.cell && Cell.isCell(view.cell)) {\n      return false;\n    }\n\n    if (this.svg === e.target || this.container === e.target || JQuery.contains(this.svg, e.target)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  findView(elem) {\n    return this.graph.renderer.findViewByElem(elem);\n  }\n\n  onDblClick(evt) {\n    if (this.options.preventDefaultDblClick) {\n      evt.preventDefault();\n    }\n\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n\n    if (this.guard(e, view)) {\n      return;\n    }\n\n    const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n\n    if (view) {\n      view.onDblClick(e, localPoint.x, localPoint.y);\n    } else {\n      this.graph.trigger('blank:dblclick', {\n        e,\n        x: localPoint.x,\n        y: localPoint.y\n      });\n    }\n  }\n\n  onClick(evt) {\n    if (this.getMouseMovedCount(evt) <= this.options.clickThreshold) {\n      const e = this.normalizeEvent(evt);\n      const view = this.findView(e.target);\n\n      if (this.guard(e, view)) {\n        return;\n      }\n\n      const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n\n      if (view) {\n        view.onClick(e, localPoint.x, localPoint.y);\n      } else {\n        this.graph.trigger('blank:click', {\n          e,\n          x: localPoint.x,\n          y: localPoint.y\n        });\n      }\n    }\n  }\n\n  onContextMenu(evt) {\n    if (this.options.preventDefaultContextMenu) {\n      evt.preventDefault();\n    }\n\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n\n    if (this.guard(e, view)) {\n      return;\n    }\n\n    const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n\n    if (view) {\n      view.onContextMenu(e, localPoint.x, localPoint.y);\n    } else {\n      this.graph.trigger('blank:contextmenu', {\n        e,\n        x: localPoint.x,\n        y: localPoint.y\n      });\n    }\n  }\n\n  delegateDragEvents(e, view) {\n    if (e.data == null) {\n      e.data = {};\n    }\n\n    this.setEventData(e, {\n      currentView: view || null,\n      mouseMovedCount: 0,\n      startPosition: {\n        x: e.clientX,\n        y: e.clientY\n      }\n    });\n    const ctor = this.constructor;\n    this.delegateDocumentEvents(ctor.documentEvents, e.data);\n    this.undelegateEvents();\n  }\n\n  getMouseMovedCount(e) {\n    const data = this.getEventData(e);\n    return data.mouseMovedCount || 0;\n  }\n\n  onMouseDown(evt) {\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n\n    if (this.guard(e, view)) {\n      return;\n    }\n\n    if (this.options.preventDefaultMouseDown) {\n      e.preventDefault();\n    }\n\n    const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n\n    if (view) {\n      view.onMouseDown(e, localPoint.x, localPoint.y);\n    } else {\n      if (this.options.preventDefaultBlankAction) {\n        e.preventDefault();\n      }\n\n      this.graph.trigger('blank:mousedown', {\n        e,\n        x: localPoint.x,\n        y: localPoint.y\n      });\n    }\n\n    this.delegateDragEvents(e, view);\n  }\n\n  onMouseMove(evt) {\n    const data = this.getEventData(evt);\n    const startPosition = data.startPosition;\n\n    if (startPosition && startPosition.x === evt.clientX && startPosition.y === evt.clientY) {\n      return;\n    }\n\n    if (data.mouseMovedCount == null) {\n      data.mouseMovedCount = 0;\n    }\n\n    data.mouseMovedCount += 1;\n    const mouseMovedCount = data.mouseMovedCount;\n\n    if (mouseMovedCount <= this.options.moveThreshold) {\n      return;\n    }\n\n    const e = this.normalizeEvent(evt);\n    const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n    const view = data.currentView;\n\n    if (view) {\n      view.onMouseMove(e, localPoint.x, localPoint.y);\n    } else {\n      this.graph.trigger('blank:mousemove', {\n        e,\n        x: localPoint.x,\n        y: localPoint.y\n      });\n    }\n\n    this.setEventData(e, data);\n  }\n\n  onMouseUp(e) {\n    this.undelegateDocumentEvents();\n    const normalized = this.normalizeEvent(e);\n    const localPoint = this.graph.snapToGrid(normalized.clientX, normalized.clientY);\n    const data = this.getEventData(e);\n    const view = data.currentView;\n\n    if (view) {\n      view.onMouseUp(normalized, localPoint.x, localPoint.y);\n    } else {\n      this.graph.trigger('blank:mouseup', {\n        e: normalized,\n        x: localPoint.x,\n        y: localPoint.y\n      });\n    }\n\n    if (!e.isPropagationStopped()) {\n      this.onClick(JQuery.Event(e, {\n        type: 'click',\n        data: e.data\n      }));\n    }\n\n    e.stopImmediatePropagation();\n    this.delegateEvents();\n  }\n\n  onMouseOver(evt) {\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n\n    if (this.guard(e, view)) {\n      return;\n    }\n\n    if (view) {\n      view.onMouseOver(e);\n    } else {\n      // prevent border of paper from triggering this\n      if (this.container === e.target) {\n        return;\n      }\n\n      this.graph.trigger('blank:mouseover', {\n        e\n      });\n    }\n  }\n\n  onMouseOut(evt) {\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n\n    if (this.guard(e, view)) {\n      return;\n    }\n\n    if (view) {\n      view.onMouseOut(e);\n    } else {\n      if (this.container === e.target) {\n        return;\n      }\n\n      this.graph.trigger('blank:mouseout', {\n        e\n      });\n    }\n  }\n\n  onMouseEnter(evt) {\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n\n    if (this.guard(e, view)) {\n      return;\n    }\n\n    const relatedView = this.graph.renderer.findViewByElem(e.relatedTarget);\n\n    if (view) {\n      if (relatedView === view) {\n        // mouse moved from tool to view\n        return;\n      }\n\n      view.onMouseEnter(e);\n    } else {\n      if (relatedView) {\n        return;\n      }\n\n      this.graph.trigger('graph:mouseenter', {\n        e\n      });\n    }\n  }\n\n  onMouseLeave(evt) {\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n\n    if (this.guard(e, view)) {\n      return;\n    }\n\n    const relatedView = this.graph.renderer.findViewByElem(e.relatedTarget);\n\n    if (view) {\n      if (relatedView === view) {\n        // mouse moved from view to tool\n        return;\n      }\n\n      view.onMouseLeave(e);\n    } else {\n      if (relatedView) {\n        return;\n      }\n\n      this.graph.trigger('graph:mouseleave', {\n        e\n      });\n    }\n  }\n\n  onMouseWheel(evt) {\n    const e = this.normalizeEvent(evt);\n    const view = this.findView(e.target);\n\n    if (this.guard(e, view)) {\n      return;\n    }\n\n    const originalEvent = e.originalEvent;\n    const localPoint = this.graph.snapToGrid(originalEvent.clientX, originalEvent.clientY);\n    const delta = Math.max(-1, Math.min(1, originalEvent.wheelDelta || -originalEvent.detail));\n\n    if (view) {\n      view.onMouseWheel(e, localPoint.x, localPoint.y, delta);\n    } else {\n      this.graph.trigger('blank:mousewheel', {\n        e,\n        delta,\n        x: localPoint.x,\n        y: localPoint.y\n      });\n    }\n  }\n\n  onCustomEvent(evt) {\n    const elem = evt.currentTarget;\n    const event = elem.getAttribute('event') || elem.getAttribute('data-event');\n\n    if (event) {\n      const view = this.findView(elem);\n\n      if (view) {\n        const e = this.normalizeEvent(evt);\n\n        if (this.guard(e, view)) {\n          return;\n        }\n\n        const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        view.onCustomEvent(e, event, localPoint.x, localPoint.y);\n      }\n    }\n  }\n\n  handleMagnetEvent(evt, handler) {\n    const magnetElem = evt.currentTarget;\n    const magnetValue = magnetElem.getAttribute('magnet');\n\n    if (magnetValue && magnetValue.toLowerCase() !== 'false') {\n      const view = this.findView(magnetElem);\n\n      if (view) {\n        const e = this.normalizeEvent(evt);\n\n        if (this.guard(e, view)) {\n          return;\n        }\n\n        const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        FunctionExt.call(handler, this.graph, view, e, magnetElem, localPoint.x, localPoint.y);\n      }\n    }\n  }\n\n  onMagnetMouseDown(e) {\n    this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n      view.onMagnetMouseDown(e, magnet, x, y);\n    });\n  }\n\n  onMagnetDblClick(e) {\n    this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n      view.onMagnetDblClick(e, magnet, x, y);\n    });\n  }\n\n  onMagnetContextMenu(e) {\n    if (this.options.preventDefaultContextMenu) {\n      e.preventDefault();\n    }\n\n    this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n      view.onMagnetContextMenu(e, magnet, x, y);\n    });\n  }\n\n  onLabelMouseDown(evt) {\n    const labelNode = evt.currentTarget;\n    const view = this.findView(labelNode);\n\n    if (view) {\n      const e = this.normalizeEvent(evt);\n\n      if (this.guard(e, view)) {\n        return;\n      }\n\n      const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n      view.onLabelMouseDown(e, localPoint.x, localPoint.y);\n    }\n  }\n\n  onImageDragStart() {\n    // This is the only way to prevent image dragging in Firefox that works.\n    // Setting -moz-user-select: none, draggable=\"false\" attribute or\n    // user-drag: none didn't help.\n    return false;\n  }\n\n  dispose() {\n    this.undelegateEvents();\n    this.undelegateDocumentEvents();\n    this.restore();\n\n    this.restore = () => {};\n  }\n\n}\n\n__decorate([View.dispose()], GraphView.prototype, \"dispose\", null);\n\n(function (GraphView) {\n  const prefixCls = `${Config.prefixCls}-graph`;\n  GraphView.markup = [{\n    ns: Dom.ns.xhtml,\n    tagName: 'div',\n    selector: 'background',\n    className: `${prefixCls}-background`\n  }, {\n    ns: Dom.ns.xhtml,\n    tagName: 'div',\n    selector: 'grid',\n    className: `${prefixCls}-grid`\n  }, {\n    ns: Dom.ns.svg,\n    tagName: 'svg',\n    selector: 'svg',\n    className: `${prefixCls}-svg`,\n    attrs: {\n      width: '100%',\n      height: '100%',\n      'xmlns:xlink': Dom.ns.xlink\n    },\n    children: [{\n      tagName: 'defs',\n      selector: 'defs'\n    }, {\n      tagName: 'g',\n      selector: 'viewport',\n      className: `${prefixCls}-svg-viewport`,\n      children: [{\n        tagName: 'g',\n        selector: 'primer',\n        className: `${prefixCls}-svg-primer`\n      }, {\n        tagName: 'g',\n        selector: 'stage',\n        className: `${prefixCls}-svg-stage`\n      }, {\n        tagName: 'g',\n        selector: 'decorator',\n        className: `${prefixCls}-svg-decorator`\n      }, {\n        tagName: 'g',\n        selector: 'overlay',\n        className: `${prefixCls}-svg-overlay`\n      }]\n    }]\n  }];\n\n  function snapshoot(elem) {\n    const cloned = elem.cloneNode();\n    elem.childNodes.forEach(child => cloned.appendChild(child));\n    return () => {\n      // remove all children\n      Dom.empty(elem); // remove all attributes\n\n      while (elem.attributes.length > 0) {\n        elem.removeAttribute(elem.attributes[0].name);\n      } // restore attributes\n\n\n      for (let i = 0, l = cloned.attributes.length; i < l; i += 1) {\n        const attr = cloned.attributes[i];\n        elem.setAttribute(attr.name, attr.value);\n      } // restore children\n\n\n      cloned.childNodes.forEach(child => elem.appendChild(child));\n    };\n  }\n\n  GraphView.snapshoot = snapshoot;\n})(GraphView || (GraphView = {}));\n\n(function (GraphView) {\n  const prefixCls = Config.prefixCls;\n  GraphView.events = {\n    dblclick: 'onDblClick',\n    contextmenu: 'onContextMenu',\n    touchstart: 'onMouseDown',\n    mousedown: 'onMouseDown',\n    mouseover: 'onMouseOver',\n    mouseout: 'onMouseOut',\n    mouseenter: 'onMouseEnter',\n    mouseleave: 'onMouseLeave',\n    mousewheel: 'onMouseWheel',\n    DOMMouseScroll: 'onMouseWheel',\n    [`mouseenter  .${prefixCls}-cell`]: 'onMouseEnter',\n    [`mouseleave  .${prefixCls}-cell`]: 'onMouseLeave',\n    [`mouseenter  .${prefixCls}-cell-tools`]: 'onMouseEnter',\n    [`mouseleave  .${prefixCls}-cell-tools`]: 'onMouseLeave',\n    [`mousedown   .${prefixCls}-cell [event]`]: 'onCustomEvent',\n    [`touchstart  .${prefixCls}-cell [event]`]: 'onCustomEvent',\n    [`mousedown   .${prefixCls}-cell [data-event]`]: 'onCustomEvent',\n    [`touchstart  .${prefixCls}-cell [data-event]`]: 'onCustomEvent',\n    [`dblclick    .${prefixCls}-cell [magnet]`]: 'onMagnetDblClick',\n    [`contextmenu .${prefixCls}-cell [magnet]`]: 'onMagnetContextMenu',\n    [`mousedown   .${prefixCls}-cell [magnet]`]: 'onMagnetMouseDown',\n    [`touchstart  .${prefixCls}-cell [magnet]`]: 'onMagnetMouseDown',\n    [`dblclick    .${prefixCls}-cell [data-magnet]`]: 'onMagnetDblClick',\n    [`contextmenu .${prefixCls}-cell [data-magnet]`]: 'onMagnetContextMenu',\n    [`mousedown   .${prefixCls}-cell [data-magnet]`]: 'onMagnetMouseDown',\n    [`touchstart  .${prefixCls}-cell [data-magnet]`]: 'onMagnetMouseDown',\n    [`dragstart   .${prefixCls}-cell image`]: 'onImageDragStart',\n    [`mousedown   .${prefixCls}-edge .${prefixCls}-edge-label`]: 'onLabelMouseDown',\n    [`touchstart  .${prefixCls}-edge .${prefixCls}-edge-label`]: 'onLabelMouseDown'\n  };\n  GraphView.documentEvents = {\n    mousemove: 'onMouseMove',\n    touchmove: 'onMouseMove',\n    mouseup: 'onMouseUp',\n    touchend: 'onMouseUp',\n    touchcancel: 'onMouseUp'\n  };\n})(GraphView || (GraphView = {}));","map":{"version":3,"sources":["../../src/graph/view.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport JQuery from 'jquery';\nimport { Dom, FunctionExt } from '../util';\nimport { Cell } from '../model';\nimport { Config } from '../global';\nimport { View, Markup } from '../view';\nexport class GraphView extends View {\n    constructor(graph) {\n        super();\n        this.graph = graph;\n        const { selectors, fragment } = Markup.parseJSONMarkup(GraphView.markup);\n        this.background = selectors.background;\n        this.grid = selectors.grid;\n        this.svg = selectors.svg;\n        this.defs = selectors.defs;\n        this.viewport = selectors.viewport;\n        this.primer = selectors.primer;\n        this.stage = selectors.stage;\n        this.decorator = selectors.decorator;\n        this.overlay = selectors.overlay;\n        this.container = this.options.container;\n        this.restore = GraphView.snapshoot(this.container);\n        this.$(this.container)\n            .addClass(this.prefixClassName('graph'))\n            .append(fragment);\n        this.delegateEvents();\n    }\n    get model() {\n        return this.graph.model;\n    }\n    get options() {\n        return this.graph.options;\n    }\n    delegateEvents() {\n        const ctor = this.constructor;\n        super.delegateEvents(ctor.events);\n        return this;\n    }\n    /**\n     * Guard the specified event. If the event is not interesting, it\n     * returns `true`, otherwise returns `false`.\n     */\n    guard(e, view) {\n        // handled as `contextmenu` type\n        if (e.type === 'mousedown' && e.button === 2) {\n            return true;\n        }\n        if (this.options.guard && this.options.guard(e, view)) {\n            return true;\n        }\n        if (e.data && e.data.guarded !== undefined) {\n            return e.data.guarded;\n        }\n        if (view && view.cell && Cell.isCell(view.cell)) {\n            return false;\n        }\n        if (this.svg === e.target ||\n            this.container === e.target ||\n            JQuery.contains(this.svg, e.target)) {\n            return false;\n        }\n        return true;\n    }\n    findView(elem) {\n        return this.graph.renderer.findViewByElem(elem);\n    }\n    onDblClick(evt) {\n        if (this.options.preventDefaultDblClick) {\n            evt.preventDefault();\n        }\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        if (view) {\n            view.onDblClick(e, localPoint.x, localPoint.y);\n        }\n        else {\n            this.graph.trigger('blank:dblclick', {\n                e,\n                x: localPoint.x,\n                y: localPoint.y,\n            });\n        }\n    }\n    onClick(evt) {\n        if (this.getMouseMovedCount(evt) <= this.options.clickThreshold) {\n            const e = this.normalizeEvent(evt);\n            const view = this.findView(e.target);\n            if (this.guard(e, view)) {\n                return;\n            }\n            const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n            if (view) {\n                view.onClick(e, localPoint.x, localPoint.y);\n            }\n            else {\n                this.graph.trigger('blank:click', {\n                    e,\n                    x: localPoint.x,\n                    y: localPoint.y,\n                });\n            }\n        }\n    }\n    onContextMenu(evt) {\n        if (this.options.preventDefaultContextMenu) {\n            evt.preventDefault();\n        }\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        if (view) {\n            view.onContextMenu(e, localPoint.x, localPoint.y);\n        }\n        else {\n            this.graph.trigger('blank:contextmenu', {\n                e,\n                x: localPoint.x,\n                y: localPoint.y,\n            });\n        }\n    }\n    delegateDragEvents(e, view) {\n        if (e.data == null) {\n            e.data = {};\n        }\n        this.setEventData(e, {\n            currentView: view || null,\n            mouseMovedCount: 0,\n            startPosition: {\n                x: e.clientX,\n                y: e.clientY,\n            },\n        });\n        const ctor = this.constructor;\n        this.delegateDocumentEvents(ctor.documentEvents, e.data);\n        this.undelegateEvents();\n    }\n    getMouseMovedCount(e) {\n        const data = this.getEventData(e);\n        return data.mouseMovedCount || 0;\n    }\n    onMouseDown(evt) {\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        if (this.options.preventDefaultMouseDown) {\n            e.preventDefault();\n        }\n        const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        if (view) {\n            view.onMouseDown(e, localPoint.x, localPoint.y);\n        }\n        else {\n            if (this.options.preventDefaultBlankAction) {\n                e.preventDefault();\n            }\n            this.graph.trigger('blank:mousedown', {\n                e,\n                x: localPoint.x,\n                y: localPoint.y,\n            });\n        }\n        this.delegateDragEvents(e, view);\n    }\n    onMouseMove(evt) {\n        const data = this.getEventData(evt);\n        const startPosition = data.startPosition;\n        if (startPosition &&\n            startPosition.x === evt.clientX &&\n            startPosition.y === evt.clientY) {\n            return;\n        }\n        if (data.mouseMovedCount == null) {\n            data.mouseMovedCount = 0;\n        }\n        data.mouseMovedCount += 1;\n        const mouseMovedCount = data.mouseMovedCount;\n        if (mouseMovedCount <= this.options.moveThreshold) {\n            return;\n        }\n        const e = this.normalizeEvent(evt);\n        const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n        const view = data.currentView;\n        if (view) {\n            view.onMouseMove(e, localPoint.x, localPoint.y);\n        }\n        else {\n            this.graph.trigger('blank:mousemove', {\n                e,\n                x: localPoint.x,\n                y: localPoint.y,\n            });\n        }\n        this.setEventData(e, data);\n    }\n    onMouseUp(e) {\n        this.undelegateDocumentEvents();\n        const normalized = this.normalizeEvent(e);\n        const localPoint = this.graph.snapToGrid(normalized.clientX, normalized.clientY);\n        const data = this.getEventData(e);\n        const view = data.currentView;\n        if (view) {\n            view.onMouseUp(normalized, localPoint.x, localPoint.y);\n        }\n        else {\n            this.graph.trigger('blank:mouseup', {\n                e: normalized,\n                x: localPoint.x,\n                y: localPoint.y,\n            });\n        }\n        if (!e.isPropagationStopped()) {\n            this.onClick(JQuery.Event(e, {\n                type: 'click',\n                data: e.data,\n            }));\n        }\n        e.stopImmediatePropagation();\n        this.delegateEvents();\n    }\n    onMouseOver(evt) {\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        if (view) {\n            view.onMouseOver(e);\n        }\n        else {\n            // prevent border of paper from triggering this\n            if (this.container === e.target) {\n                return;\n            }\n            this.graph.trigger('blank:mouseover', { e });\n        }\n    }\n    onMouseOut(evt) {\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        if (view) {\n            view.onMouseOut(e);\n        }\n        else {\n            if (this.container === e.target) {\n                return;\n            }\n            this.graph.trigger('blank:mouseout', { e });\n        }\n    }\n    onMouseEnter(evt) {\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        const relatedView = this.graph.renderer.findViewByElem(e.relatedTarget);\n        if (view) {\n            if (relatedView === view) {\n                // mouse moved from tool to view\n                return;\n            }\n            view.onMouseEnter(e);\n        }\n        else {\n            if (relatedView) {\n                return;\n            }\n            this.graph.trigger('graph:mouseenter', { e });\n        }\n    }\n    onMouseLeave(evt) {\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        const relatedView = this.graph.renderer.findViewByElem(e.relatedTarget);\n        if (view) {\n            if (relatedView === view) {\n                // mouse moved from view to tool\n                return;\n            }\n            view.onMouseLeave(e);\n        }\n        else {\n            if (relatedView) {\n                return;\n            }\n            this.graph.trigger('graph:mouseleave', { e });\n        }\n    }\n    onMouseWheel(evt) {\n        const e = this.normalizeEvent(evt);\n        const view = this.findView(e.target);\n        if (this.guard(e, view)) {\n            return;\n        }\n        const originalEvent = e.originalEvent;\n        const localPoint = this.graph.snapToGrid(originalEvent.clientX, originalEvent.clientY);\n        const delta = Math.max(-1, Math.min(1, originalEvent.wheelDelta || -originalEvent.detail));\n        if (view) {\n            view.onMouseWheel(e, localPoint.x, localPoint.y, delta);\n        }\n        else {\n            this.graph.trigger('blank:mousewheel', {\n                e,\n                delta,\n                x: localPoint.x,\n                y: localPoint.y,\n            });\n        }\n    }\n    onCustomEvent(evt) {\n        const elem = evt.currentTarget;\n        const event = elem.getAttribute('event') || elem.getAttribute('data-event');\n        if (event) {\n            const view = this.findView(elem);\n            if (view) {\n                const e = this.normalizeEvent(evt);\n                if (this.guard(e, view)) {\n                    return;\n                }\n                const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n                view.onCustomEvent(e, event, localPoint.x, localPoint.y);\n            }\n        }\n    }\n    handleMagnetEvent(evt, handler) {\n        const magnetElem = evt.currentTarget;\n        const magnetValue = magnetElem.getAttribute('magnet');\n        if (magnetValue && magnetValue.toLowerCase() !== 'false') {\n            const view = this.findView(magnetElem);\n            if (view) {\n                const e = this.normalizeEvent(evt);\n                if (this.guard(e, view)) {\n                    return;\n                }\n                const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n                FunctionExt.call(handler, this.graph, view, e, magnetElem, localPoint.x, localPoint.y);\n            }\n        }\n    }\n    onMagnetMouseDown(e) {\n        this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n            view.onMagnetMouseDown(e, magnet, x, y);\n        });\n    }\n    onMagnetDblClick(e) {\n        this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n            view.onMagnetDblClick(e, magnet, x, y);\n        });\n    }\n    onMagnetContextMenu(e) {\n        if (this.options.preventDefaultContextMenu) {\n            e.preventDefault();\n        }\n        this.handleMagnetEvent(e, (view, e, magnet, x, y) => {\n            view.onMagnetContextMenu(e, magnet, x, y);\n        });\n    }\n    onLabelMouseDown(evt) {\n        const labelNode = evt.currentTarget;\n        const view = this.findView(labelNode);\n        if (view) {\n            const e = this.normalizeEvent(evt);\n            if (this.guard(e, view)) {\n                return;\n            }\n            const localPoint = this.graph.snapToGrid(e.clientX, e.clientY);\n            view.onLabelMouseDown(e, localPoint.x, localPoint.y);\n        }\n    }\n    onImageDragStart() {\n        // This is the only way to prevent image dragging in Firefox that works.\n        // Setting -moz-user-select: none, draggable=\"false\" attribute or\n        // user-drag: none didn't help.\n        return false;\n    }\n    dispose() {\n        this.undelegateEvents();\n        this.undelegateDocumentEvents();\n        this.restore();\n        this.restore = () => { };\n    }\n}\n__decorate([\n    View.dispose()\n], GraphView.prototype, \"dispose\", null);\n(function (GraphView) {\n    const prefixCls = `${Config.prefixCls}-graph`;\n    GraphView.markup = [\n        {\n            ns: Dom.ns.xhtml,\n            tagName: 'div',\n            selector: 'background',\n            className: `${prefixCls}-background`,\n        },\n        {\n            ns: Dom.ns.xhtml,\n            tagName: 'div',\n            selector: 'grid',\n            className: `${prefixCls}-grid`,\n        },\n        {\n            ns: Dom.ns.svg,\n            tagName: 'svg',\n            selector: 'svg',\n            className: `${prefixCls}-svg`,\n            attrs: {\n                width: '100%',\n                height: '100%',\n                'xmlns:xlink': Dom.ns.xlink,\n            },\n            children: [\n                {\n                    tagName: 'defs',\n                    selector: 'defs',\n                },\n                {\n                    tagName: 'g',\n                    selector: 'viewport',\n                    className: `${prefixCls}-svg-viewport`,\n                    children: [\n                        {\n                            tagName: 'g',\n                            selector: 'primer',\n                            className: `${prefixCls}-svg-primer`,\n                        },\n                        {\n                            tagName: 'g',\n                            selector: 'stage',\n                            className: `${prefixCls}-svg-stage`,\n                        },\n                        {\n                            tagName: 'g',\n                            selector: 'decorator',\n                            className: `${prefixCls}-svg-decorator`,\n                        },\n                        {\n                            tagName: 'g',\n                            selector: 'overlay',\n                            className: `${prefixCls}-svg-overlay`,\n                        },\n                    ],\n                },\n            ],\n        },\n    ];\n    function snapshoot(elem) {\n        const cloned = elem.cloneNode();\n        elem.childNodes.forEach((child) => cloned.appendChild(child));\n        return () => {\n            // remove all children\n            Dom.empty(elem);\n            // remove all attributes\n            while (elem.attributes.length > 0) {\n                elem.removeAttribute(elem.attributes[0].name);\n            }\n            // restore attributes\n            for (let i = 0, l = cloned.attributes.length; i < l; i += 1) {\n                const attr = cloned.attributes[i];\n                elem.setAttribute(attr.name, attr.value);\n            }\n            // restore children\n            cloned.childNodes.forEach((child) => elem.appendChild(child));\n        };\n    }\n    GraphView.snapshoot = snapshoot;\n})(GraphView || (GraphView = {}));\n(function (GraphView) {\n    const prefixCls = Config.prefixCls;\n    GraphView.events = {\n        dblclick: 'onDblClick',\n        contextmenu: 'onContextMenu',\n        touchstart: 'onMouseDown',\n        mousedown: 'onMouseDown',\n        mouseover: 'onMouseOver',\n        mouseout: 'onMouseOut',\n        mouseenter: 'onMouseEnter',\n        mouseleave: 'onMouseLeave',\n        mousewheel: 'onMouseWheel',\n        DOMMouseScroll: 'onMouseWheel',\n        [`mouseenter  .${prefixCls}-cell`]: 'onMouseEnter',\n        [`mouseleave  .${prefixCls}-cell`]: 'onMouseLeave',\n        [`mouseenter  .${prefixCls}-cell-tools`]: 'onMouseEnter',\n        [`mouseleave  .${prefixCls}-cell-tools`]: 'onMouseLeave',\n        [`mousedown   .${prefixCls}-cell [event]`]: 'onCustomEvent',\n        [`touchstart  .${prefixCls}-cell [event]`]: 'onCustomEvent',\n        [`mousedown   .${prefixCls}-cell [data-event]`]: 'onCustomEvent',\n        [`touchstart  .${prefixCls}-cell [data-event]`]: 'onCustomEvent',\n        [`dblclick    .${prefixCls}-cell [magnet]`]: 'onMagnetDblClick',\n        [`contextmenu .${prefixCls}-cell [magnet]`]: 'onMagnetContextMenu',\n        [`mousedown   .${prefixCls}-cell [magnet]`]: 'onMagnetMouseDown',\n        [`touchstart  .${prefixCls}-cell [magnet]`]: 'onMagnetMouseDown',\n        [`dblclick    .${prefixCls}-cell [data-magnet]`]: 'onMagnetDblClick',\n        [`contextmenu .${prefixCls}-cell [data-magnet]`]: 'onMagnetContextMenu',\n        [`mousedown   .${prefixCls}-cell [data-magnet]`]: 'onMagnetMouseDown',\n        [`touchstart  .${prefixCls}-cell [data-magnet]`]: 'onMagnetMouseDown',\n        [`dragstart   .${prefixCls}-cell image`]: 'onImageDragStart',\n        [`mousedown   .${prefixCls}-edge .${prefixCls}-edge-label`]: 'onLabelMouseDown',\n        [`touchstart  .${prefixCls}-edge .${prefixCls}-edge-label`]: 'onLabelMouseDown',\n    };\n    GraphView.documentEvents = {\n        mousemove: 'onMouseMove',\n        touchmove: 'onMouseMove',\n        mouseup: 'onMouseUp',\n        touchend: 'onMouseUp',\n        touchcancel: 'onMouseUp',\n    };\n})(GraphView || (GraphView = {}));\n//# sourceMappingURL=view.js.map"]},"metadata":{},"sourceType":"module"}