{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/* eslint-disable no-bitwise */\nexport var FlagManager = /*#__PURE__*/function () {\n  function FlagManager(view, actions) {\n    var bootstrap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n    _classCallCheck(this, FlagManager);\n\n    this.view = view;\n    var flags = {};\n    var attrs = {};\n    var shift = 0;\n    Object.keys(actions).forEach(function (attr) {\n      var labels = actions[attr];\n\n      if (!Array.isArray(labels)) {\n        labels = [labels];\n      }\n\n      labels.forEach(function (label) {\n        var flag = flags[label];\n\n        if (!flag) {\n          shift += 1;\n          flag = flags[label] = 1 << shift;\n        }\n\n        attrs[attr] |= flag;\n      });\n    });\n    var labels = bootstrap;\n\n    if (!Array.isArray(labels)) {\n      labels = [labels];\n    }\n\n    labels.forEach(function (label) {\n      if (!flags[label]) {\n        shift += 1;\n        flags[label] = 1 << shift;\n      }\n    }); // 26 - 30 are reserved for paper flags\n    // 31+ overflows maximal number\n\n    if (shift > 25) {\n      throw new Error('Maximum number of flags exceeded.');\n    }\n\n    this.flags = flags;\n    this.attrs = attrs;\n    this.bootstrap = bootstrap;\n  }\n\n  _createClass(FlagManager, [{\n    key: \"cell\",\n    get: function get() {\n      return this.view.cell;\n    }\n  }, {\n    key: \"getFlag\",\n    value: function getFlag(label) {\n      var flags = this.flags;\n\n      if (flags == null) {\n        return 0;\n      }\n\n      if (Array.isArray(label)) {\n        return label.reduce(function (memo, key) {\n          return memo | flags[key];\n        }, 0);\n      }\n\n      return flags[label] | 0;\n    }\n  }, {\n    key: \"hasAction\",\n    value: function hasAction(flag, label) {\n      return flag & this.getFlag(label);\n    }\n  }, {\n    key: \"removeAction\",\n    value: function removeAction(flag, label) {\n      return flag ^ flag & this.getFlag(label);\n    }\n  }, {\n    key: \"getBootstrapFlag\",\n    value: function getBootstrapFlag() {\n      return this.getFlag(this.bootstrap);\n    }\n  }, {\n    key: \"getChangedFlag\",\n    value: function getChangedFlag() {\n      var _this = this;\n\n      var flag = 0;\n\n      if (!this.attrs) {\n        return flag;\n      }\n\n      Object.keys(this.attrs).forEach(function (attr) {\n        if (_this.cell.hasChanged(attr)) {\n          flag |= _this.attrs[attr];\n        }\n      });\n      return flag;\n    }\n  }]);\n\n  return FlagManager;\n}();","map":{"version":3,"sources":["../../src/view/flag.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* eslint-disable no-bitwise */\nexport class FlagManager {\n    constructor(view, actions, bootstrap = []) {\n        this.view = view;\n        const flags = {};\n        const attrs = {};\n        let shift = 0;\n        Object.keys(actions).forEach((attr) => {\n            let labels = actions[attr];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            labels.forEach((label) => {\n                let flag = flags[label];\n                if (!flag) {\n                    shift += 1;\n                    flag = flags[label] = 1 << shift;\n                }\n                attrs[attr] |= flag;\n            });\n        });\n        let labels = bootstrap;\n        if (!Array.isArray(labels)) {\n            labels = [labels];\n        }\n        labels.forEach((label) => {\n            if (!flags[label]) {\n                shift += 1;\n                flags[label] = 1 << shift;\n            }\n        });\n        // 26 - 30 are reserved for paper flags\n        // 31+ overflows maximal number\n        if (shift > 25) {\n            throw new Error('Maximum number of flags exceeded.');\n        }\n        this.flags = flags;\n        this.attrs = attrs;\n        this.bootstrap = bootstrap;\n    }\n    get cell() {\n        return this.view.cell;\n    }\n    getFlag(label) {\n        const flags = this.flags;\n        if (flags == null) {\n            return 0;\n        }\n        if (Array.isArray(label)) {\n            return label.reduce((memo, key) => memo | flags[key], 0);\n        }\n        return flags[label] | 0;\n    }\n    hasAction(flag, label) {\n        return flag & this.getFlag(label);\n    }\n    removeAction(flag, label) {\n        return flag ^ (flag & this.getFlag(label));\n    }\n    getBootstrapFlag() {\n        return this.getFlag(this.bootstrap);\n    }\n    getChangedFlag() {\n        let flag = 0;\n        if (!this.attrs) {\n            return flag;\n        }\n        Object.keys(this.attrs).forEach((attr) => {\n            if (this.cell.hasChanged(attr)) {\n                flag |= this.attrs[attr];\n            }\n        });\n        return flag;\n    }\n}\n//# sourceMappingURL=flag.js.map"]},"metadata":{},"sourceType":"module"}