{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Base } from './base';\nimport { SizeSensor } from '../util';\nexport var SizeManager = /*#__PURE__*/function (_Base) {\n  _inherits(SizeManager, _Base);\n\n  var _super = _createSuper(SizeManager);\n\n  function SizeManager() {\n    _classCallCheck(this, SizeManager);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SizeManager, [{\n    key: \"hasScroller\",\n    value: function hasScroller() {\n      return this.graph.scroller.widget != null;\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      return this.hasScroller() ? this.graph.scroller.widget.container : this.graph.container;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      var autoResize = this.options.autoResize;\n\n      if (autoResize) {\n        var target = typeof autoResize === 'boolean' ? this.getContainer() : autoResize;\n        SizeSensor.bind(target, function () {\n          var container = _this.getContainer(); // container is border-box\n\n\n          var width = container.offsetWidth;\n          var height = container.offsetHeight;\n\n          _this.resize(width, height);\n        });\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (this.hasScroller()) {\n        this.resizeScroller(width, height);\n      } else {\n        this.resizeGraph(width, height);\n      }\n    }\n  }, {\n    key: \"resizeGraph\",\n    value: function resizeGraph(width, height) {\n      this.graph.transform.resize(width, height);\n    }\n  }, {\n    key: \"resizeScroller\",\n    value: function resizeScroller(width, height) {\n      this.graph.scroller.resize(width, height);\n    }\n  }, {\n    key: \"resizePage\",\n    value: function resizePage(width, height) {\n      var instance = this.graph.scroller.widget;\n\n      if (instance) {\n        instance.updatePageSize(width, height);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      SizeSensor.clear(this.getContainer());\n    }\n  }]);\n\n  return SizeManager;\n}(Base);\n\n__decorate([Base.dispose()], SizeManager.prototype, \"dispose\", null);","map":{"version":3,"sources":["../../src/graph/size.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,SAAS,IAAT,QAAqB,QAArB;AACA,SAAS,UAAT,QAA2B,SAA3B;AAEA,WAAa,WAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACY,uBAAW;AACnB,aAAO,KAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,IAA8B,IAArC;AACD;AAHH;AAAA;AAAA,WAKY,wBAAY;AACpB,aAAO,KAAK,WAAL,KACH,KAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,CAA4B,SADzB,GAEH,KAAK,KAAL,CAAW,SAFf;AAGD;AATH;AAAA;AAAA,WAWY,gBAAI;AAAA;;AACZ,UAAM,UAAU,GAAG,KAAK,OAAL,CAAa,UAAhC;;AACA,UAAI,UAAJ,EAAgB;AACd,YAAM,MAAM,GACV,OAAO,UAAP,KAAsB,SAAtB,GACI,KAAK,YAAL,EADJ,GAEK,UAHP;AAKA,QAAA,UAAU,CAAC,IAAX,CAAgB,MAAhB,EAAwB,YAAK;AAC3B,cAAM,SAAS,GAAG,KAAI,CAAC,YAAL,EAAlB,CAD2B,CAE3B;;;AACA,cAAM,KAAK,GAAG,SAAS,CAAC,WAAxB;AACA,cAAM,MAAM,GAAG,SAAS,CAAC,YAAzB;;AACA,UAAA,KAAI,CAAC,MAAL,CAAY,KAAZ,EAAmB,MAAnB;AACD,SAND;AAOD;AACF;AA3BH;AAAA;AAAA,WA6BE,gBAAO,KAAP,EAAuB,MAAvB,EAAsC;AACpC,UAAI,KAAK,WAAL,EAAJ,EAAwB;AACtB,aAAK,cAAL,CAAoB,KAApB,EAA2B,MAA3B;AACD,OAFD,MAEO;AACL,aAAK,WAAL,CAAiB,KAAjB,EAAwB,MAAxB;AACD;AACF;AAnCH;AAAA;AAAA,WAqCE,qBAAY,KAAZ,EAA4B,MAA5B,EAA2C;AACzC,WAAK,KAAL,CAAW,SAAX,CAAqB,MAArB,CAA4B,KAA5B,EAAmC,MAAnC;AACD;AAvCH;AAAA;AAAA,WAyCE,wBAAe,KAAf,EAA+B,MAA/B,EAA8C;AAC5C,WAAK,KAAL,CAAW,QAAX,CAAoB,MAApB,CAA2B,KAA3B,EAAkC,MAAlC;AACD;AA3CH;AAAA;AAAA,WA6CE,oBAAW,KAAX,EAA2B,MAA3B,EAA0C;AACxC,UAAM,QAAQ,GAAG,KAAK,KAAL,CAAW,QAAX,CAAoB,MAArC;;AACA,UAAI,QAAJ,EAAc;AACZ,QAAA,QAAQ,CAAC,cAAT,CAAwB,KAAxB,EAA+B,MAA/B;AACD;AACF;AAlDH;AAAA;AAAA,WAqDE,mBAAO;AACL,MAAA,UAAU,CAAC,KAAX,CAAiB,KAAK,YAAL,EAAjB;AACD;AAvDH;;AAAA;AAAA,EAAiC,IAAjC;;AAqDE,UAAA,CAAA,CADC,IAAI,CAAC,OAAL,EACD,CAAA,E,qBAAA,E,SAAA,EAEC,IAFD,CAAA","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Base } from './base';\nimport { SizeSensor } from '../util';\nexport class SizeManager extends Base {\n    hasScroller() {\n        return this.graph.scroller.widget != null;\n    }\n    getContainer() {\n        return this.hasScroller()\n            ? this.graph.scroller.widget.container\n            : this.graph.container;\n    }\n    init() {\n        const autoResize = this.options.autoResize;\n        if (autoResize) {\n            const target = typeof autoResize === 'boolean'\n                ? this.getContainer()\n                : autoResize;\n            SizeSensor.bind(target, () => {\n                const container = this.getContainer();\n                // container is border-box\n                const width = container.offsetWidth;\n                const height = container.offsetHeight;\n                this.resize(width, height);\n            });\n        }\n    }\n    resize(width, height) {\n        if (this.hasScroller()) {\n            this.resizeScroller(width, height);\n        }\n        else {\n            this.resizeGraph(width, height);\n        }\n    }\n    resizeGraph(width, height) {\n        this.graph.transform.resize(width, height);\n    }\n    resizeScroller(width, height) {\n        this.graph.scroller.resize(width, height);\n    }\n    resizePage(width, height) {\n        const instance = this.graph.scroller.widget;\n        if (instance) {\n            instance.updatePageSize(width, height);\n        }\n    }\n    dispose() {\n        SizeSensor.clear(this.getContainer());\n    }\n}\n__decorate([\n    Base.dispose()\n], SizeManager.prototype, \"dispose\", null);\n//# sourceMappingURL=size.js.map"]},"metadata":{},"sourceType":"module"}