{"ast":null,"code":"import _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\nimport _cloneDeep from \"lodash/cloneDeep\";\n\nvar _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { TYPES } from '@antv/l7-core';\nimport { rgb2arr } from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nvar DataMappingPlugin = (_dec = injectable(), _dec2 = inject(TYPES.IGlobalConfigService), _dec3 = inject(TYPES.IMapService), _dec4 = inject(TYPES.IFontService), _dec(_class = (_class2 = function () {\n  function DataMappingPlugin() {\n    _classCallCheck(this, DataMappingPlugin);\n\n    _initializerDefineProperty(this, \"configService\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"mapService\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"fontService\", _descriptor3, this);\n  }\n\n  _createClass(DataMappingPlugin, [{\n    key: \"apply\",\n    value: function apply(layer, _ref) {\n      var _this = this;\n\n      var styleAttributeService = _ref.styleAttributeService;\n      layer.hooks.init.tap('DataMappingPlugin', function () {\n        _this.generateMaping(layer, {\n          styleAttributeService: styleAttributeService\n        });\n      });\n      layer.hooks.beforeRenderData.tap('DataMappingPlugin', function () {\n        layer.dataState.dataMappingNeedUpdate = false;\n\n        _this.generateMaping(layer, {\n          styleAttributeService: styleAttributeService\n        });\n\n        return true;\n      });\n      layer.hooks.beforeRender.tap('DataMappingPlugin', function () {\n        if (layer.layerModelNeedUpdate) {\n          return;\n        }\n\n        var attributes = styleAttributeService.getLayerStyleAttributes() || [];\n        var filter = styleAttributeService.getLayerStyleAttribute('filter');\n        var dataArray = layer.getSource().data.dataArray;\n        var attributesToRemapping = attributes.filter(function (attribute) {\n          return attribute.needRemapping;\n        });\n        var filterData = dataArray;\n\n        if (filter !== null && filter !== void 0 && filter.needRemapping && filter !== null && filter !== void 0 && filter.scale) {\n          filterData = dataArray.filter(function (record) {\n            return _this.applyAttributeMapping(filter, record)[0];\n          });\n        }\n\n        if (attributesToRemapping.length) {\n          if (filter !== null && filter !== void 0 && filter.needRemapping) {\n            layer.setEncodedData(_this.mapping(attributes, filterData));\n            filter.needRemapping = false;\n          } else {\n            layer.setEncodedData(_this.mapping(attributesToRemapping, filterData, layer.getEncodedData()));\n          }\n\n          layer.emit('remapping', null);\n        }\n      });\n    }\n  }, {\n    key: \"generateMaping\",\n    value: function generateMaping(layer, _ref2) {\n      var _this2 = this;\n\n      var styleAttributeService = _ref2.styleAttributeService;\n      var attributes = styleAttributeService.getLayerStyleAttributes() || [];\n      var filter = styleAttributeService.getLayerStyleAttribute('filter');\n      var dataArray = layer.getSource().data.dataArray;\n      var filterData = dataArray;\n\n      if (filter !== null && filter !== void 0 && filter.scale) {\n        filterData = dataArray.filter(function (record) {\n          return _this2.applyAttributeMapping(filter, record)[0];\n        });\n      }\n\n      layer.setEncodedData(this.mapping(attributes, filterData));\n    }\n  }, {\n    key: \"mapping\",\n    value: function mapping(attributes, data, predata) {\n      var _this3 = this;\n\n      var mappedData = data.map(function (record, i) {\n        var preRecord = predata ? predata[i] : {};\n\n        var encodeRecord = _objectSpread({\n          id: record._id,\n          coordinates: record.coordinates\n        }, preRecord);\n\n        attributes.filter(function (attribute) {\n          return attribute.scale !== undefined;\n        }).forEach(function (attribute) {\n          var values = _this3.applyAttributeMapping(attribute, record);\n\n          attribute.needRemapping = false;\n\n          if (attribute.name === 'color') {\n            values = values.map(function (c) {\n              return rgb2arr(c);\n            });\n          }\n\n          encodeRecord[attribute.name] = Array.isArray(values) && values.length === 1 ? values[0] : values;\n\n          if (attribute.name === 'shape') {\n            encodeRecord.shape = _this3.fontService.getIconFontKey(encodeRecord[attribute.name]);\n          }\n        });\n        return encodeRecord;\n      });\n\n      if (mappedData.length > 0 && this.mapService.version === 'GAODE2.x') {\n        if (typeof mappedData[0].coordinates[0] === 'number') {\n          mappedData.filter(function (d) {\n            return !d.originCoordinates;\n          }).map(function (d) {\n            d.version = 'GAODE2.x';\n            d.originCoordinates = _cloneDeep(d.coordinates);\n            d.coordinates = _this3.mapService.lngLatToCoord(d.coordinates);\n          });\n        } else {\n          mappedData.filter(function (d) {\n            return !d.originCoordinates;\n          }).map(function (d) {\n            d.version = 'GAODE2.x';\n            d.originCoordinates = _cloneDeep(d.coordinates);\n            d.coordinates = _this3.mapService.lngLatToCoords(d.coordinates);\n          });\n        }\n      }\n\n      return mappedData;\n    }\n  }, {\n    key: \"applyAttributeMapping\",\n    value: function applyAttributeMapping(attribute, record) {\n      var _attribute$scale;\n\n      if (!attribute.scale) {\n        return [];\n      }\n\n      var scalers = (attribute === null || attribute === void 0 ? void 0 : (_attribute$scale = attribute.scale) === null || _attribute$scale === void 0 ? void 0 : _attribute$scale.scalers) || [];\n      var params = [];\n      scalers.forEach(function (_ref3) {\n        var _attribute$scale2;\n\n        var field = _ref3.field;\n\n        if (record.hasOwnProperty(field) || ((_attribute$scale2 = attribute.scale) === null || _attribute$scale2 === void 0 ? void 0 : _attribute$scale2.type) === 'variable') {\n          params.push(record[field]);\n        }\n      });\n      return attribute.mapping ? attribute.mapping(params) : [];\n    }\n  }]);\n\n  return DataMappingPlugin;\n}(), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"configService\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"mapService\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"fontService\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);\nexport { DataMappingPlugin as default };","map":{"version":3,"sources":["../../src/plugins/DataMappingPlugin.ts"],"names":["injectable","DataMappingPlugin","inject","TYPES","styleAttributeService","layer","attributes","filter","dataArray","attributesToRemapping","attribute","filterData","mappedData","preRecord","predata","encodeRecord","id","record","coordinates","values","rgb2arr","Array","d","scalers","params","field"],"mappings":"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","sourcesContent":["import {\n  IEncodeFeature,\n  IFontService,\n  IGlobalConfigService,\n  ILayer,\n  ILayerPlugin,\n  ILngLat,\n  IMapService,\n  IParseDataItem,\n  IStyleAttribute,\n  IStyleAttributeService,\n  TYPES,\n} from '@antv/l7-core';\nimport { rgb2arr, unProjectFlat } from '@antv/l7-utils';\nimport { inject, injectable } from 'inversify';\nimport { cloneDeep } from 'lodash';\nimport 'reflect-metadata';\n\n@injectable()\nexport default class DataMappingPlugin implements ILayerPlugin {\n  @inject(TYPES.IGlobalConfigService)\n  private readonly configService: IGlobalConfigService;\n\n  @inject(TYPES.IMapService)\n  private readonly mapService: IMapService;\n\n  @inject(TYPES.IFontService)\n  private readonly fontService: IFontService;\n\n  public apply(\n    layer: ILayer,\n    {\n      styleAttributeService,\n    }: { styleAttributeService: IStyleAttributeService },\n  ) {\n    layer.hooks.init.tap('DataMappingPlugin', () => {\n      // 初始化重新生成 map\n      this.generateMaping(layer, { styleAttributeService });\n    });\n\n    layer.hooks.beforeRenderData.tap('DataMappingPlugin', () => {\n      layer.dataState.dataMappingNeedUpdate = false;\n      this.generateMaping(layer, { styleAttributeService });\n      return true;\n    });\n\n    // remapping before render\n    layer.hooks.beforeRender.tap('DataMappingPlugin', () => {\n      if (layer.layerModelNeedUpdate) {\n        return;\n      }\n      const attributes = styleAttributeService.getLayerStyleAttributes() || [];\n      const filter = styleAttributeService.getLayerStyleAttribute('filter');\n      const { dataArray } = layer.getSource().data;\n      const attributesToRemapping = attributes.filter(\n        (attribute) => attribute.needRemapping, // 如果filter变化\n      );\n      let filterData = dataArray;\n      // 数据过滤完 再执行数据映射\n      if (filter?.needRemapping && filter?.scale) {\n        filterData = dataArray.filter((record: IParseDataItem) => {\n          return this.applyAttributeMapping(filter, record)[0];\n        });\n      }\n      if (attributesToRemapping.length) {\n        // 过滤数据\n        if (filter?.needRemapping) {\n          layer.setEncodedData(this.mapping(attributes, filterData));\n          filter.needRemapping = false;\n        } else {\n          layer.setEncodedData(\n            this.mapping(\n              attributesToRemapping,\n              filterData,\n              layer.getEncodedData(),\n            ),\n          );\n        }\n        // 处理文本更新\n        layer.emit('remapping', null);\n      }\n    });\n  }\n  private generateMaping(\n    layer: ILayer,\n    {\n      styleAttributeService,\n    }: { styleAttributeService: IStyleAttributeService },\n  ) {\n    const attributes = styleAttributeService.getLayerStyleAttributes() || [];\n    const filter = styleAttributeService.getLayerStyleAttribute('filter');\n    const { dataArray } = layer.getSource().data;\n    let filterData = dataArray;\n    // 数据过滤完 再执行数据映射\n    if (filter?.scale) {\n      filterData = dataArray.filter((record: IParseDataItem) => {\n        return this.applyAttributeMapping(filter, record)[0];\n      });\n    }\n    layer.setEncodedData(this.mapping(attributes, filterData));\n  }\n\n  private mapping(\n    attributes: IStyleAttribute[],\n    data: IParseDataItem[],\n    predata?: IEncodeFeature[],\n  ): IEncodeFeature[] {\n    // console.log('data', data)\n    const mappedData = data.map((record: IParseDataItem, i) => {\n      const preRecord = predata ? predata[i] : {};\n      const encodeRecord: IEncodeFeature = {\n        id: record._id,\n        coordinates: record.coordinates,\n        ...preRecord,\n      };\n      // console.log('attributes', attributes)\n      attributes\n        .filter((attribute) => attribute.scale !== undefined)\n        .forEach((attribute: IStyleAttribute) => {\n          // console.log('attribute', attribute)\n          // console.log('record', record)\n          let values = this.applyAttributeMapping(attribute, record);\n          // console.log('values', values)\n          attribute.needRemapping = false;\n\n          // TODO: 支持每个属性配置 postprocess\n          if (attribute.name === 'color') {\n            // console.log('attribute', attribute)\n            values = values.map((c: unknown) => {\n              return rgb2arr(c as string);\n            });\n          }\n          // @ts-ignore\n          encodeRecord[attribute.name] =\n            Array.isArray(values) && values.length === 1 ? values[0] : values;\n\n          // 增加对 layer/text/iconfont unicode 映射的解析\n          if (attribute.name === 'shape') {\n            encodeRecord.shape = this.fontService.getIconFontKey(\n              encodeRecord[attribute.name] as string,\n            );\n          }\n        });\n      return encodeRecord;\n    }) as IEncodeFeature[];\n    // console.log('mappedData', mappedData)\n\n    // 根据地图的类型判断是否需要对点位数据进行处理, 若是高德2.0则需要对坐标进行相对偏移\n    if (mappedData.length > 0 && this.mapService.version === 'GAODE2.x') {\n      if (typeof mappedData[0].coordinates[0] === 'number') {\n        // 单个的点数据\n        // @ts-ignore\n        mappedData\n          // TODO: 避免经纬度被重复计算导致坐标位置偏移\n          .filter((d) => !d.originCoordinates)\n          .map((d) => {\n            d.version = 'GAODE2.x';\n            // @ts-ignore\n            d.originCoordinates = cloneDeep(d.coordinates); // 为了兼容高德1.x 需要保存一份原始的经纬度坐标数据（许多上层逻辑依赖经纬度数据）\n            // @ts-ignore\n            d.coordinates = this.mapService.lngLatToCoord(d.coordinates);\n            // d.coordinates = this.mapService.lngLatToCoord(unProjectFlat(d.coordinates));\n          });\n      } else {\n        // 连续的线、面数据\n        // @ts-ignore\n        mappedData\n          // TODO: 避免经纬度被重复计算导致坐标位置偏移\n          .filter((d) => !d.originCoordinates)\n          .map((d) => {\n            d.version = 'GAODE2.x';\n            // @ts-ignore\n            d.originCoordinates = cloneDeep(d.coordinates); // 为了兼容高德1.x 需要保存一份原始的经纬度坐标数据（许多上层逻辑依赖经纬度数据）\n            // @ts-ignore\n            d.coordinates = this.mapService.lngLatToCoords(d.coordinates);\n          });\n      }\n    }\n    // console.log('mappedData', mappedData)\n    return mappedData;\n  }\n\n  private applyAttributeMapping(\n    attribute: IStyleAttribute,\n    record: { [key: string]: unknown },\n  ) {\n    if (!attribute.scale) {\n      return [];\n    }\n    const scalers = attribute?.scale?.scalers || [];\n    const params: unknown[] = [];\n\n    scalers.forEach(({ field }) => {\n      if (\n        record.hasOwnProperty(field) ||\n        attribute.scale?.type === 'variable'\n      ) {\n        // TODO:多字段，常量\n        params.push(record[field]);\n      }\n    });\n    // console.log('params', params)\n    // console.log('attribute', attribute)\n    // console.log('mapping',attribute.mapping ? attribute.mapping(params) : [])\n    return attribute.mapping ? attribute.mapping(params) : [];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}