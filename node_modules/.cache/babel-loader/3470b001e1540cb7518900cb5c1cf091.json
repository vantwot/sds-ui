{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Base } from './base';\nexport var ClipboardManager = /*#__PURE__*/function (_Base) {\n  _inherits(ClipboardManager, _Base);\n\n  var _super = _createSuper(ClipboardManager);\n\n  function ClipboardManager() {\n    _classCallCheck(this, ClipboardManager);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ClipboardManager, [{\n    key: \"commonOptions\",\n    get: function get() {\n      var _a = this.instanceOptions,\n          enabled = _a.enabled,\n          others = __rest(_a, [\"enabled\"]);\n\n      return others;\n    }\n  }, {\n    key: \"instanceOptions\",\n    get: function get() {\n      return this.options.clipboard;\n    }\n  }, {\n    key: \"cells\",\n    get: function get() {\n      return this.widget.cells;\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.instanceOptions.enabled !== true;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.widget = this.graph.hook.createClipboard();\n      this.widget.deserialize(this.instanceOptions);\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      if (this.disabled) {\n        this.instanceOptions.enabled = true;\n      }\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      if (!this.disabled) {\n        this.instanceOptions.enabled = false;\n      }\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(cells) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!this.disabled) {\n        this.widget.copy(cells, this.graph, Object.assign(Object.assign({}, this.commonOptions), options));\n      }\n    }\n  }, {\n    key: \"cut\",\n    value: function cut(cells) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!this.disabled) {\n        this.widget.cut(cells, this.graph, Object.assign(Object.assign({}, this.commonOptions), options));\n      }\n    }\n  }, {\n    key: \"paste\",\n    value: function paste() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var graph = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.graph;\n\n      if (!this.disabled) {\n        return this.widget.paste(graph, Object.assign(Object.assign({}, this.commonOptions), options));\n      }\n\n      return [];\n    }\n  }, {\n    key: \"clean\",\n    value: function clean(force) {\n      if (!this.disabled || force) {\n        this.widget.clean();\n      }\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.widget.isEmpty();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.clean(true);\n    }\n  }]);\n\n  return ClipboardManager;\n}(Base);\n\n__decorate([Base.dispose()], ClipboardManager.prototype, \"dispose\", null);","map":{"version":3,"sources":["../../src/graph/clipboard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,SAAS,IAAT,QAAqB,QAArB;AAEA,WAAa,gBAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,SAGE,eAA2B;AACnB,UAAA,EAAA,GAAyB,KAAzB,eAAA;AAAA,UAAE,OAAF,GAAS,EAAT,CAAE,OAAF;AAAA,UAAc,MAAd,GAAoB,MAAA,CAAA,EAAA,EAApB,CAAA,SAAA,CAAoB,CAApB;;AACN,aAAO,MAAP;AACD;AANH;AAAA;AAAA,SAQE,eAA6B;AAC3B,aAAO,KAAK,OAAL,CAAa,SAApB;AACD;AAVH;AAAA;AAAA,SAYE,eAAS;AACP,aAAO,KAAK,MAAL,CAAY,KAAnB;AACD;AAdH;AAAA;AAAA,SAgBE,eAAY;AACV,aAAO,KAAK,eAAL,CAAqB,OAArB,KAAiC,IAAxC;AACD;AAlBH;AAAA;AAAA,WAoBY,gBAAI;AACZ,WAAK,MAAL,GAAc,KAAK,KAAL,CAAW,IAAX,CAAgB,eAAhB,EAAd;AACA,WAAK,MAAL,CAAY,WAAZ,CAAwB,KAAK,eAA7B;AACD;AAvBH;AAAA;AAAA,WAyBE,kBAAM;AACJ,UAAI,KAAK,QAAT,EAAmB;AACjB,aAAK,eAAL,CAAqB,OAArB,GAA+B,IAA/B;AACD;AACF;AA7BH;AAAA;AAAA,WA+BE,mBAAO;AACL,UAAI,CAAC,KAAK,QAAV,EAAoB;AAClB,aAAK,eAAL,CAAqB,OAArB,GAA+B,KAA/B;AACD;AACF;AAnCH;AAAA;AAAA,WAqCE,cAAK,KAAL,EAAuD;AAAA,UAAnC,OAAmC,uEAAF,EAAE;;AACrD,UAAI,CAAC,KAAK,QAAV,EAAoB;AAClB,aAAK,MAAL,CAAY,IAAZ,CAAiB,KAAjB,EAAwB,KAAK,KAA7B,EAAkC,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAC7B,KAAK,aADwB,CAAA,EAE7B,OAF6B,CAAlC;AAID;AACF;AA5CH;AAAA;AAAA,WA8CE,aAAI,KAAJ,EAAsD;AAAA,UAAnC,OAAmC,uEAAF,EAAE;;AACpD,UAAI,CAAC,KAAK,QAAV,EAAoB;AAClB,aAAK,MAAL,CAAY,GAAZ,CAAgB,KAAhB,EAAuB,KAAK,KAA5B,EAAiC,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAC5B,KAAK,aADuB,CAAA,EAE5B,OAF4B,CAAjC;AAID;AACF;AArDH;AAAA;AAAA,WAuDE,iBAAqE;AAAA,UAA/D,OAA+D,uEAA7B,EAA6B;AAAA,UAAzB,KAAyB,uEAAV,KAAK,KAAK;;AACnE,UAAI,CAAC,KAAK,QAAV,EAAoB;AAClB,eAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAAlB,EAAuB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACzB,KAAK,aADoB,CAAA,EAEzB,OAFyB,CAAvB,CAAP;AAID;;AACD,aAAO,EAAP;AACD;AA/DH;AAAA;AAAA,WAiEE,eAAM,KAAN,EAAqB;AACnB,UAAI,CAAC,KAAK,QAAN,IAAkB,KAAtB,EAA6B;AAC3B,aAAK,MAAL,CAAY,KAAZ;AACD;AACF;AArEH;AAAA;AAAA,WAuEE,mBAAO;AACL,aAAO,KAAK,MAAL,CAAY,OAAZ,EAAP;AACD;AAzEH;AAAA;AAAA,WA4EE,mBAAO;AACL,WAAK,KAAL,CAAW,IAAX;AACD;AA9EH;;AAAA;AAAA,EAAsC,IAAtC;;AA4EE,UAAA,CAAA,CADC,IAAI,CAAC,OAAL,EACD,CAAA,E,0BAAA,E,SAAA,EAEC,IAFD,CAAA","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Base } from './base';\nexport class ClipboardManager extends Base {\n    get commonOptions() {\n        const _a = this.instanceOptions, { enabled } = _a, others = __rest(_a, [\"enabled\"]);\n        return others;\n    }\n    get instanceOptions() {\n        return this.options.clipboard;\n    }\n    get cells() {\n        return this.widget.cells;\n    }\n    get disabled() {\n        return this.instanceOptions.enabled !== true;\n    }\n    init() {\n        this.widget = this.graph.hook.createClipboard();\n        this.widget.deserialize(this.instanceOptions);\n    }\n    enable() {\n        if (this.disabled) {\n            this.instanceOptions.enabled = true;\n        }\n    }\n    disable() {\n        if (!this.disabled) {\n            this.instanceOptions.enabled = false;\n        }\n    }\n    copy(cells, options = {}) {\n        if (!this.disabled) {\n            this.widget.copy(cells, this.graph, Object.assign(Object.assign({}, this.commonOptions), options));\n        }\n    }\n    cut(cells, options = {}) {\n        if (!this.disabled) {\n            this.widget.cut(cells, this.graph, Object.assign(Object.assign({}, this.commonOptions), options));\n        }\n    }\n    paste(options = {}, graph = this.graph) {\n        if (!this.disabled) {\n            return this.widget.paste(graph, Object.assign(Object.assign({}, this.commonOptions), options));\n        }\n        return [];\n    }\n    clean(force) {\n        if (!this.disabled || force) {\n            this.widget.clean();\n        }\n    }\n    isEmpty() {\n        return this.widget.isEmpty();\n    }\n    dispose() {\n        this.clean(true);\n    }\n}\n__decorate([\n    Base.dispose()\n], ClipboardManager.prototype, \"dispose\", null);\n//# sourceMappingURL=clipboard.js.map"]},"metadata":{},"sourceType":"module"}