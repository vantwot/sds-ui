{"ast":null,"code":"import { NodeView } from '../../view';\nimport { getName, createShape } from './util';\nconst viewName = getName('text');\nexport class Text extends createShape('text', {\n  view: viewName,\n  attrs: {\n    text: {\n      fontSize: 18,\n      fill: '#000000',\n      stroke: null,\n      refX: 0.5,\n      refY: 0.5\n    }\n  }\n}, {\n  noText: true\n}) {}\n\n(function (Text) {\n  class View extends NodeView {\n    confirmUpdate(flag) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let ret = super.confirmUpdate(flag, options);\n\n      if (this.hasAction(ret, 'scale')) {\n        this.resize();\n        ret = this.removeAction(ret, 'scale');\n      }\n\n      return ret;\n    }\n\n  }\n\n  Text.View = View;\n  View.config({\n    actions: {\n      attrs: ['scale']\n    }\n  });\n  NodeView.registry.register(viewName, View);\n})(Text || (Text = {}));","map":{"version":3,"sources":["../../../src/shape/basic/text.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,QAAyB,YAAzB;AACA,SAAS,OAAT,EAAkB,WAAlB,QAAqC,QAArC;AAEA,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAD,CAAxB;AAEA,OAAM,MAAO,IAAP,SAAoB,WAAW,CACnC,MADmC,EAEnC;AACE,EAAA,IAAI,EAAE,QADR;AAEE,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EAAE;AACJ,MAAA,QAAQ,EAAE,EADN;AAEJ,MAAA,IAAI,EAAE,SAFF;AAGJ,MAAA,MAAM,EAAE,IAHJ;AAIJ,MAAA,IAAI,EAAE,GAJF;AAKJ,MAAA,IAAI,EAAE;AALF;AADD;AAFT,CAFmC,EAcnC;AAAE,EAAA,MAAM,EAAE;AAAV,CAdmC,CAA/B,CAeL;;AAED,CAAA,UAAiB,IAAjB,EAAqB;AACnB,QAAa,IAAb,SAA0B,QAA1B,CAAkC;AAChC,IAAA,aAAa,CAAC,IAAD,EAAgC;AAAA,UAAjB,OAAiB,uEAAF,EAAE;AAC3C,UAAI,GAAG,GAAG,MAAM,aAAN,CAAoB,IAApB,EAA0B,OAA1B,CAAV;;AACA,UAAI,KAAK,SAAL,CAAe,GAAf,EAAoB,OAApB,CAAJ,EAAkC;AAChC,aAAK,MAAL;AACA,QAAA,GAAG,GAAG,KAAK,YAAL,CAAkB,GAAlB,EAAuB,OAAvB,CAAN;AACD;;AACD,aAAO,GAAP;AACD;;AAR+B;;AAArB,EAAA,IAAA,CAAA,IAAA,GAAI,IAAJ;AAWb,EAAA,IAAI,CAAC,MAAL,CAAY;AACV,IAAA,OAAO,EAAE;AACP,MAAA,KAAK,EAAE,CAAC,OAAD;AADA;AADC,GAAZ;AAMA,EAAA,QAAQ,CAAC,QAAT,CAAkB,QAAlB,CAA2B,QAA3B,EAAqC,IAArC;AACD,CAnBD,EAAiB,IAAI,KAAJ,IAAI,GAAA,EAAA,CAArB","sourceRoot":"","sourcesContent":["import { NodeView } from '../../view';\nimport { getName, createShape } from './util';\nconst viewName = getName('text');\nexport class Text extends createShape('text', {\n    view: viewName,\n    attrs: {\n        text: {\n            fontSize: 18,\n            fill: '#000000',\n            stroke: null,\n            refX: 0.5,\n            refY: 0.5,\n        },\n    },\n}, { noText: true }) {\n}\n(function (Text) {\n    class View extends NodeView {\n        confirmUpdate(flag, options = {}) {\n            let ret = super.confirmUpdate(flag, options);\n            if (this.hasAction(ret, 'scale')) {\n                this.resize();\n                ret = this.removeAction(ret, 'scale');\n            }\n            return ret;\n        }\n    }\n    Text.View = View;\n    View.config({\n        actions: {\n            attrs: ['scale'],\n        },\n    });\n    NodeView.registry.register(viewName, View);\n})(Text || (Text = {}));\n//# sourceMappingURL=text.js.map"]},"metadata":{},"sourceType":"module"}