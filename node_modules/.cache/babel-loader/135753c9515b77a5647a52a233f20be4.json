{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { MODELS } from '../../model-service';\nimport { XFlowGraphCommands } from '../constant';\nexport var NsGraphToggleMultiSelect;\n\n(function (NsGraphToggleMultiSelect) {\n  /** Command: 用于注册named factory */\n  NsGraphToggleMultiSelect.command = XFlowGraphCommands.GRAPH_TOGGLE_MULTI_SELECT;\n  /** hookName */\n\n  NsGraphToggleMultiSelect.hookKey = 'toggleMultiSelect';\n})(NsGraphToggleMultiSelect || (NsGraphToggleMultiSelect = {}));\n\nlet GraphToggleMultiSelectCommand =\n/** 画布缩放命令 */\nclass GraphToggleMultiSelectCommand {\n  constructor() {\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const {\n        args,\n        hooks: runtimeHook\n      } = this.ctx.getArgs();\n      const hooks = this.ctx.getHooks();\n      const result = yield hooks.toggleMultiSelect.call(\n      /** 执行hooks pipeline处理args */\n      args,\n      /** 执行 callback */\n      handlerArgs => __awaiter(this, void 0, void 0, function* () {\n        const x6Graph = yield this.ctx.getX6Graph();\n        const config = yield this.ctx.getGraphConfig();\n        const {\n          isEnable,\n          modelService\n        } = handlerArgs;\n        const graphEnableMultiSelectModel = yield MODELS.GRAPH_ENABLE_MULTI_SELECT.getModel(modelService);\n        const needEnableRubberBand = typeof isEnable === 'boolean' ? isEnable : !x6Graph.isRubberbandEnabled();\n\n        if (needEnableRubberBand) {\n          x6Graph.enableRubberband();\n\n          if (x6Graph.scroller && x6Graph.scroller.widget) {\n            x6Graph.scroller.disablePanning();\n          } else {\n            x6Graph.disablePanning();\n          }\n\n          config.graphContainer.style.cursor = 'crosshair';\n        } else {\n          x6Graph.disableRubberband();\n\n          if (x6Graph.scroller && x6Graph.scroller.widget) {\n            x6Graph.scroller.enablePanning();\n          } else {\n            x6Graph.enablePanning();\n          }\n\n          config.graphContainer.style.cursor = 'grab';\n        }\n\n        graphEnableMultiSelectModel.setValue({\n          isEnable: needEnableRubberBand\n        });\n        return {\n          isEnable: needEnableRubberBand\n        };\n      }),\n      /** execute command 时创建的hook */\n      runtimeHook);\n      /** 设置结果 */\n\n      this.ctx.setResult(result);\n      return this;\n    });\n    /** undo cmd */\n\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n    /** redo cmd */\n\n\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n\n      return this;\n    });\n  }\n\n  init() {\n    this.ctx = this.contextProvider();\n  }\n  /** isUndoable */\n\n\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n\n};\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphToggleMultiSelectCommand.prototype, \"contextProvider\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], GraphToggleMultiSelectCommand.prototype, \"init\", null);\n\nGraphToggleMultiSelectCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsGraphToggleMultiSelect.command.id\n  }\n})\n/** 画布缩放命令 */\n], GraphToggleMultiSelectCommand);\nexport { GraphToggleMultiSelectCommand };","map":{"version":3,"sources":["../../../src/command-contributions/graph/graph-toggle-multi-select.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { MODELS } from '../../model-service';\nimport { XFlowGraphCommands } from '../constant';\nexport var NsGraphToggleMultiSelect;\n(function (NsGraphToggleMultiSelect) {\n    /** Command: 用于注册named factory */\n    NsGraphToggleMultiSelect.command = XFlowGraphCommands.GRAPH_TOGGLE_MULTI_SELECT;\n    /** hookName */\n    NsGraphToggleMultiSelect.hookKey = 'toggleMultiSelect';\n})(NsGraphToggleMultiSelect || (NsGraphToggleMultiSelect = {}));\nlet GraphToggleMultiSelectCommand = \n/** 画布缩放命令 */\nclass GraphToggleMultiSelectCommand {\n    constructor() {\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const { args, hooks: runtimeHook } = this.ctx.getArgs();\n            const hooks = this.ctx.getHooks();\n            const result = yield hooks.toggleMultiSelect.call(\n            /** 执行hooks pipeline处理args */\n            args, \n            /** 执行 callback */\n            (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                const x6Graph = yield this.ctx.getX6Graph();\n                const config = yield this.ctx.getGraphConfig();\n                const { isEnable, modelService } = handlerArgs;\n                const graphEnableMultiSelectModel = yield MODELS.GRAPH_ENABLE_MULTI_SELECT.getModel(modelService);\n                const needEnableRubberBand = typeof isEnable === 'boolean' ? isEnable : !x6Graph.isRubberbandEnabled();\n                if (needEnableRubberBand) {\n                    x6Graph.enableRubberband();\n                    if (x6Graph.scroller && x6Graph.scroller.widget) {\n                        x6Graph.scroller.disablePanning();\n                    }\n                    else {\n                        x6Graph.disablePanning();\n                    }\n                    config.graphContainer.style.cursor = 'crosshair';\n                }\n                else {\n                    x6Graph.disableRubberband();\n                    if (x6Graph.scroller && x6Graph.scroller.widget) {\n                        x6Graph.scroller.enablePanning();\n                    }\n                    else {\n                        x6Graph.enablePanning();\n                    }\n                    config.graphContainer.style.cursor = 'grab';\n                }\n                graphEnableMultiSelectModel.setValue({ isEnable: needEnableRubberBand });\n                return { isEnable: needEnableRubberBand };\n            }), \n            /** execute command 时创建的hook */\n            runtimeHook);\n            /** 设置结果 */\n            this.ctx.setResult(result);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            this.ctx.undo();\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.ctx.isUndoable) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    init() {\n        this.ctx = this.contextProvider();\n    }\n    /** isUndoable */\n    isUndoable() {\n        return this.ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], GraphToggleMultiSelectCommand.prototype, \"contextProvider\", void 0);\n__decorate([\n    postConstruct(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], GraphToggleMultiSelectCommand.prototype, \"init\", null);\nGraphToggleMultiSelectCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsGraphToggleMultiSelect.command.id },\n    })\n    /** 画布缩放命令 */\n], GraphToggleMultiSelectCommand);\nexport { GraphToggleMultiSelectCommand };\n//# sourceMappingURL=graph-toggle-multi-select.js.map"]},"metadata":{},"sourceType":"module"}