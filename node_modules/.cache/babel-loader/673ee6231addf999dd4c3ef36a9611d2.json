{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { deepMix, isString, substitute } from '@antv/util';\nimport { modifyCSS } from '@antv/dom-util';\nimport DomStyles from './theme';\nimport { CONTAINER_CLASS, CONTAINER_TPL, ITEM_TPL, LIST_CLASS, TITLE_CLASS } from './constants';\nimport { Component } from '../../core/component';\nimport { clearDom } from '../../utils/dom';\n\nvar CategoryLegend =\n/** @class */\nfunction (_super) {\n  __extends(CategoryLegend, _super);\n\n  function CategoryLegend() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * 获取默认配置\n   */\n\n\n  CategoryLegend.prototype.getDefaultOptions = function () {\n    return deepMix({}, _super.prototype.getDefaultOptions.call(this), {\n      id: 'l7plot-category-legend',\n      name: 'l7plot-category-legend',\n      title: '',\n      items: [],\n      containerTpl: CONTAINER_TPL,\n      itemTpl: ITEM_TPL,\n      domStyles: DomStyles,\n      className: CONTAINER_CLASS\n    });\n  };\n  /**\n   * 初始化 container\n   */\n\n\n  CategoryLegend.prototype.initContainer = function () {\n    var customContent = this.options.customContent;\n\n    if (customContent) {\n      var container = this.getHtmlContentNode(customContent);\n      var parentContainer = this.getParentContainer();\n\n      if (parentContainer) {\n        parentContainer.appendChild(container);\n      }\n\n      return container;\n    } else {\n      return _super.prototype.initContainer.call(this);\n    }\n  };\n  /**\n   * 初始化 DOM\n   */\n\n\n  CategoryLegend.prototype.initDom = function () {\n    this.cacheDoms();\n  };\n  /**\n   * 初始化事件\n   */\n\n\n  CategoryLegend.prototype.initEvent = function () {//\n  };\n  /**\n   * 清理事件\n   */\n\n\n  CategoryLegend.prototype.removeEvent = function () {//\n  };\n  /**\n   * 缓存 DOM\n   */\n\n\n  CategoryLegend.prototype.cacheDoms = function () {\n    var container = this.container;\n    var titleDom = container.getElementsByClassName(TITLE_CLASS)[0];\n    var listDom = container.getElementsByClassName(LIST_CLASS)[0];\n    this.titleDom = titleDom;\n    this.listDom = listDom;\n  };\n  /**\n   * 绘制组件\n   */\n\n\n  CategoryLegend.prototype.render = function () {\n    if (this.options.customContent) {\n      this.renderCustomContent(this.options.customContent);\n    } else {\n      this.resetTitle();\n      this.renderItems();\n    }\n  };\n  /**\n   * 显示\n   */\n\n\n  CategoryLegend.prototype.show = function () {\n    var container = this.container;\n    if (!container || this.destroyed) return;\n    modifyCSS(container, {\n      visibility: 'visible'\n    });\n  };\n  /**\n   * 隐藏\n   */\n\n\n  CategoryLegend.prototype.hide = function () {\n    var container = this.container;\n    if (!container || this.destroyed) return;\n    modifyCSS(container, {\n      visibility: 'hidden'\n    });\n  };\n  /**\n   * 更新\n   */\n\n\n  CategoryLegend.prototype.updateInner = function (options) {\n    if (this.options.customContent) {\n      this.renderCustomContent(this.options.customContent);\n    } else {\n      if (options.title) {\n        this.resetTitle();\n      }\n\n      if (options.items) {\n        this.renderItems();\n      }\n    }\n\n    _super.prototype.updateInner.call(this, options);\n  };\n  /**\n   * 根据 customContent 渲染 DOM\n   */\n\n\n  CategoryLegend.prototype.renderCustomContent = function (customContent) {\n    var parentContainer = this.container.parentNode;\n    var node = this.getHtmlContentNode(customContent);\n    var curContainer = this.container;\n\n    if (parentContainer) {\n      parentContainer.replaceChild(node, curContainer);\n    }\n\n    this.container = node;\n    this.applyStyles();\n  };\n  /**\n   * 生成自定义内容 DOM\n   */\n\n\n  CategoryLegend.prototype.getHtmlContentNode = function (customContent) {\n    var node;\n    var element = customContent(this.options.title || '', this.options.items);\n\n    if (isString(element)) {\n      node = this.createDom(element);\n    } else {\n      node = element;\n    }\n\n    return node;\n  };\n  /**\n   * 重置 title\n   */\n\n\n  CategoryLegend.prototype.resetTitle = function () {\n    var title = this.options.title;\n\n    if (title) {\n      this.showTitle();\n      this.setTitle(title);\n    } else {\n      this.hideTitle();\n    }\n  };\n  /**\n   * 显示 title\n   */\n\n\n  CategoryLegend.prototype.showTitle = function () {\n    var titleDom = this.titleDom;\n\n    if (titleDom) {\n      modifyCSS(titleDom, {\n        display: 'block'\n      });\n    }\n  };\n  /**\n   * 隐藏 title\n   */\n\n\n  CategoryLegend.prototype.hideTitle = function () {\n    var titleDom = this.titleDom;\n\n    if (titleDom) {\n      modifyCSS(titleDom, {\n        display: 'none'\n      });\n    }\n  };\n  /**\n   * 设置 title 内容\n   */\n\n\n  CategoryLegend.prototype.setTitle = function (content) {\n    var titleDom = this.titleDom;\n\n    if (titleDom) {\n      titleDom.innerHTML = content;\n    }\n  };\n  /**\n   * 渲染每项 item\n   */\n\n\n  CategoryLegend.prototype.renderItems = function () {\n    var _this = this;\n\n    this.clearItemDoms();\n    var items = this.options.items;\n    var itemTpl = this.options.itemTpl || ITEM_TPL;\n    var listDom = this.listDom;\n\n    if (listDom) {\n      items.forEach(function (item) {\n        var value = Array.isArray(item.value) ? item.value.join('-') : item.value;\n\n        var substituteObj = __assign(__assign({}, item), {\n          value: value\n        });\n\n        var domStr = substitute(itemTpl, substituteObj);\n\n        var itemDom = _this.createDom(domStr);\n\n        listDom.appendChild(itemDom);\n      });\n      this.applyChildrenStyles(listDom, this.options.domStyles);\n    }\n  };\n  /**\n   * 清空 list DOM 下的 DOM 元素\n   */\n\n\n  CategoryLegend.prototype.clearItemDoms = function () {\n    if (this.listDom) {\n      clearDom(this.listDom);\n    }\n  };\n  /**\n   * 清空所有\n   */\n\n\n  CategoryLegend.prototype.clear = function () {\n    this.setTitle('');\n    this.clearItemDoms();\n  };\n\n  return CategoryLegend;\n}(Component);\n\nexport { CategoryLegend };","map":{"version":3,"sources":["../../../../src/legend/category/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { deepMix, isString, substitute } from '@antv/util';\nimport { modifyCSS } from '@antv/dom-util';\nimport DomStyles from './theme';\nimport { CONTAINER_CLASS, CONTAINER_TPL, ITEM_TPL, LIST_CLASS, TITLE_CLASS } from './constants';\nimport { Component } from '../../core/component';\nimport { clearDom } from '../../utils/dom';\nvar CategoryLegend = /** @class */ (function (_super) {\n    __extends(CategoryLegend, _super);\n    function CategoryLegend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * 获取默认配置\n     */\n    CategoryLegend.prototype.getDefaultOptions = function () {\n        return deepMix({}, _super.prototype.getDefaultOptions.call(this), {\n            id: 'l7plot-category-legend',\n            name: 'l7plot-category-legend',\n            title: '',\n            items: [],\n            containerTpl: CONTAINER_TPL,\n            itemTpl: ITEM_TPL,\n            domStyles: DomStyles,\n            className: CONTAINER_CLASS,\n        });\n    };\n    /**\n     * 初始化 container\n     */\n    CategoryLegend.prototype.initContainer = function () {\n        var customContent = this.options.customContent;\n        if (customContent) {\n            var container = this.getHtmlContentNode(customContent);\n            var parentContainer = this.getParentContainer();\n            if (parentContainer) {\n                parentContainer.appendChild(container);\n            }\n            return container;\n        }\n        else {\n            return _super.prototype.initContainer.call(this);\n        }\n    };\n    /**\n     * 初始化 DOM\n     */\n    CategoryLegend.prototype.initDom = function () {\n        this.cacheDoms();\n    };\n    /**\n     * 初始化事件\n     */\n    CategoryLegend.prototype.initEvent = function () {\n        //\n    };\n    /**\n     * 清理事件\n     */\n    CategoryLegend.prototype.removeEvent = function () {\n        //\n    };\n    /**\n     * 缓存 DOM\n     */\n    CategoryLegend.prototype.cacheDoms = function () {\n        var container = this.container;\n        var titleDom = container.getElementsByClassName(TITLE_CLASS)[0];\n        var listDom = container.getElementsByClassName(LIST_CLASS)[0];\n        this.titleDom = titleDom;\n        this.listDom = listDom;\n    };\n    /**\n     * 绘制组件\n     */\n    CategoryLegend.prototype.render = function () {\n        if (this.options.customContent) {\n            this.renderCustomContent(this.options.customContent);\n        }\n        else {\n            this.resetTitle();\n            this.renderItems();\n        }\n    };\n    /**\n     * 显示\n     */\n    CategoryLegend.prototype.show = function () {\n        var container = this.container;\n        if (!container || this.destroyed)\n            return;\n        modifyCSS(container, {\n            visibility: 'visible',\n        });\n    };\n    /**\n     * 隐藏\n     */\n    CategoryLegend.prototype.hide = function () {\n        var container = this.container;\n        if (!container || this.destroyed)\n            return;\n        modifyCSS(container, {\n            visibility: 'hidden',\n        });\n    };\n    /**\n     * 更新\n     */\n    CategoryLegend.prototype.updateInner = function (options) {\n        if (this.options.customContent) {\n            this.renderCustomContent(this.options.customContent);\n        }\n        else {\n            if (options.title) {\n                this.resetTitle();\n            }\n            if (options.items) {\n                this.renderItems();\n            }\n        }\n        _super.prototype.updateInner.call(this, options);\n    };\n    /**\n     * 根据 customContent 渲染 DOM\n     */\n    CategoryLegend.prototype.renderCustomContent = function (customContent) {\n        var parentContainer = this.container.parentNode;\n        var node = this.getHtmlContentNode(customContent);\n        var curContainer = this.container;\n        if (parentContainer) {\n            parentContainer.replaceChild(node, curContainer);\n        }\n        this.container = node;\n        this.applyStyles();\n    };\n    /**\n     * 生成自定义内容 DOM\n     */\n    CategoryLegend.prototype.getHtmlContentNode = function (customContent) {\n        var node;\n        var element = customContent(this.options.title || '', this.options.items);\n        if (isString(element)) {\n            node = this.createDom(element);\n        }\n        else {\n            node = element;\n        }\n        return node;\n    };\n    /**\n     * 重置 title\n     */\n    CategoryLegend.prototype.resetTitle = function () {\n        var title = this.options.title;\n        if (title) {\n            this.showTitle();\n            this.setTitle(title);\n        }\n        else {\n            this.hideTitle();\n        }\n    };\n    /**\n     * 显示 title\n     */\n    CategoryLegend.prototype.showTitle = function () {\n        var titleDom = this.titleDom;\n        if (titleDom) {\n            modifyCSS(titleDom, {\n                display: 'block',\n            });\n        }\n    };\n    /**\n     * 隐藏 title\n     */\n    CategoryLegend.prototype.hideTitle = function () {\n        var titleDom = this.titleDom;\n        if (titleDom) {\n            modifyCSS(titleDom, {\n                display: 'none',\n            });\n        }\n    };\n    /**\n     * 设置 title 内容\n     */\n    CategoryLegend.prototype.setTitle = function (content) {\n        var titleDom = this.titleDom;\n        if (titleDom) {\n            titleDom.innerHTML = content;\n        }\n    };\n    /**\n     * 渲染每项 item\n     */\n    CategoryLegend.prototype.renderItems = function () {\n        var _this = this;\n        this.clearItemDoms();\n        var items = this.options.items;\n        var itemTpl = this.options.itemTpl || ITEM_TPL;\n        var listDom = this.listDom;\n        if (listDom) {\n            items.forEach(function (item) {\n                var value = Array.isArray(item.value) ? item.value.join('-') : item.value;\n                var substituteObj = __assign(__assign({}, item), { value: value });\n                var domStr = substitute(itemTpl, substituteObj);\n                var itemDom = _this.createDom(domStr);\n                listDom.appendChild(itemDom);\n            });\n            this.applyChildrenStyles(listDom, this.options.domStyles);\n        }\n    };\n    /**\n     * 清空 list DOM 下的 DOM 元素\n     */\n    CategoryLegend.prototype.clearItemDoms = function () {\n        if (this.listDom) {\n            clearDom(this.listDom);\n        }\n    };\n    /**\n     * 清空所有\n     */\n    CategoryLegend.prototype.clear = function () {\n        this.setTitle('');\n        this.clearItemDoms();\n    };\n    return CategoryLegend;\n}(Component));\nexport { CategoryLegend };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}