{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React from 'react';\nimport { Tooltip } from 'antd';\nimport { useXFlowApp, createComponentModel, XFlowAppExtensionMoudle } from '@antv/xflow-core';\nimport { ACTIVE_NODE_PORT } from '../interface';\nimport { createModule } from '../module';\nexport const CONFIG_TYPE = 'CanvasNodePortTooltip';\n\nconst RenderTooltip = props => {\n  const xflow = useXFlowApp();\n  const [state,, renderModel] = createComponentModel(null);\n  React.useEffect(() => {\n    if (!xflow) {\n      return;\n    }\n\n    const subscribe = () => __awaiter(void 0, void 0, void 0, function* () {\n      const {\n        model\n      } = yield ACTIVE_NODE_PORT.useModel(xflow.modelService);\n      return model.watch(value => {\n        renderModel.setValue(value);\n      });\n    });\n\n    const subscription = subscribe();\n    return () => {\n      subscription.then(disposable => {\n        disposable.dispose();\n      });\n    };\n  }, [renderModel, xflow]);\n  const visible = !!(state && state.position && state.position.x);\n\n  if (!visible) {\n    return null;\n  }\n\n  const title = props.getTooltip ? props.getTooltip(state) : state.tooltip;\n  return React.createElement(Tooltip, {\n    visible: visible,\n    title: title,\n    placement: state.placement || 'top'\n  }, React.createElement(\"span\", {\n    className: \"canvas-node-port-tooltip\",\n    style: {\n      position: 'absolute',\n      left: state.position.x,\n      top: state.position.y\n    }\n  }));\n};\n\nexport const CanvasNodePortTooltip = props => {\n  const getConfig = React.useCallback(() => __awaiter(void 0, void 0, void 0, function* () {\n    return null;\n  }), []);\n  return React.createElement(XFlowAppExtensionMoudle, {\n    createModule: createModule,\n    config: {\n      CONFIG_TYPE: CONFIG_TYPE,\n      getConfig\n    }\n  }, React.createElement(RenderTooltip, Object.assign({}, props)));\n};","map":{"version":3,"sources":["../../../src/canvas-node-port-tooltip/components/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,OAAT,QAAwB,MAAxB;AACA,SAAS,WAAT,EAAsB,oBAAtB,EAA4C,uBAA5C,QAA2E,kBAA3E;AAEA,SAAS,gBAAT,QAAiC,cAAjC;AACA,SAAS,YAAT,QAA6B,WAA7B;AAEA,OAAO,MAAM,WAAW,GAAG,uBAApB;;AAEP,MAAM,aAAa,GAA2B,KAAK,IAAG;AACpD,QAAM,KAAK,GAAG,WAAW,EAAzB;AACA,QAAM,CAAC,KAAD,GAAU,WAAV,IAAyB,oBAAoB,CAAiC,IAAjC,CAAnD;AAEA,EAAA,KAAK,CAAC,SAAN,CAAgB,MAAK;AACnB,QAAI,CAAC,KAAL,EAAY;AACV;AACD;;AACD,UAAM,SAAS,GAAG,MAAW,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAC3B,YAAM;AAAE,QAAA;AAAF,UAAY,MAAM,gBAAgB,CAAC,QAAjB,CAA0B,KAAK,CAAC,YAAhC,CAAxB;AACA,aAAO,KAAK,CAAC,KAAN,CAAY,KAAK,IAAG;AACzB,QAAA,WAAW,CAAC,QAAZ,CAAqB,KAArB;AACD,OAFM,CAAP;AAGD,KAL4B,CAA7B;;AAMA,UAAM,YAAY,GAAG,SAAS,EAA9B;AACA,WAAO,MAAK;AACV,MAAA,YAAY,CAAC,IAAb,CAAkB,UAAU,IAAG;AAC7B,QAAA,UAAU,CAAC,OAAX;AACD,OAFD;AAGD,KAJD;AAKD,GAhBD,EAgBG,CAAC,WAAD,EAAc,KAAd,CAhBH;AAkBA,QAAM,OAAO,GAAG,CAAC,EAAE,KAAK,IAAI,KAAK,CAAC,QAAf,IAA2B,KAAK,CAAC,QAAN,CAAe,CAA5C,CAAjB;;AAEA,MAAI,CAAC,OAAL,EAAc;AACZ,WAAO,IAAP;AACD;;AAED,QAAM,KAAK,GAAG,KAAK,CAAC,UAAN,GAAmB,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAnB,GAA6C,KAAK,CAAC,OAAjE;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AAAC,IAAA,OAAO,EAAE,OAAV;AAAmB,IAAA,KAAK,EAAE,KAA1B;AAAiC,IAAA,SAAS,EAAE,KAAK,CAAC,SAAN,IAAmB;AAA/D,GAAR,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,IAAA,SAAS,EAAC,0BADZ;AAEE,IAAA,KAAK,EAAE;AAAE,MAAA,QAAQ,EAAE,UAAZ;AAAwB,MAAA,IAAI,EAAE,KAAK,CAAC,QAAN,CAAe,CAA7C;AAAgD,MAAA,GAAG,EAAE,KAAK,CAAC,QAAN,CAAe;AAApE;AAFT,GAAA,CADF,CADF;AAQD,CAtCD;;AAwCA,OAAO,MAAM,qBAAqB,GAA2B,KAAK,IAAG;AACnE,QAAM,SAAS,GAAG,KAAK,CAAC,WAAN,CAAkB,MAAW,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAAC,WAAA,IAAA;AAAI,GAAL,CAA7B,EAAoC,EAApC,CAAlB;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB;AACtB,IAAA,YAAY,EAAE,YADQ;AAEtB,IAAA,MAAM,EAAE;AAAE,MAAA,WAAW,EAAE,WAAf;AAA4B,MAAA;AAA5B;AAFc,GAAxB,EAIE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,CAAd,CAJF,CADF;AAQD,CAXM","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from 'react';\nimport { Tooltip } from 'antd';\nimport { useXFlowApp, createComponentModel, XFlowAppExtensionMoudle } from '@antv/xflow-core';\nimport { ACTIVE_NODE_PORT } from '../interface';\nimport { createModule } from '../module';\nexport const CONFIG_TYPE = 'CanvasNodePortTooltip';\nconst RenderTooltip = props => {\n    const xflow = useXFlowApp();\n    const [state, , renderModel] = createComponentModel(null);\n    React.useEffect(() => {\n        if (!xflow) {\n            return;\n        }\n        const subscribe = () => __awaiter(void 0, void 0, void 0, function* () {\n            const { model } = yield ACTIVE_NODE_PORT.useModel(xflow.modelService);\n            return model.watch(value => {\n                renderModel.setValue(value);\n            });\n        });\n        const subscription = subscribe();\n        return () => {\n            subscription.then(disposable => {\n                disposable.dispose();\n            });\n        };\n    }, [renderModel, xflow]);\n    const visible = !!(state && state.position && state.position.x);\n    if (!visible) {\n        return null;\n    }\n    const title = props.getTooltip ? props.getTooltip(state) : state.tooltip;\n    return (React.createElement(Tooltip, { visible: visible, title: title, placement: state.placement || 'top' },\n        React.createElement(\"span\", { className: \"canvas-node-port-tooltip\", style: { position: 'absolute', left: state.position.x, top: state.position.y } })));\n};\nexport const CanvasNodePortTooltip = props => {\n    const getConfig = React.useCallback(() => __awaiter(void 0, void 0, void 0, function* () { return null; }), []);\n    return (React.createElement(XFlowAppExtensionMoudle, { createModule: createModule, config: { CONFIG_TYPE: CONFIG_TYPE, getConfig } },\n        React.createElement(RenderTooltip, Object.assign({}, props))));\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}