{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { useRef, useEffect } from 'react';\nimport { isEqual, pick } from '@antv/util';\nimport { deepCloneMapConfig } from '../util';\nexport default function useL7Plot(Ctor, config) {\n  var plotRef = useRef();\n  var plotConfig = useRef();\n  var containerRef = useRef(null);\n  var onReady = config.onReady; // updateOption/changeData/updateMap\n\n  useEffect(function () {\n    if (!plotRef.current || !plotConfig.current || isEqual(plotConfig.current, config)) return;\n    var changeData = false;\n    var updateMap = false;\n    var updateOption = false;\n\n    var _a = plotConfig.current,\n        currentOnReady = _a.onReady,\n        currentMap = _a.map,\n        currentSource = _a.source,\n        currentConfig = __rest(_a, [\"onReady\", \"map\", \"source\"]);\n\n    var onReady = config.onReady,\n        inputMap = config.map,\n        inputSource = config.source,\n        inputConfig = __rest(config, [\"onReady\", \"map\", \"source\"]);\n\n    updateMap = !isEqual(currentMap, inputMap);\n    changeData = !isEqual(currentSource, inputSource);\n    updateOption = !isEqual(currentConfig, inputConfig);\n\n    if (updateMap && inputMap) {\n      var updateMapConfig = pick(inputMap, ['center', 'pitch', 'rotation', 'zoom', 'style']);\n      plotRef.current.updateMap(updateMapConfig);\n    }\n\n    if (changeData && inputSource) {\n      var data_1 = inputSource.data,\n          cfg_1 = __rest(inputSource, [\"data\"]);\n\n      if (plotRef.current.loaded) {\n        plotRef.current.changeData(data_1, cfg_1);\n      } else {\n        plotRef.current.once('loaded', function () {\n          var _a;\n\n          (_a = plotRef.current) === null || _a === void 0 ? void 0 : _a.changeData(data_1, cfg_1);\n        });\n      }\n    }\n\n    if (updateOption && inputConfig) {\n      if (plotRef.current.loaded) {\n        // @ts-ignore\n        plotRef.current.update(inputConfig);\n      } else {\n        plotRef.current.once('loaded', function () {\n          var _a; // @ts-ignore\n\n\n          (_a = plotRef.current) === null || _a === void 0 ? void 0 : _a.update(inputConfig);\n        });\n      }\n    }\n\n    plotConfig.current = deepCloneMapConfig(config);\n  }, [config]);\n  useEffect(function () {\n    if (!containerRef.current) {\n      return function () {\n        return null;\n      };\n    }\n\n    plotRef.current = new Ctor(containerRef.current, __assign({}, config));\n\n    if (!plotConfig.current) {\n      plotConfig.current = deepCloneMapConfig(config);\n    }\n\n    if (onReady) {\n      plotRef.current.once('loaded', function () {\n        onReady(plotRef.current);\n      });\n    } // 组件销毁时销毁图表\n\n\n    return function () {\n      if (plotRef.current) {\n        plotRef.current.destroy();\n        plotRef.current = undefined;\n      }\n    };\n  }, []);\n  return {\n    plotRef: plotRef,\n    containerRef: containerRef\n  };\n}","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@ant-design/maps/es/hooks/useL7Plot.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","useRef","useEffect","isEqual","pick","deepCloneMapConfig","useL7Plot","Ctor","config","plotRef","plotConfig","containerRef","onReady","current","changeData","updateMap","updateOption","_a","currentOnReady","currentMap","map","currentSource","source","currentConfig","inputMap","inputSource","inputConfig","updateMapConfig","data_1","data","cfg_1","loaded","once","update","destroy","undefined"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { useRef, useEffect } from 'react';\nimport { isEqual, pick } from '@antv/util';\nimport { deepCloneMapConfig } from '../util';\nexport default function useL7Plot(Ctor, config) {\n    var plotRef = useRef();\n    var plotConfig = useRef();\n    var containerRef = useRef(null);\n    var onReady = config.onReady;\n    // updateOption/changeData/updateMap\n    useEffect(function () {\n        if (!plotRef.current || !plotConfig.current || isEqual(plotConfig.current, config))\n            return;\n        var changeData = false;\n        var updateMap = false;\n        var updateOption = false;\n        var _a = plotConfig.current, currentOnReady = _a.onReady, currentMap = _a.map, currentSource = _a.source, currentConfig = __rest(_a, [\"onReady\", \"map\", \"source\"]);\n        var onReady = config.onReady, inputMap = config.map, inputSource = config.source, inputConfig = __rest(config, [\"onReady\", \"map\", \"source\"]);\n        updateMap = !isEqual(currentMap, inputMap);\n        changeData = !isEqual(currentSource, inputSource);\n        updateOption = !isEqual(currentConfig, inputConfig);\n        if (updateMap && inputMap) {\n            var updateMapConfig = pick(inputMap, ['center', 'pitch', 'rotation', 'zoom', 'style']);\n            plotRef.current.updateMap(updateMapConfig);\n        }\n        if (changeData && inputSource) {\n            var data_1 = inputSource.data, cfg_1 = __rest(inputSource, [\"data\"]);\n            if (plotRef.current.loaded) {\n                plotRef.current.changeData(data_1, cfg_1);\n            }\n            else {\n                plotRef.current.once('loaded', function () {\n                    var _a;\n                    (_a = plotRef.current) === null || _a === void 0 ? void 0 : _a.changeData(data_1, cfg_1);\n                });\n            }\n        }\n        if (updateOption && inputConfig) {\n            if (plotRef.current.loaded) {\n                // @ts-ignore\n                plotRef.current.update(inputConfig);\n            }\n            else {\n                plotRef.current.once('loaded', function () {\n                    var _a;\n                    // @ts-ignore\n                    (_a = plotRef.current) === null || _a === void 0 ? void 0 : _a.update(inputConfig);\n                });\n            }\n        }\n        plotConfig.current = deepCloneMapConfig(config);\n    }, [config]);\n    useEffect(function () {\n        if (!containerRef.current) {\n            return function () { return null; };\n        }\n        plotRef.current = new Ctor(containerRef.current, __assign({}, config));\n        if (!plotConfig.current) {\n            plotConfig.current = deepCloneMapConfig(config);\n        }\n        if (onReady) {\n            plotRef.current.once('loaded', function () {\n                onReady(plotRef.current);\n            });\n        }\n        // 组件销毁时销毁图表\n        return function () {\n            if (plotRef.current) {\n                plotRef.current.destroy();\n                plotRef.current = undefined;\n            }\n        };\n    }, []);\n    return {\n        plotRef: plotRef,\n        containerRef: containerRef,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}