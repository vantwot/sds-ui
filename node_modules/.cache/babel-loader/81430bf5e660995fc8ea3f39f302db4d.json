{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Disposable } from './disposable';\nexport class Dictionary extends Disposable {\n  constructor() {\n    super();\n    this.clear();\n  }\n\n  clear() {\n    this.map = new WeakMap();\n    this.arr = [];\n  }\n\n  has(key) {\n    return this.map.has(key);\n  }\n\n  get(key) {\n    return this.map.get(key);\n  }\n\n  set(key, value) {\n    this.map.set(key, value);\n    this.arr.push(key);\n  }\n\n  delete(key) {\n    const index = this.arr.indexOf(key);\n\n    if (index >= 0) {\n      this.arr.splice(index, 1);\n    }\n\n    const ret = this.map.get(key);\n    this.map.delete(key);\n    return ret;\n  }\n\n  each(iterator) {\n    this.arr.forEach(key => {\n      const value = this.map.get(key);\n      iterator(value, key);\n    });\n  }\n\n  dispose() {\n    this.clear();\n  }\n\n}\n\n__decorate([Disposable.dispose()], Dictionary.prototype, \"dispose\", null);","map":{"version":3,"sources":["../../src/common/dictionary.ts"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,UAAT,QAA2B,cAA3B;AAEA,OAAM,MAAO,UAAP,SAA4D,UAA5D,CAAsE;AAI1E,EAAA,WAAA,GAAA;AACE;AACA,SAAK,KAAL;AACD;;AAED,EAAA,KAAK,GAAA;AACH,SAAK,GAAL,GAAW,IAAI,OAAJ,EAAX;AACA,SAAK,GAAL,GAAW,EAAX;AACD;;AAED,EAAA,GAAG,CAAC,GAAD,EAAO;AACR,WAAO,KAAK,GAAL,CAAS,GAAT,CAAa,GAAb,CAAP;AACD;;AAED,EAAA,GAAG,CAAC,GAAD,EAAO;AACR,WAAO,KAAK,GAAL,CAAS,GAAT,CAAa,GAAb,CAAP;AACD;;AAED,EAAA,GAAG,CAAC,GAAD,EAAS,KAAT,EAAiB;AAClB,SAAK,GAAL,CAAS,GAAT,CAAa,GAAb,EAAkB,KAAlB;AACA,SAAK,GAAL,CAAS,IAAT,CAAc,GAAd;AACD;;AAED,EAAA,MAAM,CAAC,GAAD,EAAO;AACX,UAAM,KAAK,GAAG,KAAK,GAAL,CAAS,OAAT,CAAiB,GAAjB,CAAd;;AACA,QAAI,KAAK,IAAI,CAAb,EAAgB;AACd,WAAK,GAAL,CAAS,MAAT,CAAgB,KAAhB,EAAuB,CAAvB;AACD;;AACD,UAAM,GAAG,GAAG,KAAK,GAAL,CAAS,GAAT,CAAa,GAAb,CAAZ;AACA,SAAK,GAAL,CAAS,MAAT,CAAgB,GAAhB;AACA,WAAO,GAAP;AACD;;AAED,EAAA,IAAI,CAAC,QAAD,EAAqC;AACvC,SAAK,GAAL,CAAS,OAAT,CAAkB,GAAD,IAAQ;AACvB,YAAM,KAAK,GAAG,KAAK,GAAL,CAAS,GAAT,CAAa,GAAb,CAAd;AACA,MAAA,QAAQ,CAAC,KAAD,EAAQ,GAAR,CAAR;AACD,KAHD;AAID;;AAGD,EAAA,OAAO,GAAA;AACL,SAAK,KAAL;AACD;;AA/CyE;;AA6C1E,UAAA,CAAA,CADC,UAAU,CAAC,OAAX,EACD,CAAA,E,oBAAA,E,SAAA,EAEC,IAFD,CAAA","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Disposable } from './disposable';\nexport class Dictionary extends Disposable {\n    constructor() {\n        super();\n        this.clear();\n    }\n    clear() {\n        this.map = new WeakMap();\n        this.arr = [];\n    }\n    has(key) {\n        return this.map.has(key);\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.arr.push(key);\n    }\n    delete(key) {\n        const index = this.arr.indexOf(key);\n        if (index >= 0) {\n            this.arr.splice(index, 1);\n        }\n        const ret = this.map.get(key);\n        this.map.delete(key);\n        return ret;\n    }\n    each(iterator) {\n        this.arr.forEach((key) => {\n            const value = this.map.get(key);\n            iterator(value, key);\n        });\n    }\n    dispose() {\n        this.clear();\n    }\n}\n__decorate([\n    Disposable.dispose()\n], Dictionary.prototype, \"dispose\", null);\n//# sourceMappingURL=dictionary.js.map"]},"metadata":{},"sourceType":"module"}