{"ast":null,"code":"import { snapToGrid as snap } from '../geometry/util';\nimport { normalize } from '../registry/marker/util';\nimport { Config } from './config';\nexport var Util;\n\n(function (Util) {\n  Util.snapToGrid = snap;\n  Util.normalizeMarker = normalize;\n\n  function prefix(suffix) {\n    return `${Config.prefixCls}-${suffix}`;\n  }\n\n  Util.prefix = prefix;\n})(Util || (Util = {}));\n\n(function (Util) {\n  function makeTree(parent, options, parentNode) {\n    let collector = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    const children = typeof options.children === 'function' ? options.children(parent) : parent[options.children || 'children'];\n\n    if (!parentNode) {\n      parentNode = options.createNode(parent); // eslint-disable-line\n\n      collector.push(parentNode);\n    }\n\n    if (Array.isArray(children)) {\n      children.forEach(child => {\n        const node = options.createNode(child);\n        const edge = options.createEdge(parentNode, node);\n        collector.push(node, edge);\n        this.makeTree(child, options, node, collector);\n      });\n    }\n\n    return collector;\n  }\n\n  Util.makeTree = makeTree;\n})(Util || (Util = {}));","map":{"version":3,"sources":["../../src/global/util.ts"],"names":[],"mappings":"AACA,SAAS,UAAU,IAAI,IAAvB,QAAmC,kBAAnC;AACA,SAAS,SAAT,QAA0B,yBAA1B;AAIA,SAAS,MAAT,QAAuB,UAAvB;AAEA,OAAM,IAAW,IAAX;;AAAN,CAAA,UAAiB,IAAjB,EAAqB;AACN,EAAA,IAAA,CAAA,UAAA,GAAa,IAAb;AACA,EAAA,IAAA,CAAA,eAAA,GAAkB,SAAlB;;AAEb,WAAgB,MAAhB,CAAuB,MAAvB,EAAqC;AACnC,WAAO,GAAG,MAAM,CAAC,SAAS,IAAI,MAAM,EAApC;AACD;;AAFe,EAAA,IAAA,CAAA,MAAA,GAAM,MAAN;AAGjB,CAPD,EAAiB,IAAI,KAAJ,IAAI,GAAA,EAAA,CAArB;;AASA,CAAA,UAAiB,IAAjB,EAAqB;AAWnB,WAAgB,QAAhB,CACE,MADF,EAEE,OAFF,EAGE,UAHF,EAIwB;AAAA,QAAtB,SAAsB,uEAAF,EAAE;AAEtB,UAAM,QAAQ,GACZ,OAAO,OAAO,CAAC,QAAf,KAA4B,UAA5B,GACI,OAAO,CAAC,QAAR,CAAiB,MAAjB,CADJ,GAEI,MAAM,CAAC,OAAO,CAAC,QAAR,IAAoB,UAArB,CAHZ;;AAKA,QAAI,CAAC,UAAL,EAAiB;AACf,MAAA,UAAU,GAAG,OAAO,CAAC,UAAR,CAAmB,MAAnB,CAAb,CADe,CACyB;;AACxC,MAAA,SAAS,CAAC,IAAV,CAAe,UAAf;AACD;;AAED,QAAI,KAAK,CAAC,OAAN,CAAc,QAAd,CAAJ,EAA6B;AAC3B,MAAA,QAAQ,CAAC,OAAT,CAAkB,KAAD,IAAoB;AACnC,cAAM,IAAI,GAAG,OAAO,CAAC,UAAR,CAAmB,KAAnB,CAAb;AACA,cAAM,IAAI,GAAG,OAAO,CAAC,UAAR,CAAmB,UAAnB,EAA+B,IAA/B,CAAb;AACA,QAAA,SAAS,CAAC,IAAV,CAAe,IAAf,EAAqB,IAArB;AACA,aAAK,QAAL,CAAc,KAAd,EAAqB,OAArB,EAA8B,IAA9B,EAAoC,SAApC;AACD,OALD;AAMD;;AAED,WAAO,SAAP;AACD;;AA1Be,EAAA,IAAA,CAAA,QAAA,GAAQ,QAAR;AA2BjB,CAtCD,EAAiB,IAAI,KAAJ,IAAI,GAAA,EAAA,CAArB","sourceRoot":"","sourcesContent":["import { snapToGrid as snap } from '../geometry/util';\nimport { normalize } from '../registry/marker/util';\nimport { Config } from './config';\nexport var Util;\n(function (Util) {\n    Util.snapToGrid = snap;\n    Util.normalizeMarker = normalize;\n    function prefix(suffix) {\n        return `${Config.prefixCls}-${suffix}`;\n    }\n    Util.prefix = prefix;\n})(Util || (Util = {}));\n(function (Util) {\n    function makeTree(parent, options, parentNode, collector = []) {\n        const children = typeof options.children === 'function'\n            ? options.children(parent)\n            : parent[options.children || 'children'];\n        if (!parentNode) {\n            parentNode = options.createNode(parent); // eslint-disable-line\n            collector.push(parentNode);\n        }\n        if (Array.isArray(children)) {\n            children.forEach((child) => {\n                const node = options.createNode(child);\n                const edge = options.createEdge(parentNode, node);\n                collector.push(node, edge);\n                this.makeTree(child, options, node, collector);\n            });\n        }\n        return collector;\n    }\n    Util.makeTree = makeTree;\n})(Util || (Util = {}));\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}