{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nvar Viewport = function () {\n  function Viewport() {\n    _classCallCheck(this, Viewport);\n\n    _defineProperty(this, \"viewport\", void 0);\n  }\n\n  _createClass(Viewport, [{\n    key: \"syncWithMapCamera\",\n    value: function syncWithMapCamera(mapCamera) {\n      var center = mapCamera.center,\n          zoom = mapCamera.zoom,\n          pitch = mapCamera.pitch,\n          bearing = mapCamera.bearing,\n          viewportHeight = mapCamera.viewportHeight,\n          viewportWidth = mapCamera.viewportWidth;\n      this.viewport = new WebMercatorViewport({\n        width: viewportWidth,\n        height: viewportHeight,\n        longitude: center && center[0],\n        latitude: center && center[1],\n        zoom: zoom,\n        pitch: pitch,\n        bearing: bearing\n      });\n    }\n  }, {\n    key: \"getZoom\",\n    value: function getZoom() {\n      return this.viewport.zoom;\n    }\n  }, {\n    key: \"getZoomScale\",\n    value: function getZoomScale() {\n      return Math.pow(2, this.getZoom());\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter() {\n      return [this.viewport.longitude, this.viewport.latitude];\n    }\n  }, {\n    key: \"getProjectionMatrix\",\n    value: function getProjectionMatrix() {\n      return this.viewport.projectionMatrix;\n    }\n  }, {\n    key: \"getModelMatrix\",\n    value: function getModelMatrix() {\n      return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n    }\n  }, {\n    key: \"getViewMatrix\",\n    value: function getViewMatrix() {\n      return this.viewport.viewMatrix;\n    }\n  }, {\n    key: \"getViewMatrixUncentered\",\n    value: function getViewMatrixUncentered() {\n      return this.viewport.viewMatrixUncentered;\n    }\n  }, {\n    key: \"getViewProjectionMatrix\",\n    value: function getViewProjectionMatrix() {\n      return this.viewport.viewProjectionMatrix;\n    }\n  }, {\n    key: \"getViewProjectionMatrixUncentered\",\n    value: function getViewProjectionMatrixUncentered() {\n      return this.viewport.viewProjectionMatrix;\n    }\n  }, {\n    key: \"getFocalDistance\",\n    value: function getFocalDistance() {\n      return 1;\n    }\n  }, {\n    key: \"projectFlat\",\n    value: function projectFlat(lngLat, scale) {\n      return this.viewport.projectFlat(lngLat, scale);\n    }\n  }]);\n\n  return Viewport;\n}();\n\nexport { Viewport as default };","map":{"version":3,"sources":["../../src/map/Viewport.ts"],"names":["Viewport","center","zoom","pitch","bearing","viewportHeight","viewportWidth","mapCamera","width","height","longitude","latitude","Math"],"mappings":";;;AACA,OAAA,mBAAA,MAAA,2BAAA;;IAEqBA,Q;;;;;;;;;WAGnB,SAAA,iBAAA,CAAA,SAAA,EAAyD;AACvD,UACEC,MADF,GAOIM,SAPJ,CAAA,MAAA;AAAA,UAEEL,IAFF,GAOIK,SAPJ,CAAA,IAAA;AAAA,UAGEJ,KAHF,GAOII,SAPJ,CAAA,KAAA;AAAA,UAIEH,OAJF,GAOIG,SAPJ,CAAA,OAAA;AAAA,UAKEF,cALF,GAOIE,SAPJ,CAAA,cAAA;AAAA,UAMED,aANF,GAOIC,SAPJ,CAAA,aAAA;AAaA,WAAA,QAAA,GAAgB,IAAA,mBAAA,CAAwB;AACtCC,QAAAA,KAAK,EADiC,aAAA;AAEtCC,QAAAA,MAAM,EAFgC,cAAA;AAGtCC,QAAAA,SAAS,EAAET,MAAM,IAAIA,MAAM,CAHW,CAGX,CAHW;AAItCU,QAAAA,QAAQ,EAAEV,MAAM,IAAIA,MAAM,CAJY,CAIZ,CAJY;AAKtCC,QAAAA,IAAI,EALkC,IAAA;AAMtCC,QAAAA,KAAK,EANiC,KAAA;AAOtCC,QAAAA,OAAO,EAAPA;AAPsC,OAAxB,CAAhB;AASD;;;WAED,SAAA,OAAA,GAAyB;AACvB,aAAO,KAAA,QAAA,CAAP,IAAA;AACD;;;WAED,SAAA,YAAA,GAA8B;AAC5B,aAAOQ,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAY,KAAnB,OAAmB,EAAZA,CAAP;AACD;;;WAED,SAAA,SAAA,GAAqC;AACnC,aAAO,CAAC,KAAA,QAAA,CAAD,SAAA,EAA0B,KAAA,QAAA,CAAjC,QAAO,CAAP;AACD;;;WAED,SAAA,mBAAA,GAAuC;AACrC,aAAO,KAAA,QAAA,CAAP,gBAAA;AACD;;;WAED,SAAA,cAAA,GAAkC;AAChC,aAAO,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAP,CAAO,CAAP;AACD;;;WAED,SAAA,aAAA,GAAiC;AAC/B,aAAO,KAAA,QAAA,CAAP,UAAA;AACD;;;WAED,SAAA,uBAAA,GAA2C;AAEzC,aAAO,KAAA,QAAA,CAAP,oBAAA;AACD;;;WACD,SAAA,uBAAA,GAA2C;AAEzC,aAAO,KAAA,QAAA,CAAP,oBAAA;AACD;;;WAED,SAAA,iCAAA,GAAqD;AAEnD,aAAO,KAAA,QAAA,CAAP,oBAAA;AACD;;;WACD,SAAA,gBAAA,GAA0B;AACxB,aAAA,CAAA;AACD;;;WAMD,SAAA,WAAA,CAAA,MAAA,EAAA,KAAA,EAGoB;AAClB,aAAO,KAAA,QAAA,CAAA,WAAA,CAAA,MAAA,EAAP,KAAO,CAAP;AACD;;;;;;SA9EkBZ,Q","sourcesContent":["import { IMapCamera, IViewport } from '@antv/l7-core';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nexport default class Viewport implements IViewport {\n  private viewport: WebMercatorViewport;\n\n  public syncWithMapCamera(mapCamera: Partial<IMapCamera>) {\n    const {\n      center,\n      zoom,\n      pitch,\n      bearing,\n      viewportHeight,\n      viewportWidth,\n    } = mapCamera;\n\n    /**\n     * Deck.gl 使用的也是 Mapbox 同步相机，相机参数保持一致\n     * 例如相机高度固定为 height * 1.5，因此不需要传\n     */\n    this.viewport = new WebMercatorViewport({\n      width: viewportWidth,\n      height: viewportHeight,\n      longitude: center && center[0],\n      latitude: center && center[1],\n      zoom,\n      pitch,\n      bearing,\n    });\n  }\n\n  public getZoom(): number {\n    return this.viewport.zoom;\n  }\n\n  public getZoomScale(): number {\n    return Math.pow(2, this.getZoom());\n  }\n\n  public getCenter(): [number, number] {\n    return [this.viewport.longitude, this.viewport.latitude];\n  }\n\n  public getProjectionMatrix(): number[] {\n    return this.viewport.projectionMatrix;\n  }\n\n  public getModelMatrix(): number[] {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n  }\n\n  public getViewMatrix(): number[] {\n    return this.viewport.viewMatrix;\n  }\n\n  public getViewMatrixUncentered(): number[] {\n    // @ts-ignore\n    return this.viewport.viewMatrixUncentered;\n  }\n  public getViewProjectionMatrix(): number[] {\n    // @ts-ignore\n    return this.viewport.viewProjectionMatrix;\n  }\n\n  public getViewProjectionMatrixUncentered(): number[] {\n    // @ts-ignore\n    return this.viewport.viewProjectionMatrix;\n  }\n  public getFocalDistance() {\n    return 1;\n  }\n\n  /**\n   * P20 坐标系，固定 scale\n   */\n\n  public projectFlat(\n    lngLat: [number, number],\n    scale?: number | undefined,\n  ): [number, number] {\n    return this.viewport.projectFlat(lngLat, scale);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}