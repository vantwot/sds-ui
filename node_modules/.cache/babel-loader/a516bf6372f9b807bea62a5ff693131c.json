{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar crs_1 = require(\"./crs\");\n\nvar lnglat_projection_1 = require(\"../projection/lnglat-projection\");\n\nvar transformation_1 = require(\"../transformation\");\n\nvar util_1 = require(\"@antv/util\");\n\nvar transform = new transformation_1.Transformation(1, 0, -1, 0); // @ts-ignore\n\nexports.simple = util_1.mix({}, crs_1.CRS, {\n  projection: lnglat_projection_1.lngLatProjection,\n  transformation: transform,\n  scale: function scale(zoom) {\n    return Math.pow(2, zoom);\n  },\n  zoom: function zoom(scale) {\n    return Math.log(scale) / Math.LN2;\n  },\n  distance: function distance(latlng1, latlng2) {\n    var dx = latlng2.lng - latlng1.lng;\n    var dy = latlng2.lat - latlng1.lat;\n    return Math.sqrt(dx * dx + dy * dy);\n  },\n  infinite: true\n});","map":{"version":3,"sources":["../../../src/geo/crs/crs-simple.ts"],"names":[],"mappings":";;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,iCAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;AACA,IAAM,SAAS,GAAG,IAAI,gBAAA,CAAA,cAAJ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAC,CAA1B,EAA6B,CAA7B,CAAlB,C,CACA;;AACa,OAAA,CAAA,MAAA,GAAS,MAAA,CAAA,GAAA,CAAI,EAAJ,EAAQ,KAAA,CAAA,GAAR,EAAa;AACjC,EAAA,UAAU,EAAE,mBAAA,CAAA,gBADqB;AAEjC,EAAA,cAAc,EAAE,SAFiB;AAIjC,EAAA,KAAK,EAAL,eAAM,IAAN,EAAiB;AACf,WAAO,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,IAAZ,CAAP;AACD,GANgC;AAQjC,EAAA,IAAI,EAAJ,cAAK,KAAL,EAAiB;AACf,WAAO,IAAI,CAAC,GAAL,CAAS,KAAT,IAAkB,IAAI,CAAC,GAA9B;AACD,GAVgC;AAYjC,EAAA,QAAQ,EAAR,kBAAS,OAAT,EAAyB,OAAzB,EAAuC;AACrC,QAAM,EAAE,GAAG,OAAO,CAAC,GAAR,GAAc,OAAO,CAAC,GAAjC;AACA,QAAM,EAAE,GAAG,OAAO,CAAC,GAAR,GAAc,OAAO,CAAC,GAAjC;AACA,WAAO,IAAI,CAAC,IAAL,CAAU,EAAE,GAAG,EAAL,GAAU,EAAE,GAAG,EAAzB,CAAP;AACD,GAhBgC;AAkBjC,EAAA,QAAQ,EAAE;AAlBuB,CAAb,CAAT","sourceRoot":"","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar crs_1 = require(\"./crs\");\nvar lnglat_projection_1 = require(\"../projection/lnglat-projection\");\nvar transformation_1 = require(\"../transformation\");\nvar util_1 = require(\"@antv/util\");\nvar transform = new transformation_1.Transformation(1, 0, -1, 0);\n// @ts-ignore\nexports.simple = util_1.mix({}, crs_1.CRS, {\n    projection: lnglat_projection_1.lngLatProjection,\n    transformation: transform,\n    scale: function (zoom) {\n        return Math.pow(2, zoom);\n    },\n    zoom: function (scale) {\n        return Math.log(scale) / Math.LN2;\n    },\n    distance: function (latlng1, latlng2) {\n        var dx = latlng2.lng - latlng1.lng;\n        var dy = latlng2.lat - latlng1.lat;\n        return Math.sqrt(dx * dx + dy * dy);\n    },\n    infinite: true\n});\n//# sourceMappingURL=crs-simple.js.map"]},"metadata":{},"sourceType":"script"}