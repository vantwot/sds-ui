{"ast":null,"code":"/* eslint-disable jsx-a11y/click-events-have-key-events  */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport classnames from 'classnames';\nimport addEventListener from 'rc-util/lib/Dom/addEventListener';\nimport { MenubarContext } from './context';\nconst cacheDeactiveMap = new WeakMap();\n\nclass MenubarItemInner extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onDocumentClick = () => {\n      this.deactive();\n    };\n\n    this.onClick = e => {\n      this.props.context.activeMenubar();\n      this.removeDeactive(e.currentTarget.parentElement);\n      this.active();\n    };\n\n    this.onMouseEnter = e => {\n      if (this.props.context.menubarActived && !this.state.active && !this.isPrevMenuHiddening(e)) {\n        const currentTarget = e.currentTarget;\n        const childNodes = currentTarget.parentElement.childNodes;\n        childNodes.forEach(child => {\n          if (child === currentTarget) {\n            this.removeDeactive(child);\n          } else {\n            this.callDeactive(child);\n          }\n        });\n        this.active();\n      }\n    };\n\n    this.onMouseLeave = e => {\n      const relatedTarget = e.relatedTarget;\n      const currentTarget = e.currentTarget;\n\n      if (this.props.context.menubarActived && this.state.active) {\n        const childNodes = currentTarget.parentElement.childNodes;\n        let shoudDeactive = false;\n\n        if (relatedTarget !== window) {\n          for (let i = 0, l = childNodes.length; i < l; i += 1) {\n            const child = childNodes[i];\n\n            if (child === relatedTarget || child.contains(relatedTarget)) {\n              shoudDeactive = true;\n              break;\n            }\n          }\n        }\n\n        if (shoudDeactive) {\n          this.deactive();\n        } else {\n          // 缓存一下，当再次 hover 到其他菜单时被调用\n          this.cacheDeactive(currentTarget);\n        }\n      }\n    };\n\n    this.active = () => {\n      this.setState({\n        active: true\n      });\n\n      if (!this.removeDocClickEvent) {\n        this.removeDocClickEvent = addEventListener(document.documentElement, 'click', this.onDocumentClick).remove;\n      }\n    };\n\n    this.deactive = () => {\n      this.setState({\n        active: false\n      });\n\n      if (this.removeDocClickEvent) {\n        this.removeDocClickEvent();\n        this.removeDocClickEvent = null;\n      }\n    };\n\n    this.popupClassName = `${props.context.prefixCls}-item-dropdown`;\n    this.state = {\n      active: false\n    };\n  }\n\n  isPrevMenuHiddening(e) {\n    const toElement = e.nativeEvent.toElement;\n\n    if (toElement && toElement.className === this.popupClassName) {\n      return true;\n    }\n\n    const currentTarget = e.currentTarget;\n    const childNodes = currentTarget.parentElement.childNodes;\n\n    for (let i = 0, l = childNodes.length; i < l; i += 1) {\n      const child = childNodes[i];\n      const popupElem = child.querySelector(`.${this.popupClassName}`);\n\n      if (popupElem.contains(toElement)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  cacheDeactive(elem) {\n    cacheDeactiveMap.set(elem, this.deactive);\n  }\n\n  callDeactive(elem) {\n    if (cacheDeactiveMap.has(elem)) {\n      cacheDeactiveMap.get(elem)();\n      cacheDeactiveMap.delete(elem);\n    }\n  }\n\n  removeDeactive(elem) {\n    cacheDeactiveMap.delete(elem);\n  }\n\n  render() {\n    const {\n      text,\n      children,\n      hidden\n    } = this.props;\n    const {\n      prefixCls,\n      menubarActived\n    } = this.props.context;\n    const currentMenuActived = menubarActived && this.state.active;\n    const baseCls = `${prefixCls}-item`;\n    return React.createElement(\"div\", {\n      className: classnames(baseCls, {\n        [`${baseCls}-hidden`]: hidden,\n        [`${baseCls}-hover`]: menubarActived,\n        [`${baseCls}-active`]: currentMenuActived\n      }),\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave\n    }, React.createElement(\"div\", {\n      className: classnames(`${baseCls}-text`, {\n        [`${baseCls}-text-active`]: currentMenuActived\n      }),\n      onClick: this.onClick\n    }, text), React.createElement(\"div\", {\n      className: this.popupClassName\n    }, children));\n  }\n\n}\n\nexport const MenubarItem = props => React.createElement(MenubarContext.Consumer, null, context => React.createElement(MenubarItemInner, Object.assign({\n  context: context\n}, props)));","map":{"version":3,"sources":["../../src/menubar/item.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events  */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport classnames from 'classnames';\nimport addEventListener from 'rc-util/lib/Dom/addEventListener';\nimport { MenubarContext } from './context';\nconst cacheDeactiveMap = new WeakMap();\nclass MenubarItemInner extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.onDocumentClick = () => {\n            this.deactive();\n        };\n        this.onClick = (e) => {\n            this.props.context.activeMenubar();\n            this.removeDeactive(e.currentTarget.parentElement);\n            this.active();\n        };\n        this.onMouseEnter = (e) => {\n            if (this.props.context.menubarActived &&\n                !this.state.active &&\n                !this.isPrevMenuHiddening(e)) {\n                const currentTarget = e.currentTarget;\n                const childNodes = currentTarget.parentElement.childNodes;\n                childNodes.forEach((child) => {\n                    if (child === currentTarget) {\n                        this.removeDeactive(child);\n                    }\n                    else {\n                        this.callDeactive(child);\n                    }\n                });\n                this.active();\n            }\n        };\n        this.onMouseLeave = (e) => {\n            const relatedTarget = e.relatedTarget;\n            const currentTarget = e.currentTarget;\n            if (this.props.context.menubarActived && this.state.active) {\n                const childNodes = currentTarget.parentElement.childNodes;\n                let shoudDeactive = false;\n                if (relatedTarget !== window) {\n                    for (let i = 0, l = childNodes.length; i < l; i += 1) {\n                        const child = childNodes[i];\n                        if (child === relatedTarget ||\n                            child.contains(relatedTarget)) {\n                            shoudDeactive = true;\n                            break;\n                        }\n                    }\n                }\n                if (shoudDeactive) {\n                    this.deactive();\n                }\n                else {\n                    // 缓存一下，当再次 hover 到其他菜单时被调用\n                    this.cacheDeactive(currentTarget);\n                }\n            }\n        };\n        this.active = () => {\n            this.setState({ active: true });\n            if (!this.removeDocClickEvent) {\n                this.removeDocClickEvent = addEventListener(document.documentElement, 'click', this.onDocumentClick).remove;\n            }\n        };\n        this.deactive = () => {\n            this.setState({ active: false });\n            if (this.removeDocClickEvent) {\n                this.removeDocClickEvent();\n                this.removeDocClickEvent = null;\n            }\n        };\n        this.popupClassName = `${props.context.prefixCls}-item-dropdown`;\n        this.state = { active: false };\n    }\n    isPrevMenuHiddening(e) {\n        const toElement = e.nativeEvent.toElement;\n        if (toElement && toElement.className === this.popupClassName) {\n            return true;\n        }\n        const currentTarget = e.currentTarget;\n        const childNodes = currentTarget.parentElement.childNodes;\n        for (let i = 0, l = childNodes.length; i < l; i += 1) {\n            const child = childNodes[i];\n            const popupElem = child.querySelector(`.${this.popupClassName}`);\n            if (popupElem.contains(toElement)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    cacheDeactive(elem) {\n        cacheDeactiveMap.set(elem, this.deactive);\n    }\n    callDeactive(elem) {\n        if (cacheDeactiveMap.has(elem)) {\n            cacheDeactiveMap.get(elem)();\n            cacheDeactiveMap.delete(elem);\n        }\n    }\n    removeDeactive(elem) {\n        cacheDeactiveMap.delete(elem);\n    }\n    render() {\n        const { text, children, hidden } = this.props;\n        const { prefixCls, menubarActived } = this.props.context;\n        const currentMenuActived = menubarActived && this.state.active;\n        const baseCls = `${prefixCls}-item`;\n        return (React.createElement(\"div\", { className: classnames(baseCls, {\n                [`${baseCls}-hidden`]: hidden,\n                [`${baseCls}-hover`]: menubarActived,\n                [`${baseCls}-active`]: currentMenuActived,\n            }), onMouseEnter: this.onMouseEnter, onMouseLeave: this.onMouseLeave },\n            React.createElement(\"div\", { className: classnames(`${baseCls}-text`, {\n                    [`${baseCls}-text-active`]: currentMenuActived,\n                }), onClick: this.onClick }, text),\n            React.createElement(\"div\", { className: this.popupClassName }, children)));\n    }\n}\nexport const MenubarItem = (props) => (React.createElement(MenubarContext.Consumer, null, (context) => React.createElement(MenubarItemInner, Object.assign({ context: context }, props))));\n//# sourceMappingURL=item.js.map"]},"metadata":{},"sourceType":"module"}