{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React from 'react';\nimport { Tree, Empty, Popover } from 'antd';\nimport { FolderFilled, FolderOpenFilled } from '@ant-design/icons';\nimport { Addon } from '@antv/x6';\nimport { getNodeReactComponent, useXFlowApp, XFlowConstants } from '@antv/xflow-core';\nimport { XFlowNode } from '../canvas-dag-extension/x6-extension/node';\nvar DirectoryTree = Tree.DirectoryTree,\n    TreeNode = Tree.TreeNode;\n\nvar FolderIcon = function FolderIcon(_ref) {\n  var expanded = _ref.expanded;\n  return expanded ? React.createElement(FolderOpenFilled, null) : React.createElement(FolderFilled, null);\n};\n\nexport var defaultNodeFactory = function defaultNodeFactory(args) {\n  return new XFlowNode(args);\n};\nexport var renderNode = function renderNode(props) {\n  var nodeConfig = props.nodeConfig,\n      onMouseDown = props.onMouseDown,\n      graphConfig = props.graphConfig,\n      modelService = props.modelService,\n      commandService = props.commandService;\n\n  if (!graphConfig) {\n    return React.createElement(\"div\", null);\n  }\n\n  var renderKey = graphConfig.nodeTypeParser(nodeConfig) || XFlowConstants.XFLOW_DEFAULT_NODE;\n  var reactComponent = graphConfig.nodeRender.get(renderKey);\n  return React.createElement(\"div\", {\n    onMouseDown: onMouseDown\n  }, React.createElement(reactComponent, {\n    commandService: commandService,\n    modelService: modelService,\n    data: nodeConfig,\n    isNodeTreePanel: true\n  }));\n};\nexport var NodeTitle = function NodeTitle(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isVisible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var prefixClz = props.prefixClz,\n      graphConfig = props.graphConfig,\n      commandService = props.commandService,\n      modelService = props.modelService,\n      popoverContent = props.popoverContent,\n      onMouseDown = props.onMouseDown,\n      item = props.item;\n  return React.createElement(React.Fragment, null, popoverContent && React.createElement(Popover, {\n    placement: \"right\",\n    destroyTooltipOnHide: true,\n    content: popoverContent,\n    visible: isVisible,\n    onVisibleChange: function onVisibleChange(val) {\n      setVisible(val);\n    }\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefixClz, \"-node-wrapper\"),\n    onMouseEnter: function onMouseEnter() {\n      setVisible(true);\n    }\n  }, renderNode({\n    graphConfig: graphConfig,\n    commandService: commandService,\n    onMouseDown: onMouseDown,\n    modelService: modelService,\n    nodeConfig: item\n  }))), !popoverContent && React.createElement(\"div\", {\n    className: \"\".concat(prefixClz, \"-node-wrapper\"),\n    onMouseEnter: function onMouseEnter() {\n      setVisible(true);\n    }\n  }, renderNode({\n    graphConfig: graphConfig,\n    commandService: commandService,\n    onMouseDown: onMouseDown,\n    modelService: modelService,\n    nodeConfig: item\n  })));\n};\nexport var NodePanelBody = function NodePanelBody(props) {\n  var x6NodeFactory = props.x6NodeFactory,\n      dndOptions = props.dndOptions,\n      onNodeDrop = props.onNodeDrop,\n      state = props.state,\n      onFolderExpand = props.onFolderExpand,\n      prefixClz = props.prefixClz;\n\n  var _useXFlowApp = useXFlowApp(),\n      graphProvider = _useXFlowApp.graphProvider,\n      modelService = _useXFlowApp.modelService,\n      commandService = _useXFlowApp.commandService;\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      graphConfig = _React$useState4[0],\n      setConfig = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      dnd = _React$useState6[0],\n      setDnd = _React$useState6[1];\n\n  var _React$useState7 = React.useState(),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      graph = _React$useState8[0],\n      setGraph = _React$useState8[1];\n\n  graphProvider.getGraphInstance().then(function (x6Graph) {\n    setGraph(x6Graph);\n  });\n  React.useEffect(function () {\n    graphProvider.getGraphOptions().then(function (x6GraphConfig) {\n      setConfig(x6GraphConfig);\n    });\n\n    if (!graph) {\n      return;\n    }\n\n    var dndInstance = new Addon.Dnd(Object.assign(Object.assign({\n      scaled: false,\n      animation: false\n    }, dndOptions), {\n      target: graph,\n\n      /** 这里考虑到需要新增群组的需求，不使用x6的getDropNod方法\n       * 在validateNode时调用command添加\n       */\n      validateNode: function validateNode(droppingNode) {\n        return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var nodeConfig;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  nodeConfig = Object.assign(Object.assign({}, droppingNode.getData()), droppingNode.getPosition());\n\n                  if (!onNodeDrop) {\n                    _context.next = 6;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return onNodeDrop(nodeConfig, commandService, modelService);\n\n                case 4:\n                  _context.next = 7;\n                  break;\n\n                case 6:\n                  console.error('onNodeDrop method is required in NodeTree Panel');\n\n                case 7:\n                  return _context.abrupt(\"return\", false);\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n      }\n    }));\n    setDnd(dndInstance);\n  }, [commandService, dndOptions, graph, graphProvider, modelService, onNodeDrop]);\n  var onMouseDown = React.useCallback(function (nodeConfig) {\n    return function (e) {\n      if (!graph || !dnd || !graphConfig) {\n        return;\n      }\n\n      var renderKey = graphConfig.nodeTypeParser(nodeConfig);\n      var reactComponent = graphConfig.nodeRender.get(renderKey);\n      var wrappedComponent = getNodeReactComponent(reactComponent, commandService, modelService);\n      var nodeData = {\n        data: nodeConfig,\n        width: nodeConfig.width || 180,\n        height: nodeConfig.height || 40,\n        // X6_NODE_PORTAL_NODE_VIEW\n        view: graphConfig.graphId,\n        component: wrappedComponent\n      };\n      var x6Node = x6NodeFactory ? x6NodeFactory(nodeData) : defaultNodeFactory(nodeData);\n      dnd.start(x6Node, e.nativeEvent);\n    };\n  }, [commandService, dnd, graph, graphConfig, modelService, x6NodeFactory]);\n  var renderTree = React.useCallback(function () {\n    var treeList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    return treeList.map(function (item) {\n      var isDirectory = item.isDirectory,\n          children = item.children,\n          popoverContent = item.popoverContent;\n\n      if (isDirectory) {\n        return React.createElement(TreeNode, {\n          icon: FolderIcon,\n          key: item.id,\n          title: item.label,\n          className: \"\".concat(prefixClz, \"-tree-folder\")\n        }, renderTree(children));\n      }\n\n      return React.createElement(TreeNode, {\n        isLeaf: true,\n        key: item.id,\n        className: \"\".concat(prefixClz, \"-tree-leaf\"),\n        icon: React.createElement(\"span\", null),\n        title: React.createElement(NodeTitle, {\n          item: item,\n          onMouseDown: onMouseDown(item),\n          popoverContent: popoverContent,\n          prefixClz: prefixClz,\n          modelService: modelService,\n          commandService: commandService,\n          graphConfig: graphConfig\n        })\n      });\n    });\n  }, [commandService, graphConfig, modelService, onMouseDown, prefixClz]);\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"\".concat(prefixClz, \"-body\"),\n    style: props.style\n  }, !state.keyword && React.createElement(DirectoryTree, {\n    showIcon: true,\n    selectable: false,\n    autoExpandParent: false,\n    onExpand: onFolderExpand,\n    expandedKeys: state.expandedKeys,\n    className: \"\".concat(prefixClz, \"-tree\")\n  }, renderTree(state.treeData)), state.searchList.length > 0 && React.createElement(\"ul\", {\n    className: \"\".concat(prefixClz, \"-body-list\")\n  }, state.searchList.map(function (treeNode) {\n    return React.createElement(\"li\", {\n      className: \"\".concat(prefixClz, \"-body-list-item\")\n    }, React.createElement(NodeTitle, {\n      item: treeNode,\n      onMouseDown: onMouseDown(treeNode),\n      popoverContent: treeNode.popoverContent,\n      prefixClz: prefixClz,\n      modelService: modelService,\n      commandService: commandService,\n      graphConfig: graphConfig\n    }));\n  })), state.keyword && state.searchList.length === 0 && React.createElement(Empty, {\n    style: {\n      marginTop: '48px'\n    }\n  })));\n};","map":{"version":3,"sources":["../../src/canvas-node-tree-panel/panel-body.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from 'react';\nimport { Tree, Empty, Popover } from 'antd';\nimport { FolderFilled, FolderOpenFilled } from '@ant-design/icons';\nimport { Addon } from '@antv/x6';\nimport { getNodeReactComponent, useXFlowApp, XFlowConstants } from '@antv/xflow-core';\nimport { XFlowNode } from '../canvas-dag-extension/x6-extension/node';\nconst { DirectoryTree, TreeNode } = Tree;\nconst FolderIcon = ({ expanded }) => {\n    return expanded ? React.createElement(FolderOpenFilled, null) : React.createElement(FolderFilled, null);\n};\nexport const defaultNodeFactory = (args) => {\n    return new XFlowNode(args);\n};\nexport const renderNode = (props) => {\n    const { nodeConfig, onMouseDown, graphConfig, modelService, commandService } = props;\n    if (!graphConfig) {\n        return React.createElement(\"div\", null);\n    }\n    const renderKey = graphConfig.nodeTypeParser(nodeConfig) || XFlowConstants.XFLOW_DEFAULT_NODE;\n    const reactComponent = graphConfig.nodeRender.get(renderKey);\n    return (React.createElement(\"div\", { onMouseDown: onMouseDown }, React.createElement(reactComponent, {\n        commandService,\n        modelService,\n        data: nodeConfig,\n        isNodeTreePanel: true,\n    })));\n};\nexport const NodeTitle = (props) => {\n    const [isVisible, setVisible] = React.useState(false);\n    const { prefixClz, graphConfig, commandService, modelService, popoverContent, onMouseDown, item, } = props;\n    return (React.createElement(React.Fragment, null,\n        popoverContent && (React.createElement(Popover, { placement: \"right\", destroyTooltipOnHide: true, content: popoverContent, visible: isVisible, onVisibleChange: val => {\n                setVisible(val);\n            } },\n            React.createElement(\"div\", { className: `${prefixClz}-node-wrapper`, onMouseEnter: () => {\n                    setVisible(true);\n                } }, renderNode({\n                graphConfig,\n                commandService: commandService,\n                onMouseDown,\n                modelService,\n                nodeConfig: item,\n            })))),\n        !popoverContent && (React.createElement(\"div\", { className: `${prefixClz}-node-wrapper`, onMouseEnter: () => {\n                setVisible(true);\n            } }, renderNode({\n            graphConfig,\n            commandService: commandService,\n            onMouseDown,\n            modelService,\n            nodeConfig: item,\n        })))));\n};\nexport const NodePanelBody = props => {\n    const { x6NodeFactory, dndOptions, onNodeDrop, state, onFolderExpand, prefixClz } = props;\n    const { graphProvider, modelService, commandService } = useXFlowApp();\n    const [graphConfig, setConfig] = React.useState();\n    const [dnd, setDnd] = React.useState();\n    const [graph, setGraph] = React.useState();\n    graphProvider.getGraphInstance().then(x6Graph => {\n        setGraph(x6Graph);\n    });\n    React.useEffect(() => {\n        graphProvider.getGraphOptions().then(x6GraphConfig => {\n            setConfig(x6GraphConfig);\n        });\n        if (!graph) {\n            return;\n        }\n        const dndInstance = new Addon.Dnd(Object.assign(Object.assign({ scaled: false, animation: false }, dndOptions), { target: graph, \n            /** 这里考虑到需要新增群组的需求，不使用x6的getDropNod方法\n             * 在validateNode时调用command添加\n             */\n            validateNode: (droppingNode) => __awaiter(void 0, void 0, void 0, function* () {\n                const nodeConfig = Object.assign(Object.assign({}, droppingNode.getData()), droppingNode.getPosition());\n                if (onNodeDrop) {\n                    yield onNodeDrop(nodeConfig, commandService, modelService);\n                }\n                else {\n                    console.error('onNodeDrop method is required in NodeTree Panel');\n                }\n                return false;\n            }) }));\n        setDnd(dndInstance);\n    }, [commandService, dndOptions, graph, graphProvider, modelService, onNodeDrop]);\n    const onMouseDown = React.useCallback((nodeConfig) => (e) => {\n        if (!graph || !dnd || !graphConfig) {\n            return;\n        }\n        const renderKey = graphConfig.nodeTypeParser(nodeConfig);\n        const reactComponent = graphConfig.nodeRender.get(renderKey);\n        const wrappedComponent = getNodeReactComponent(reactComponent, commandService, modelService);\n        const nodeData = {\n            data: nodeConfig,\n            width: nodeConfig.width || 180,\n            height: nodeConfig.height || 40,\n            // X6_NODE_PORTAL_NODE_VIEW\n            view: graphConfig.graphId,\n            component: wrappedComponent,\n        };\n        const x6Node = x6NodeFactory ? x6NodeFactory(nodeData) : defaultNodeFactory(nodeData);\n        dnd.start(x6Node, e.nativeEvent);\n    }, [commandService, dnd, graph, graphConfig, modelService, x6NodeFactory]);\n    const renderTree = React.useCallback((treeList = []) => {\n        return treeList.map(item => {\n            const { isDirectory, children, popoverContent } = item;\n            if (isDirectory) {\n                return (React.createElement(TreeNode, { icon: FolderIcon, key: item.id, title: item.label, className: `${prefixClz}-tree-folder` }, renderTree(children)));\n            }\n            return (React.createElement(TreeNode, { isLeaf: true, key: item.id, className: `${prefixClz}-tree-leaf`, icon: React.createElement(\"span\", null), title: React.createElement(NodeTitle, { item: item, onMouseDown: onMouseDown(item), popoverContent: popoverContent, prefixClz: prefixClz, modelService: modelService, commandService: commandService, graphConfig: graphConfig }) }));\n        });\n    }, [commandService, graphConfig, modelService, onMouseDown, prefixClz]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: `${prefixClz}-body`, style: props.style },\n            !state.keyword && (React.createElement(DirectoryTree, { showIcon: true, selectable: false, autoExpandParent: false, onExpand: onFolderExpand, expandedKeys: state.expandedKeys, className: `${prefixClz}-tree` }, renderTree(state.treeData))),\n            state.searchList.length > 0 && (React.createElement(\"ul\", { className: `${prefixClz}-body-list` }, state.searchList.map(treeNode => (React.createElement(\"li\", { className: `${prefixClz}-body-list-item` },\n                React.createElement(NodeTitle, { item: treeNode, onMouseDown: onMouseDown(treeNode), popoverContent: treeNode.popoverContent, prefixClz: prefixClz, modelService: modelService, commandService: commandService, graphConfig: graphConfig })))))),\n            state.keyword && state.searchList.length === 0 && React.createElement(Empty, { style: { marginTop: '48px' } }))));\n};\n//# sourceMappingURL=panel-body.js.map"]},"metadata":{},"sourceType":"module"}