{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Graph = exports.Node = exports.Edge = exports.AUTO_EDGE_ID = exports.VACANT_GRAPH_ID = exports.VACANT_NODE_LABEL = exports.VACANT_EDGE_LABEL = exports.VACANT_NODE_ID = exports.VACANT_EDGE_ID = void 0;\nvar VACANT_EDGE_ID = -1;\nexports.VACANT_EDGE_ID = VACANT_EDGE_ID;\nvar VACANT_NODE_ID = -1;\nexports.VACANT_NODE_ID = VACANT_NODE_ID;\nvar VACANT_EDGE_LABEL = \"-1\";\nexports.VACANT_EDGE_LABEL = VACANT_EDGE_LABEL;\nvar VACANT_NODE_LABEL = \"-1\";\nexports.VACANT_NODE_LABEL = VACANT_NODE_LABEL;\nvar VACANT_GRAPH_ID = -1;\nexports.VACANT_GRAPH_ID = VACANT_GRAPH_ID;\nvar AUTO_EDGE_ID = \"-1\";\nexports.AUTO_EDGE_ID = AUTO_EDGE_ID;\n\nvar Edge =\n/** @class */\nfunction () {\n  function Edge(id, from, to, label) {\n    if (id === void 0) {\n      id = VACANT_EDGE_ID;\n    }\n\n    if (from === void 0) {\n      from = VACANT_NODE_ID;\n    }\n\n    if (to === void 0) {\n      to = VACANT_NODE_ID;\n    }\n\n    if (label === void 0) {\n      label = VACANT_EDGE_LABEL;\n    }\n\n    this.id = id;\n    this.from = from;\n    this.to = to;\n    this.label = label;\n  }\n\n  return Edge;\n}();\n\nexports.Edge = Edge;\n\nvar Node =\n/** @class */\nfunction () {\n  function Node(id, label) {\n    if (id === void 0) {\n      id = VACANT_NODE_ID;\n    }\n\n    if (label === void 0) {\n      label = VACANT_NODE_LABEL;\n    }\n\n    this.id = id;\n    this.label = label;\n    this.edges = [];\n    this.edgeMap = {};\n  }\n\n  Node.prototype.addEdge = function (edge) {\n    this.edges.push(edge);\n    this.edgeMap[edge.id] = edge;\n  };\n\n  return Node;\n}();\n\nexports.Node = Node;\n\nvar Graph =\n/** @class */\nfunction () {\n  function Graph(id, edgeIdAutoIncrease, directed) {\n    if (id === void 0) {\n      id = VACANT_NODE_ID;\n    }\n\n    if (edgeIdAutoIncrease === void 0) {\n      edgeIdAutoIncrease = true;\n    }\n\n    if (directed === void 0) {\n      directed = false;\n    }\n\n    this.id = id;\n    this.edgeIdAutoIncrease = edgeIdAutoIncrease;\n    this.edges = [];\n    this.nodes = [];\n    this.nodeMap = {};\n    this.edgeMap = {};\n    this.nodeLabelMap = {};\n    this.edgeLabelMap = {};\n    this.counter = 0;\n    this.directed = directed;\n  }\n\n  Graph.prototype.getNodeNum = function () {\n    return this.nodes.length;\n  };\n\n  Graph.prototype.addNode = function (id, label) {\n    if (this.nodeMap[id]) return;\n    var node = new Node(id, label);\n    this.nodes.push(node);\n    this.nodeMap[id] = node;\n    if (!this.nodeLabelMap[label]) this.nodeLabelMap[label] = [];\n    this.nodeLabelMap[label].push(id);\n  };\n\n  Graph.prototype.addEdge = function (id, from, to, label) {\n    if (this.edgeIdAutoIncrease || id === undefined) id = this.counter++;\n    if (this.nodeMap[from] && this.nodeMap[to] && this.nodeMap[to].edgeMap[id]) return;\n    var edge = new Edge(id, from, to, label);\n    this.edges.push(edge);\n    this.edgeMap[id] = edge;\n    this.nodeMap[from].addEdge(edge);\n    if (!this.edgeLabelMap[label]) this.edgeLabelMap[label] = [];\n    this.edgeLabelMap[label].push(edge);\n\n    if (!this.directed) {\n      var rEdge = new Edge(id, to, from, label);\n      this.nodeMap[to].addEdge(rEdge);\n      this.edgeLabelMap[label].push(rEdge);\n    }\n  };\n\n  return Graph;\n}();\n\nexports.Graph = Graph;","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@antv/algorithm/lib/gSpan/struct.js"],"names":["Object","defineProperty","exports","value","Graph","Node","Edge","AUTO_EDGE_ID","VACANT_GRAPH_ID","VACANT_NODE_LABEL","VACANT_EDGE_LABEL","VACANT_NODE_ID","VACANT_EDGE_ID","id","from","to","label","edges","edgeMap","prototype","addEdge","edge","push","edgeIdAutoIncrease","directed","nodes","nodeMap","nodeLabelMap","edgeLabelMap","counter","getNodeNum","length","addNode","node","undefined","rEdge"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Graph = exports.Node = exports.Edge = exports.AUTO_EDGE_ID = exports.VACANT_GRAPH_ID = exports.VACANT_NODE_LABEL = exports.VACANT_EDGE_LABEL = exports.VACANT_NODE_ID = exports.VACANT_EDGE_ID = void 0;\nvar VACANT_EDGE_ID = -1;\nexports.VACANT_EDGE_ID = VACANT_EDGE_ID;\nvar VACANT_NODE_ID = -1;\nexports.VACANT_NODE_ID = VACANT_NODE_ID;\nvar VACANT_EDGE_LABEL = \"-1\";\nexports.VACANT_EDGE_LABEL = VACANT_EDGE_LABEL;\nvar VACANT_NODE_LABEL = \"-1\";\nexports.VACANT_NODE_LABEL = VACANT_NODE_LABEL;\nvar VACANT_GRAPH_ID = -1;\nexports.VACANT_GRAPH_ID = VACANT_GRAPH_ID;\nvar AUTO_EDGE_ID = \"-1\";\nexports.AUTO_EDGE_ID = AUTO_EDGE_ID;\n\nvar Edge =\n/** @class */\nfunction () {\n  function Edge(id, from, to, label) {\n    if (id === void 0) {\n      id = VACANT_EDGE_ID;\n    }\n\n    if (from === void 0) {\n      from = VACANT_NODE_ID;\n    }\n\n    if (to === void 0) {\n      to = VACANT_NODE_ID;\n    }\n\n    if (label === void 0) {\n      label = VACANT_EDGE_LABEL;\n    }\n\n    this.id = id;\n    this.from = from;\n    this.to = to;\n    this.label = label;\n  }\n\n  return Edge;\n}();\n\nexports.Edge = Edge;\n\nvar Node =\n/** @class */\nfunction () {\n  function Node(id, label) {\n    if (id === void 0) {\n      id = VACANT_NODE_ID;\n    }\n\n    if (label === void 0) {\n      label = VACANT_NODE_LABEL;\n    }\n\n    this.id = id;\n    this.label = label;\n    this.edges = [];\n    this.edgeMap = {};\n  }\n\n  Node.prototype.addEdge = function (edge) {\n    this.edges.push(edge);\n    this.edgeMap[edge.id] = edge;\n  };\n\n  return Node;\n}();\n\nexports.Node = Node;\n\nvar Graph =\n/** @class */\nfunction () {\n  function Graph(id, edgeIdAutoIncrease, directed) {\n    if (id === void 0) {\n      id = VACANT_NODE_ID;\n    }\n\n    if (edgeIdAutoIncrease === void 0) {\n      edgeIdAutoIncrease = true;\n    }\n\n    if (directed === void 0) {\n      directed = false;\n    }\n\n    this.id = id;\n    this.edgeIdAutoIncrease = edgeIdAutoIncrease;\n    this.edges = [];\n    this.nodes = [];\n    this.nodeMap = {};\n    this.edgeMap = {};\n    this.nodeLabelMap = {};\n    this.edgeLabelMap = {};\n    this.counter = 0;\n    this.directed = directed;\n  }\n\n  Graph.prototype.getNodeNum = function () {\n    return this.nodes.length;\n  };\n\n  Graph.prototype.addNode = function (id, label) {\n    if (this.nodeMap[id]) return;\n    var node = new Node(id, label);\n    this.nodes.push(node);\n    this.nodeMap[id] = node;\n    if (!this.nodeLabelMap[label]) this.nodeLabelMap[label] = [];\n    this.nodeLabelMap[label].push(id);\n  };\n\n  Graph.prototype.addEdge = function (id, from, to, label) {\n    if (this.edgeIdAutoIncrease || id === undefined) id = this.counter++;\n    if (this.nodeMap[from] && this.nodeMap[to] && this.nodeMap[to].edgeMap[id]) return;\n    var edge = new Edge(id, from, to, label);\n    this.edges.push(edge);\n    this.edgeMap[id] = edge;\n    this.nodeMap[from].addEdge(edge);\n    if (!this.edgeLabelMap[label]) this.edgeLabelMap[label] = [];\n    this.edgeLabelMap[label].push(edge);\n\n    if (!this.directed) {\n      var rEdge = new Edge(id, to, from, label);\n      this.nodeMap[to].addEdge(rEdge);\n      this.edgeLabelMap[label].push(rEdge);\n    }\n  };\n\n  return Graph;\n}();\n\nexports.Graph = Graph;"]},"metadata":{},"sourceType":"script"}