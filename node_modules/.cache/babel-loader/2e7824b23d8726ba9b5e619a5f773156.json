{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { singleton, inject } from 'mana-syringe';\nimport { IGraphOptionProvider } from '../../xflow-main/graph/config';\nimport { XFlowGraphCommands } from '../../command-contributions/constant';\nimport { DisposableCollection, Disposable } from '../../common/disposable';\nimport { IHookContribution } from '../interface';\nimport { throttle } from '../../common/utils';\nexport var NsGraphEventPlugin;\n\n(function (NsGraphEventPlugin) {\n  NsGraphEventPlugin.pluginId = 'GraphEventPlugin';\n})(NsGraphEventPlugin || (NsGraphEventPlugin = {}));\n/**\n * 内置的hook contribution\n * 处理graph config 的 evnets props\n */\n\n\nlet GraphEventContribution = class GraphEventContribution {\n  constructor() {\n    this.toDispose = new DisposableCollection();\n\n    this.registerHookHub = () => __awaiter(this, void 0, void 0, function* () {\n      return Disposable.create(() => {});\n    });\n    /** 扩展Hook */\n\n\n    this.registerHook = hooks => __awaiter(this, void 0, void 0, function* () {\n      const toDispose = new DisposableCollection();\n      const disposables = [\n      /** 在graph启动前, 注册外部事件到x6Events的hooks上*/\n      hooks.x6Events.registerHook({\n        name: NsGraphEventPlugin.pluginId,\n        handler: args => __awaiter(this, void 0, void 0, function* () {\n          const {\n            events\n          } = yield this.graphOptions.getOptions();\n          events.forEach(event => {\n            args.push(event);\n          });\n        })\n      }),\n      /** 在graph init后, 外部事件 */\n      hooks.afterGraphInit.registerHook({\n        name: NsGraphEventPlugin.pluginId,\n        handler: args => __awaiter(this, void 0, void 0, function* () {\n          const {\n            commandService,\n            modelService,\n            graph\n          } = args;\n          /** 注册事件 */\n\n          const todo = yield hooks.x6Events.call([], mergedEvents => __awaiter(this, void 0, void 0, function* () {\n            return mergedEvents.map(e => {\n              const handler = handlerArgs => {\n                e.callback(handlerArgs, commandService, modelService);\n              };\n\n              graph.on(e.eventName, handler);\n              return {\n                dispose: () => {\n                  graph.off(e.eventName, handler);\n                }\n              };\n            });\n          }));\n          toDispose.pushAll(todo);\n        })\n      }),\n      /** 监听window的resize事件，实现自动resize */\n      hooks.afterGraphInit.registerHook({\n        name: 'add auto resize event',\n        handler: args => __awaiter(this, void 0, void 0, function* () {\n          const {\n            commandService\n          } = args;\n          const resizeHandler = throttle(() => {\n            commandService.executeCommand(XFlowGraphCommands.GRAPH_RESIZE.id, {});\n          });\n          window.addEventListener('resize', resizeHandler);\n          toDispose.push(Disposable.create(() => {\n            window.removeEventListener('resize', resizeHandler);\n          }));\n        })\n      }),\n      /** 在graph停止时 取消外部事件 */\n      hooks.beforeGraphDestory.registerHook({\n        name: NsGraphEventPlugin.pluginId,\n        handler: () => __awaiter(this, void 0, void 0, function* () {\n          toDispose.dispose();\n        })\n      })];\n      toDispose.pushAll(disposables);\n      return toDispose;\n    });\n  }\n\n};\n\n__decorate([inject(IGraphOptionProvider), __metadata(\"design:type\", Object)], GraphEventContribution.prototype, \"graphOptions\", void 0);\n\nGraphEventContribution = __decorate([singleton({\n  contrib: IHookContribution\n})], GraphEventContribution);\nexport { GraphEventContribution };","map":{"version":3,"sources":["../../../src/hooks/contributions/graph.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { singleton, inject } from 'mana-syringe';\nimport { IGraphOptionProvider } from '../../xflow-main/graph/config';\nimport { XFlowGraphCommands } from '../../command-contributions/constant';\nimport { DisposableCollection, Disposable } from '../../common/disposable';\nimport { IHookContribution } from '../interface';\nimport { throttle } from '../../common/utils';\nexport var NsGraphEventPlugin;\n(function (NsGraphEventPlugin) {\n    NsGraphEventPlugin.pluginId = 'GraphEventPlugin';\n})(NsGraphEventPlugin || (NsGraphEventPlugin = {}));\n/**\n * 内置的hook contribution\n * 处理graph config 的 evnets props\n */\nlet GraphEventContribution = class GraphEventContribution {\n    constructor() {\n        this.toDispose = new DisposableCollection();\n        this.registerHookHub = () => __awaiter(this, void 0, void 0, function* () {\n            return Disposable.create(() => { });\n        });\n        /** 扩展Hook */\n        this.registerHook = (hooks) => __awaiter(this, void 0, void 0, function* () {\n            const toDispose = new DisposableCollection();\n            const disposables = [\n                /** 在graph启动前, 注册外部事件到x6Events的hooks上*/\n                hooks.x6Events.registerHook({\n                    name: NsGraphEventPlugin.pluginId,\n                    handler: (args) => __awaiter(this, void 0, void 0, function* () {\n                        const { events } = yield this.graphOptions.getOptions();\n                        events.forEach(event => {\n                            args.push(event);\n                        });\n                    }),\n                }),\n                /** 在graph init后, 外部事件 */\n                hooks.afterGraphInit.registerHook({\n                    name: NsGraphEventPlugin.pluginId,\n                    handler: (args) => __awaiter(this, void 0, void 0, function* () {\n                        const { commandService, modelService, graph } = args;\n                        /** 注册事件 */\n                        const todo = yield hooks.x6Events.call([], (mergedEvents) => __awaiter(this, void 0, void 0, function* () {\n                            return mergedEvents.map(e => {\n                                const handler = handlerArgs => {\n                                    e.callback(handlerArgs, commandService, modelService);\n                                };\n                                graph.on(e.eventName, handler);\n                                return {\n                                    dispose: () => {\n                                        graph.off(e.eventName, handler);\n                                    },\n                                };\n                            });\n                        }));\n                        toDispose.pushAll(todo);\n                    }),\n                }),\n                /** 监听window的resize事件，实现自动resize */\n                hooks.afterGraphInit.registerHook({\n                    name: 'add auto resize event',\n                    handler: (args) => __awaiter(this, void 0, void 0, function* () {\n                        const { commandService } = args;\n                        const resizeHandler = throttle(() => {\n                            commandService.executeCommand(XFlowGraphCommands.GRAPH_RESIZE.id, {});\n                        });\n                        window.addEventListener('resize', resizeHandler);\n                        toDispose.push(Disposable.create(() => {\n                            window.removeEventListener('resize', resizeHandler);\n                        }));\n                    }),\n                }),\n                /** 在graph停止时 取消外部事件 */\n                hooks.beforeGraphDestory.registerHook({\n                    name: NsGraphEventPlugin.pluginId,\n                    handler: () => __awaiter(this, void 0, void 0, function* () {\n                        toDispose.dispose();\n                    }),\n                }),\n            ];\n            toDispose.pushAll(disposables);\n            return toDispose;\n        });\n    }\n};\n__decorate([\n    inject(IGraphOptionProvider),\n    __metadata(\"design:type\", Object)\n], GraphEventContribution.prototype, \"graphOptions\", void 0);\nGraphEventContribution = __decorate([\n    singleton({ contrib: IHookContribution })\n], GraphEventContribution);\nexport { GraphEventContribution };\n//# sourceMappingURL=graph.js.map"]},"metadata":{},"sourceType":"module"}