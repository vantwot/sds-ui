{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nexport var NsRedoCmd;\n\n(function (NsRedoCmd) {\n  /** Command Id: 用于注册named factory */\n  NsRedoCmd.command = XFlowGraphCommands.REDO_CMD;\n  /** hookName */\n\n  NsRedoCmd.hookKey = 'redoCommand';\n})(NsRedoCmd || (NsRedoCmd = {}));\n\nlet GraphRedoCommand =\n/** 创建节点命令 */\nclass GraphRedoCommand {\n  constructor() {\n    /** 执行Cmd */\n    this.execute = () => __awaiter(this, void 0, void 0, function* () {\n      const ctx = this.ctx;\n      const {\n        args,\n        hooks: runtimeHook\n      } = ctx.getArgs();\n      const hooks = ctx.getHooks();\n      yield hooks.redoCommand.call(\n      /** 执行hooks pipeline处理args */\n      args,\n      /** 执行 callback */\n      () => __awaiter(this, void 0, void 0, function* () {\n        const cmds = ctx.getCommands();\n\n        if (cmds.isRedoable) {\n          cmds.redoCommand();\n        }\n        /** 设置结果 */\n\n\n        this.ctx.addUndo(Disposable.create(() => {\n          cmds.redoCommand();\n        }));\n        return {};\n      }),\n      /** 外部的 hook */\n      runtimeHook);\n      return this;\n    });\n    /** undo cmd */\n\n\n    this.undo = () => __awaiter(this, void 0, void 0, function* () {\n      this.ctx.undo();\n      return this;\n    });\n    /** redo cmd */\n\n\n    this.redo = () => __awaiter(this, void 0, void 0, function* () {\n      if (!this.ctx.isUndoable) {\n        yield this.execute();\n      }\n\n      return this;\n    });\n  }\n\n  init() {\n    this.ctx = this.contextProvider();\n  }\n  /** isUndoable */\n\n\n  isUndoable() {\n    return this.ctx.isUndoable();\n  }\n\n};\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], GraphRedoCommand.prototype, \"contextProvider\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], GraphRedoCommand.prototype, \"init\", null);\n\nGraphRedoCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsRedoCmd.command.id\n  }\n})\n/** 创建节点命令 */\n], GraphRedoCommand);\nexport { GraphRedoCommand };","map":{"version":3,"sources":["../../../src/command-contributions/graph/graph-cmd-redo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,MAAT,EAAiB,UAAjB,EAA6B,aAA7B,QAAkD,cAAlD;AAGA,SAAS,eAAT,EAA0B,uBAA1B,QAAyD,yBAAzD;AAIA,SAAS,kBAAT,QAAmC,aAAnC;AACA,SAAS,UAAT,QAA2B,yBAA3B;AAIA,OAAM,IAAW,SAAX;;AAAN,CAAA,UAAiB,SAAjB,EAA0B;AACxB;AACa,EAAA,SAAA,CAAA,OAAA,GAAU,kBAAkB,CAAC,QAA7B;AACb;;AACa,EAAA,SAAA,CAAA,OAAA,GAAU,aAAV;AAad,CAjBD,EAAiB,SAAS,KAAT,SAAS,GAAA,EAAA,CAA1B;;AAuBA,IAAa,gBAAgB;AAD7B;AACA,MAAa,gBAAb,CAA6B;AAA7B,EAAA,WAAA,GAAA;AAWE;AACA,SAAA,OAAA,GAAU,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACnB,YAAM,GAAG,GAAG,KAAK,GAAjB;AACA,YAAM;AAAE,QAAA,IAAF;AAAQ,QAAA,KAAK,EAAE;AAAf,UAA+B,GAAG,CAAC,OAAJ,EAArC;AACA,YAAM,KAAK,GAAG,GAAG,CAAC,QAAJ,EAAd;AAEA,YAAM,KAAK,CAAC,WAAN,CAAkB,IAAlB;AACJ;AACA,MAAA,IAFI;AAGJ;AACA,YAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACT,cAAM,IAAI,GAAG,GAAG,CAAC,WAAJ,EAAb;;AACA,YAAI,IAAI,CAAC,UAAT,EAAqB;AACnB,UAAA,IAAI,CAAC,WAAL;AACD;AACD;;;AACA,aAAK,GAAL,CAAS,OAAT,CACE,UAAU,CAAC,MAAX,CAAkB,MAAK;AACrB,UAAA,IAAI,CAAC,WAAL;AACD,SAFD,CADF;AAKA,eAAO,EAAP;AACD,OAZU,CAJP;AAiBJ;AACA,MAAA,WAlBI,CAAN;AAqBA,aAAO,IAAP;AACD,KA3BoB,CAArB;AA6BA;;;AACA,SAAA,IAAA,GAAO,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAChB,WAAK,GAAL,CAAS,IAAT;AACA,aAAO,IAAP;AACD,KAHiB,CAAlB;AAKA;;;AACA,SAAA,IAAA,GAAO,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAChB,UAAI,CAAC,KAAK,GAAL,CAAS,UAAd,EAA0B;AACxB,cAAM,KAAK,OAAL,EAAN;AACD;;AACD,aAAO,IAAP;AACD,KALiB,CAAlB;AAWD;;AApDC,EAAA,IAAI,GAAA;AACF,SAAK,GAAL,GAAW,KAAK,eAAL,EAAX;AACD;AA8CD;;;AACA,EAAA,UAAU,GAAA;AACR,WAAO,KAAK,GAAL,CAAS,UAAT,EAAP;AACD;;AA1D0B,CAA7B;;AAEmC,UAAA,CAAA,CAAhC,MAAM,CAAC,uBAAD,CAA0B,E,iCAAA,CAAA,E,0BAAA,E,iBAAA,E,KAA4C,CAA5C,CAAA;;AAKjC,UAAA,CAAA,CADC,aAAa,EACd,E,mCAAA,E,mCAAA,E,uCAAA,CAAA,E,0BAAA,E,MAAA,EAEC,IAFD,CAAA;;AAPW,gBAAgB,GAAA,UAAA,CAAA,CAJ5B,UAAU,CAAC;AACV,EAAA,KAAK,EAAE;AAAE,IAAA,KAAK,EAAE,eAAT;AAA0B,IAAA,KAAK,EAAE,SAAS,CAAC,OAAV,CAAkB;AAAnD;AADG,CAAD;AAGX;AAC6B,CAAA,EAAhB,gBAAgB,CAAhB;SAAA,gB","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowGraphCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nexport var NsRedoCmd;\n(function (NsRedoCmd) {\n    /** Command Id: 用于注册named factory */\n    NsRedoCmd.command = XFlowGraphCommands.REDO_CMD;\n    /** hookName */\n    NsRedoCmd.hookKey = 'redoCommand';\n})(NsRedoCmd || (NsRedoCmd = {}));\nlet GraphRedoCommand = \n/** 创建节点命令 */\nclass GraphRedoCommand {\n    constructor() {\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const ctx = this.ctx;\n            const { args, hooks: runtimeHook } = ctx.getArgs();\n            const hooks = ctx.getHooks();\n            yield hooks.redoCommand.call(\n            /** 执行hooks pipeline处理args */\n            args, \n            /** 执行 callback */\n            () => __awaiter(this, void 0, void 0, function* () {\n                const cmds = ctx.getCommands();\n                if (cmds.isRedoable) {\n                    cmds.redoCommand();\n                }\n                /** 设置结果 */\n                this.ctx.addUndo(Disposable.create(() => {\n                    cmds.redoCommand();\n                }));\n                return {};\n            }), \n            /** 外部的 hook */\n            runtimeHook);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            this.ctx.undo();\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.ctx.isUndoable) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    init() {\n        this.ctx = this.contextProvider();\n    }\n    /** isUndoable */\n    isUndoable() {\n        return this.ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], GraphRedoCommand.prototype, \"contextProvider\", void 0);\n__decorate([\n    postConstruct(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], GraphRedoCommand.prototype, \"init\", null);\nGraphRedoCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsRedoCmd.command.id },\n    })\n    /** 创建节点命令 */\n], GraphRedoCommand);\nexport { GraphRedoCommand };\n//# sourceMappingURL=graph-cmd-redo.js.map"]},"metadata":{},"sourceType":"module"}