{"ast":null,"code":"import React from 'react';\nimport { DatabaseOutlined, RedoOutlined, CloseCircleOutlined, CheckCircleOutlined, ExclamationCircleOutlined, InfoCircleOutlined } from '@ant-design/icons';\nconst fontStyle = {\n  fontSize: '16px',\n  color: '#3057e3'\n};\n/** 状态 类型 */\n\nexport var StatusEnum;\n\n(function (StatusEnum) {\n  StatusEnum[\"SUCCESS\"] = \"success\";\n  StatusEnum[\"PROCESSING\"] = \"processing\";\n  StatusEnum[\"ERROR\"] = \"error\";\n  StatusEnum[\"DEFAULT\"] = \"default\";\n  StatusEnum[\"WARNING\"] = \"warning\";\n})(StatusEnum || (StatusEnum = {}));\n\nexport const AlgoIcon = props => {\n  if (props.hide) {\n    return null;\n  }\n\n  switch (props.status) {\n    case StatusEnum.PROCESSING:\n      return React.createElement(RedoOutlined, {\n        spin: true,\n        style: {\n          color: '#c1cdf7',\n          fontSize: '16px'\n        }\n      });\n\n    case StatusEnum.ERROR:\n      return React.createElement(CloseCircleOutlined, {\n        style: {\n          color: '#ff4d4f',\n          fontSize: '16px'\n        }\n      });\n\n    case StatusEnum.SUCCESS:\n      return React.createElement(CheckCircleOutlined, {\n        style: {\n          color: '#39ca74cc',\n          fontSize: '16px'\n        }\n      });\n\n    case StatusEnum.WARNING:\n      return React.createElement(ExclamationCircleOutlined, {\n        style: {\n          color: '#faad14',\n          fontSize: '16px'\n        }\n      });\n\n    case StatusEnum.DEFAULT:\n      return React.createElement(InfoCircleOutlined, {\n        style: {\n          color: '#d9d9d9',\n          fontSize: '16px'\n        }\n      });\n\n    default:\n      return null;\n  }\n};\nexport const XFlowDefaultNode = props => {\n  const icon = React.isValidElement(props.data.icon) ? props.data.icon : React.createElement(DatabaseOutlined, {\n    style: fontStyle\n  });\n  return React.createElement(\"div\", {\n    className: `xflow-default-node ${props.isNodeTreePanel ? 'panel-node' : ''}`\n  }, React.createElement(\"span\", {\n    className: \"icon\"\n  }, icon), React.createElement(\"span\", {\n    className: \"label\"\n  }, props.data.label), React.createElement(\"span\", {\n    className: \"status\"\n  }, React.createElement(AlgoIcon, {\n    status: props.data && props.data.status,\n    hide: props.isNodeTreePanel\n  })));\n};\nXFlowDefaultNode.displayName = 'XFlowDefaultNode';","map":{"version":3,"sources":["../../../../src/xflow-main/graph/react-node/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { DatabaseOutlined, RedoOutlined, CloseCircleOutlined, CheckCircleOutlined, ExclamationCircleOutlined, InfoCircleOutlined, } from '@ant-design/icons';\nconst fontStyle = { fontSize: '16px', color: '#3057e3' };\n/** 状态 类型 */\nexport var StatusEnum;\n(function (StatusEnum) {\n    StatusEnum[\"SUCCESS\"] = \"success\";\n    StatusEnum[\"PROCESSING\"] = \"processing\";\n    StatusEnum[\"ERROR\"] = \"error\";\n    StatusEnum[\"DEFAULT\"] = \"default\";\n    StatusEnum[\"WARNING\"] = \"warning\";\n})(StatusEnum || (StatusEnum = {}));\nexport const AlgoIcon = props => {\n    if (props.hide) {\n        return null;\n    }\n    switch (props.status) {\n        case StatusEnum.PROCESSING:\n            return React.createElement(RedoOutlined, { spin: true, style: { color: '#c1cdf7', fontSize: '16px' } });\n        case StatusEnum.ERROR:\n            return React.createElement(CloseCircleOutlined, { style: { color: '#ff4d4f', fontSize: '16px' } });\n        case StatusEnum.SUCCESS:\n            return React.createElement(CheckCircleOutlined, { style: { color: '#39ca74cc', fontSize: '16px' } });\n        case StatusEnum.WARNING:\n            return React.createElement(ExclamationCircleOutlined, { style: { color: '#faad14', fontSize: '16px' } });\n        case StatusEnum.DEFAULT:\n            return React.createElement(InfoCircleOutlined, { style: { color: '#d9d9d9', fontSize: '16px' } });\n        default:\n            return null;\n    }\n};\nexport const XFlowDefaultNode = props => {\n    const icon = React.isValidElement(props.data.icon) ? (props.data.icon) : (React.createElement(DatabaseOutlined, { style: fontStyle }));\n    return (React.createElement(\"div\", { className: `xflow-default-node ${props.isNodeTreePanel ? 'panel-node' : ''}` },\n        React.createElement(\"span\", { className: \"icon\" }, icon),\n        React.createElement(\"span\", { className: \"label\" }, props.data.label),\n        React.createElement(\"span\", { className: \"status\" },\n            React.createElement(AlgoIcon, { status: props.data && props.data.status, hide: props.isNodeTreePanel }))));\n};\nXFlowDefaultNode.displayName = 'XFlowDefaultNode';\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}