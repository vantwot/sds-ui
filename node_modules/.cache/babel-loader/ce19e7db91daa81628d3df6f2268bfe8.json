{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { uuidv4 } from '@antv/xflow-core';\nexport var NsContextMenu;\n\n(function (NsContextMenu) {\n  NsContextMenu.CONFIG_TYPE = 'ContextMenuConfig';\n})(NsContextMenu || (NsContextMenu = {}));\n\nexport class ContextMenuConfig {\n  /** uuid */\n  constructor(moduleId) {\n    /** config type */\n    this.CONFIG_TYPE = NsContextMenu.CONFIG_TYPE;\n    /** 设置组件的props */\n\n    this.setMenuModelService = service => {\n      this.menuModelService = service;\n    };\n    /** 设置组件的props */\n\n\n    this.setCustomMenuRender = service => {\n      this.menuCustomRender = service;\n    };\n    /** 获取Props */\n\n\n    this.getConfig = () => __awaiter(this, void 0, void 0, function* () {\n      return {\n        CONFIG_TYPE: this.CONFIG_TYPE,\n        menuCustomRender: this.menuCustomRender,\n        menuModelService: this.menuModelService\n      };\n    });\n\n    this.moduleId = moduleId || uuidv4();\n  }\n  /** dispose */\n\n\n  dispose() {}\n\n}","map":{"version":3,"sources":["../../src/canvas-context-menu/config.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,SAAS,MAAT,QAAuB,kBAAvB;AAIA,OAAM,IAAW,aAAX;;AAAN,CAAA,UAAiB,aAAjB,EAA8B;AACf,EAAA,aAAA,CAAA,WAAA,GAAc,mBAAd;AAwBd,CAzBD,EAAiB,aAAa,KAAb,aAAa,GAAA,EAAA,CAA9B;;AA2BA,OAAM,MAAO,iBAAP,CAAwB;AAS5B;AACA,EAAA,WAAA,CAAY,QAAZ,EAA6B;AAT7B;AACS,SAAA,WAAA,GAAc,aAAa,CAAC,WAA5B;AAWT;;AACA,SAAA,mBAAA,GAAuB,OAAD,IAA6C;AACjE,WAAK,gBAAL,GAAwB,OAAxB;AACD,KAFD;AAGA;;;AACA,SAAA,mBAAA,GAAuB,OAAD,IAAyC;AAC7D,WAAK,gBAAL,GAAwB,OAAxB;AACD,KAFD;AAGA;;;AACA,SAAA,SAAA,GAAY,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AACrB,aAAO;AACL,QAAA,WAAW,EAAE,KAAK,WADb;AAEL,QAAA,gBAAgB,EAAE,KAAK,gBAFlB;AAGL,QAAA,gBAAgB,EAAE,KAAK;AAHlB,OAAP;AAKD,KANsB,CAAvB;;AAXE,SAAK,QAAL,GAAgB,QAAQ,IAAI,MAAM,EAAlC;AACD;AAiBD;;;AACA,EAAA,OAAO,GAAA,CAAK;;AA9BgB","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { uuidv4 } from '@antv/xflow-core';\nexport var NsContextMenu;\n(function (NsContextMenu) {\n    NsContextMenu.CONFIG_TYPE = 'ContextMenuConfig';\n})(NsContextMenu || (NsContextMenu = {}));\nexport class ContextMenuConfig {\n    /** uuid */\n    constructor(moduleId) {\n        /** config type */\n        this.CONFIG_TYPE = NsContextMenu.CONFIG_TYPE;\n        /** 设置组件的props */\n        this.setMenuModelService = (service) => {\n            this.menuModelService = service;\n        };\n        /** 设置组件的props */\n        this.setCustomMenuRender = (service) => {\n            this.menuCustomRender = service;\n        };\n        /** 获取Props */\n        this.getConfig = () => __awaiter(this, void 0, void 0, function* () {\n            return {\n                CONFIG_TYPE: this.CONFIG_TYPE,\n                menuCustomRender: this.menuCustomRender,\n                menuModelService: this.menuModelService,\n            };\n        });\n        this.moduleId = moduleId || uuidv4();\n    }\n    /** dispose */\n    dispose() { }\n}\n//# sourceMappingURL=config.js.map"]},"metadata":{},"sourceType":"module"}