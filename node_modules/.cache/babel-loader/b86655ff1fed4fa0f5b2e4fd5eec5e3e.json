{"ast":null,"code":"import _toConsumableArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nexport var er = function er(vertices, options, edgeView) {\n  var offsetRaw = options.offset || 32;\n  var min = options.min == null ? 16 : options.min;\n  var offset = 0;\n  var direction = options.direction;\n  var sourceBBox = edgeView.sourceBBox;\n  var targetBBox = edgeView.targetBBox;\n  var sourcePoint = sourceBBox.getCenter();\n  var targetPoint = targetBBox.getCenter();\n\n  if (typeof offsetRaw === 'number') {\n    offset = offsetRaw;\n  }\n\n  if (direction == null) {\n    var dx = targetBBox.left - sourceBBox.right;\n    var dy = targetBBox.top - sourceBBox.bottom;\n\n    if (dx >= 0 && dy >= 0) {\n      direction = dx >= dy ? 'L' : 'T';\n    } else if (dx <= 0 && dy >= 0) {\n      dx = sourceBBox.left - targetBBox.right;\n\n      if (dx >= 0) {\n        direction = dx >= dy ? 'R' : 'T';\n      } else {\n        direction = 'T';\n      }\n    } else if (dx >= 0 && dy <= 0) {\n      dy = sourceBBox.top - targetBBox.bottom;\n\n      if (dy >= 0) {\n        direction = dx >= dy ? 'L' : 'B';\n      } else {\n        direction = 'L';\n      }\n    } else {\n      dx = sourceBBox.left - targetBBox.right;\n      dy = sourceBBox.top - targetBBox.bottom;\n\n      if (dx >= 0 && dy >= 0) {\n        direction = dx >= dy ? 'R' : 'B';\n      } else if (dx <= 0 && dy >= 0) {\n        direction = 'B';\n      } else if (dx >= 0 && dy <= 0) {\n        direction = 'R';\n      } else {\n        direction = Math.abs(dx) > Math.abs(dy) ? 'R' : 'B';\n      }\n    }\n  }\n\n  if (direction === 'H') {\n    direction = targetPoint.x - sourcePoint.x >= 0 ? 'L' : 'R';\n  } else if (direction === 'V') {\n    direction = targetPoint.y - sourcePoint.y >= 0 ? 'T' : 'B';\n  }\n\n  if (offsetRaw === 'center') {\n    if (direction === 'L') {\n      offset = (targetBBox.left - sourceBBox.right) / 2;\n    } else if (direction === 'R') {\n      offset = (sourceBBox.left - targetBBox.right) / 2;\n    } else if (direction === 'T') {\n      offset = (targetBBox.top - sourceBBox.bottom) / 2;\n    } else if (direction === 'B') {\n      offset = (sourceBBox.top - targetBBox.bottom) / 2;\n    }\n  }\n\n  var coord;\n  var dim;\n  var factor;\n  var horizontal = direction === 'L' || direction === 'R';\n\n  if (horizontal) {\n    if (targetPoint.y === sourcePoint.y) {\n      return _toConsumableArray(vertices);\n    }\n\n    factor = direction === 'L' ? 1 : -1;\n    coord = 'x';\n    dim = 'width';\n  } else {\n    if (targetPoint.x === sourcePoint.x) {\n      return _toConsumableArray(vertices);\n    }\n\n    factor = direction === 'T' ? 1 : -1;\n    coord = 'y';\n    dim = 'height';\n  }\n\n  var source = sourcePoint.clone();\n  var target = targetPoint.clone();\n  source[coord] += factor * (sourceBBox[dim] / 2 + offset);\n  target[coord] -= factor * (targetBBox[dim] / 2 + offset);\n\n  if (horizontal) {\n    var sourceX = source.x;\n    var targetX = target.x;\n    var sourceDelta = sourceBBox.width / 2 + min;\n    var targetDelta = targetBBox.width / 2 + min;\n\n    if (targetPoint.x > sourcePoint.x) {\n      if (targetX <= sourceX) {\n        source.x = Math.max(targetX, sourcePoint.x + sourceDelta);\n        target.x = Math.min(sourceX, targetPoint.x - targetDelta);\n      }\n    } else if (targetX >= sourceX) {\n      source.x = Math.min(targetX, sourcePoint.x - sourceDelta);\n      target.x = Math.max(sourceX, targetPoint.x + targetDelta);\n    }\n  } else {\n    var sourceY = source.y;\n    var targetY = target.y;\n\n    var _sourceDelta = sourceBBox.height / 2 + min;\n\n    var _targetDelta = targetBBox.height / 2 + min;\n\n    if (targetPoint.y > sourcePoint.y) {\n      if (targetY <= sourceY) {\n        source.y = Math.max(targetY, sourcePoint.y + _sourceDelta);\n        target.y = Math.min(sourceY, targetPoint.y - _targetDelta);\n      }\n    } else if (targetY >= sourceY) {\n      source.y = Math.min(targetY, sourcePoint.y - _sourceDelta);\n      target.y = Math.max(sourceY, targetPoint.y + _targetDelta);\n    }\n  }\n\n  return [source.toJSON()].concat(_toConsumableArray(vertices), [target.toJSON()]);\n};","map":{"version":3,"sources":["../../../src/registry/router/er.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["export const er = function (vertices, options, edgeView) {\n    const offsetRaw = options.offset || 32;\n    const min = options.min == null ? 16 : options.min;\n    let offset = 0;\n    let direction = options.direction;\n    const sourceBBox = edgeView.sourceBBox;\n    const targetBBox = edgeView.targetBBox;\n    const sourcePoint = sourceBBox.getCenter();\n    const targetPoint = targetBBox.getCenter();\n    if (typeof offsetRaw === 'number') {\n        offset = offsetRaw;\n    }\n    if (direction == null) {\n        let dx = targetBBox.left - sourceBBox.right;\n        let dy = targetBBox.top - sourceBBox.bottom;\n        if (dx >= 0 && dy >= 0) {\n            direction = dx >= dy ? 'L' : 'T';\n        }\n        else if (dx <= 0 && dy >= 0) {\n            dx = sourceBBox.left - targetBBox.right;\n            if (dx >= 0) {\n                direction = dx >= dy ? 'R' : 'T';\n            }\n            else {\n                direction = 'T';\n            }\n        }\n        else if (dx >= 0 && dy <= 0) {\n            dy = sourceBBox.top - targetBBox.bottom;\n            if (dy >= 0) {\n                direction = dx >= dy ? 'L' : 'B';\n            }\n            else {\n                direction = 'L';\n            }\n        }\n        else {\n            dx = sourceBBox.left - targetBBox.right;\n            dy = sourceBBox.top - targetBBox.bottom;\n            if (dx >= 0 && dy >= 0) {\n                direction = dx >= dy ? 'R' : 'B';\n            }\n            else if (dx <= 0 && dy >= 0) {\n                direction = 'B';\n            }\n            else if (dx >= 0 && dy <= 0) {\n                direction = 'R';\n            }\n            else {\n                direction = Math.abs(dx) > Math.abs(dy) ? 'R' : 'B';\n            }\n        }\n    }\n    if (direction === 'H') {\n        direction = targetPoint.x - sourcePoint.x >= 0 ? 'L' : 'R';\n    }\n    else if (direction === 'V') {\n        direction = targetPoint.y - sourcePoint.y >= 0 ? 'T' : 'B';\n    }\n    if (offsetRaw === 'center') {\n        if (direction === 'L') {\n            offset = (targetBBox.left - sourceBBox.right) / 2;\n        }\n        else if (direction === 'R') {\n            offset = (sourceBBox.left - targetBBox.right) / 2;\n        }\n        else if (direction === 'T') {\n            offset = (targetBBox.top - sourceBBox.bottom) / 2;\n        }\n        else if (direction === 'B') {\n            offset = (sourceBBox.top - targetBBox.bottom) / 2;\n        }\n    }\n    let coord;\n    let dim;\n    let factor;\n    const horizontal = direction === 'L' || direction === 'R';\n    if (horizontal) {\n        if (targetPoint.y === sourcePoint.y) {\n            return [...vertices];\n        }\n        factor = direction === 'L' ? 1 : -1;\n        coord = 'x';\n        dim = 'width';\n    }\n    else {\n        if (targetPoint.x === sourcePoint.x) {\n            return [...vertices];\n        }\n        factor = direction === 'T' ? 1 : -1;\n        coord = 'y';\n        dim = 'height';\n    }\n    const source = sourcePoint.clone();\n    const target = targetPoint.clone();\n    source[coord] += factor * (sourceBBox[dim] / 2 + offset);\n    target[coord] -= factor * (targetBBox[dim] / 2 + offset);\n    if (horizontal) {\n        const sourceX = source.x;\n        const targetX = target.x;\n        const sourceDelta = sourceBBox.width / 2 + min;\n        const targetDelta = targetBBox.width / 2 + min;\n        if (targetPoint.x > sourcePoint.x) {\n            if (targetX <= sourceX) {\n                source.x = Math.max(targetX, sourcePoint.x + sourceDelta);\n                target.x = Math.min(sourceX, targetPoint.x - targetDelta);\n            }\n        }\n        else if (targetX >= sourceX) {\n            source.x = Math.min(targetX, sourcePoint.x - sourceDelta);\n            target.x = Math.max(sourceX, targetPoint.x + targetDelta);\n        }\n    }\n    else {\n        const sourceY = source.y;\n        const targetY = target.y;\n        const sourceDelta = sourceBBox.height / 2 + min;\n        const targetDelta = targetBBox.height / 2 + min;\n        if (targetPoint.y > sourcePoint.y) {\n            if (targetY <= sourceY) {\n                source.y = Math.max(targetY, sourcePoint.y + sourceDelta);\n                target.y = Math.min(sourceY, targetPoint.y - targetDelta);\n            }\n        }\n        else if (targetY >= sourceY) {\n            source.y = Math.min(targetY, sourcePoint.y - sourceDelta);\n            target.y = Math.max(sourceY, targetPoint.y + targetDelta);\n        }\n    }\n    return [source.toJSON(), ...vertices, target.toJSON()];\n};\n//# sourceMappingURL=er.js.map"]},"metadata":{},"sourceType":"module"}