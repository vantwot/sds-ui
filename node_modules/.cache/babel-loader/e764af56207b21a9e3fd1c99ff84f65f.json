{"ast":null,"code":"export var Interp;\n\n(function (Interp) {\n  Interp.number = function (a, b) {\n    var d = b - a;\n    return function (t) {\n      return a + d * t;\n    };\n  };\n\n  Interp.object = function (a, b) {\n    var keys = Object.keys(a);\n    return function (t) {\n      var ret = {};\n\n      for (var i = keys.length - 1; i !== -1; i -= 1) {\n        var key = keys[i];\n        ret[key] = a[key] + (b[key] - a[key]) * t;\n      }\n\n      return ret;\n    };\n  };\n\n  Interp.unit = function (a, b) {\n    var reg = /(-?[0-9]*.[0-9]*)(px|em|cm|mm|in|pt|pc|%)/;\n    var ma = reg.exec(a);\n    var mb = reg.exec(b);\n    var pb = mb ? mb[1] : '';\n    var aa = ma ? +ma[1] : 0;\n    var bb = mb ? +mb[1] : 0;\n    var index = pb.indexOf('.');\n    var precision = index > 0 ? pb[1].length - index - 1 : 0;\n    var d = bb - aa;\n    var u = ma ? ma[2] : '';\n    return function (t) {\n      return (aa + d * t).toFixed(precision) + u;\n    };\n  };\n\n  Interp.color = function (a, b) {\n    var ca = parseInt(a.slice(1), 16);\n    var cb = parseInt(b.slice(1), 16);\n    var ra = ca & 0x0000ff;\n    var rd = (cb & 0x0000ff) - ra;\n    var ga = ca & 0x00ff00;\n    var gd = (cb & 0x00ff00) - ga;\n    var ba = ca & 0xff0000;\n    var bd = (cb & 0xff0000) - ba;\n    return function (t) {\n      var r = ra + rd * t & 0x000000ff;\n      var g = ga + gd * t & 0x0000ff00;\n      var b = ba + bd * t & 0x00ff0000;\n      return \"#\".concat((1 << 24 | r | g | b).toString(16).slice(1));\n    };\n  };\n})(Interp || (Interp = {}));","map":{"version":3,"sources":["../../../src/common/animation/interp.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["export var Interp;\n(function (Interp) {\n    Interp.number = (a, b) => {\n        const d = b - a;\n        return (t) => {\n            return a + d * t;\n        };\n    };\n    Interp.object = (a, b) => {\n        const keys = Object.keys(a);\n        return (t) => {\n            const ret = {};\n            for (let i = keys.length - 1; i !== -1; i -= 1) {\n                const key = keys[i];\n                ret[key] = a[key] + (b[key] - a[key]) * t;\n            }\n            return ret;\n        };\n    };\n    Interp.unit = (a, b) => {\n        const reg = /(-?[0-9]*.[0-9]*)(px|em|cm|mm|in|pt|pc|%)/;\n        const ma = reg.exec(a);\n        const mb = reg.exec(b);\n        const pb = mb ? mb[1] : '';\n        const aa = ma ? +ma[1] : 0;\n        const bb = mb ? +mb[1] : 0;\n        const index = pb.indexOf('.');\n        const precision = index > 0 ? pb[1].length - index - 1 : 0;\n        const d = bb - aa;\n        const u = ma ? ma[2] : '';\n        return (t) => {\n            return (aa + d * t).toFixed(precision) + u;\n        };\n    };\n    Interp.color = (a, b) => {\n        const ca = parseInt(a.slice(1), 16);\n        const cb = parseInt(b.slice(1), 16);\n        const ra = ca & 0x0000ff;\n        const rd = (cb & 0x0000ff) - ra;\n        const ga = ca & 0x00ff00;\n        const gd = (cb & 0x00ff00) - ga;\n        const ba = ca & 0xff0000;\n        const bd = (cb & 0xff0000) - ba;\n        return (t) => {\n            const r = (ra + rd * t) & 0x000000ff;\n            const g = (ga + gd * t) & 0x0000ff00;\n            const b = (ba + bd * t) & 0x00ff0000;\n            return `#${((1 << 24) | r | g | b).toString(16).slice(1)}`;\n        };\n    };\n})(Interp || (Interp = {}));\n//# sourceMappingURL=interp.js.map"]},"metadata":{},"sourceType":"module"}