{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { Line } from '../../geometry';\nimport { normalizePoint, toResult } from './util';\nexport const line = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  const start = normalizePoint(elemBBox, groupPositionArgs.start || elemBBox.getOrigin());\n  const end = normalizePoint(elemBBox, groupPositionArgs.end || elemBBox.getCorner());\n  return lineLayout(portsPositionArgs, start, end, groupPositionArgs);\n};\nexport const left = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  return lineLayout(portsPositionArgs, elemBBox.getTopLeft(), elemBBox.getBottomLeft(), groupPositionArgs);\n};\nexport const right = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  return lineLayout(portsPositionArgs, elemBBox.getTopRight(), elemBBox.getBottomRight(), groupPositionArgs);\n};\nexport const top = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  return lineLayout(portsPositionArgs, elemBBox.getTopLeft(), elemBBox.getTopRight(), groupPositionArgs);\n};\nexport const bottom = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n  return lineLayout(portsPositionArgs, elemBBox.getBottomLeft(), elemBBox.getBottomRight(), groupPositionArgs);\n};\n\nfunction lineLayout(portsPositionArgs, p1, p2, groupPositionArgs) {\n  const line = new Line(p1, p2);\n  const length = portsPositionArgs.length;\n  return portsPositionArgs.map((_a, index) => {\n    var {\n      strict\n    } = _a,\n        offset = __rest(_a, [\"strict\"]);\n\n    const ratio = strict || groupPositionArgs.strict ? (index + 1) / (length + 1) : (index + 0.5) / length;\n    const p = line.pointAt(ratio);\n\n    if (offset.dx || offset.dy) {\n      p.translate(offset.dx || 0, offset.dy || 0);\n    }\n\n    return toResult(p.round(), 0, offset);\n  });\n}","map":{"version":3,"sources":["../../../src/registry/port-layout/line.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,SAAgB,IAAhB,QAA4B,gBAA5B;AACA,SAAS,cAAT,EAAyB,QAAzB,QAAyC,QAAzC;AAYA,OAAO,MAAM,IAAI,GAAoC,CACnD,iBADmD,EAEnD,QAFmD,EAGnD,iBAHmD,KAIjD;AACF,QAAM,KAAK,GAAG,cAAc,CAC1B,QAD0B,EAE1B,iBAAiB,CAAC,KAAlB,IAA2B,QAAQ,CAAC,SAAT,EAFD,CAA5B;AAIA,QAAM,GAAG,GAAG,cAAc,CACxB,QADwB,EAExB,iBAAiB,CAAC,GAAlB,IAAyB,QAAQ,CAAC,SAAT,EAFD,CAA1B;AAKA,SAAO,UAAU,CAAC,iBAAD,EAAoB,KAApB,EAA2B,GAA3B,EAAgC,iBAAhC,CAAjB;AACD,CAfM;AAiBP,OAAO,MAAM,IAAI,GAAoC,CACnD,iBADmD,EAEnD,QAFmD,EAGnD,iBAHmD,KAIjD;AACF,SAAO,UAAU,CACf,iBADe,EAEf,QAAQ,CAAC,UAAT,EAFe,EAGf,QAAQ,CAAC,aAAT,EAHe,EAIf,iBAJe,CAAjB;AAMD,CAXM;AAaP,OAAO,MAAM,KAAK,GAAoC,CACpD,iBADoD,EAEpD,QAFoD,EAGpD,iBAHoD,KAIlD;AACF,SAAO,UAAU,CACf,iBADe,EAEf,QAAQ,CAAC,WAAT,EAFe,EAGf,QAAQ,CAAC,cAAT,EAHe,EAIf,iBAJe,CAAjB;AAMD,CAXM;AAaP,OAAO,MAAM,GAAG,GAAoC,CAClD,iBADkD,EAElD,QAFkD,EAGlD,iBAHkD,KAIhD;AACF,SAAO,UAAU,CACf,iBADe,EAEf,QAAQ,CAAC,UAAT,EAFe,EAGf,QAAQ,CAAC,WAAT,EAHe,EAIf,iBAJe,CAAjB;AAMD,CAXM;AAaP,OAAO,MAAM,MAAM,GAAoC,CACrD,iBADqD,EAErD,QAFqD,EAGrD,iBAHqD,KAInD;AACF,SAAO,UAAU,CACf,iBADe,EAEf,QAAQ,CAAC,aAAT,EAFe,EAGf,QAAQ,CAAC,cAAT,EAHe,EAIf,iBAJe,CAAjB;AAMD,CAXM;;AAaP,SAAS,UAAT,CACE,iBADF,EAEE,EAFF,EAGE,EAHF,EAIE,iBAJF,EAI6B;AAE3B,QAAM,IAAI,GAAG,IAAI,IAAJ,CAAS,EAAT,EAAa,EAAb,CAAb;AACA,QAAM,MAAM,GAAG,iBAAiB,CAAC,MAAjC;AACA,SAAO,iBAAiB,CAAC,GAAlB,CAAsB,CAAC,EAAD,EAAwB,KAAxB,KAAiC;QAAhC;AAAE,MAAA;AAAF,QAAQ,E;QAAK,MAAM,GAAA,MAAA,CAAA,EAAA,EAAnB,CAAA,QAAA,CAAmB,C;;AAC/C,UAAM,KAAK,GACT,MAAM,IAAI,iBAAiB,CAAC,MAA5B,GACI,CAAC,KAAK,GAAG,CAAT,KAAe,MAAM,GAAG,CAAxB,CADJ,GAEI,CAAC,KAAK,GAAG,GAAT,IAAgB,MAHtB;AAKA,UAAM,CAAC,GAAG,IAAI,CAAC,OAAL,CAAa,KAAb,CAAV;;AACA,QAAI,MAAM,CAAC,EAAP,IAAa,MAAM,CAAC,EAAxB,EAA4B;AAC1B,MAAA,CAAC,CAAC,SAAF,CAAY,MAAM,CAAC,EAAP,IAAa,CAAzB,EAA4B,MAAM,CAAC,EAAP,IAAa,CAAzC;AACD;;AAED,WAAO,QAAQ,CAAC,CAAC,CAAC,KAAF,EAAD,EAAY,CAAZ,EAAe,MAAf,CAAf;AACD,GAZM,CAAP;AAaD","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Line } from '../../geometry';\nimport { normalizePoint, toResult } from './util';\nexport const line = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n    const start = normalizePoint(elemBBox, groupPositionArgs.start || elemBBox.getOrigin());\n    const end = normalizePoint(elemBBox, groupPositionArgs.end || elemBBox.getCorner());\n    return lineLayout(portsPositionArgs, start, end, groupPositionArgs);\n};\nexport const left = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n    return lineLayout(portsPositionArgs, elemBBox.getTopLeft(), elemBBox.getBottomLeft(), groupPositionArgs);\n};\nexport const right = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n    return lineLayout(portsPositionArgs, elemBBox.getTopRight(), elemBBox.getBottomRight(), groupPositionArgs);\n};\nexport const top = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n    return lineLayout(portsPositionArgs, elemBBox.getTopLeft(), elemBBox.getTopRight(), groupPositionArgs);\n};\nexport const bottom = (portsPositionArgs, elemBBox, groupPositionArgs) => {\n    return lineLayout(portsPositionArgs, elemBBox.getBottomLeft(), elemBBox.getBottomRight(), groupPositionArgs);\n};\nfunction lineLayout(portsPositionArgs, p1, p2, groupPositionArgs) {\n    const line = new Line(p1, p2);\n    const length = portsPositionArgs.length;\n    return portsPositionArgs.map((_a, index) => {\n        var { strict } = _a, offset = __rest(_a, [\"strict\"]);\n        const ratio = strict || groupPositionArgs.strict\n            ? (index + 1) / (length + 1)\n            : (index + 0.5) / length;\n        const p = line.pointAt(ratio);\n        if (offset.dx || offset.dy) {\n            p.translate(offset.dx || 0, offset.dy || 0);\n        }\n        return toResult(p.round(), 0, offset);\n    });\n}\n//# sourceMappingURL=line.js.map"]},"metadata":{},"sourceType":"module"}