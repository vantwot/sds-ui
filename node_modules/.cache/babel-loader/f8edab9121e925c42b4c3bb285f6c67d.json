{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { NumberExt, Dom } from '../../util';\nimport { ToolsView } from '../../view/tool';\nimport * as Util from './util';\nexport var Boundary = /*#__PURE__*/function (_ToolsView$ToolItem) {\n  _inherits(Boundary, _ToolsView$ToolItem);\n\n  var _super = _createSuper(Boundary);\n\n  function Boundary() {\n    _classCallCheck(this, Boundary);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Boundary, [{\n    key: \"onRender\",\n    value: function onRender() {\n      Dom.addClass(this.container, this.prefixClassName('cell-tool-boundary'));\n\n      if (this.options.attrs) {\n        var _a = this.options.attrs,\n            className = _a.class,\n            attrs = __rest(_a, [\"class\"]);\n\n        Dom.attr(this.container, Dom.kebablizeAttrs(attrs));\n\n        if (className) {\n          Dom.addClass(this.container, className);\n        }\n      }\n\n      this.update();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var view = this.cellView;\n      var options = this.options;\n      var useCellGeometry = options.useCellGeometry,\n          rotate = options.rotate;\n      var padding = NumberExt.normalizeSides(options.padding);\n      var bbox = Util.getViewBBox(view, useCellGeometry).moveAndExpand({\n        x: -padding.left,\n        y: -padding.top,\n        width: padding.left + padding.right,\n        height: padding.top + padding.bottom\n      });\n      var cell = view.cell;\n\n      if (cell.isNode()) {\n        var angle = cell.getAngle();\n\n        if (angle) {\n          if (rotate) {\n            var origin = cell.getBBox().getCenter();\n            Dom.rotate(this.container, angle, origin.x, origin.y, {\n              absolute: true\n            });\n          } else {\n            bbox = bbox.bbox(angle);\n          }\n        }\n      }\n\n      Dom.attr(this.container, bbox.toJSON());\n      return this;\n    }\n  }]);\n\n  return Boundary;\n}(ToolsView.ToolItem);\n\n(function (Boundary) {\n  Boundary.config({\n    name: 'boundary',\n    tagName: 'rect',\n    padding: 10,\n    attrs: {\n      fill: 'none',\n      stroke: '#333',\n      'stroke-width': 0.5,\n      'stroke-dasharray': '5, 5',\n      'pointer-events': 'none'\n    }\n  });\n})(Boundary || (Boundary = {}));","map":{"version":3,"sources":["../../../src/registry/tool/boundary.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AACA,SAAS,SAAT,EAAoB,GAApB,QAA+B,YAA/B;AAGA,SAAS,SAAT,QAA0B,iBAA1B;AACA,OAAO,KAAK,IAAZ,MAAsB,QAAtB;AAEA,WAAa,QAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAIY,oBAAQ;AAChB,MAAA,GAAG,CAAC,QAAJ,CAAa,KAAK,SAAlB,EAA6B,KAAK,eAAL,CAAqB,oBAArB,CAA7B;;AAEA,UAAI,KAAK,OAAL,CAAa,KAAjB,EAAwB;AAChB,YAAA,EAAA,GAAiC,KAAK,OAAL,CAAjC,KAAA;AAAA,YAAS,SAAT,GAAkB,EAAlB,CAAE,KAAF;AAAA,YAAuB,KAAvB,GAA4B,MAAA,CAAA,EAAA,EAA5B,CAAA,OAAA,CAA4B,CAA5B;;AACN,QAAA,GAAG,CAAC,IAAJ,CAAS,KAAK,SAAd,EAAyB,GAAG,CAAC,cAAJ,CAAmB,KAAnB,CAAzB;;AACA,YAAI,SAAJ,EAAe;AACb,UAAA,GAAG,CAAC,QAAJ,CAAa,KAAK,SAAlB,EAA6B,SAA7B;AACD;AACF;;AACD,WAAK,MAAL;AACD;AAfH;AAAA;AAAA,WAiBE,kBAAM;AACJ,UAAM,IAAI,GAAG,KAAK,QAAlB;AACA,UAAM,OAAO,GAAG,KAAK,OAArB;AACA,UAAQ,eAAR,GAAoC,OAApC,CAAQ,eAAR;AAAA,UAAyB,MAAzB,GAAoC,OAApC,CAAyB,MAAzB;AACA,UAAM,OAAO,GAAG,SAAS,CAAC,cAAV,CAAyB,OAAO,CAAC,OAAjC,CAAhB;AACA,UAAI,IAAI,GAAG,IAAI,CAAC,WAAL,CAAiB,IAAjB,EAAuB,eAAvB,EAAwC,aAAxC,CAAsD;AAC/D,QAAA,CAAC,EAAE,CAAC,OAAO,CAAC,IADmD;AAE/D,QAAA,CAAC,EAAE,CAAC,OAAO,CAAC,GAFmD;AAG/D,QAAA,KAAK,EAAE,OAAO,CAAC,IAAR,GAAe,OAAO,CAAC,KAHiC;AAI/D,QAAA,MAAM,EAAE,OAAO,CAAC,GAAR,GAAc,OAAO,CAAC;AAJiC,OAAtD,CAAX;AAOA,UAAM,IAAI,GAAG,IAAI,CAAC,IAAlB;;AACA,UAAI,IAAI,CAAC,MAAL,EAAJ,EAAmB;AACjB,YAAM,KAAK,GAAG,IAAI,CAAC,QAAL,EAAd;;AACA,YAAI,KAAJ,EAAW;AACT,cAAI,MAAJ,EAAY;AACV,gBAAM,MAAM,GAAG,IAAI,CAAC,OAAL,GAAe,SAAf,EAAf;AACA,YAAA,GAAG,CAAC,MAAJ,CAAW,KAAK,SAAhB,EAA2B,KAA3B,EAAkC,MAAM,CAAC,CAAzC,EAA4C,MAAM,CAAC,CAAnD,EAAsD;AACpD,cAAA,QAAQ,EAAE;AAD0C,aAAtD;AAGD,WALD,MAKO;AACL,YAAA,IAAI,GAAG,IAAI,CAAC,IAAL,CAAU,KAAV,CAAP;AACD;AACF;AACF;;AAED,MAAA,GAAG,CAAC,IAAJ,CAAS,KAAK,SAAd,EAAyB,IAAI,CAAC,MAAL,EAAzB;AAEA,aAAO,IAAP;AACD;AA/CH;;AAAA;AAAA,EAA8B,SAAS,CAAC,QAAxC;;AA2DA,CAAA,UAAiB,QAAjB,EAAyB;AACvB,EAAA,QAAQ,CAAC,MAAT,CAAkC;AAChC,IAAA,IAAI,EAAE,UAD0B;AAEhC,IAAA,OAAO,EAAE,MAFuB;AAGhC,IAAA,OAAO,EAAE,EAHuB;AAIhC,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EAAE,MADD;AAEL,MAAA,MAAM,EAAE,MAFH;AAGL,sBAAgB,GAHX;AAIL,0BAAoB,MAJf;AAKL,wBAAkB;AALb;AAJyB,GAAlC;AAYD,CAbD,EAAiB,QAAQ,KAAR,QAAQ,GAAA,EAAA,CAAzB","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { NumberExt, Dom } from '../../util';\nimport { ToolsView } from '../../view/tool';\nimport * as Util from './util';\nexport class Boundary extends ToolsView.ToolItem {\n    onRender() {\n        Dom.addClass(this.container, this.prefixClassName('cell-tool-boundary'));\n        if (this.options.attrs) {\n            const _a = this.options.attrs, { class: className } = _a, attrs = __rest(_a, [\"class\"]);\n            Dom.attr(this.container, Dom.kebablizeAttrs(attrs));\n            if (className) {\n                Dom.addClass(this.container, className);\n            }\n        }\n        this.update();\n    }\n    update() {\n        const view = this.cellView;\n        const options = this.options;\n        const { useCellGeometry, rotate } = options;\n        const padding = NumberExt.normalizeSides(options.padding);\n        let bbox = Util.getViewBBox(view, useCellGeometry).moveAndExpand({\n            x: -padding.left,\n            y: -padding.top,\n            width: padding.left + padding.right,\n            height: padding.top + padding.bottom,\n        });\n        const cell = view.cell;\n        if (cell.isNode()) {\n            const angle = cell.getAngle();\n            if (angle) {\n                if (rotate) {\n                    const origin = cell.getBBox().getCenter();\n                    Dom.rotate(this.container, angle, origin.x, origin.y, {\n                        absolute: true,\n                    });\n                }\n                else {\n                    bbox = bbox.bbox(angle);\n                }\n            }\n        }\n        Dom.attr(this.container, bbox.toJSON());\n        return this;\n    }\n}\n(function (Boundary) {\n    Boundary.config({\n        name: 'boundary',\n        tagName: 'rect',\n        padding: 10,\n        attrs: {\n            fill: 'none',\n            stroke: '#333',\n            'stroke-width': 0.5,\n            'stroke-dasharray': '5, 5',\n            'pointer-events': 'none',\n        },\n    });\n})(Boundary || (Boundary = {}));\n//# sourceMappingURL=boundary.js.map"]},"metadata":{},"sourceType":"module"}