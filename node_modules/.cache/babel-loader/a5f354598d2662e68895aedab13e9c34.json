{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Dom } from '../util';\nimport { ModifierKey } from '../types';\nimport { Base } from './base';\nexport class ScrollerManager extends Base {\n  get widgetOptions() {\n    return this.options.scroller;\n  }\n\n  get pannable() {\n    if (this.widgetOptions) {\n      if (typeof this.widgetOptions.pannable === 'object') {\n        return this.widgetOptions.pannable.enabled;\n      }\n\n      return !!this.widgetOptions.pannable;\n    }\n\n    return false;\n  }\n\n  init() {\n    this.widget = this.graph.hook.createScroller();\n    this.startListening();\n    this.updateClassName();\n\n    if (this.widget) {\n      this.widget.center();\n    }\n  }\n\n  startListening() {\n    let eventTypes = [];\n    const pannable = this.widgetOptions.pannable;\n\n    if (typeof pannable === 'object') {\n      eventTypes = pannable.eventTypes || [];\n    } else {\n      eventTypes = ['leftMouseDown'];\n    }\n\n    if (eventTypes.includes('leftMouseDown')) {\n      this.graph.on('blank:mousedown', this.preparePanning, this);\n      this.graph.on('node:unhandled:mousedown', this.preparePanning, this);\n      this.graph.on('edge:unhandled:mousedown', this.preparePanning, this);\n    }\n\n    if (eventTypes.includes('rightMouseDown')) {\n      this.onRightMouseDown = this.onRightMouseDown.bind(this);\n      this.view.$(this.graph.container).on('mousedown', this.onRightMouseDown);\n    }\n  }\n\n  stopListening() {\n    let eventTypes = [];\n    const pannable = this.widgetOptions.pannable;\n\n    if (typeof pannable === 'object') {\n      eventTypes = pannable.eventTypes || [];\n    } else {\n      eventTypes = ['leftMouseDown'];\n    }\n\n    if (eventTypes.includes('leftMouseDown')) {\n      this.graph.off('blank:mousedown', this.preparePanning, this);\n      this.graph.off('node:unhandled:mousedown', this.preparePanning, this);\n      this.graph.off('edge:unhandled:mousedown', this.preparePanning, this);\n    }\n\n    if (eventTypes.includes('rightMouseDown')) {\n      this.view.$(this.graph.container).off('mousedown', this.onRightMouseDown);\n    }\n  }\n\n  onRightMouseDown(e) {\n    if (e.button === 2 && this.allowPanning(e, true) && this.widget) {\n      this.updateClassName(true);\n      this.widget.startPanning(e);\n      this.widget.once('pan:stop', () => this.updateClassName(false));\n    }\n  }\n\n  preparePanning(_ref) {\n    let {\n      e\n    } = _ref;\n\n    if (this.widget) {\n      if (this.allowPanning(e, true) || this.allowPanning(e) && !this.graph.selection.allowRubberband(e, true)) {\n        this.updateClassName(true);\n        this.widget.startPanning(e);\n        this.widget.once('pan:stop', () => this.updateClassName(false));\n      }\n    }\n  }\n\n  allowPanning(e, strict) {\n    return this.widget && this.pannable && ModifierKey.isMatch(e, this.widgetOptions.modifiers, strict) && this.graph.hook.allowPanning(e);\n  }\n\n  updateClassName(isPanning) {\n    if (this.widget == null) {\n      return;\n    }\n\n    const container = this.widget.container;\n    const pannable = this.view.prefixClassName('graph-scroller-pannable');\n\n    if (this.pannable) {\n      Dom.addClass(container, pannable);\n      container.dataset.panning = (!!isPanning).toString(); // Use dataset to control scroller panning style to avoid reflow caused by changing classList\n    } else {\n      Dom.removeClass(container, pannable);\n    }\n  }\n\n  enablePanning() {\n    if (!this.pannable) {\n      this.widgetOptions.pannable = true;\n      this.updateClassName(); // if (\n      //   ModifierKey.equals(\n      //     this.graph.options.scroller.modifiers,\n      //     this.graph.options.selecting.modifiers,\n      //   )\n      // ) {\n      //   this.graph.selection.disableRubberband()\n      // }\n    }\n  }\n\n  disablePanning() {\n    if (this.pannable) {\n      this.widgetOptions.pannable = false;\n      this.updateClassName();\n    }\n  }\n\n  lock() {\n    if (this.widget) {\n      this.widget.lock();\n    }\n  }\n\n  unlock() {\n    if (this.widget) {\n      this.widget.unlock();\n    }\n  }\n\n  update() {\n    if (this.widget) {\n      this.widget.update();\n    }\n  }\n\n  enableAutoResize() {\n    if (this.widget) {\n      this.widget.enableAutoResize();\n    }\n  }\n\n  disableAutoResize() {\n    if (this.widget) {\n      this.widget.disableAutoResize();\n    }\n  }\n\n  resize(width, height) {\n    if (this.widget) {\n      this.widget.resize(width, height);\n    }\n  }\n\n  dispose() {\n    if (this.widget) {\n      this.widget.dispose();\n    }\n\n    this.stopListening();\n  }\n\n}\n\n__decorate([Base.dispose()], ScrollerManager.prototype, \"dispose\", null);","map":{"version":3,"sources":["../../src/graph/scroller.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Dom } from '../util';\nimport { ModifierKey } from '../types';\nimport { Base } from './base';\nexport class ScrollerManager extends Base {\n    get widgetOptions() {\n        return this.options.scroller;\n    }\n    get pannable() {\n        if (this.widgetOptions) {\n            if (typeof this.widgetOptions.pannable === 'object') {\n                return this.widgetOptions.pannable.enabled;\n            }\n            return !!this.widgetOptions.pannable;\n        }\n        return false;\n    }\n    init() {\n        this.widget = this.graph.hook.createScroller();\n        this.startListening();\n        this.updateClassName();\n        if (this.widget) {\n            this.widget.center();\n        }\n    }\n    startListening() {\n        let eventTypes = [];\n        const pannable = this.widgetOptions.pannable;\n        if (typeof pannable === 'object') {\n            eventTypes = pannable.eventTypes || [];\n        }\n        else {\n            eventTypes = ['leftMouseDown'];\n        }\n        if (eventTypes.includes('leftMouseDown')) {\n            this.graph.on('blank:mousedown', this.preparePanning, this);\n            this.graph.on('node:unhandled:mousedown', this.preparePanning, this);\n            this.graph.on('edge:unhandled:mousedown', this.preparePanning, this);\n        }\n        if (eventTypes.includes('rightMouseDown')) {\n            this.onRightMouseDown = this.onRightMouseDown.bind(this);\n            this.view.$(this.graph.container).on('mousedown', this.onRightMouseDown);\n        }\n    }\n    stopListening() {\n        let eventTypes = [];\n        const pannable = this.widgetOptions.pannable;\n        if (typeof pannable === 'object') {\n            eventTypes = pannable.eventTypes || [];\n        }\n        else {\n            eventTypes = ['leftMouseDown'];\n        }\n        if (eventTypes.includes('leftMouseDown')) {\n            this.graph.off('blank:mousedown', this.preparePanning, this);\n            this.graph.off('node:unhandled:mousedown', this.preparePanning, this);\n            this.graph.off('edge:unhandled:mousedown', this.preparePanning, this);\n        }\n        if (eventTypes.includes('rightMouseDown')) {\n            this.view.$(this.graph.container).off('mousedown', this.onRightMouseDown);\n        }\n    }\n    onRightMouseDown(e) {\n        if (e.button === 2 && this.allowPanning(e, true) && this.widget) {\n            this.updateClassName(true);\n            this.widget.startPanning(e);\n            this.widget.once('pan:stop', () => this.updateClassName(false));\n        }\n    }\n    preparePanning({ e }) {\n        if (this.widget) {\n            if (this.allowPanning(e, true) ||\n                (this.allowPanning(e) && !this.graph.selection.allowRubberband(e, true))) {\n                this.updateClassName(true);\n                this.widget.startPanning(e);\n                this.widget.once('pan:stop', () => this.updateClassName(false));\n            }\n        }\n    }\n    allowPanning(e, strict) {\n        return (this.widget &&\n            this.pannable &&\n            ModifierKey.isMatch(e, this.widgetOptions.modifiers, strict) &&\n            this.graph.hook.allowPanning(e));\n    }\n    updateClassName(isPanning) {\n        if (this.widget == null) {\n            return;\n        }\n        const container = this.widget.container;\n        const pannable = this.view.prefixClassName('graph-scroller-pannable');\n        if (this.pannable) {\n            Dom.addClass(container, pannable);\n            container.dataset.panning = (!!isPanning).toString(); // Use dataset to control scroller panning style to avoid reflow caused by changing classList\n        }\n        else {\n            Dom.removeClass(container, pannable);\n        }\n    }\n    enablePanning() {\n        if (!this.pannable) {\n            this.widgetOptions.pannable = true;\n            this.updateClassName();\n            // if (\n            //   ModifierKey.equals(\n            //     this.graph.options.scroller.modifiers,\n            //     this.graph.options.selecting.modifiers,\n            //   )\n            // ) {\n            //   this.graph.selection.disableRubberband()\n            // }\n        }\n    }\n    disablePanning() {\n        if (this.pannable) {\n            this.widgetOptions.pannable = false;\n            this.updateClassName();\n        }\n    }\n    lock() {\n        if (this.widget) {\n            this.widget.lock();\n        }\n    }\n    unlock() {\n        if (this.widget) {\n            this.widget.unlock();\n        }\n    }\n    update() {\n        if (this.widget) {\n            this.widget.update();\n        }\n    }\n    enableAutoResize() {\n        if (this.widget) {\n            this.widget.enableAutoResize();\n        }\n    }\n    disableAutoResize() {\n        if (this.widget) {\n            this.widget.disableAutoResize();\n        }\n    }\n    resize(width, height) {\n        if (this.widget) {\n            this.widget.resize(width, height);\n        }\n    }\n    dispose() {\n        if (this.widget) {\n            this.widget.dispose();\n        }\n        this.stopListening();\n    }\n}\n__decorate([\n    Base.dispose()\n], ScrollerManager.prototype, \"dispose\", null);\n//# sourceMappingURL=scroller.js.map"]},"metadata":{},"sourceType":"module"}