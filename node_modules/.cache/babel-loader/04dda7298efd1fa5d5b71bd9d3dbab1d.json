{"ast":null,"code":"var _jsxFileName = \"/home/manolo/sds-ui/src/components/AuthorsListOnModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n/* Components */\n\nimport ShowMoreButton from './ShowMoreButton';\n/* UI Library Components */\n\nimport { Divider, Tooltip } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthorsListOnModal = _ref => {\n  _s();\n\n  let {\n    authors\n  } = _ref;\n  const [authorsQuantity, setAuthorsQuantity] = useState(10);\n  const [showingAll, setShowingAll] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [' ', authors.slice(0, authorsQuantity).map(author => {\n      var _author$affiliation, _author$affiliation$i;\n\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: `Afiliación: ${((_author$affiliation = author.affiliation) === null || _author$affiliation === void 0 ? void 0 : (_author$affiliation$i = _author$affiliation.institution) === null || _author$affiliation$i === void 0 ? void 0 : _author$affiliation$i.name) ? author.affiliation.institution.name : 'No disponible'}.`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: author.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), author !== authors[authors.length - 1] ? ', ' : '.']\n      }, author.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Divider, {\n      type: \"vertical\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), authors.length > 10 ? /*#__PURE__*/_jsxDEV(ShowMoreButton, {\n      showingAll: showingAll,\n      setAuthorsQuantity: setAuthorsQuantity,\n      setShowingAll: setShowingAll,\n      length: authors.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : '']\n  }, void 0, true);\n};\n\n_s(AuthorsListOnModal, \"qfq2n37J2MG1f3JvtRlpFfiFUyQ=\");\n\n_c = AuthorsListOnModal;\nexport default AuthorsListOnModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthorsListOnModal\");","map":{"version":3,"sources":["/home/manolo/sds-ui/src/components/AuthorsListOnModal.jsx"],"names":["React","useState","ShowMoreButton","Divider","Tooltip","AuthorsListOnModal","authors","authorsQuantity","setAuthorsQuantity","showingAll","setShowingAll","slice","map","author","affiliation","institution","name","length","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA;;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,MAAjC;;;;AAEA,MAAMC,kBAAkB,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC1C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AAEA,sBACE;AAAA,eACG,GADH,EAEGK,OAAO,CAACK,KAAR,CAAc,CAAd,EAAiBJ,eAAjB,EAAkCK,GAAlC,CAAuCC,MAAD;AAAA;;AAAA,0BACrC,QAAC,OAAD;AAEE,QAAA,KAAK,EAAG,eACN,wBAAAA,MAAM,CAACC,WAAP,qGAAoBC,WAApB,gFAAiCC,IAAjC,IACIH,MAAM,CAACC,WAAP,CAAmBC,WAAnB,CAA+BC,IADnC,GAEI,eACL,GANH;AAAA,gCAQE;AAAA,oBAAOH,MAAM,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,gBARF,EASGH,MAAM,KAAKP,OAAO,CAACA,OAAO,CAACW,MAAR,GAAiB,CAAlB,CAAlB,GAAyC,IAAzC,GAAgD,GATnD;AAAA,SACOJ,MAAM,CAACK,EADd;AAAA;AAAA;AAAA;AAAA,cADqC;AAAA,KAAtC,CAFH,eAeE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YAfF,EAgBGZ,OAAO,CAACW,MAAR,GAAiB,EAAjB,gBACC,QAAC,cAAD;AACE,MAAA,UAAU,EAAER,UADd;AAEE,MAAA,kBAAkB,EAAED,kBAFtB;AAGE,MAAA,aAAa,EAAEE,aAHjB;AAIE,MAAA,MAAM,EAAEJ,OAAO,CAACW;AAJlB;AAAA;AAAA;AAAA;AAAA,YADD,GAQC,EAxBJ;AAAA,kBADF;AA6BD,CAjCD;;GAAMZ,kB;;KAAAA,kB;AAmCN,eAAeA,kBAAf","sourcesContent":["import React, { useState } from 'react';\n\n/* Components */\nimport ShowMoreButton from './ShowMoreButton';\n\n/* UI Library Components */\nimport { Divider, Tooltip } from 'antd';\n\nconst AuthorsListOnModal = ({ authors }) => {\n  const [authorsQuantity, setAuthorsQuantity] = useState(10);\n  const [showingAll, setShowingAll] = useState(false);\n\n  return (\n    <>\n      {' '}\n      {authors.slice(0, authorsQuantity).map((author) => (\n        <Tooltip\n          key={author.id}\n          title={`Afiliación: ${\n            author.affiliation?.institution?.name\n              ? author.affiliation.institution.name\n              : 'No disponible'\n          }.`}\n        >\n          <span>{author.name}</span>\n          {author !== authors[authors.length - 1] ? ', ' : '.'}\n        </Tooltip>\n      ))}\n      <Divider type=\"vertical\" />\n      {authors.length > 10 ? (\n        <ShowMoreButton\n          showingAll={showingAll}\n          setAuthorsQuantity={setAuthorsQuantity}\n          setShowingAll={setShowingAll}\n          length={authors.length}\n        />\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nexport default AuthorsListOnModal;\n"]},"metadata":{},"sourceType":"module"}