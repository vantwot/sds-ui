{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport BaseMapWrapper from '../BaseMapWrapper';\n\nfunction loadStyles(css, doc) {\n  var isMiniAli = typeof my !== 'undefined' && !!my && typeof my.showToast === 'function';\n  var isWeChatMiniProgram = typeof wx !== 'undefined' && wx !== null && (typeof wx.request !== 'undefined' || typeof wx.miniProgram !== 'undefined');\n\n  if (isMiniAli || isWeChatMiniProgram) {\n    return;\n  }\n\n  if (!doc) doc = document;\n\n  if (!doc) {\n    return;\n  }\n\n  var head = doc.head || doc.getElementsByTagName('head')[0];\n\n  if (!head) {\n    head = doc.createElement('head');\n    var body = doc.body || doc.getElementsByTagName('body')[0];\n\n    if (body) {\n      body.parentNode.insertBefore(head, body);\n    } else {\n      doc.documentElement.appendChild(head);\n    }\n  }\n\n  var style = doc.createElement('style');\n  style.type = 'text/css';\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(doc.createTextNode(css));\n  }\n\n  head.appendChild(style);\n  return style;\n}\n\nloadStyles(\".mapboxgl-ctrl-logo {\\n display: none !important;\\n}\\n\");\nimport MapboxService from './map';\n\nvar MapboxWrapper = function (_BaseMapWrapper) {\n  _inherits(MapboxWrapper, _BaseMapWrapper);\n\n  var _super = _createSuper(MapboxWrapper);\n\n  function MapboxWrapper() {\n    _classCallCheck(this, MapboxWrapper);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MapboxWrapper, [{\n    key: \"getServiceConstructor\",\n    value: function getServiceConstructor() {\n      return MapboxService;\n    }\n  }]);\n\n  return MapboxWrapper;\n}(BaseMapWrapper);\n\nexport { MapboxWrapper as default };","map":{"version":3,"sources":["../../src/mapbox/index.ts"],"names":["MapboxWrapper","BaseMapWrapper"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAA,cAAA,MAAA,mBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAA,aAAA,MAAA,OAAA;;IACqBA,a;;;;;;;;;;;;;WAGnB,SAAA,qBAAA,GAAkC;AAChC,aAAA,aAAA;AACD;;;;EALwCC,c;;SAAtBD,a","sourcesContent":["import { Map } from 'mapbox-gl';\nimport { IMapboxInstance } from '../../typings/index';\nimport BaseMapWrapper from '../BaseMapWrapper';\nimport './logo.css';\nimport MapboxService from './map';\nexport default class MapboxWrapper extends BaseMapWrapper<\n  Map & IMapboxInstance\n> {\n  protected getServiceConstructor() {\n    return MapboxService;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}