{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React from 'react';\nimport { useExtensionRegistry } from './extension-context';\nexport function XFlowAppExtensionMoudle(props) {\n  const {\n    createModule,\n    children\n  } = props;\n  /** 获取扩展Registry */\n\n  const extensionRegistry = useExtensionRegistry();\n  /** Config */\n\n  const config = React.useMemo(() => props.config || {\n    CONFIG_TYPE: '',\n    getConfig: () => __awaiter(this, void 0, void 0, function* () {\n      return {};\n    })\n  },\n  /* eslint-disable-next-line  */\n  []);\n  React.useEffect(() => {\n    /** 注册 extension 到 Registry */\n    const disposable = extensionRegistry.addExtension({\n      config: config,\n      createModule\n    });\n    return () => {\n      disposable.dispose();\n    };\n    /* eslint-disable-next-line  */\n  }, []);\n  /** 可以 Wrap Children组件 */\n\n  if (Array.isArray(children) || React.isValidElement(children)) {\n    return React.createElement(React.Fragment, null, \" \", children, \" \");\n  }\n\n  return null;\n}","map":{"version":3,"sources":["../../../src/xflow-main/components/app-extension-module.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,oBAAT,QAAqC,qBAArC;AAOA,OAAM,SAAU,uBAAV,CAAqC,KAArC,EAAqE;AACzE,QAAM;AAAE,IAAA,YAAF;AAAgB,IAAA;AAAhB,MAA6B,KAAnC;AACA;;AACA,QAAM,iBAAiB,GAAG,oBAAoB,EAA9C;AAEA;;AACA,QAAM,MAAM,GAAG,KAAK,CAAC,OAAN,CACb,MAAM,KAAK,CAAC,MAAN,IAAgB;AAAE,IAAA,WAAW,EAAE,EAAf;AAAmB,IAAA,SAAS,EAAE,MAAW,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAAC,aAAC,EAAD;AAAS,KAAV;AAAzC,GADT;AAEb;AACA,IAHa,CAAf;AAMA,EAAA,KAAK,CAAC,SAAN,CAAgB,MAAK;AACnB;AACA,UAAM,UAAU,GAAG,iBAAiB,CAAC,YAAlB,CAA+B;AAChD,MAAA,MAAM,EAAE,MADwC;AAEhD,MAAA;AAFgD,KAA/B,CAAnB;AAIA,WAAO,MAAK;AACV,MAAA,UAAU,CAAC,OAAX;AACD,KAFD;AAGA;AACD,GAVD,EAUG,EAVH;AAYA;;AACA,MAAI,KAAK,CAAC,OAAN,CAAc,QAAd,KAA2B,KAAK,CAAC,cAAN,CAAqB,QAArB,CAA/B,EAA+D;AAC7D,WAAO,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,E,GAAA,EAAI,QAAJ,EAAiB,GAAjB,CAAP;AACD;;AAED,SAAO,IAAP;AACD","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from 'react';\nimport { useExtensionRegistry } from './extension-context';\nexport function XFlowAppExtensionMoudle(props) {\n    const { createModule, children } = props;\n    /** 获取扩展Registry */\n    const extensionRegistry = useExtensionRegistry();\n    /** Config */\n    const config = React.useMemo(() => props.config || { CONFIG_TYPE: '', getConfig: () => __awaiter(this, void 0, void 0, function* () { return ({}); }) }, \n    /* eslint-disable-next-line  */\n    []);\n    React.useEffect(() => {\n        /** 注册 extension 到 Registry */\n        const disposable = extensionRegistry.addExtension({\n            config: config,\n            createModule,\n        });\n        return () => {\n            disposable.dispose();\n        };\n        /* eslint-disable-next-line  */\n    }, []);\n    /** 可以 Wrap Children组件 */\n    if (Array.isArray(children) || React.isValidElement(children)) {\n        return React.createElement(React.Fragment, null,\n            \" \",\n            children,\n            \" \");\n    }\n    return null;\n}\n//# sourceMappingURL=app-extension-module.js.map"]},"metadata":{},"sourceType":"module"}