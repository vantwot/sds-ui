{"ast":null,"code":"import _defineProperty from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { FlowchartFormWrapper } from '../../form-wrapper';\nimport { ColorPicker, InputNumberFiled, InputFiled, SelectField } from './fields';\nimport { PREFIX, DefaultEdgeConfig, ArrowStrokeMaps, ArrowMaps } from './constants';\nimport './style.less';\n\nvar EdgeComponent = function EdgeComponent(props) {\n  var config = props.config,\n      _props$plugin = props.plugin,\n      plugin = _props$plugin === void 0 ? {} : _props$plugin;\n  var updateEdge = plugin.updateEdge;\n\n  var _useState = useState(Object.assign(Object.assign({}, DefaultEdgeConfig), config)),\n      _useState2 = _slicedToArray(_useState, 2),\n      edgeConfig = _useState2[0],\n      setEdgeConfig = _useState2[1];\n\n  useEffect(function () {\n    setEdgeConfig(Object.assign(Object.assign({}, DefaultEdgeConfig), config));\n  }, [config]);\n\n  var getAttrs = function getAttrs(key) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'line';\n\n    var _a;\n\n    var _edgeConfig$attrs = edgeConfig.attrs,\n        attrs = _edgeConfig$attrs === void 0 ? {} : _edgeConfig$attrs;\n    return (_a = attrs[type]) === null || _a === void 0 ? void 0 : _a[key];\n  };\n\n  var getArrowValue = function getArrowValue() {\n    var _a, _b, _c, _d, _e;\n\n    var _edgeConfig$attrs2 = edgeConfig.attrs,\n        attrs = _edgeConfig$attrs2 === void 0 ? {} : _edgeConfig$attrs2;\n    var _attrs$line = attrs.line,\n        line = _attrs$line === void 0 ? {} : _attrs$line;\n\n    if (((_a = line.sourceMarker) === null || _a === void 0 ? void 0 : _a.name) && ((_b = line.targetMarker) === null || _b === void 0 ? void 0 : _b.name)) {\n      return 'all';\n    }\n\n    if (!((_c = line.sourceMarker) === null || _c === void 0 ? void 0 : _c.name) && !((_d = line.targetMarker) === null || _d === void 0 ? void 0 : _d.name)) {\n      return 'none';\n    }\n\n    if ((_e = line.sourceMarker) === null || _e === void 0 ? void 0 : _e.name) {\n      return 'source';\n    }\n\n    return 'target';\n  };\n\n  var getSrokeDashValue = function getSrokeDashValue() {\n    var _edgeConfig$attrs3 = edgeConfig.attrs,\n        attrs = _edgeConfig$attrs3 === void 0 ? {} : _edgeConfig$attrs3;\n    var _attrs$line2 = attrs.line,\n        line = _attrs$line2 === void 0 ? {} : _attrs$line2;\n    return line.strokeDasharray ? 'dash' : 'solid';\n  };\n\n  var onEdgeConfigChange = function onEdgeConfigChange(key, value) {\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'line';\n\n    var _a, _b;\n    /** 全量更新，简化逻辑 */\n\n\n    if (key === 'arrow') {\n      setEdgeConfig(Object.assign(Object.assign({}, edgeConfig), {\n        attrs: Object.assign(Object.assign({}, edgeConfig.attrs), _defineProperty({}, type, Object.assign(Object.assign({}, (_a = edgeConfig.attrs) === null || _a === void 0 ? void 0 : _a[type]), value)))\n      }));\n    } else {\n      var _Object$assign4;\n\n      setEdgeConfig(Object.assign(Object.assign({}, edgeConfig), (_Object$assign4 = {}, _defineProperty(_Object$assign4, key, value), _defineProperty(_Object$assign4, \"attrs\", Object.assign(Object.assign({}, edgeConfig.attrs), _defineProperty({}, type, Object.assign(Object.assign({}, (_b = edgeConfig.attrs) === null || _b === void 0 ? void 0 : _b[type]), _defineProperty({}, key, value))))), _Object$assign4)));\n    }\n\n    updateEdge(_defineProperty({}, key, value), type, key === 'arrow' ? 'arrow' : '');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"\".concat(PREFIX, \"-panel-body\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(PREFIX, \"-panel-group\")\n  }, React.createElement(\"h5\", null, \"\\u5185\\u5BB9\"), React.createElement(InputFiled, {\n    label: \"\\u6807\\u7B7E\",\n    value: edgeConfig.label,\n    onChange: function onChange(value) {\n      onEdgeConfigChange('label', value);\n    }\n  })), React.createElement(\"h5\", {\n    style: {\n      marginBottom: 12\n    }\n  }, \"\\u6837\\u5F0F\"), React.createElement(\"div\", {\n    className: \"\".concat(PREFIX, \"-panel-group\"),\n    style: {\n      marginBottom: 0\n    }\n  }, React.createElement(\"h5\", null, \"\\u7EBF\"), React.createElement(SelectField, {\n    label: \"\\u7BAD\\u5934\",\n    value: getArrowValue(),\n    width: \"100%\",\n    options: [{\n      label: '正向',\n      value: 'target'\n    }, {\n      label: '逆向',\n      value: 'source'\n    }, {\n      label: '双向',\n      value: 'all'\n    }, {\n      label: '无',\n      value: 'none'\n    }],\n    onChange: function onChange(value) {\n      onEdgeConfigChange('arrow', ArrowMaps[value], 'line');\n    }\n  }), React.createElement(\"div\", {\n    className: \"\".concat(PREFIX, \"-edge-stroke-style\")\n  }, React.createElement(SelectField, {\n    label: \"\\u7EBF\\u5F62\",\n    width: 68,\n    value: getSrokeDashValue(),\n    options: [{\n      label: '实线',\n      value: 'solid'\n    }, {\n      label: '虚线',\n      value: 'dash'\n    }],\n    onChange: function onChange(value) {\n      onEdgeConfigChange('strokeDasharray', ArrowStrokeMaps[value], 'line');\n    }\n  }), React.createElement(InputNumberFiled, {\n    value: getAttrs('strokeWidth'),\n    min: 1,\n    onChange: function onChange(value) {\n      onEdgeConfigChange('strokeWidth', value, 'line');\n    }\n  })), React.createElement(ColorPicker, {\n    label: \"\\u8FB9\\u6846\",\n    value: getAttrs('stroke'),\n    onChange: function onChange(value) {\n      onEdgeConfigChange('stroke', value, 'line');\n    }\n  })), React.createElement(\"div\", {\n    className: \"\".concat(PREFIX, \"-panel-group\")\n  }, React.createElement(\"h5\", null, \"\\u6807\\u7B7E\"), React.createElement(\"div\", {\n    className: \"\".concat(PREFIX, \"-edge-text-style\")\n  }, React.createElement(InputNumberFiled, {\n    label: \"\\u5B57\\u53F7\",\n    min: 10,\n    width: 68,\n    value: getAttrs('fontSize', 'text') || 12,\n    onChange: function onChange(value) {\n      onEdgeConfigChange('fontSize', value, 'text');\n    }\n  }), React.createElement(ColorPicker, {\n    value: getAttrs('fill', 'text') || '#000',\n    onChange: function onChange(value) {\n      onEdgeConfigChange('fill', value, 'text');\n    }\n  }))));\n};\n\nexport var EdgeService = function EdgeService(props) {\n  return React.createElement(FlowchartFormWrapper, Object.assign({}, props, {\n    type: \"edge\"\n  }), function (config, plugin) {\n    return React.createElement(EdgeComponent, Object.assign({}, props, {\n      plugin: plugin,\n      config: config\n    }));\n  });\n};","map":{"version":3,"sources":["../../../../src/flowchart-editor-panel/control-map-service/components/edge.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FlowchartFormWrapper } from '../../form-wrapper';\nimport { ColorPicker, InputNumberFiled, InputFiled, SelectField } from './fields';\nimport { PREFIX, DefaultEdgeConfig, ArrowStrokeMaps, ArrowMaps } from './constants';\nimport './style.less';\nconst EdgeComponent = props => {\n    const { config, plugin = {} } = props;\n    const { updateEdge } = plugin;\n    const [edgeConfig, setEdgeConfig] = useState(Object.assign(Object.assign({}, DefaultEdgeConfig), config));\n    useEffect(() => {\n        setEdgeConfig(Object.assign(Object.assign({}, DefaultEdgeConfig), config));\n    }, [config]);\n    const getAttrs = (key, type = 'line') => {\n        var _a;\n        const { attrs = {} } = edgeConfig;\n        return (_a = attrs[type]) === null || _a === void 0 ? void 0 : _a[key];\n    };\n    const getArrowValue = () => {\n        var _a, _b, _c, _d, _e;\n        const { attrs = {} } = edgeConfig;\n        const { line = {} } = attrs;\n        if (((_a = line.sourceMarker) === null || _a === void 0 ? void 0 : _a.name) && ((_b = line.targetMarker) === null || _b === void 0 ? void 0 : _b.name)) {\n            return 'all';\n        }\n        if (!((_c = line.sourceMarker) === null || _c === void 0 ? void 0 : _c.name) && !((_d = line.targetMarker) === null || _d === void 0 ? void 0 : _d.name)) {\n            return 'none';\n        }\n        if ((_e = line.sourceMarker) === null || _e === void 0 ? void 0 : _e.name) {\n            return 'source';\n        }\n        return 'target';\n    };\n    const getSrokeDashValue = () => {\n        const { attrs = {} } = edgeConfig;\n        const { line = {} } = attrs;\n        return line.strokeDasharray ? 'dash' : 'solid';\n    };\n    const onEdgeConfigChange = (key, value, type = 'line') => {\n        var _a, _b;\n        /** 全量更新，简化逻辑 */\n        if (key === 'arrow') {\n            setEdgeConfig(Object.assign(Object.assign({}, edgeConfig), { attrs: Object.assign(Object.assign({}, edgeConfig.attrs), { [type]: Object.assign(Object.assign({}, (_a = edgeConfig.attrs) === null || _a === void 0 ? void 0 : _a[type]), value) }) }));\n        }\n        else {\n            setEdgeConfig(Object.assign(Object.assign({}, edgeConfig), { [key]: value, attrs: Object.assign(Object.assign({}, edgeConfig.attrs), { [type]: Object.assign(Object.assign({}, (_b = edgeConfig.attrs) === null || _b === void 0 ? void 0 : _b[type]), { [key]: value }) }) }));\n        }\n        updateEdge({\n            [key]: value,\n        }, type, key === 'arrow' ? 'arrow' : '');\n    };\n    return (React.createElement(\"div\", { className: `${PREFIX}-panel-body` },\n        React.createElement(\"div\", { className: `${PREFIX}-panel-group` },\n            React.createElement(\"h5\", null, \"\\u5185\\u5BB9\"),\n            React.createElement(InputFiled, { label: \"\\u6807\\u7B7E\", value: edgeConfig.label, onChange: value => {\n                    onEdgeConfigChange('label', value);\n                } })),\n        React.createElement(\"h5\", { style: { marginBottom: 12 } }, \"\\u6837\\u5F0F\"),\n        React.createElement(\"div\", { className: `${PREFIX}-panel-group`, style: { marginBottom: 0 } },\n            React.createElement(\"h5\", null, \"\\u7EBF\"),\n            React.createElement(SelectField, { label: \"\\u7BAD\\u5934\", value: getArrowValue(), width: \"100%\", options: [\n                    {\n                        label: '正向',\n                        value: 'target',\n                    },\n                    {\n                        label: '逆向',\n                        value: 'source',\n                    },\n                    {\n                        label: '双向',\n                        value: 'all',\n                    },\n                    {\n                        label: '无',\n                        value: 'none',\n                    },\n                ], onChange: value => {\n                    onEdgeConfigChange('arrow', ArrowMaps[value], 'line');\n                } }),\n            React.createElement(\"div\", { className: `${PREFIX}-edge-stroke-style` },\n                React.createElement(SelectField, { label: \"\\u7EBF\\u5F62\", width: 68, value: getSrokeDashValue(), options: [\n                        {\n                            label: '实线',\n                            value: 'solid',\n                        },\n                        {\n                            label: '虚线',\n                            value: 'dash',\n                        },\n                    ], onChange: value => {\n                        onEdgeConfigChange('strokeDasharray', ArrowStrokeMaps[value], 'line');\n                    } }),\n                React.createElement(InputNumberFiled, { value: getAttrs('strokeWidth'), min: 1, onChange: value => {\n                        onEdgeConfigChange('strokeWidth', value, 'line');\n                    } })),\n            React.createElement(ColorPicker, { label: \"\\u8FB9\\u6846\", value: getAttrs('stroke'), onChange: (value) => {\n                    onEdgeConfigChange('stroke', value, 'line');\n                } })),\n        React.createElement(\"div\", { className: `${PREFIX}-panel-group` },\n            React.createElement(\"h5\", null, \"\\u6807\\u7B7E\"),\n            React.createElement(\"div\", { className: `${PREFIX}-edge-text-style` },\n                React.createElement(InputNumberFiled, { label: \"\\u5B57\\u53F7\", min: 10, width: 68, value: getAttrs('fontSize', 'text') || 12, onChange: value => {\n                        onEdgeConfigChange('fontSize', value, 'text');\n                    } }),\n                React.createElement(ColorPicker, { value: getAttrs('fill', 'text') || '#000', onChange: (value) => {\n                        onEdgeConfigChange('fill', value, 'text');\n                    } })))));\n};\nexport const EdgeService = props => {\n    return (React.createElement(FlowchartFormWrapper, Object.assign({}, props, { type: \"edge\" }), (config, plugin) => React.createElement(EdgeComponent, Object.assign({}, props, { plugin: plugin, config: config }))));\n};\n//# sourceMappingURL=edge.js.map"]},"metadata":{},"sourceType":"module"}