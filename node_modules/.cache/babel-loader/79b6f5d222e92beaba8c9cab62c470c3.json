{"ast":null,"code":"function isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport { parse } from \"acorn\";\nimport { Messages, InterruptThrowError, InterruptThrowReferenceError, InterruptThrowSyntaxError } from \"./messages\";\nvar version = \"0.0.3\";\n\nfunction defineFunctionName(func, name) {\n  Object.defineProperty(func, \"name\", {\n    value: name,\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar Break = Symbol(\"Break\");\nvar Continue = Symbol(\"Continue\");\nvar DefaultCase = Symbol(\"DefaultCase\");\nvar EmptyStatementReturn = Symbol(\"EmptyStatementReturn\");\nvar WithScopeName = Symbol(\"WithScopeName\");\nvar SuperScopeName = Symbol(\"SuperScopeName\");\nvar RootScopeName = Symbol(\"RootScopeName\");\nvar GlobalScopeName = Symbol(\"GlobalScopeName\");\n\nfunction isFunction(func) {\n  return typeof func === \"function\";\n}\n\nvar InternalInterpreterReflection = /*#__PURE__*/function () {\n  function InternalInterpreterReflection(interpreter) {\n    this.interpreter = interpreter;\n  }\n\n  var _proto = InternalInterpreterReflection.prototype;\n\n  _proto.generator = function generator() {\n    var interpreter = this.interpreter;\n\n    function getCurrentScope() {\n      return this.getCurrentScope();\n    }\n\n    function getGlobalScope() {\n      return this.getGlobalScope();\n    }\n\n    function getCurrentContext() {\n      return this.getCurrentContext();\n    }\n\n    return {\n      getOptions: interpreter.getOptions.bind(interpreter),\n      getCurrentScope: getCurrentScope.bind(interpreter),\n      getGlobalScope: getGlobalScope.bind(interpreter),\n      getCurrentContext: getCurrentContext.bind(interpreter),\n      getExecStartTime: interpreter.getExecStartTime.bind(interpreter)\n    };\n  };\n\n  return InternalInterpreterReflection;\n}();\n\nfunction internalEval(reflection, code, useGlobalScope) {\n  if (useGlobalScope === void 0) {\n    useGlobalScope = true;\n  }\n\n  if (!(reflection instanceof InternalInterpreterReflection)) {\n    throw new Error(\"Illegal call\");\n  }\n\n  if (typeof code !== \"string\") return code;\n  if (!code) return void 0;\n  var instance = reflection.generator();\n  var opts = instance.getOptions();\n  var options = {\n    timeout: opts.timeout,\n    _initEnv: function _initEnv() {\n      // set caller context\n      if (!useGlobalScope) {\n        this.setCurrentContext(instance.getCurrentContext());\n      } // share timeout\n\n\n      this.execStartTime = instance.getExecStartTime();\n      this.execEndTime = this.execStartTime;\n    }\n  };\n  var currentScope = useGlobalScope ? instance.getGlobalScope() : instance.getCurrentScope();\n  var interpreter = new Interpreter(currentScope, options);\n  return interpreter.evaluate(code);\n}\n\nObject.defineProperty(internalEval, \"__IS_EVAL_FUNC\", {\n  value: true,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nfunction internalFunction(reflection) {\n  if (!(reflection instanceof InternalInterpreterReflection)) {\n    throw new Error(\"Illegal call\");\n  }\n\n  var instance = reflection.generator();\n\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n\n  var code = params.pop();\n  var interpreter = new Interpreter(instance.getGlobalScope(), instance.getOptions());\n  var wrapCode = \"\\n\\t\\t    (function anonymous(\" + params.join(\",\") + \"){\\n\\t\\t        \" + code + \"\\n\\t\\t    });\\n\\t\\t    \";\n  return interpreter.evaluate(wrapCode);\n}\n\nObject.defineProperty(internalFunction, \"__IS_FUNCTION_FUNC\", {\n  value: true,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nvar Return = function Return(value) {\n  this.value = value;\n};\n\nvar BreakLabel = function BreakLabel(value) {\n  this.value = value;\n};\n\nvar ContinueLabel = function ContinueLabel(value) {\n  this.value = value;\n};\n/**\n * scope chain\n *\n * superScope\n *     ↓\n * rootScope\n *     ↓\n * globalScope\n *     ↓\n * functionScope\n *\n */\n\n\nvar Scope = function Scope(data, parent, name) {\n  if (parent === void 0) {\n    parent = null;\n  }\n\n  this.name = name;\n  this.parent = parent;\n  this.data = data;\n  this.labelStack = [];\n};\n\nfunction noop() {}\n\nfunction createScope(parent, name) {\n  if (parent === void 0) {\n    parent = null;\n  }\n\n  return new Scope(Object.create(null), parent, name);\n}\n\nfunction createRootContext(data) {\n  return Object.create(data);\n}\n\nvar BuildInObjects = {\n  NaN: NaN,\n  Infinity: Infinity,\n  undefined: undefined,\n  // null,\n  Object: Object,\n  Array: Array,\n  String: String,\n  Boolean: Boolean,\n  Number: Number,\n  Date: Date,\n  RegExp: RegExp,\n  Error: Error,\n  URIError: URIError,\n  TypeError: TypeError,\n  RangeError: RangeError,\n  SyntaxError: SyntaxError,\n  ReferenceError: ReferenceError,\n  Float32Array: Float32Array,\n  Float64Array: Float64Array,\n  Uint32Array: Uint32Array,\n  Math: Math,\n  parseInt: parseInt,\n  parseFloat: parseFloat,\n  isNaN: isNaN,\n  isFinite: isFinite,\n  decodeURI: decodeURI,\n  decodeURIComponent: decodeURIComponent,\n  encodeURI: encodeURI,\n  encodeURIComponent: encodeURIComponent,\n  escape: escape,\n  unescape: unescape,\n  eval: internalEval,\n  Function: internalFunction\n}; // ES5 Object\n\nif (typeof JSON !== \"undefined\") {\n  BuildInObjects.JSON = JSON;\n} //ES6 Object\n\n\nif (typeof Promise !== \"undefined\") {\n  BuildInObjects.Promise = Promise;\n}\n\nif (typeof Set !== \"undefined\") {\n  BuildInObjects.Set = Set;\n}\n\nif (typeof Map !== \"undefined\") {\n  BuildInObjects.Map = Map;\n}\n\nif (typeof Symbol !== \"undefined\") {\n  BuildInObjects.Symbol = Symbol;\n}\n\nif (typeof Proxy !== \"undefined\") {\n  BuildInObjects.Proxy = Proxy;\n}\n\nif (typeof WeakMap !== \"undefined\") {\n  BuildInObjects.WeakMap = WeakMap;\n}\n\nif (typeof WeakSet !== \"undefined\") {\n  BuildInObjects.WeakSet = WeakSet;\n}\n\nif (typeof Reflect !== \"undefined\") {\n  BuildInObjects.Reflect = Reflect;\n}\n\nexport var Interpreter = /*#__PURE__*/function () {\n  function Interpreter(context, options) {\n    if (context === void 0) {\n      context = Interpreter.global;\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.sourceList = [];\n    this.collectDeclVars = Object.create(null);\n    this.collectDeclFuncs = Object.create(null);\n    this.isVarDeclMode = false;\n    this.lastExecNode = null;\n    this.isRunning = false;\n    this.options = {\n      ecmaVersion: options.ecmaVersion || Interpreter.ecmaVersion,\n      timeout: options.timeout || 0,\n      rootContext: options.rootContext,\n      globalContextInFunction: options.globalContextInFunction === undefined ? Interpreter.globalContextInFunction : options.globalContextInFunction,\n      _initEnv: options._initEnv\n    };\n    this.context = context || Object.create(null);\n    this.callStack = [];\n    this.initEnvironment(this.context);\n  }\n\n  var _proto2 = Interpreter.prototype;\n\n  _proto2.initEnvironment = function initEnvironment(ctx) {\n    var scope; //init global scope\n\n    if (ctx instanceof Scope) {\n      scope = ctx;\n    } else {\n      var rootScope = null;\n      var superScope = this.createSuperScope(ctx);\n\n      if (this.options.rootContext) {\n        rootScope = new Scope(createRootContext(this.options.rootContext), superScope, RootScopeName);\n      }\n\n      scope = new Scope(ctx, rootScope || superScope, GlobalScopeName);\n    }\n\n    this.globalScope = scope;\n    this.currentScope = this.globalScope; //init global context to this\n\n    this.globalContext = scope.data;\n    this.currentContext = scope.data; // collect var/function declare\n\n    this.collectDeclVars = Object.create(null);\n    this.collectDeclFuncs = Object.create(null);\n    this.execStartTime = Date.now();\n    this.execEndTime = this.execStartTime;\n    var _initEnv = this.options._initEnv;\n\n    if (_initEnv) {\n      _initEnv.call(this);\n    }\n  };\n\n  _proto2.getExecStartTime = function getExecStartTime() {\n    return this.execStartTime;\n  };\n\n  _proto2.getExecutionTime = function getExecutionTime() {\n    return this.execEndTime - this.execStartTime;\n  };\n\n  _proto2.setExecTimeout = function setExecTimeout(timeout) {\n    if (timeout === void 0) {\n      timeout = 0;\n    }\n\n    this.options.timeout = timeout;\n  };\n\n  _proto2.getOptions = function getOptions() {\n    return this.options;\n  };\n\n  _proto2.getGlobalScope = function getGlobalScope() {\n    return this.globalScope;\n  };\n\n  _proto2.getCurrentScope = function getCurrentScope() {\n    return this.currentScope;\n  };\n\n  _proto2.getCurrentContext = function getCurrentContext() {\n    return this.currentContext;\n  };\n\n  _proto2.isInterruptThrow = function isInterruptThrow(err) {\n    return err instanceof InterruptThrowError || err instanceof InterruptThrowReferenceError || err instanceof InterruptThrowSyntaxError;\n  };\n\n  _proto2.createSuperScope = function createSuperScope(ctx) {\n    var data = Object.assign({}, BuildInObjects);\n    var buildInObjectKeys = Object.keys(data);\n    buildInObjectKeys.forEach(function (key) {\n      if (key in ctx) {\n        delete data[key];\n      }\n    });\n    return new Scope(data, null, SuperScopeName);\n  };\n\n  _proto2.setCurrentContext = function setCurrentContext(ctx) {\n    this.currentContext = ctx;\n  };\n\n  _proto2.setCurrentScope = function setCurrentScope(scope) {\n    this.currentScope = scope;\n  };\n\n  _proto2.evaluate = function evaluate(code) {\n    if (code === void 0) {\n      code = \"\";\n    }\n\n    var node;\n    if (!code) return;\n    node = parse(code, {\n      ranges: true,\n      locations: true,\n      ecmaVersion: this.options.ecmaVersion || Interpreter.ecmaVersion\n    });\n    return this.evaluateNode(node, code);\n  };\n\n  _proto2.appendCode = function appendCode(code) {\n    return this.evaluate(code);\n  };\n\n  _proto2.evaluateNode = function evaluateNode(node, source) {\n    var _this = this;\n\n    if (source === void 0) {\n      source = \"\";\n    }\n\n    this.value = undefined;\n    this.source = source;\n    this.sourceList.push(source);\n    this.isRunning = true; //reset timeout\n\n    this.execStartTime = Date.now();\n    this.execEndTime = this.execStartTime; // reset\n\n    this.collectDeclVars = Object.create(null);\n    this.collectDeclFuncs = Object.create(null);\n    var currentScope = this.getCurrentScope();\n    var currentContext = this.getCurrentContext();\n    var labelStack = currentScope.labelStack.concat([]);\n    var callStack = this.callStack.concat([]);\n\n    var reset = function reset() {\n      _this.setCurrentScope(currentScope); //reset scope\n\n\n      _this.setCurrentContext(currentContext); //reset context\n\n\n      currentScope.labelStack = labelStack; //reset label stack\n\n      _this.callStack = callStack; //reset call stack\n    }; // start run\n\n\n    try {\n      var bodyClosure = this.createClosure(node); // add declares to data\n\n      this.addDeclarationsToScope(this.collectDeclVars, this.collectDeclFuncs, this.getCurrentScope());\n      bodyClosure();\n    } catch (e) {\n      throw e;\n    } finally {\n      reset();\n      this.execEndTime = Date.now();\n    }\n\n    this.isRunning = false;\n    return this.getValue();\n  };\n\n  _proto2.createErrorMessage = function createErrorMessage(msg, value, node) {\n    var message = msg[1].replace(\"%0\", String(value));\n\n    if (node !== null) {\n      message += this.getNodePosition(node || this.lastExecNode);\n    }\n\n    return message;\n  };\n\n  _proto2.createError = function createError(message, error) {\n    return new error(message);\n  };\n\n  _proto2.createThrowError = function createThrowError(message, error) {\n    return this.createError(message, error);\n  };\n\n  _proto2.createInternalThrowError = function createInternalThrowError(msg, value, node) {\n    return this.createError(this.createErrorMessage(msg, value, node), msg[2]);\n  };\n\n  _proto2.checkTimeout = function checkTimeout() {\n    if (!this.isRunning) return false;\n    var timeout = this.options.timeout || 0;\n    var now = Date.now();\n\n    if (now - this.execStartTime > timeout) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto2.getNodePosition = function getNodePosition(node) {\n    if (node) {\n      var errorCode = \"\"; //this.source.slice(node.start, node.end);\n\n      return node.loc ? \" [\" + node.loc.start.line + \":\" + node.loc.start.column + \"]\" + errorCode : \"\";\n    }\n\n    return \"\";\n  };\n\n  _proto2.createClosure = function createClosure(node) {\n    var _this2 = this;\n\n    var closure;\n\n    switch (node.type) {\n      case \"BinaryExpression\":\n        closure = this.binaryExpressionHandler(node);\n        break;\n\n      case \"LogicalExpression\":\n        closure = this.logicalExpressionHandler(node);\n        break;\n\n      case \"UnaryExpression\":\n        closure = this.unaryExpressionHandler(node);\n        break;\n\n      case \"UpdateExpression\":\n        closure = this.updateExpressionHandler(node);\n        break;\n\n      case \"ObjectExpression\":\n        closure = this.objectExpressionHandler(node);\n        break;\n\n      case \"ArrayExpression\":\n        closure = this.arrayExpressionHandler(node);\n        break;\n\n      case \"CallExpression\":\n        closure = this.callExpressionHandler(node);\n        break;\n\n      case \"NewExpression\":\n        closure = this.newExpressionHandler(node);\n        break;\n\n      case \"MemberExpression\":\n        closure = this.memberExpressionHandler(node);\n        break;\n\n      case \"ThisExpression\":\n        closure = this.thisExpressionHandler(node);\n        break;\n\n      case \"SequenceExpression\":\n        closure = this.sequenceExpressionHandler(node);\n        break;\n\n      case \"Literal\":\n        closure = this.literalHandler(node);\n        break;\n\n      case \"Identifier\":\n        closure = this.identifierHandler(node);\n        break;\n\n      case \"AssignmentExpression\":\n        closure = this.assignmentExpressionHandler(node);\n        break;\n\n      case \"FunctionDeclaration\":\n        closure = this.functionDeclarationHandler(node);\n        break;\n\n      case \"VariableDeclaration\":\n        closure = this.variableDeclarationHandler(node);\n        break;\n\n      case \"BlockStatement\":\n      case \"Program\":\n        closure = this.programHandler(node);\n        break;\n\n      case \"ExpressionStatement\":\n        closure = this.expressionStatementHandler(node);\n        break;\n\n      case \"EmptyStatement\":\n        closure = this.emptyStatementHandler(node);\n        break;\n\n      case \"ReturnStatement\":\n        closure = this.returnStatementHandler(node);\n        break;\n\n      case \"FunctionExpression\":\n        closure = this.functionExpressionHandler(node);\n        break;\n\n      case \"IfStatement\":\n        closure = this.ifStatementHandler(node);\n        break;\n\n      case \"ConditionalExpression\":\n        closure = this.conditionalExpressionHandler(node);\n        break;\n\n      case \"ForStatement\":\n        closure = this.forStatementHandler(node);\n        break;\n\n      case \"WhileStatement\":\n        closure = this.whileStatementHandler(node);\n        break;\n\n      case \"DoWhileStatement\":\n        closure = this.doWhileStatementHandler(node);\n        break;\n\n      case \"ForInStatement\":\n        closure = this.forInStatementHandler(node);\n        break;\n\n      case \"WithStatement\":\n        closure = this.withStatementHandler(node);\n        break;\n\n      case \"ThrowStatement\":\n        closure = this.throwStatementHandler(node);\n        break;\n\n      case \"TryStatement\":\n        closure = this.tryStatementHandler(node);\n        break;\n\n      case \"ContinueStatement\":\n        closure = this.continueStatementHandler(node);\n        break;\n\n      case \"BreakStatement\":\n        closure = this.breakStatementHandler(node);\n        break;\n\n      case \"SwitchStatement\":\n        closure = this.switchStatementHandler(node);\n        break;\n\n      case \"LabeledStatement\":\n        closure = this.labeledStatementHandler(node);\n        break;\n\n      case \"DebuggerStatement\":\n        closure = this.debuggerStatementHandler(node);\n        break;\n\n      default:\n        throw this.createInternalThrowError(Messages.NodeTypeSyntaxError, node.type, node);\n    }\n\n    return function () {\n      var timeout = _this2.options.timeout;\n\n      if (timeout && timeout > 0 && _this2.checkTimeout()) {\n        throw _this2.createInternalThrowError(Messages.ExecutionTimeOutError, timeout, null);\n      }\n\n      _this2.lastExecNode = node;\n      return closure.apply(void 0, arguments);\n    };\n  } // a==b a/b\n  ;\n\n  _proto2.binaryExpressionHandler = function binaryExpressionHandler(node) {\n    var _this3 = this;\n\n    var leftExpression = this.createClosure(node.left);\n    var rightExpression = this.createClosure(node.right);\n    return function () {\n      var leftValue = leftExpression();\n      var rightValue = rightExpression();\n\n      switch (node.operator) {\n        case \"==\":\n          return leftValue == rightValue;\n\n        case \"!=\":\n          return leftValue != rightValue;\n\n        case \"===\":\n          return leftValue === rightValue;\n\n        case \"!==\":\n          return leftValue !== rightValue;\n\n        case \"<\":\n          return leftValue < rightValue;\n\n        case \"<=\":\n          return leftValue <= rightValue;\n\n        case \">\":\n          return leftValue > rightValue;\n\n        case \">=\":\n          return leftValue >= rightValue;\n\n        case \"<<\":\n          return leftValue << rightValue;\n\n        case \">>\":\n          return leftValue >> rightValue;\n\n        case \">>>\":\n          return leftValue >>> rightValue;\n\n        case \"+\":\n          return leftValue + rightValue;\n\n        case \"-\":\n          return leftValue - rightValue;\n\n        case \"*\":\n          return leftValue * rightValue;\n\n        case \"**\":\n          return Math.pow(leftValue, rightValue);\n\n        case \"/\":\n          return leftValue / rightValue;\n\n        case \"%\":\n          return leftValue % rightValue;\n\n        case \"|\":\n          return leftValue | rightValue;\n\n        case \"^\":\n          return leftValue ^ rightValue;\n\n        case \"&\":\n          return leftValue & rightValue;\n\n        case \"in\":\n          return leftValue in rightValue;\n\n        case \"instanceof\":\n          return leftValue instanceof rightValue;\n\n        default:\n          throw _this3.createInternalThrowError(Messages.BinaryOperatorSyntaxError, node.operator, node);\n      }\n    };\n  } // a && b\n  ;\n\n  _proto2.logicalExpressionHandler = function logicalExpressionHandler(node) {\n    var _this4 = this;\n\n    var leftExpression = this.createClosure(node.left);\n    var rightExpression = this.createClosure(node.right);\n    return function () {\n      switch (node.operator) {\n        case \"||\":\n          return leftExpression() || rightExpression();\n\n        case \"&&\":\n          return leftExpression() && rightExpression();\n\n        default:\n          throw _this4.createInternalThrowError(Messages.LogicalOperatorSyntaxError, node.operator, node);\n      }\n    };\n  } // protected isRootScope(node: ESTree.Expression | ESTree.Pattern): boolean {\n  // \tif (node.type === \"Identifier\") {\n  // \t\tconst scope = this.getScopeFromName(node.name, this.getCurrentScope());\n  // \t\treturn scope.name === \"rootScope\";\n  // \t}\n  // \treturn false;\n  // }\n  // typeof a !a()\n  ;\n\n  _proto2.unaryExpressionHandler = function unaryExpressionHandler(node) {\n    var _this5 = this;\n\n    switch (node.operator) {\n      case \"delete\":\n        var objectGetter = this.createObjectGetter(node.argument);\n        var nameGetter = this.createNameGetter(node.argument);\n        return function () {\n          // not allowed to delete root scope property\n          // rootContext has move to prototype chai, so no judgment required\n          // if (this.isRootScope(node.argument)) {\n          // \treturn false;\n          // }\n          var obj = objectGetter();\n          var name = nameGetter();\n          return delete obj[name];\n        };\n\n      default:\n        var expression; // for typeof undefined var\n        // typeof adf9ad\n\n        if (node.operator === \"typeof\" && node.argument.type === \"Identifier\") {\n          var _objectGetter = this.createObjectGetter(node.argument);\n\n          var _nameGetter = this.createNameGetter(node.argument);\n\n          expression = function expression() {\n            return _objectGetter()[_nameGetter()];\n          };\n        } else {\n          expression = this.createClosure(node.argument);\n        }\n\n        return function () {\n          var value = expression();\n\n          switch (node.operator) {\n            case \"-\":\n              return -value;\n\n            case \"+\":\n              return +value;\n\n            case \"!\":\n              return !value;\n\n            case \"~\":\n              return ~value;\n\n            case \"void\":\n              return void value;\n\n            case \"typeof\":\n              return typeof value;\n\n            default:\n              throw _this5.createInternalThrowError(Messages.UnaryOperatorSyntaxError, node.operator, node);\n          }\n        };\n    }\n  } // ++a --a\n  ;\n\n  _proto2.updateExpressionHandler = function updateExpressionHandler(node) {\n    var _this6 = this;\n\n    var objectGetter = this.createObjectGetter(node.argument);\n    var nameGetter = this.createNameGetter(node.argument);\n    return function () {\n      var obj = objectGetter();\n      var name = nameGetter();\n\n      _this6.assertVariable(obj, name, node);\n\n      switch (node.operator) {\n        case \"++\":\n          return node.prefix ? ++obj[name] : obj[name]++;\n\n        case \"--\":\n          return node.prefix ? --obj[name] : obj[name]--;\n\n        default:\n          throw _this6.createInternalThrowError(Messages.UpdateOperatorSyntaxError, node.operator, node);\n      }\n    };\n  } // var o = {a: 1, b: 's', get name(){}, set name(){}  ...}\n  ;\n\n  _proto2.objectExpressionHandler = function objectExpressionHandler(node) {\n    var _this7 = this;\n\n    var items = [];\n\n    function getKey(keyNode) {\n      if (keyNode.type === \"Identifier\") {\n        // var o = {a:1}\n        return keyNode.name;\n      } else if (keyNode.type === \"Literal\") {\n        // var o = {\"a\":1}\n        return keyNode.value;\n      } else {\n        return this.throwError(Messages.ObjectStructureSyntaxError, keyNode.type, keyNode);\n      }\n    } // collect value, getter, and/or setter.\n\n\n    var properties = Object.create(null);\n    node.properties.forEach(function (property) {\n      var kind = property.kind;\n      var key = getKey(property.key);\n\n      if (!properties[key] || kind === \"init\") {\n        properties[key] = {};\n      }\n\n      properties[key][kind] = _this7.createClosure(property.value);\n      items.push({\n        key: key,\n        property: property\n      });\n    });\n    return function () {\n      var result = {};\n      var len = items.length;\n\n      for (var i = 0; i < len; i++) {\n        var item = items[i];\n        var key = item.key;\n        var kinds = properties[key];\n        var value = kinds.init ? kinds.init() : undefined;\n        var getter = kinds.get ? kinds.get() : function () {};\n        var setter = kinds.set ? kinds.set() : function (a) {};\n\n        if (\"set\" in kinds || \"get\" in kinds) {\n          var descriptor = {\n            configurable: true,\n            enumerable: true,\n            get: getter,\n            set: setter\n          };\n          Object.defineProperty(result, key, descriptor);\n        } else {\n          var property = item.property;\n          var kind = property.kind; // set function.name\n          // var d = { test(){} }\n          // var d = { test: function(){} }\n\n          if (property.key.type === \"Identifier\" && property.value.type === \"FunctionExpression\" && kind === \"init\" && !property.value.id) {\n            defineFunctionName(value, property.key.name);\n          }\n\n          result[key] = value;\n        }\n      }\n\n      return result;\n    };\n  } // [1,2,3]\n  ;\n\n  _proto2.arrayExpressionHandler = function arrayExpressionHandler(node) {\n    var _this8 = this; //fix: [,,,1,2]\n\n\n    var items = node.elements.map(function (element) {\n      return element ? _this8.createClosure(element) : element;\n    });\n    return function () {\n      var len = items.length;\n      var result = Array(len);\n\n      for (var i = 0; i < len; i++) {\n        var item = items[i];\n\n        if (item) {\n          result[i] = item();\n        }\n      }\n\n      return result;\n    };\n  };\n\n  _proto2.safeObjectGet = function safeObjectGet(obj, key, node) {\n    return obj[key];\n  };\n\n  _proto2.createCallFunctionGetter = function createCallFunctionGetter(node) {\n    var _this9 = this;\n\n    switch (node.type) {\n      case \"MemberExpression\":\n        var objectGetter = this.createClosure(node.object);\n        var keyGetter = this.createMemberKeyGetter(node);\n        var source = this.source;\n        return function () {\n          var obj = objectGetter();\n          var key = keyGetter();\n\n          var func = _this9.safeObjectGet(obj, key, node);\n\n          if (!func || !isFunction(func)) {\n            var name = source.slice(node.start, node.end);\n            throw _this9.createInternalThrowError(Messages.FunctionUndefinedReferenceError, name, node);\n          } // obj.eval = eval\n          // obj.eval(...)\n\n\n          if (func.__IS_EVAL_FUNC) {\n            return function (code) {\n              return func(new InternalInterpreterReflection(_this9), code, true);\n            };\n          } // obj.func = Function\n          // obj.func(...)\n\n\n          if (func.__IS_FUNCTION_FUNC) {\n            return function () {\n              for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n              }\n\n              return func.apply(void 0, [new InternalInterpreterReflection(_this9)].concat(args));\n            };\n          } // method call\n          // eg：obj.say(...)\n          // eg: obj.say.call(...)\n          // eg: obj.say.apply(...)\n          // ======================\n          // obj.func(...)\n          // func = func.bind(obj)\n          // tips:\n          // func(...) -> func.bind(obj)(...)\n          // func.call(...) -> obj.func.call.bind(obj.func)(...)\n          // func.apply(...) -> obj.func.apply.bind(obj.func)(...)\n          // ...others\n\n\n          return func.bind(obj);\n        };\n\n      default:\n        // test() or (0,test)() or a[1]() ...\n        var closure = this.createClosure(node);\n        return function () {\n          var name = \"\";\n\n          if (node.type === \"Identifier\") {\n            name = node.name;\n          } // const name: string = (<ESTree.Identifier>node).name;\n\n\n          var func = closure();\n\n          if (!func || !isFunction(func)) {\n            throw _this9.createInternalThrowError(Messages.FunctionUndefinedReferenceError, name, node);\n          } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\n          // var eval = eval;\n          // function test(){\n          //    eval(...); //note: use local scope in eval5，but in Browser is use global scope\n          // }\n\n\n          if (node.type === \"Identifier\" && func.__IS_EVAL_FUNC && name === \"eval\") {\n            return function (code) {\n              var scope = _this9.getScopeFromName(name, _this9.getCurrentScope());\n\n              var useGlobalScope = scope.name === SuperScopeName || // !scope.parent || // super scope\n              scope.name === GlobalScopeName || // this.globalScope === scope ||\n              scope.name === RootScopeName; // use local scope if calling eval in super scope\n\n              return func(new InternalInterpreterReflection(_this9), code, !useGlobalScope);\n            };\n          } // use global scope\n          // var g_eval = eval;\n          // g_eval(\"a+1\");\n          //(0,eval)(...) ...eval alias\n\n\n          if (func.__IS_EVAL_FUNC) {\n            return function (code) {\n              return func(new InternalInterpreterReflection(_this9), code, true);\n            };\n          } // Function('a', 'b', 'return a+b')\n\n\n          if (func.__IS_FUNCTION_FUNC) {\n            return function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              return func.apply(void 0, [new InternalInterpreterReflection(_this9)].concat(args));\n            };\n          }\n\n          var ctx = _this9.options.globalContextInFunction; // with(obj) {\n          //     test() // test.call(obj, ...)\n          // }\n\n          if (node.type === \"Identifier\") {\n            var scope = _this9.getIdentifierScope(node);\n\n            if (scope.name === WithScopeName) {\n              ctx = scope.data;\n            }\n          } // function call\n          // this = undefined\n          // tips:\n          // test(...) === test.call(undefined, ...)\n          // fix: alert.call({}, ...) Illegal invocation\n\n\n          return func.bind(ctx);\n        };\n    }\n  } // func()\n  ;\n\n  _proto2.callExpressionHandler = function callExpressionHandler(node) {\n    var _this10 = this;\n\n    var funcGetter = this.createCallFunctionGetter(node.callee);\n    var argsGetter = node.arguments.map(function (arg) {\n      return _this10.createClosure(arg);\n    });\n    return function () {\n      return funcGetter().apply(void 0, argsGetter.map(function (arg) {\n        return arg();\n      }));\n    };\n  } // var f = function() {...}\n  ;\n\n  _proto2.functionExpressionHandler = function functionExpressionHandler(node) {\n    var _this11 = this;\n\n    var self = this;\n    var source = this.source;\n    var oldDeclVars = this.collectDeclVars;\n    var oldDeclFuncs = this.collectDeclFuncs;\n    this.collectDeclVars = Object.create(null);\n    this.collectDeclFuncs = Object.create(null);\n    var name = node.id ? node.id.name : \"\";\n    /**anonymous*/\n\n    var paramLength = node.params.length;\n    var paramsGetter = node.params.map(function (param) {\n      return _this11.createParamNameGetter(param);\n    }); // set scope\n\n    var bodyClosure = this.createClosure(node.body);\n    var declVars = this.collectDeclVars;\n    var declFuncs = this.collectDeclFuncs;\n    this.collectDeclVars = oldDeclVars;\n    this.collectDeclFuncs = oldDeclFuncs;\n    return function () {\n      // bind current scope\n      var runtimeScope = self.getCurrentScope();\n\n      var func = function func() {\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        self.callStack.push(\"\" + name);\n        var prevScope = self.getCurrentScope();\n        var currentScope = createScope(runtimeScope, \"FunctionScope(\" + name + \")\");\n        self.setCurrentScope(currentScope);\n        self.addDeclarationsToScope(declVars, declFuncs, currentScope); // var t = function(){ typeof t } // function\n        // t = function(){ typeof t } // function\n        // z = function tx(){ typeof tx } // function\n        // but\n        // d = { say: function(){ typeof say } } // undefined\n\n        if (name) {\n          currentScope.data[name] = func;\n        } // init arguments var\n\n\n        currentScope.data[\"arguments\"] = arguments;\n        paramsGetter.forEach(function (getter, i) {\n          currentScope.data[getter()] = args[i];\n        }); // init this\n\n        var prevContext = self.getCurrentContext(); //for ThisExpression\n\n        self.setCurrentContext(this);\n        var result = bodyClosure(); //reset\n\n        self.setCurrentContext(prevContext);\n        self.setCurrentScope(prevScope);\n        self.callStack.pop();\n\n        if (result instanceof Return) {\n          return result.value;\n        }\n      };\n\n      defineFunctionName(func, name);\n      Object.defineProperty(func, \"length\", {\n        value: paramLength,\n        writable: false,\n        enumerable: false,\n        configurable: true\n      });\n      Object.defineProperty(func, \"toString\", {\n        value: function value() {\n          return source.slice(node.start, node.end);\n        },\n        writable: true,\n        configurable: true,\n        enumerable: false\n      });\n      Object.defineProperty(func, \"valueOf\", {\n        value: function value() {\n          return source.slice(node.start, node.end);\n        },\n        writable: true,\n        configurable: true,\n        enumerable: false\n      });\n      return func;\n    };\n  } // new Ctrl()\n  ;\n\n  _proto2.newExpressionHandler = function newExpressionHandler(node) {\n    var _this12 = this;\n\n    var source = this.source;\n    var expression = this.createClosure(node.callee);\n    var args = node.arguments.map(function (arg) {\n      return _this12.createClosure(arg);\n    });\n    return function () {\n      var construct = expression();\n\n      if (!isFunction(construct) || construct.__IS_EVAL_FUNC) {\n        var callee = node.callee;\n        var name = source.slice(callee.start, callee.end);\n        throw _this12.createInternalThrowError(Messages.IsNotConstructor, name, node);\n      } // new Function(...)\n\n\n      if (construct.__IS_FUNCTION_FUNC) {\n        return construct.apply(void 0, [new InternalInterpreterReflection(_this12)].concat(args.map(function (arg) {\n          return arg();\n        })));\n      }\n\n      return _construct(construct, args.map(function (arg) {\n        return arg();\n      }));\n    };\n  } // a.b a['b']\n  ;\n\n  _proto2.memberExpressionHandler = function memberExpressionHandler(node) {\n    var objectGetter = this.createClosure(node.object);\n    var keyGetter = this.createMemberKeyGetter(node);\n    return function () {\n      var obj = objectGetter();\n      var key = keyGetter();\n      return obj[key];\n    };\n  } //this\n  ;\n\n  _proto2.thisExpressionHandler = function thisExpressionHandler(node) {\n    var _this13 = this;\n\n    return function () {\n      return _this13.getCurrentContext();\n    };\n  } // var1,var2,...\n  ;\n\n  _proto2.sequenceExpressionHandler = function sequenceExpressionHandler(node) {\n    var _this14 = this;\n\n    var expressions = node.expressions.map(function (item) {\n      return _this14.createClosure(item);\n    });\n    return function () {\n      var result;\n      var len = expressions.length;\n\n      for (var i = 0; i < len; i++) {\n        var expression = expressions[i];\n        result = expression();\n      }\n\n      return result;\n    };\n  } // 1 'name'\n  ;\n\n  _proto2.literalHandler = function literalHandler(node) {\n    return function () {\n      if (node.regex) {\n        return new RegExp(node.regex.pattern, node.regex.flags);\n      }\n\n      return node.value;\n    };\n  } // var1 ...\n  ;\n\n  _proto2.identifierHandler = function identifierHandler(node) {\n    var _this15 = this;\n\n    return function () {\n      var currentScope = _this15.getCurrentScope();\n\n      var data = _this15.getScopeDataFromName(node.name, currentScope);\n\n      _this15.assertVariable(data, node.name, node);\n\n      return data[node.name];\n    };\n  };\n\n  _proto2.getIdentifierScope = function getIdentifierScope(node) {\n    var currentScope = this.getCurrentScope();\n    var scope = this.getScopeFromName(node.name, currentScope);\n    return scope;\n  } // a=1 a+=2\n  ;\n\n  _proto2.assignmentExpressionHandler = function assignmentExpressionHandler(node) {\n    var _this16 = this; // var s = function(){}\n    // s.name === s\n\n\n    if (node.left.type === \"Identifier\" && node.right.type === \"FunctionExpression\" && !node.right.id) {\n      node.right.id = {\n        type: \"Identifier\",\n        name: node.left.name\n      };\n    }\n\n    var dataGetter = this.createObjectGetter(node.left);\n    var nameGetter = this.createNameGetter(node.left);\n    var rightValueGetter = this.createClosure(node.right);\n    return function () {\n      var data = dataGetter();\n      var name = nameGetter();\n      var rightValue = rightValueGetter();\n\n      if (node.operator !== \"=\") {\n        // if a is undefined\n        // a += 1\n        _this16.assertVariable(data, name, node);\n      }\n\n      switch (node.operator) {\n        case \"=\":\n          return data[name] = rightValue;\n\n        case \"+=\":\n          return data[name] += rightValue;\n\n        case \"-=\":\n          return data[name] -= rightValue;\n\n        case \"*=\":\n          return data[name] *= rightValue;\n\n        case \"**=\":\n          return data[name] = Math.pow(data[name], rightValue);\n\n        case \"/=\":\n          return data[name] /= rightValue;\n\n        case \"%=\":\n          return data[name] %= rightValue;\n\n        case \"<<=\":\n          return data[name] <<= rightValue;\n\n        case \">>=\":\n          return data[name] >>= rightValue;\n\n        case \">>>=\":\n          return data[name] >>>= rightValue;\n\n        case \"&=\":\n          return data[name] &= rightValue;\n\n        case \"^=\":\n          return data[name] ^= rightValue;\n\n        case \"|=\":\n          return data[name] |= rightValue;\n\n        default:\n          throw _this16.createInternalThrowError(Messages.AssignmentExpressionSyntaxError, node.type, node);\n      }\n    };\n  } // function test(){}\n  ;\n\n  _proto2.functionDeclarationHandler = function functionDeclarationHandler(node) {\n    if (node.id) {\n      var functionClosure = this.functionExpressionHandler(node);\n      Object.defineProperty(functionClosure, \"isFunctionDeclareClosure\", {\n        value: true,\n        writable: false,\n        configurable: false,\n        enumerable: false\n      });\n      this.funcDeclaration(node.id.name, functionClosure);\n    }\n\n    return function () {\n      return EmptyStatementReturn;\n    };\n  };\n\n  _proto2.getVariableName = function getVariableName(node) {\n    if (node.type === \"Identifier\") {\n      return node.name;\n    } else {\n      throw this.createInternalThrowError(Messages.VariableTypeSyntaxError, node.type, node);\n    }\n  } // var i;\n  // var i=1;\n  ;\n\n  _proto2.variableDeclarationHandler = function variableDeclarationHandler(node) {\n    var _this17 = this;\n\n    var assignmentsClosure;\n    var assignments = [];\n\n    for (var i = 0; i < node.declarations.length; i++) {\n      var decl = node.declarations[i];\n      this.varDeclaration(this.getVariableName(decl.id));\n\n      if (decl.init) {\n        assignments.push({\n          type: \"AssignmentExpression\",\n          operator: \"=\",\n          left: decl.id,\n          right: decl.init\n        });\n      }\n    }\n\n    if (assignments.length) {\n      assignmentsClosure = this.createClosure({\n        type: \"BlockStatement\",\n        body: assignments\n      });\n    }\n\n    return function () {\n      if (assignmentsClosure) {\n        var oldValue = _this17.isVarDeclMode;\n        _this17.isVarDeclMode = true;\n        assignmentsClosure();\n        _this17.isVarDeclMode = oldValue;\n      }\n\n      return EmptyStatementReturn;\n    };\n  };\n\n  _proto2.assertVariable = function assertVariable(data, name, node) {\n    if (data === this.globalScope.data && !(name in data)) {\n      throw this.createInternalThrowError(Messages.VariableUndefinedReferenceError, name, node);\n    }\n  } // {...}\n  ;\n\n  _proto2.programHandler = function programHandler(node) {\n    var _this18 = this; // const currentScope = this.getCurrentScope();\n\n\n    var stmtClosures = node.body.map(function (stmt) {\n      // if (stmt.type === \"EmptyStatement\") return null;\n      return _this18.createClosure(stmt);\n    });\n    return function () {\n      var result = EmptyStatementReturn;\n\n      for (var i = 0; i < stmtClosures.length; i++) {\n        var stmtClosure = stmtClosures[i]; // save last value\n\n        var ret = _this18.setValue(stmtClosure()); // if (!stmtClosure) continue;\n        // EmptyStatement\n\n\n        if (ret === EmptyStatementReturn) continue;\n        result = ret; // BlockStatement: break label;  continue label; for(){ break ... }\n        // ReturnStatement: return xx;\n\n        if (result instanceof Return || result instanceof BreakLabel || result instanceof ContinueLabel || result === Break || result === Continue) {\n          break;\n        }\n      } // save last value\n\n\n      return result;\n    };\n  } // all expression: a+1 a&&b a() a.b ...\n  ;\n\n  _proto2.expressionStatementHandler = function expressionStatementHandler(node) {\n    return this.createClosure(node.expression);\n  };\n\n  _proto2.emptyStatementHandler = function emptyStatementHandler(node) {\n    return function () {\n      return EmptyStatementReturn;\n    };\n  } // return xx;\n  ;\n\n  _proto2.returnStatementHandler = function returnStatementHandler(node) {\n    var argumentClosure = node.argument ? this.createClosure(node.argument) : noop;\n    return function () {\n      return new Return(argumentClosure());\n    };\n  } // if else\n  ;\n\n  _proto2.ifStatementHandler = function ifStatementHandler(node) {\n    var testClosure = this.createClosure(node.test);\n    var consequentClosure = this.createClosure(node.consequent);\n    var alternateClosure = node.alternate ? this.createClosure(node.alternate) :\n    /*!important*/\n    function () {\n      return EmptyStatementReturn;\n    };\n    return function () {\n      return testClosure() ? consequentClosure() : alternateClosure();\n    };\n  } // test() ? true : false\n  ;\n\n  _proto2.conditionalExpressionHandler = function conditionalExpressionHandler(node) {\n    return this.ifStatementHandler(node);\n  } // for(var i = 0; i < 10; i++) {...}\n  ;\n\n  _proto2.forStatementHandler = function forStatementHandler(node) {\n    var _this19 = this;\n\n    var initClosure = noop;\n    var testClosure = node.test ? this.createClosure(node.test) : function () {\n      return true;\n    };\n    var updateClosure = noop;\n    var bodyClosure = this.createClosure(node.body);\n\n    if (node.type === \"ForStatement\") {\n      initClosure = node.init ? this.createClosure(node.init) : initClosure;\n      updateClosure = node.update ? this.createClosure(node.update) : noop;\n    }\n\n    return function (pNode) {\n      var labelName;\n      var result = EmptyStatementReturn;\n      var shouldInitExec = node.type === \"DoWhileStatement\";\n\n      if (pNode && pNode.type === \"LabeledStatement\") {\n        labelName = pNode.label.name;\n      }\n\n      for (initClosure(); shouldInitExec || testClosure(); updateClosure()) {\n        shouldInitExec = false; // save last value\n\n        var ret = _this19.setValue(bodyClosure()); // notice: never return Break or Continue!\n\n\n        if (ret === EmptyStatementReturn || ret === Continue) continue;\n\n        if (ret === Break) {\n          break;\n        }\n\n        result = ret; // stop continue label\n\n        if (result instanceof ContinueLabel && result.value === labelName) {\n          result = EmptyStatementReturn;\n          continue;\n        }\n\n        if (result instanceof Return || result instanceof BreakLabel || result instanceof ContinueLabel) {\n          break;\n        }\n      }\n\n      return result;\n    };\n  } // while(1) {...}\n  ;\n\n  _proto2.whileStatementHandler = function whileStatementHandler(node) {\n    return this.forStatementHandler(node);\n  };\n\n  _proto2.doWhileStatementHandler = function doWhileStatementHandler(node) {\n    return this.forStatementHandler(node);\n  };\n\n  _proto2.forInStatementHandler = function forInStatementHandler(node) {\n    var _this20 = this; // for( k in obj) or for(o.k in obj) ...\n\n\n    var left = node.left;\n    var rightClosure = this.createClosure(node.right);\n    var bodyClosure = this.createClosure(node.body); // for(var k in obj) {...}\n\n    if (node.left.type === \"VariableDeclaration\") {\n      // init var k\n      this.createClosure(node.left)(); // reset left\n      // for( k in obj)\n\n      left = node.left.declarations[0].id;\n    }\n\n    return function (pNode) {\n      var labelName;\n      var result = EmptyStatementReturn;\n      var x;\n\n      if (pNode && pNode.type === \"LabeledStatement\") {\n        labelName = pNode.label.name;\n      }\n\n      var data = rightClosure();\n\n      for (x in data) {\n        // assign left to scope\n        // k = x\n        // o.k = x\n        _this20.assignmentExpressionHandler({\n          type: \"AssignmentExpression\",\n          operator: \"=\",\n          left: left,\n          right: {\n            type: \"Literal\",\n            value: x\n          }\n        })(); // save last value\n\n\n        var ret = _this20.setValue(bodyClosure()); // notice: never return Break or Continue!\n\n\n        if (ret === EmptyStatementReturn || ret === Continue) continue;\n\n        if (ret === Break) {\n          break;\n        }\n\n        result = ret; // stop continue label\n\n        if (result instanceof ContinueLabel && result.value === labelName) {\n          result = EmptyStatementReturn;\n          continue;\n        }\n\n        if (result instanceof Return || result instanceof BreakLabel || result instanceof ContinueLabel) {\n          break;\n        }\n      }\n\n      return result;\n    };\n  };\n\n  _proto2.withStatementHandler = function withStatementHandler(node) {\n    var _this21 = this;\n\n    var objectClosure = this.createClosure(node.object);\n    var bodyClosure = this.createClosure(node.body);\n    return function () {\n      var data = objectClosure();\n\n      var currentScope = _this21.getCurrentScope();\n\n      var newScope = new Scope(data, currentScope, WithScopeName); // const data = objectClosure();\n      // copy all properties\n      // for (let k in data) {\n      // \tnewScope.data[k] = data[k];\n      // }\n\n      _this21.setCurrentScope(newScope); // save last value\n\n\n      var result = _this21.setValue(bodyClosure());\n\n      _this21.setCurrentScope(currentScope);\n\n      return result;\n    };\n  };\n\n  _proto2.throwStatementHandler = function throwStatementHandler(node) {\n    var _this22 = this;\n\n    var argumentClosure = this.createClosure(node.argument);\n    return function () {\n      _this22.setValue(undefined);\n\n      throw argumentClosure();\n    };\n  } // try{...}catch(e){...}finally{}\n  ;\n\n  _proto2.tryStatementHandler = function tryStatementHandler(node) {\n    var _this23 = this;\n\n    var blockClosure = this.createClosure(node.block);\n    var handlerClosure = node.handler ? this.catchClauseHandler(node.handler) : null;\n    var finalizerClosure = node.finalizer ? this.createClosure(node.finalizer) : null;\n    return function () {\n      var currentScope = _this23.getCurrentScope();\n\n      var currentContext = _this23.getCurrentContext();\n\n      var labelStack = currentScope.labelStack.concat([]);\n\n      var callStack = _this23.callStack.concat([]);\n\n      var result = EmptyStatementReturn;\n      var finalReturn;\n      var throwError;\n\n      var reset = function reset() {\n        _this23.setCurrentScope(currentScope); //reset scope\n\n\n        _this23.setCurrentContext(currentContext); //reset context\n\n\n        currentScope.labelStack = labelStack; //reset label stack\n\n        _this23.callStack = callStack; //reset call stack\n      };\n      /**\n       * try{...}catch(e){...}finally{...} execution sequence:\n       * try stmt\n       * try throw\n       * catch stmt (if)\n       * finally stmt\n       *\n       * finally throw or finally return\n       * catch throw or catch return\n       * try return\n       */\n\n\n      try {\n        result = _this23.setValue(blockClosure());\n\n        if (result instanceof Return) {\n          finalReturn = result;\n        }\n      } catch (err) {\n        reset();\n\n        if (_this23.isInterruptThrow(err)) {\n          throw err;\n        }\n\n        if (handlerClosure) {\n          try {\n            result = _this23.setValue(handlerClosure(err));\n\n            if (result instanceof Return) {\n              finalReturn = result;\n            }\n          } catch (err) {\n            reset();\n\n            if (_this23.isInterruptThrow(err)) {\n              throw err;\n            } // save catch throw error\n\n\n            throwError = err;\n          }\n        }\n      } // finally {\n\n\n      if (finalizerClosure) {\n        try {\n          //do not save finally result\n          result = finalizerClosure();\n\n          if (result instanceof Return) {\n            finalReturn = result;\n          } // finalReturn = finalizerClosure();\n\n        } catch (err) {\n          reset();\n\n          if (_this23.isInterruptThrow(err)) {\n            throw err;\n          } // save finally throw error\n\n\n          throwError = err;\n        } // if (finalReturn instanceof Return) {\n        // \tresult = finalReturn;\n        // }\n\n      } // }\n\n\n      if (throwError) throw throwError;\n\n      if (finalReturn) {\n        return finalReturn;\n      }\n\n      return result;\n    };\n  } // ... catch(e){...}\n  ;\n\n  _proto2.catchClauseHandler = function catchClauseHandler(node) {\n    var _this24 = this;\n\n    var paramNameGetter = this.createParamNameGetter(node.param);\n    var bodyClosure = this.createClosure(node.body);\n    return function (e) {\n      var result;\n\n      var currentScope = _this24.getCurrentScope();\n\n      var scopeData = currentScope.data; // get param name \"e\"\n\n      var paramName = paramNameGetter();\n      var isInScope = hasOwnProperty.call(scopeData, paramName); //paramName in scopeData;\n      // save \"e\"\n\n      var oldValue = scopeData[paramName]; // add \"e\" to scope\n\n      scopeData[paramName] = e; // run\n\n      result = bodyClosure(); // reset \"e\"\n\n      if (isInScope) {\n        scopeData[paramName] = oldValue;\n      } else {\n        //unset\n        delete scopeData[paramName];\n      }\n\n      return result;\n    };\n  };\n\n  _proto2.continueStatementHandler = function continueStatementHandler(node) {\n    return function () {\n      return node.label ? new ContinueLabel(node.label.name) : Continue;\n    };\n  };\n\n  _proto2.breakStatementHandler = function breakStatementHandler(node) {\n    return function () {\n      return node.label ? new BreakLabel(node.label.name) : Break;\n    };\n  };\n\n  _proto2.switchStatementHandler = function switchStatementHandler(node) {\n    var _this25 = this;\n\n    var discriminantClosure = this.createClosure(node.discriminant);\n    var caseClosures = node.cases.map(function (item) {\n      return _this25.switchCaseHandler(item);\n    });\n    return function () {\n      var value = discriminantClosure();\n      var match = false;\n      var result;\n      var ret, defaultCase;\n\n      for (var i = 0; i < caseClosures.length; i++) {\n        var item = caseClosures[i]();\n        var test = item.testClosure();\n\n        if (test === DefaultCase) {\n          defaultCase = item;\n          continue;\n        }\n\n        if (match || test === value) {\n          match = true;\n          ret = _this25.setValue(item.bodyClosure()); // notice: never return Break!\n\n          if (ret === EmptyStatementReturn) continue;\n\n          if (ret === Break) {\n            break;\n          }\n\n          result = ret;\n\n          if (result instanceof Return || result instanceof BreakLabel || result instanceof ContinueLabel || result === Continue) {\n            break;\n          }\n        }\n      }\n\n      if (!match && defaultCase) {\n        ret = _this25.setValue(defaultCase.bodyClosure());\n        var isEBC = ret === EmptyStatementReturn || ret === Break || ret === Continue; // notice: never return Break or Continue!\n\n        if (!isEBC) {\n          result = ret;\n        }\n      }\n\n      return result;\n    };\n  };\n\n  _proto2.switchCaseHandler = function switchCaseHandler(node) {\n    var testClosure = node.test ? this.createClosure(node.test) : function () {\n      return DefaultCase;\n    };\n    var bodyClosure = this.createClosure({\n      type: \"BlockStatement\",\n      body: node.consequent\n    });\n    return function () {\n      return {\n        testClosure: testClosure,\n        bodyClosure: bodyClosure\n      };\n    };\n  } // label: xxx\n  ;\n\n  _proto2.labeledStatementHandler = function labeledStatementHandler(node) {\n    var _this26 = this;\n\n    var labelName = node.label.name;\n    var bodyClosure = this.createClosure(node.body);\n    return function () {\n      var result;\n\n      var currentScope = _this26.getCurrentScope();\n\n      currentScope.labelStack.push(labelName);\n      result = bodyClosure(node); // stop break label\n\n      if (result instanceof BreakLabel && result.value === labelName) {\n        result = EmptyStatementReturn;\n      }\n\n      currentScope.labelStack.pop();\n      return result;\n    };\n  };\n\n  _proto2.debuggerStatementHandler = function debuggerStatementHandler(node) {\n    return function () {\n      debugger;\n      return EmptyStatementReturn;\n    };\n  } // get es3/5 param name\n  ;\n\n  _proto2.createParamNameGetter = function createParamNameGetter(node) {\n    if (node.type === \"Identifier\") {\n      return function () {\n        return node.name;\n      };\n    } else {\n      throw this.createInternalThrowError(Messages.ParamTypeSyntaxError, node.type, node);\n    }\n  };\n\n  _proto2.createObjectKeyGetter = function createObjectKeyGetter(node) {\n    var getter; // var obj = { title: \"\" }\n\n    if (node.type === \"Identifier\") {\n      getter = function getter() {\n        return node.name;\n      };\n    } else {\n      // Literal or ...\n      // var obj = { \"title\": \"\" } or others...\n      getter = this.createClosure(node);\n    }\n\n    return function () {\n      return getter();\n    };\n  };\n\n  _proto2.createMemberKeyGetter = function createMemberKeyGetter(node) {\n    // s['a'];  node.computed = true\n    // s.foo;  node.computed = false\n    return node.computed ? this.createClosure(node.property) : this.createObjectKeyGetter(node.property);\n  } // for UnaryExpression UpdateExpression AssignmentExpression\n  ;\n\n  _proto2.createObjectGetter = function createObjectGetter(node) {\n    var _this27 = this;\n\n    switch (node.type) {\n      case \"Identifier\":\n        return function () {\n          return _this27.getScopeDataFromName(node.name, _this27.getCurrentScope());\n        };\n\n      case \"MemberExpression\":\n        return this.createClosure(node.object);\n\n      default:\n        throw this.createInternalThrowError(Messages.AssignmentTypeSyntaxError, node.type, node);\n    }\n  } // for UnaryExpression UpdateExpression AssignmentExpression\n  ;\n\n  _proto2.createNameGetter = function createNameGetter(node) {\n    switch (node.type) {\n      case \"Identifier\":\n        return function () {\n          return node.name;\n        };\n\n      case \"MemberExpression\":\n        return this.createMemberKeyGetter(node);\n\n      default:\n        throw this.createInternalThrowError(Messages.AssignmentTypeSyntaxError, node.type, node);\n    }\n  };\n\n  _proto2.varDeclaration = function varDeclaration(name) {\n    var context = this.collectDeclVars;\n    context[name] = undefined;\n  };\n\n  _proto2.funcDeclaration = function funcDeclaration(name, func) {\n    var context = this.collectDeclFuncs;\n    context[name] = func;\n  };\n\n  _proto2.addDeclarationsToScope = function addDeclarationsToScope(declVars, declFuncs, scope) {\n    var scopeData = scope.data;\n\n    for (var key in declFuncs) {\n      var value = declFuncs[key];\n      scopeData[key] = value ? value() : value;\n    }\n\n    for (var _key5 in declVars) {\n      if (!(_key5 in scopeData)) {\n        scopeData[_key5] = void 0;\n      }\n    }\n  };\n\n  _proto2.getScopeValue = function getScopeValue(name, startScope) {\n    var scope = this.getScopeFromName(name, startScope);\n    return scope.data[name];\n  };\n\n  _proto2.getScopeDataFromName = function getScopeDataFromName(name, startScope) {\n    return this.getScopeFromName(name, startScope).data;\n  };\n\n  _proto2.getScopeFromName = function getScopeFromName(name, startScope) {\n    var scope = startScope;\n\n    do {\n      if (name in scope.data) {\n        //if (hasOwnProperty.call(scope.data, name)) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return this.globalScope;\n  };\n\n  _proto2.setValue = function setValue(value) {\n    var isFunctionCall = this.callStack.length;\n\n    if (this.isVarDeclMode || isFunctionCall || value === EmptyStatementReturn || value === Break || value === Continue || value instanceof BreakLabel || value instanceof ContinueLabel) {\n      return value;\n    }\n\n    this.value = value instanceof Return ? value.value : value;\n    return value;\n  };\n\n  _proto2.getValue = function getValue() {\n    return this.value;\n  };\n\n  return Interpreter;\n}();\nInterpreter.version = version;\nInterpreter.eval = internalEval;\nInterpreter.Function = internalFunction;\nInterpreter.ecmaVersion = 5; // alert.call(globalContextInFunction, 1);\n// fix: alert.call({}, 1); // Illegal invocation\n// function func(){\n//     this;// Interpreter.globalContextInFunction\n// }\n// func()\n\nInterpreter.globalContextInFunction = void 0;\nInterpreter.global = Object.create(null);","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/l7eval5/dist/esm/interpreter/main.js"],"names":["isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","_construct","Parent","args","Class","a","push","apply","Constructor","Function","bind","instance","_setPrototypeOf","arguments","o","p","Object","setPrototypeOf","__proto__","parse","Messages","InterruptThrowError","InterruptThrowReferenceError","InterruptThrowSyntaxError","version","defineFunctionName","func","name","defineProperty","value","writable","enumerable","configurable","hasOwnProperty","Break","Symbol","Continue","DefaultCase","EmptyStatementReturn","WithScopeName","SuperScopeName","RootScopeName","GlobalScopeName","isFunction","InternalInterpreterReflection","interpreter","_proto","generator","getCurrentScope","getGlobalScope","getCurrentContext","getOptions","getExecStartTime","internalEval","reflection","code","useGlobalScope","Error","opts","options","timeout","_initEnv","setCurrentContext","execStartTime","execEndTime","currentScope","Interpreter","evaluate","internalFunction","_len","length","params","Array","_key","pop","wrapCode","join","Return","BreakLabel","ContinueLabel","Scope","data","parent","labelStack","noop","createScope","create","createRootContext","BuildInObjects","NaN","Infinity","undefined","String","Boolean","Number","RegExp","URIError","TypeError","RangeError","SyntaxError","ReferenceError","Float32Array","Float64Array","Uint32Array","Math","parseInt","parseFloat","isNaN","isFinite","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","unescape","eval","JSON","Promise","Set","Map","WeakMap","WeakSet","context","global","sourceList","collectDeclVars","collectDeclFuncs","isVarDeclMode","lastExecNode","isRunning","ecmaVersion","rootContext","globalContextInFunction","callStack","initEnvironment","_proto2","ctx","scope","rootScope","superScope","createSuperScope","globalScope","globalContext","currentContext","now","getExecutionTime","setExecTimeout","isInterruptThrow","err","assign","buildInObjectKeys","keys","forEach","key","setCurrentScope","node","ranges","locations","evaluateNode","appendCode","source","_this","concat","reset","bodyClosure","createClosure","addDeclarationsToScope","getValue","createErrorMessage","msg","message","replace","getNodePosition","createError","error","createThrowError","createInternalThrowError","checkTimeout","errorCode","loc","start","line","column","_this2","closure","type","binaryExpressionHandler","logicalExpressionHandler","unaryExpressionHandler","updateExpressionHandler","objectExpressionHandler","arrayExpressionHandler","callExpressionHandler","newExpressionHandler","memberExpressionHandler","thisExpressionHandler","sequenceExpressionHandler","literalHandler","identifierHandler","assignmentExpressionHandler","functionDeclarationHandler","variableDeclarationHandler","programHandler","expressionStatementHandler","emptyStatementHandler","returnStatementHandler","functionExpressionHandler","ifStatementHandler","conditionalExpressionHandler","forStatementHandler","whileStatementHandler","doWhileStatementHandler","forInStatementHandler","withStatementHandler","throwStatementHandler","tryStatementHandler","continueStatementHandler","breakStatementHandler","switchStatementHandler","labeledStatementHandler","debuggerStatementHandler","NodeTypeSyntaxError","ExecutionTimeOutError","_this3","leftExpression","left","rightExpression","right","leftValue","rightValue","operator","pow","BinaryOperatorSyntaxError","_this4","LogicalOperatorSyntaxError","_this5","objectGetter","createObjectGetter","argument","nameGetter","createNameGetter","obj","expression","_objectGetter","_nameGetter","UnaryOperatorSyntaxError","_this6","assertVariable","prefix","UpdateOperatorSyntaxError","_this7","items","getKey","keyNode","throwError","ObjectStructureSyntaxError","properties","property","kind","result","len","i","item","kinds","init","getter","get","setter","set","descriptor","id","_this8","elements","map","element","safeObjectGet","createCallFunctionGetter","_this9","object","keyGetter","createMemberKeyGetter","slice","end","FunctionUndefinedReferenceError","__IS_EVAL_FUNC","__IS_FUNCTION_FUNC","_len2","_key2","getScopeFromName","_len3","_key3","getIdentifierScope","_this10","funcGetter","callee","argsGetter","arg","_this11","self","oldDeclVars","oldDeclFuncs","paramLength","paramsGetter","param","createParamNameGetter","body","declVars","declFuncs","runtimeScope","_len4","_key4","prevScope","prevContext","_this12","IsNotConstructor","_this13","_this14","expressions","regex","pattern","flags","_this15","getScopeDataFromName","_this16","dataGetter","rightValueGetter","AssignmentExpressionSyntaxError","functionClosure","funcDeclaration","getVariableName","VariableTypeSyntaxError","_this17","assignmentsClosure","assignments","declarations","decl","varDeclaration","oldValue","VariableUndefinedReferenceError","_this18","stmtClosures","stmt","stmtClosure","ret","setValue","argumentClosure","testClosure","test","consequentClosure","consequent","alternateClosure","alternate","_this19","initClosure","updateClosure","update","pNode","labelName","shouldInitExec","label","_this20","rightClosure","x","_this21","objectClosure","newScope","_this22","_this23","blockClosure","block","handlerClosure","handler","catchClauseHandler","finalizerClosure","finalizer","finalReturn","_this24","paramNameGetter","scopeData","paramName","isInScope","_this25","discriminantClosure","discriminant","caseClosures","cases","switchCaseHandler","match","defaultCase","isEBC","_this26","ParamTypeSyntaxError","createObjectKeyGetter","computed","_this27","AssignmentTypeSyntaxError","_key5","getScopeValue","startScope","isFunctionCall"],"mappings":"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","sourcesContent":["function isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { parse } from \"acorn\";\nimport { Messages, InterruptThrowError, InterruptThrowReferenceError, InterruptThrowSyntaxError } from \"./messages\";\nvar version = \"0.0.3\";\n\nfunction defineFunctionName(func, name) {\n  Object.defineProperty(func, \"name\", {\n    value: name,\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar Break = Symbol(\"Break\");\nvar Continue = Symbol(\"Continue\");\nvar DefaultCase = Symbol(\"DefaultCase\");\nvar EmptyStatementReturn = Symbol(\"EmptyStatementReturn\");\nvar WithScopeName = Symbol(\"WithScopeName\");\nvar SuperScopeName = Symbol(\"SuperScopeName\");\nvar RootScopeName = Symbol(\"RootScopeName\");\nvar GlobalScopeName = Symbol(\"GlobalScopeName\");\n\nfunction isFunction(func) {\n  return typeof func === \"function\";\n}\n\nvar InternalInterpreterReflection =\n/*#__PURE__*/\nfunction () {\n  function InternalInterpreterReflection(interpreter) {\n    this.interpreter = interpreter;\n  }\n\n  var _proto = InternalInterpreterReflection.prototype;\n\n  _proto.generator = function generator() {\n    var interpreter = this.interpreter;\n\n    function getCurrentScope() {\n      return this.getCurrentScope();\n    }\n\n    function getGlobalScope() {\n      return this.getGlobalScope();\n    }\n\n    function getCurrentContext() {\n      return this.getCurrentContext();\n    }\n\n    return {\n      getOptions: interpreter.getOptions.bind(interpreter),\n      getCurrentScope: getCurrentScope.bind(interpreter),\n      getGlobalScope: getGlobalScope.bind(interpreter),\n      getCurrentContext: getCurrentContext.bind(interpreter),\n      getExecStartTime: interpreter.getExecStartTime.bind(interpreter)\n    };\n  };\n\n  return InternalInterpreterReflection;\n}();\n\nfunction internalEval(reflection, code, useGlobalScope) {\n  if (useGlobalScope === void 0) {\n    useGlobalScope = true;\n  }\n\n  if (!(reflection instanceof InternalInterpreterReflection)) {\n    throw new Error(\"Illegal call\");\n  }\n\n  if (typeof code !== \"string\") return code;\n  if (!code) return void 0;\n  var instance = reflection.generator();\n  var opts = instance.getOptions();\n  var options = {\n    timeout: opts.timeout,\n    _initEnv: function _initEnv() {\n      // set caller context\n      if (!useGlobalScope) {\n        this.setCurrentContext(instance.getCurrentContext());\n      } // share timeout\n\n\n      this.execStartTime = instance.getExecStartTime();\n      this.execEndTime = this.execStartTime;\n    }\n  };\n  var currentScope = useGlobalScope ? instance.getGlobalScope() : instance.getCurrentScope();\n  var interpreter = new Interpreter(currentScope, options);\n  return interpreter.evaluate(code);\n}\n\nObject.defineProperty(internalEval, \"__IS_EVAL_FUNC\", {\n  value: true,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nfunction internalFunction(reflection) {\n  if (!(reflection instanceof InternalInterpreterReflection)) {\n    throw new Error(\"Illegal call\");\n  }\n\n  var instance = reflection.generator();\n\n  for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n\n  var code = params.pop();\n  var interpreter = new Interpreter(instance.getGlobalScope(), instance.getOptions());\n  var wrapCode = \"\\n\\t\\t    (function anonymous(\" + params.join(\",\") + \"){\\n\\t\\t        \" + code + \"\\n\\t\\t    });\\n\\t\\t    \";\n  return interpreter.evaluate(wrapCode);\n}\n\nObject.defineProperty(internalFunction, \"__IS_FUNCTION_FUNC\", {\n  value: true,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nvar Return = function Return(value) {\n  this.value = value;\n};\n\nvar BreakLabel = function BreakLabel(value) {\n  this.value = value;\n};\n\nvar ContinueLabel = function ContinueLabel(value) {\n  this.value = value;\n};\n/**\n * scope chain\n *\n * superScope\n *     ↓\n * rootScope\n *     ↓\n * globalScope\n *     ↓\n * functionScope\n *\n */\n\n\nvar Scope = function Scope(data, parent, name) {\n  if (parent === void 0) {\n    parent = null;\n  }\n\n  this.name = name;\n  this.parent = parent;\n  this.data = data;\n  this.labelStack = [];\n};\n\nfunction noop() {}\n\nfunction createScope(parent, name) {\n  if (parent === void 0) {\n    parent = null;\n  }\n\n  return new Scope(Object.create(null), parent, name);\n}\n\nfunction createRootContext(data) {\n  return Object.create(data);\n}\n\nvar BuildInObjects = {\n  NaN: NaN,\n  Infinity: Infinity,\n  undefined: undefined,\n  // null,\n  Object: Object,\n  Array: Array,\n  String: String,\n  Boolean: Boolean,\n  Number: Number,\n  Date: Date,\n  RegExp: RegExp,\n  Error: Error,\n  URIError: URIError,\n  TypeError: TypeError,\n  RangeError: RangeError,\n  SyntaxError: SyntaxError,\n  ReferenceError: ReferenceError,\n  Float32Array: Float32Array,\n  Float64Array: Float64Array,\n  Uint32Array: Uint32Array,\n  Math: Math,\n  parseInt: parseInt,\n  parseFloat: parseFloat,\n  isNaN: isNaN,\n  isFinite: isFinite,\n  decodeURI: decodeURI,\n  decodeURIComponent: decodeURIComponent,\n  encodeURI: encodeURI,\n  encodeURIComponent: encodeURIComponent,\n  escape: escape,\n  unescape: unescape,\n  eval: internalEval,\n  Function: internalFunction\n}; // ES5 Object\n\nif (typeof JSON !== \"undefined\") {\n  BuildInObjects.JSON = JSON;\n} //ES6 Object\n\n\nif (typeof Promise !== \"undefined\") {\n  BuildInObjects.Promise = Promise;\n}\n\nif (typeof Set !== \"undefined\") {\n  BuildInObjects.Set = Set;\n}\n\nif (typeof Map !== \"undefined\") {\n  BuildInObjects.Map = Map;\n}\n\nif (typeof Symbol !== \"undefined\") {\n  BuildInObjects.Symbol = Symbol;\n}\n\nif (typeof Proxy !== \"undefined\") {\n  BuildInObjects.Proxy = Proxy;\n}\n\nif (typeof WeakMap !== \"undefined\") {\n  BuildInObjects.WeakMap = WeakMap;\n}\n\nif (typeof WeakSet !== \"undefined\") {\n  BuildInObjects.WeakSet = WeakSet;\n}\n\nif (typeof Reflect !== \"undefined\") {\n  BuildInObjects.Reflect = Reflect;\n}\n\nexport var Interpreter =\n/*#__PURE__*/\nfunction () {\n  function Interpreter(context, options) {\n    if (context === void 0) {\n      context = Interpreter.global;\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.sourceList = [];\n    this.collectDeclVars = Object.create(null);\n    this.collectDeclFuncs = Object.create(null);\n    this.isVarDeclMode = false;\n    this.lastExecNode = null;\n    this.isRunning = false;\n    this.options = {\n      ecmaVersion: options.ecmaVersion || Interpreter.ecmaVersion,\n      timeout: options.timeout || 0,\n      rootContext: options.rootContext,\n      globalContextInFunction: options.globalContextInFunction === undefined ? Interpreter.globalContextInFunction : options.globalContextInFunction,\n      _initEnv: options._initEnv\n    };\n    this.context = context || Object.create(null);\n    this.callStack = [];\n    this.initEnvironment(this.context);\n  }\n\n  var _proto2 = Interpreter.prototype;\n\n  _proto2.initEnvironment = function initEnvironment(ctx) {\n    var scope; //init global scope\n\n    if (ctx instanceof Scope) {\n      scope = ctx;\n    } else {\n      var rootScope = null;\n      var superScope = this.createSuperScope(ctx);\n\n      if (this.options.rootContext) {\n        rootScope = new Scope(createRootContext(this.options.rootContext), superScope, RootScopeName);\n      }\n\n      scope = new Scope(ctx, rootScope || superScope, GlobalScopeName);\n    }\n\n    this.globalScope = scope;\n    this.currentScope = this.globalScope; //init global context to this\n\n    this.globalContext = scope.data;\n    this.currentContext = scope.data; // collect var/function declare\n\n    this.collectDeclVars = Object.create(null);\n    this.collectDeclFuncs = Object.create(null);\n    this.execStartTime = Date.now();\n    this.execEndTime = this.execStartTime;\n    var _initEnv = this.options._initEnv;\n\n    if (_initEnv) {\n      _initEnv.call(this);\n    }\n  };\n\n  _proto2.getExecStartTime = function getExecStartTime() {\n    return this.execStartTime;\n  };\n\n  _proto2.getExecutionTime = function getExecutionTime() {\n    return this.execEndTime - this.execStartTime;\n  };\n\n  _proto2.setExecTimeout = function setExecTimeout(timeout) {\n    if (timeout === void 0) {\n      timeout = 0;\n    }\n\n    this.options.timeout = timeout;\n  };\n\n  _proto2.getOptions = function getOptions() {\n    return this.options;\n  };\n\n  _proto2.getGlobalScope = function getGlobalScope() {\n    return this.globalScope;\n  };\n\n  _proto2.getCurrentScope = function getCurrentScope() {\n    return this.currentScope;\n  };\n\n  _proto2.getCurrentContext = function getCurrentContext() {\n    return this.currentContext;\n  };\n\n  _proto2.isInterruptThrow = function isInterruptThrow(err) {\n    return err instanceof InterruptThrowError || err instanceof InterruptThrowReferenceError || err instanceof InterruptThrowSyntaxError;\n  };\n\n  _proto2.createSuperScope = function createSuperScope(ctx) {\n    var data = Object.assign({}, BuildInObjects);\n    var buildInObjectKeys = Object.keys(data);\n    buildInObjectKeys.forEach(function (key) {\n      if (key in ctx) {\n        delete data[key];\n      }\n    });\n    return new Scope(data, null, SuperScopeName);\n  };\n\n  _proto2.setCurrentContext = function setCurrentContext(ctx) {\n    this.currentContext = ctx;\n  };\n\n  _proto2.setCurrentScope = function setCurrentScope(scope) {\n    this.currentScope = scope;\n  };\n\n  _proto2.evaluate = function evaluate(code) {\n    if (code === void 0) {\n      code = \"\";\n    }\n\n    var node;\n    if (!code) return;\n    node = parse(code, {\n      ranges: true,\n      locations: true,\n      ecmaVersion: this.options.ecmaVersion || Interpreter.ecmaVersion\n    });\n    return this.evaluateNode(node, code);\n  };\n\n  _proto2.appendCode = function appendCode(code) {\n    return this.evaluate(code);\n  };\n\n  _proto2.evaluateNode = function evaluateNode(node, source) {\n    var _this = this;\n\n    if (source === void 0) {\n      source = \"\";\n    }\n\n    this.value = undefined;\n    this.source = source;\n    this.sourceList.push(source);\n    this.isRunning = true; //reset timeout\n\n    this.execStartTime = Date.now();\n    this.execEndTime = this.execStartTime; // reset\n\n    this.collectDeclVars = Object.create(null);\n    this.collectDeclFuncs = Object.create(null);\n    var currentScope = this.getCurrentScope();\n    var currentContext = this.getCurrentContext();\n    var labelStack = currentScope.labelStack.concat([]);\n    var callStack = this.callStack.concat([]);\n\n    var reset = function reset() {\n      _this.setCurrentScope(currentScope); //reset scope\n\n\n      _this.setCurrentContext(currentContext); //reset context\n\n\n      currentScope.labelStack = labelStack; //reset label stack\n\n      _this.callStack = callStack; //reset call stack\n    }; // start run\n\n\n    try {\n      var bodyClosure = this.createClosure(node); // add declares to data\n\n      this.addDeclarationsToScope(this.collectDeclVars, this.collectDeclFuncs, this.getCurrentScope());\n      bodyClosure();\n    } catch (e) {\n      throw e;\n    } finally {\n      reset();\n      this.execEndTime = Date.now();\n    }\n\n    this.isRunning = false;\n    return this.getValue();\n  };\n\n  _proto2.createErrorMessage = function createErrorMessage(msg, value, node) {\n    var message = msg[1].replace(\"%0\", String(value));\n\n    if (node !== null) {\n      message += this.getNodePosition(node || this.lastExecNode);\n    }\n\n    return message;\n  };\n\n  _proto2.createError = function createError(message, error) {\n    return new error(message);\n  };\n\n  _proto2.createThrowError = function createThrowError(message, error) {\n    return this.createError(message, error);\n  };\n\n  _proto2.createInternalThrowError = function createInternalThrowError(msg, value, node) {\n    return this.createError(this.createErrorMessage(msg, value, node), msg[2]);\n  };\n\n  _proto2.checkTimeout = function checkTimeout() {\n    if (!this.isRunning) return false;\n    var timeout = this.options.timeout || 0;\n    var now = Date.now();\n\n    if (now - this.execStartTime > timeout) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto2.getNodePosition = function getNodePosition(node) {\n    if (node) {\n      var errorCode = \"\"; //this.source.slice(node.start, node.end);\n\n      return node.loc ? \" [\" + node.loc.start.line + \":\" + node.loc.start.column + \"]\" + errorCode : \"\";\n    }\n\n    return \"\";\n  };\n\n  _proto2.createClosure = function createClosure(node) {\n    var _this2 = this;\n\n    var closure;\n\n    switch (node.type) {\n      case \"BinaryExpression\":\n        closure = this.binaryExpressionHandler(node);\n        break;\n\n      case \"LogicalExpression\":\n        closure = this.logicalExpressionHandler(node);\n        break;\n\n      case \"UnaryExpression\":\n        closure = this.unaryExpressionHandler(node);\n        break;\n\n      case \"UpdateExpression\":\n        closure = this.updateExpressionHandler(node);\n        break;\n\n      case \"ObjectExpression\":\n        closure = this.objectExpressionHandler(node);\n        break;\n\n      case \"ArrayExpression\":\n        closure = this.arrayExpressionHandler(node);\n        break;\n\n      case \"CallExpression\":\n        closure = this.callExpressionHandler(node);\n        break;\n\n      case \"NewExpression\":\n        closure = this.newExpressionHandler(node);\n        break;\n\n      case \"MemberExpression\":\n        closure = this.memberExpressionHandler(node);\n        break;\n\n      case \"ThisExpression\":\n        closure = this.thisExpressionHandler(node);\n        break;\n\n      case \"SequenceExpression\":\n        closure = this.sequenceExpressionHandler(node);\n        break;\n\n      case \"Literal\":\n        closure = this.literalHandler(node);\n        break;\n\n      case \"Identifier\":\n        closure = this.identifierHandler(node);\n        break;\n\n      case \"AssignmentExpression\":\n        closure = this.assignmentExpressionHandler(node);\n        break;\n\n      case \"FunctionDeclaration\":\n        closure = this.functionDeclarationHandler(node);\n        break;\n\n      case \"VariableDeclaration\":\n        closure = this.variableDeclarationHandler(node);\n        break;\n\n      case \"BlockStatement\":\n      case \"Program\":\n        closure = this.programHandler(node);\n        break;\n\n      case \"ExpressionStatement\":\n        closure = this.expressionStatementHandler(node);\n        break;\n\n      case \"EmptyStatement\":\n        closure = this.emptyStatementHandler(node);\n        break;\n\n      case \"ReturnStatement\":\n        closure = this.returnStatementHandler(node);\n        break;\n\n      case \"FunctionExpression\":\n        closure = this.functionExpressionHandler(node);\n        break;\n\n      case \"IfStatement\":\n        closure = this.ifStatementHandler(node);\n        break;\n\n      case \"ConditionalExpression\":\n        closure = this.conditionalExpressionHandler(node);\n        break;\n\n      case \"ForStatement\":\n        closure = this.forStatementHandler(node);\n        break;\n\n      case \"WhileStatement\":\n        closure = this.whileStatementHandler(node);\n        break;\n\n      case \"DoWhileStatement\":\n        closure = this.doWhileStatementHandler(node);\n        break;\n\n      case \"ForInStatement\":\n        closure = this.forInStatementHandler(node);\n        break;\n\n      case \"WithStatement\":\n        closure = this.withStatementHandler(node);\n        break;\n\n      case \"ThrowStatement\":\n        closure = this.throwStatementHandler(node);\n        break;\n\n      case \"TryStatement\":\n        closure = this.tryStatementHandler(node);\n        break;\n\n      case \"ContinueStatement\":\n        closure = this.continueStatementHandler(node);\n        break;\n\n      case \"BreakStatement\":\n        closure = this.breakStatementHandler(node);\n        break;\n\n      case \"SwitchStatement\":\n        closure = this.switchStatementHandler(node);\n        break;\n\n      case \"LabeledStatement\":\n        closure = this.labeledStatementHandler(node);\n        break;\n\n      case \"DebuggerStatement\":\n        closure = this.debuggerStatementHandler(node);\n        break;\n\n      default:\n        throw this.createInternalThrowError(Messages.NodeTypeSyntaxError, node.type, node);\n    }\n\n    return function () {\n      var timeout = _this2.options.timeout;\n\n      if (timeout && timeout > 0 && _this2.checkTimeout()) {\n        throw _this2.createInternalThrowError(Messages.ExecutionTimeOutError, timeout, null);\n      }\n\n      _this2.lastExecNode = node;\n      return closure.apply(void 0, arguments);\n    };\n  } // a==b a/b\n  ;\n\n  _proto2.binaryExpressionHandler = function binaryExpressionHandler(node) {\n    var _this3 = this;\n\n    var leftExpression = this.createClosure(node.left);\n    var rightExpression = this.createClosure(node.right);\n    return function () {\n      var leftValue = leftExpression();\n      var rightValue = rightExpression();\n\n      switch (node.operator) {\n        case \"==\":\n          return leftValue == rightValue;\n\n        case \"!=\":\n          return leftValue != rightValue;\n\n        case \"===\":\n          return leftValue === rightValue;\n\n        case \"!==\":\n          return leftValue !== rightValue;\n\n        case \"<\":\n          return leftValue < rightValue;\n\n        case \"<=\":\n          return leftValue <= rightValue;\n\n        case \">\":\n          return leftValue > rightValue;\n\n        case \">=\":\n          return leftValue >= rightValue;\n\n        case \"<<\":\n          return leftValue << rightValue;\n\n        case \">>\":\n          return leftValue >> rightValue;\n\n        case \">>>\":\n          return leftValue >>> rightValue;\n\n        case \"+\":\n          return leftValue + rightValue;\n\n        case \"-\":\n          return leftValue - rightValue;\n\n        case \"*\":\n          return leftValue * rightValue;\n\n        case \"**\":\n          return Math.pow(leftValue, rightValue);\n\n        case \"/\":\n          return leftValue / rightValue;\n\n        case \"%\":\n          return leftValue % rightValue;\n\n        case \"|\":\n          return leftValue | rightValue;\n\n        case \"^\":\n          return leftValue ^ rightValue;\n\n        case \"&\":\n          return leftValue & rightValue;\n\n        case \"in\":\n          return leftValue in rightValue;\n\n        case \"instanceof\":\n          return leftValue instanceof rightValue;\n\n        default:\n          throw _this3.createInternalThrowError(Messages.BinaryOperatorSyntaxError, node.operator, node);\n      }\n    };\n  } // a && b\n  ;\n\n  _proto2.logicalExpressionHandler = function logicalExpressionHandler(node) {\n    var _this4 = this;\n\n    var leftExpression = this.createClosure(node.left);\n    var rightExpression = this.createClosure(node.right);\n    return function () {\n      switch (node.operator) {\n        case \"||\":\n          return leftExpression() || rightExpression();\n\n        case \"&&\":\n          return leftExpression() && rightExpression();\n\n        default:\n          throw _this4.createInternalThrowError(Messages.LogicalOperatorSyntaxError, node.operator, node);\n      }\n    };\n  } // protected isRootScope(node: ESTree.Expression | ESTree.Pattern): boolean {\n  // \tif (node.type === \"Identifier\") {\n  // \t\tconst scope = this.getScopeFromName(node.name, this.getCurrentScope());\n  // \t\treturn scope.name === \"rootScope\";\n  // \t}\n  // \treturn false;\n  // }\n  // typeof a !a()\n  ;\n\n  _proto2.unaryExpressionHandler = function unaryExpressionHandler(node) {\n    var _this5 = this;\n\n    switch (node.operator) {\n      case \"delete\":\n        var objectGetter = this.createObjectGetter(node.argument);\n        var nameGetter = this.createNameGetter(node.argument);\n        return function () {\n          // not allowed to delete root scope property\n          // rootContext has move to prototype chai, so no judgment required\n          // if (this.isRootScope(node.argument)) {\n          // \treturn false;\n          // }\n          var obj = objectGetter();\n          var name = nameGetter();\n          return delete obj[name];\n        };\n\n      default:\n        var expression; // for typeof undefined var\n        // typeof adf9ad\n\n        if (node.operator === \"typeof\" && node.argument.type === \"Identifier\") {\n          var _objectGetter = this.createObjectGetter(node.argument);\n\n          var _nameGetter = this.createNameGetter(node.argument);\n\n          expression = function expression() {\n            return _objectGetter()[_nameGetter()];\n          };\n        } else {\n          expression = this.createClosure(node.argument);\n        }\n\n        return function () {\n          var value = expression();\n\n          switch (node.operator) {\n            case \"-\":\n              return -value;\n\n            case \"+\":\n              return +value;\n\n            case \"!\":\n              return !value;\n\n            case \"~\":\n              return ~value;\n\n            case \"void\":\n              return void value;\n\n            case \"typeof\":\n              return typeof value;\n\n            default:\n              throw _this5.createInternalThrowError(Messages.UnaryOperatorSyntaxError, node.operator, node);\n          }\n        };\n    }\n  } // ++a --a\n  ;\n\n  _proto2.updateExpressionHandler = function updateExpressionHandler(node) {\n    var _this6 = this;\n\n    var objectGetter = this.createObjectGetter(node.argument);\n    var nameGetter = this.createNameGetter(node.argument);\n    return function () {\n      var obj = objectGetter();\n      var name = nameGetter();\n\n      _this6.assertVariable(obj, name, node);\n\n      switch (node.operator) {\n        case \"++\":\n          return node.prefix ? ++obj[name] : obj[name]++;\n\n        case \"--\":\n          return node.prefix ? --obj[name] : obj[name]--;\n\n        default:\n          throw _this6.createInternalThrowError(Messages.UpdateOperatorSyntaxError, node.operator, node);\n      }\n    };\n  } // var o = {a: 1, b: 's', get name(){}, set name(){}  ...}\n  ;\n\n  _proto2.objectExpressionHandler = function objectExpressionHandler(node) {\n    var _this7 = this;\n\n    var items = [];\n\n    function getKey(keyNode) {\n      if (keyNode.type === \"Identifier\") {\n        // var o = {a:1}\n        return keyNode.name;\n      } else if (keyNode.type === \"Literal\") {\n        // var o = {\"a\":1}\n        return keyNode.value;\n      } else {\n        return this.throwError(Messages.ObjectStructureSyntaxError, keyNode.type, keyNode);\n      }\n    } // collect value, getter, and/or setter.\n\n\n    var properties = Object.create(null);\n    node.properties.forEach(function (property) {\n      var kind = property.kind;\n      var key = getKey(property.key);\n\n      if (!properties[key] || kind === \"init\") {\n        properties[key] = {};\n      }\n\n      properties[key][kind] = _this7.createClosure(property.value);\n      items.push({\n        key: key,\n        property: property\n      });\n    });\n    return function () {\n      var result = {};\n      var len = items.length;\n\n      for (var i = 0; i < len; i++) {\n        var item = items[i];\n        var key = item.key;\n        var kinds = properties[key];\n        var value = kinds.init ? kinds.init() : undefined;\n        var getter = kinds.get ? kinds.get() : function () {};\n        var setter = kinds.set ? kinds.set() : function (a) {};\n\n        if (\"set\" in kinds || \"get\" in kinds) {\n          var descriptor = {\n            configurable: true,\n            enumerable: true,\n            get: getter,\n            set: setter\n          };\n          Object.defineProperty(result, key, descriptor);\n        } else {\n          var property = item.property;\n          var kind = property.kind; // set function.name\n          // var d = { test(){} }\n          // var d = { test: function(){} }\n\n          if (property.key.type === \"Identifier\" && property.value.type === \"FunctionExpression\" && kind === \"init\" && !property.value.id) {\n            defineFunctionName(value, property.key.name);\n          }\n\n          result[key] = value;\n        }\n      }\n\n      return result;\n    };\n  } // [1,2,3]\n  ;\n\n  _proto2.arrayExpressionHandler = function arrayExpressionHandler(node) {\n    var _this8 = this;\n\n    //fix: [,,,1,2]\n    var items = node.elements.map(function (element) {\n      return element ? _this8.createClosure(element) : element;\n    });\n    return function () {\n      var len = items.length;\n      var result = Array(len);\n\n      for (var i = 0; i < len; i++) {\n        var item = items[i];\n\n        if (item) {\n          result[i] = item();\n        }\n      }\n\n      return result;\n    };\n  };\n\n  _proto2.safeObjectGet = function safeObjectGet(obj, key, node) {\n    return obj[key];\n  };\n\n  _proto2.createCallFunctionGetter = function createCallFunctionGetter(node) {\n    var _this9 = this;\n\n    switch (node.type) {\n      case \"MemberExpression\":\n        var objectGetter = this.createClosure(node.object);\n        var keyGetter = this.createMemberKeyGetter(node);\n        var source = this.source;\n        return function () {\n          var obj = objectGetter();\n          var key = keyGetter();\n\n          var func = _this9.safeObjectGet(obj, key, node);\n\n          if (!func || !isFunction(func)) {\n            var name = source.slice(node.start, node.end);\n            throw _this9.createInternalThrowError(Messages.FunctionUndefinedReferenceError, name, node);\n          } // obj.eval = eval\n          // obj.eval(...)\n\n\n          if (func.__IS_EVAL_FUNC) {\n            return function (code) {\n              return func(new InternalInterpreterReflection(_this9), code, true);\n            };\n          } // obj.func = Function\n          // obj.func(...)\n\n\n          if (func.__IS_FUNCTION_FUNC) {\n            return function () {\n              for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n              }\n\n              return func.apply(void 0, [new InternalInterpreterReflection(_this9)].concat(args));\n            };\n          } // method call\n          // eg：obj.say(...)\n          // eg: obj.say.call(...)\n          // eg: obj.say.apply(...)\n          // ======================\n          // obj.func(...)\n          // func = func.bind(obj)\n          // tips:\n          // func(...) -> func.bind(obj)(...)\n          // func.call(...) -> obj.func.call.bind(obj.func)(...)\n          // func.apply(...) -> obj.func.apply.bind(obj.func)(...)\n          // ...others\n\n\n          return func.bind(obj);\n        };\n\n      default:\n        // test() or (0,test)() or a[1]() ...\n        var closure = this.createClosure(node);\n        return function () {\n          var name = \"\";\n\n          if (node.type === \"Identifier\") {\n            name = node.name;\n          } // const name: string = (<ESTree.Identifier>node).name;\n\n\n          var func = closure();\n\n          if (!func || !isFunction(func)) {\n            throw _this9.createInternalThrowError(Messages.FunctionUndefinedReferenceError, name, node);\n          } // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval\n          // var eval = eval;\n          // function test(){\n          //    eval(...); //note: use local scope in eval5，but in Browser is use global scope\n          // }\n\n\n          if (node.type === \"Identifier\" && func.__IS_EVAL_FUNC && name === \"eval\") {\n            return function (code) {\n              var scope = _this9.getScopeFromName(name, _this9.getCurrentScope());\n\n              var useGlobalScope = scope.name === SuperScopeName || // !scope.parent || // super scope\n              scope.name === GlobalScopeName || // this.globalScope === scope ||\n              scope.name === RootScopeName; // use local scope if calling eval in super scope\n\n              return func(new InternalInterpreterReflection(_this9), code, !useGlobalScope);\n            };\n          } // use global scope\n          // var g_eval = eval;\n          // g_eval(\"a+1\");\n          //(0,eval)(...) ...eval alias\n\n\n          if (func.__IS_EVAL_FUNC) {\n            return function (code) {\n              return func(new InternalInterpreterReflection(_this9), code, true);\n            };\n          } // Function('a', 'b', 'return a+b')\n\n\n          if (func.__IS_FUNCTION_FUNC) {\n            return function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              return func.apply(void 0, [new InternalInterpreterReflection(_this9)].concat(args));\n            };\n          }\n\n          var ctx = _this9.options.globalContextInFunction; // with(obj) {\n          //     test() // test.call(obj, ...)\n          // }\n\n          if (node.type === \"Identifier\") {\n            var scope = _this9.getIdentifierScope(node);\n\n            if (scope.name === WithScopeName) {\n              ctx = scope.data;\n            }\n          } // function call\n          // this = undefined\n          // tips:\n          // test(...) === test.call(undefined, ...)\n          // fix: alert.call({}, ...) Illegal invocation\n\n\n          return func.bind(ctx);\n        };\n    }\n  } // func()\n  ;\n\n  _proto2.callExpressionHandler = function callExpressionHandler(node) {\n    var _this10 = this;\n\n    var funcGetter = this.createCallFunctionGetter(node.callee);\n    var argsGetter = node.arguments.map(function (arg) {\n      return _this10.createClosure(arg);\n    });\n    return function () {\n      return funcGetter().apply(void 0, argsGetter.map(function (arg) {\n        return arg();\n      }));\n    };\n  } // var f = function() {...}\n  ;\n\n  _proto2.functionExpressionHandler = function functionExpressionHandler(node) {\n    var _this11 = this;\n\n    var self = this;\n    var source = this.source;\n    var oldDeclVars = this.collectDeclVars;\n    var oldDeclFuncs = this.collectDeclFuncs;\n    this.collectDeclVars = Object.create(null);\n    this.collectDeclFuncs = Object.create(null);\n    var name = node.id ? node.id.name : \"\";\n    /**anonymous*/\n\n    var paramLength = node.params.length;\n    var paramsGetter = node.params.map(function (param) {\n      return _this11.createParamNameGetter(param);\n    }); // set scope\n\n    var bodyClosure = this.createClosure(node.body);\n    var declVars = this.collectDeclVars;\n    var declFuncs = this.collectDeclFuncs;\n    this.collectDeclVars = oldDeclVars;\n    this.collectDeclFuncs = oldDeclFuncs;\n    return function () {\n      // bind current scope\n      var runtimeScope = self.getCurrentScope();\n\n      var func = function func() {\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        self.callStack.push(\"\" + name);\n        var prevScope = self.getCurrentScope();\n        var currentScope = createScope(runtimeScope, \"FunctionScope(\" + name + \")\");\n        self.setCurrentScope(currentScope);\n        self.addDeclarationsToScope(declVars, declFuncs, currentScope); // var t = function(){ typeof t } // function\n        // t = function(){ typeof t } // function\n        // z = function tx(){ typeof tx } // function\n        // but\n        // d = { say: function(){ typeof say } } // undefined\n\n        if (name) {\n          currentScope.data[name] = func;\n        } // init arguments var\n\n\n        currentScope.data[\"arguments\"] = arguments;\n        paramsGetter.forEach(function (getter, i) {\n          currentScope.data[getter()] = args[i];\n        }); // init this\n\n        var prevContext = self.getCurrentContext(); //for ThisExpression\n\n        self.setCurrentContext(this);\n        var result = bodyClosure(); //reset\n\n        self.setCurrentContext(prevContext);\n        self.setCurrentScope(prevScope);\n        self.callStack.pop();\n\n        if (result instanceof Return) {\n          return result.value;\n        }\n      };\n\n      defineFunctionName(func, name);\n      Object.defineProperty(func, \"length\", {\n        value: paramLength,\n        writable: false,\n        enumerable: false,\n        configurable: true\n      });\n      Object.defineProperty(func, \"toString\", {\n        value: function value() {\n          return source.slice(node.start, node.end);\n        },\n        writable: true,\n        configurable: true,\n        enumerable: false\n      });\n      Object.defineProperty(func, \"valueOf\", {\n        value: function value() {\n          return source.slice(node.start, node.end);\n        },\n        writable: true,\n        configurable: true,\n        enumerable: false\n      });\n      return func;\n    };\n  } // new Ctrl()\n  ;\n\n  _proto2.newExpressionHandler = function newExpressionHandler(node) {\n    var _this12 = this;\n\n    var source = this.source;\n    var expression = this.createClosure(node.callee);\n    var args = node.arguments.map(function (arg) {\n      return _this12.createClosure(arg);\n    });\n    return function () {\n      var construct = expression();\n\n      if (!isFunction(construct) || construct.__IS_EVAL_FUNC) {\n        var callee = node.callee;\n        var name = source.slice(callee.start, callee.end);\n        throw _this12.createInternalThrowError(Messages.IsNotConstructor, name, node);\n      } // new Function(...)\n\n\n      if (construct.__IS_FUNCTION_FUNC) {\n        return construct.apply(void 0, [new InternalInterpreterReflection(_this12)].concat(args.map(function (arg) {\n          return arg();\n        })));\n      }\n\n      return _construct(construct, args.map(function (arg) {\n        return arg();\n      }));\n    };\n  } // a.b a['b']\n  ;\n\n  _proto2.memberExpressionHandler = function memberExpressionHandler(node) {\n    var objectGetter = this.createClosure(node.object);\n    var keyGetter = this.createMemberKeyGetter(node);\n    return function () {\n      var obj = objectGetter();\n      var key = keyGetter();\n      return obj[key];\n    };\n  } //this\n  ;\n\n  _proto2.thisExpressionHandler = function thisExpressionHandler(node) {\n    var _this13 = this;\n\n    return function () {\n      return _this13.getCurrentContext();\n    };\n  } // var1,var2,...\n  ;\n\n  _proto2.sequenceExpressionHandler = function sequenceExpressionHandler(node) {\n    var _this14 = this;\n\n    var expressions = node.expressions.map(function (item) {\n      return _this14.createClosure(item);\n    });\n    return function () {\n      var result;\n      var len = expressions.length;\n\n      for (var i = 0; i < len; i++) {\n        var expression = expressions[i];\n        result = expression();\n      }\n\n      return result;\n    };\n  } // 1 'name'\n  ;\n\n  _proto2.literalHandler = function literalHandler(node) {\n    return function () {\n      if (node.regex) {\n        return new RegExp(node.regex.pattern, node.regex.flags);\n      }\n\n      return node.value;\n    };\n  } // var1 ...\n  ;\n\n  _proto2.identifierHandler = function identifierHandler(node) {\n    var _this15 = this;\n\n    return function () {\n      var currentScope = _this15.getCurrentScope();\n\n      var data = _this15.getScopeDataFromName(node.name, currentScope);\n\n      _this15.assertVariable(data, node.name, node);\n\n      return data[node.name];\n    };\n  };\n\n  _proto2.getIdentifierScope = function getIdentifierScope(node) {\n    var currentScope = this.getCurrentScope();\n    var scope = this.getScopeFromName(node.name, currentScope);\n    return scope;\n  } // a=1 a+=2\n  ;\n\n  _proto2.assignmentExpressionHandler = function assignmentExpressionHandler(node) {\n    var _this16 = this;\n\n    // var s = function(){}\n    // s.name === s\n    if (node.left.type === \"Identifier\" && node.right.type === \"FunctionExpression\" && !node.right.id) {\n      node.right.id = {\n        type: \"Identifier\",\n        name: node.left.name\n      };\n    }\n\n    var dataGetter = this.createObjectGetter(node.left);\n    var nameGetter = this.createNameGetter(node.left);\n    var rightValueGetter = this.createClosure(node.right);\n    return function () {\n      var data = dataGetter();\n      var name = nameGetter();\n      var rightValue = rightValueGetter();\n\n      if (node.operator !== \"=\") {\n        // if a is undefined\n        // a += 1\n        _this16.assertVariable(data, name, node);\n      }\n\n      switch (node.operator) {\n        case \"=\":\n          return data[name] = rightValue;\n\n        case \"+=\":\n          return data[name] += rightValue;\n\n        case \"-=\":\n          return data[name] -= rightValue;\n\n        case \"*=\":\n          return data[name] *= rightValue;\n\n        case \"**=\":\n          return data[name] = Math.pow(data[name], rightValue);\n\n        case \"/=\":\n          return data[name] /= rightValue;\n\n        case \"%=\":\n          return data[name] %= rightValue;\n\n        case \"<<=\":\n          return data[name] <<= rightValue;\n\n        case \">>=\":\n          return data[name] >>= rightValue;\n\n        case \">>>=\":\n          return data[name] >>>= rightValue;\n\n        case \"&=\":\n          return data[name] &= rightValue;\n\n        case \"^=\":\n          return data[name] ^= rightValue;\n\n        case \"|=\":\n          return data[name] |= rightValue;\n\n        default:\n          throw _this16.createInternalThrowError(Messages.AssignmentExpressionSyntaxError, node.type, node);\n      }\n    };\n  } // function test(){}\n  ;\n\n  _proto2.functionDeclarationHandler = function functionDeclarationHandler(node) {\n    if (node.id) {\n      var functionClosure = this.functionExpressionHandler(node);\n      Object.defineProperty(functionClosure, \"isFunctionDeclareClosure\", {\n        value: true,\n        writable: false,\n        configurable: false,\n        enumerable: false\n      });\n      this.funcDeclaration(node.id.name, functionClosure);\n    }\n\n    return function () {\n      return EmptyStatementReturn;\n    };\n  };\n\n  _proto2.getVariableName = function getVariableName(node) {\n    if (node.type === \"Identifier\") {\n      return node.name;\n    } else {\n      throw this.createInternalThrowError(Messages.VariableTypeSyntaxError, node.type, node);\n    }\n  } // var i;\n  // var i=1;\n  ;\n\n  _proto2.variableDeclarationHandler = function variableDeclarationHandler(node) {\n    var _this17 = this;\n\n    var assignmentsClosure;\n    var assignments = [];\n\n    for (var i = 0; i < node.declarations.length; i++) {\n      var decl = node.declarations[i];\n      this.varDeclaration(this.getVariableName(decl.id));\n\n      if (decl.init) {\n        assignments.push({\n          type: \"AssignmentExpression\",\n          operator: \"=\",\n          left: decl.id,\n          right: decl.init\n        });\n      }\n    }\n\n    if (assignments.length) {\n      assignmentsClosure = this.createClosure({\n        type: \"BlockStatement\",\n        body: assignments\n      });\n    }\n\n    return function () {\n      if (assignmentsClosure) {\n        var oldValue = _this17.isVarDeclMode;\n        _this17.isVarDeclMode = true;\n        assignmentsClosure();\n        _this17.isVarDeclMode = oldValue;\n      }\n\n      return EmptyStatementReturn;\n    };\n  };\n\n  _proto2.assertVariable = function assertVariable(data, name, node) {\n    if (data === this.globalScope.data && !(name in data)) {\n      throw this.createInternalThrowError(Messages.VariableUndefinedReferenceError, name, node);\n    }\n  } // {...}\n  ;\n\n  _proto2.programHandler = function programHandler(node) {\n    var _this18 = this;\n\n    // const currentScope = this.getCurrentScope();\n    var stmtClosures = node.body.map(function (stmt) {\n      // if (stmt.type === \"EmptyStatement\") return null;\n      return _this18.createClosure(stmt);\n    });\n    return function () {\n      var result = EmptyStatementReturn;\n\n      for (var i = 0; i < stmtClosures.length; i++) {\n        var stmtClosure = stmtClosures[i]; // save last value\n\n        var ret = _this18.setValue(stmtClosure()); // if (!stmtClosure) continue;\n        // EmptyStatement\n\n\n        if (ret === EmptyStatementReturn) continue;\n        result = ret; // BlockStatement: break label;  continue label; for(){ break ... }\n        // ReturnStatement: return xx;\n\n        if (result instanceof Return || result instanceof BreakLabel || result instanceof ContinueLabel || result === Break || result === Continue) {\n          break;\n        }\n      } // save last value\n\n\n      return result;\n    };\n  } // all expression: a+1 a&&b a() a.b ...\n  ;\n\n  _proto2.expressionStatementHandler = function expressionStatementHandler(node) {\n    return this.createClosure(node.expression);\n  };\n\n  _proto2.emptyStatementHandler = function emptyStatementHandler(node) {\n    return function () {\n      return EmptyStatementReturn;\n    };\n  } // return xx;\n  ;\n\n  _proto2.returnStatementHandler = function returnStatementHandler(node) {\n    var argumentClosure = node.argument ? this.createClosure(node.argument) : noop;\n    return function () {\n      return new Return(argumentClosure());\n    };\n  } // if else\n  ;\n\n  _proto2.ifStatementHandler = function ifStatementHandler(node) {\n    var testClosure = this.createClosure(node.test);\n    var consequentClosure = this.createClosure(node.consequent);\n    var alternateClosure = node.alternate ? this.createClosure(node.alternate) :\n    /*!important*/\n    function () {\n      return EmptyStatementReturn;\n    };\n    return function () {\n      return testClosure() ? consequentClosure() : alternateClosure();\n    };\n  } // test() ? true : false\n  ;\n\n  _proto2.conditionalExpressionHandler = function conditionalExpressionHandler(node) {\n    return this.ifStatementHandler(node);\n  } // for(var i = 0; i < 10; i++) {...}\n  ;\n\n  _proto2.forStatementHandler = function forStatementHandler(node) {\n    var _this19 = this;\n\n    var initClosure = noop;\n    var testClosure = node.test ? this.createClosure(node.test) : function () {\n      return true;\n    };\n    var updateClosure = noop;\n    var bodyClosure = this.createClosure(node.body);\n\n    if (node.type === \"ForStatement\") {\n      initClosure = node.init ? this.createClosure(node.init) : initClosure;\n      updateClosure = node.update ? this.createClosure(node.update) : noop;\n    }\n\n    return function (pNode) {\n      var labelName;\n      var result = EmptyStatementReturn;\n      var shouldInitExec = node.type === \"DoWhileStatement\";\n\n      if (pNode && pNode.type === \"LabeledStatement\") {\n        labelName = pNode.label.name;\n      }\n\n      for (initClosure(); shouldInitExec || testClosure(); updateClosure()) {\n        shouldInitExec = false; // save last value\n\n        var ret = _this19.setValue(bodyClosure()); // notice: never return Break or Continue!\n\n\n        if (ret === EmptyStatementReturn || ret === Continue) continue;\n\n        if (ret === Break) {\n          break;\n        }\n\n        result = ret; // stop continue label\n\n        if (result instanceof ContinueLabel && result.value === labelName) {\n          result = EmptyStatementReturn;\n          continue;\n        }\n\n        if (result instanceof Return || result instanceof BreakLabel || result instanceof ContinueLabel) {\n          break;\n        }\n      }\n\n      return result;\n    };\n  } // while(1) {...}\n  ;\n\n  _proto2.whileStatementHandler = function whileStatementHandler(node) {\n    return this.forStatementHandler(node);\n  };\n\n  _proto2.doWhileStatementHandler = function doWhileStatementHandler(node) {\n    return this.forStatementHandler(node);\n  };\n\n  _proto2.forInStatementHandler = function forInStatementHandler(node) {\n    var _this20 = this;\n\n    // for( k in obj) or for(o.k in obj) ...\n    var left = node.left;\n    var rightClosure = this.createClosure(node.right);\n    var bodyClosure = this.createClosure(node.body); // for(var k in obj) {...}\n\n    if (node.left.type === \"VariableDeclaration\") {\n      // init var k\n      this.createClosure(node.left)(); // reset left\n      // for( k in obj)\n\n      left = node.left.declarations[0].id;\n    }\n\n    return function (pNode) {\n      var labelName;\n      var result = EmptyStatementReturn;\n      var x;\n\n      if (pNode && pNode.type === \"LabeledStatement\") {\n        labelName = pNode.label.name;\n      }\n\n      var data = rightClosure();\n\n      for (x in data) {\n        // assign left to scope\n        // k = x\n        // o.k = x\n        _this20.assignmentExpressionHandler({\n          type: \"AssignmentExpression\",\n          operator: \"=\",\n          left: left,\n          right: {\n            type: \"Literal\",\n            value: x\n          }\n        })(); // save last value\n\n\n        var ret = _this20.setValue(bodyClosure()); // notice: never return Break or Continue!\n\n\n        if (ret === EmptyStatementReturn || ret === Continue) continue;\n\n        if (ret === Break) {\n          break;\n        }\n\n        result = ret; // stop continue label\n\n        if (result instanceof ContinueLabel && result.value === labelName) {\n          result = EmptyStatementReturn;\n          continue;\n        }\n\n        if (result instanceof Return || result instanceof BreakLabel || result instanceof ContinueLabel) {\n          break;\n        }\n      }\n\n      return result;\n    };\n  };\n\n  _proto2.withStatementHandler = function withStatementHandler(node) {\n    var _this21 = this;\n\n    var objectClosure = this.createClosure(node.object);\n    var bodyClosure = this.createClosure(node.body);\n    return function () {\n      var data = objectClosure();\n\n      var currentScope = _this21.getCurrentScope();\n\n      var newScope = new Scope(data, currentScope, WithScopeName); // const data = objectClosure();\n      // copy all properties\n      // for (let k in data) {\n      // \tnewScope.data[k] = data[k];\n      // }\n\n      _this21.setCurrentScope(newScope); // save last value\n\n\n      var result = _this21.setValue(bodyClosure());\n\n      _this21.setCurrentScope(currentScope);\n\n      return result;\n    };\n  };\n\n  _proto2.throwStatementHandler = function throwStatementHandler(node) {\n    var _this22 = this;\n\n    var argumentClosure = this.createClosure(node.argument);\n    return function () {\n      _this22.setValue(undefined);\n\n      throw argumentClosure();\n    };\n  } // try{...}catch(e){...}finally{}\n  ;\n\n  _proto2.tryStatementHandler = function tryStatementHandler(node) {\n    var _this23 = this;\n\n    var blockClosure = this.createClosure(node.block);\n    var handlerClosure = node.handler ? this.catchClauseHandler(node.handler) : null;\n    var finalizerClosure = node.finalizer ? this.createClosure(node.finalizer) : null;\n    return function () {\n      var currentScope = _this23.getCurrentScope();\n\n      var currentContext = _this23.getCurrentContext();\n\n      var labelStack = currentScope.labelStack.concat([]);\n\n      var callStack = _this23.callStack.concat([]);\n\n      var result = EmptyStatementReturn;\n      var finalReturn;\n      var throwError;\n\n      var reset = function reset() {\n        _this23.setCurrentScope(currentScope); //reset scope\n\n\n        _this23.setCurrentContext(currentContext); //reset context\n\n\n        currentScope.labelStack = labelStack; //reset label stack\n\n        _this23.callStack = callStack; //reset call stack\n      };\n      /**\n       * try{...}catch(e){...}finally{...} execution sequence:\n       * try stmt\n       * try throw\n       * catch stmt (if)\n       * finally stmt\n       *\n       * finally throw or finally return\n       * catch throw or catch return\n       * try return\n       */\n\n\n      try {\n        result = _this23.setValue(blockClosure());\n\n        if (result instanceof Return) {\n          finalReturn = result;\n        }\n      } catch (err) {\n        reset();\n\n        if (_this23.isInterruptThrow(err)) {\n          throw err;\n        }\n\n        if (handlerClosure) {\n          try {\n            result = _this23.setValue(handlerClosure(err));\n\n            if (result instanceof Return) {\n              finalReturn = result;\n            }\n          } catch (err) {\n            reset();\n\n            if (_this23.isInterruptThrow(err)) {\n              throw err;\n            } // save catch throw error\n\n\n            throwError = err;\n          }\n        }\n      } // finally {\n\n\n      if (finalizerClosure) {\n        try {\n          //do not save finally result\n          result = finalizerClosure();\n\n          if (result instanceof Return) {\n            finalReturn = result;\n          } // finalReturn = finalizerClosure();\n\n        } catch (err) {\n          reset();\n\n          if (_this23.isInterruptThrow(err)) {\n            throw err;\n          } // save finally throw error\n\n\n          throwError = err;\n        } // if (finalReturn instanceof Return) {\n        // \tresult = finalReturn;\n        // }\n\n      } // }\n\n\n      if (throwError) throw throwError;\n\n      if (finalReturn) {\n        return finalReturn;\n      }\n\n      return result;\n    };\n  } // ... catch(e){...}\n  ;\n\n  _proto2.catchClauseHandler = function catchClauseHandler(node) {\n    var _this24 = this;\n\n    var paramNameGetter = this.createParamNameGetter(node.param);\n    var bodyClosure = this.createClosure(node.body);\n    return function (e) {\n      var result;\n\n      var currentScope = _this24.getCurrentScope();\n\n      var scopeData = currentScope.data; // get param name \"e\"\n\n      var paramName = paramNameGetter();\n      var isInScope = hasOwnProperty.call(scopeData, paramName); //paramName in scopeData;\n      // save \"e\"\n\n      var oldValue = scopeData[paramName]; // add \"e\" to scope\n\n      scopeData[paramName] = e; // run\n\n      result = bodyClosure(); // reset \"e\"\n\n      if (isInScope) {\n        scopeData[paramName] = oldValue;\n      } else {\n        //unset\n        delete scopeData[paramName];\n      }\n\n      return result;\n    };\n  };\n\n  _proto2.continueStatementHandler = function continueStatementHandler(node) {\n    return function () {\n      return node.label ? new ContinueLabel(node.label.name) : Continue;\n    };\n  };\n\n  _proto2.breakStatementHandler = function breakStatementHandler(node) {\n    return function () {\n      return node.label ? new BreakLabel(node.label.name) : Break;\n    };\n  };\n\n  _proto2.switchStatementHandler = function switchStatementHandler(node) {\n    var _this25 = this;\n\n    var discriminantClosure = this.createClosure(node.discriminant);\n    var caseClosures = node.cases.map(function (item) {\n      return _this25.switchCaseHandler(item);\n    });\n    return function () {\n      var value = discriminantClosure();\n      var match = false;\n      var result;\n      var ret, defaultCase;\n\n      for (var i = 0; i < caseClosures.length; i++) {\n        var item = caseClosures[i]();\n        var test = item.testClosure();\n\n        if (test === DefaultCase) {\n          defaultCase = item;\n          continue;\n        }\n\n        if (match || test === value) {\n          match = true;\n          ret = _this25.setValue(item.bodyClosure()); // notice: never return Break!\n\n          if (ret === EmptyStatementReturn) continue;\n\n          if (ret === Break) {\n            break;\n          }\n\n          result = ret;\n\n          if (result instanceof Return || result instanceof BreakLabel || result instanceof ContinueLabel || result === Continue) {\n            break;\n          }\n        }\n      }\n\n      if (!match && defaultCase) {\n        ret = _this25.setValue(defaultCase.bodyClosure());\n        var isEBC = ret === EmptyStatementReturn || ret === Break || ret === Continue; // notice: never return Break or Continue!\n\n        if (!isEBC) {\n          result = ret;\n        }\n      }\n\n      return result;\n    };\n  };\n\n  _proto2.switchCaseHandler = function switchCaseHandler(node) {\n    var testClosure = node.test ? this.createClosure(node.test) : function () {\n      return DefaultCase;\n    };\n    var bodyClosure = this.createClosure({\n      type: \"BlockStatement\",\n      body: node.consequent\n    });\n    return function () {\n      return {\n        testClosure: testClosure,\n        bodyClosure: bodyClosure\n      };\n    };\n  } // label: xxx\n  ;\n\n  _proto2.labeledStatementHandler = function labeledStatementHandler(node) {\n    var _this26 = this;\n\n    var labelName = node.label.name;\n    var bodyClosure = this.createClosure(node.body);\n    return function () {\n      var result;\n\n      var currentScope = _this26.getCurrentScope();\n\n      currentScope.labelStack.push(labelName);\n      result = bodyClosure(node); // stop break label\n\n      if (result instanceof BreakLabel && result.value === labelName) {\n        result = EmptyStatementReturn;\n      }\n\n      currentScope.labelStack.pop();\n      return result;\n    };\n  };\n\n  _proto2.debuggerStatementHandler = function debuggerStatementHandler(node) {\n    return function () {\n      debugger;\n      return EmptyStatementReturn;\n    };\n  } // get es3/5 param name\n  ;\n\n  _proto2.createParamNameGetter = function createParamNameGetter(node) {\n    if (node.type === \"Identifier\") {\n      return function () {\n        return node.name;\n      };\n    } else {\n      throw this.createInternalThrowError(Messages.ParamTypeSyntaxError, node.type, node);\n    }\n  };\n\n  _proto2.createObjectKeyGetter = function createObjectKeyGetter(node) {\n    var getter; // var obj = { title: \"\" }\n\n    if (node.type === \"Identifier\") {\n      getter = function getter() {\n        return node.name;\n      };\n    } else {\n      // Literal or ...\n      // var obj = { \"title\": \"\" } or others...\n      getter = this.createClosure(node);\n    }\n\n    return function () {\n      return getter();\n    };\n  };\n\n  _proto2.createMemberKeyGetter = function createMemberKeyGetter(node) {\n    // s['a'];  node.computed = true\n    // s.foo;  node.computed = false\n    return node.computed ? this.createClosure(node.property) : this.createObjectKeyGetter(node.property);\n  } // for UnaryExpression UpdateExpression AssignmentExpression\n  ;\n\n  _proto2.createObjectGetter = function createObjectGetter(node) {\n    var _this27 = this;\n\n    switch (node.type) {\n      case \"Identifier\":\n        return function () {\n          return _this27.getScopeDataFromName(node.name, _this27.getCurrentScope());\n        };\n\n      case \"MemberExpression\":\n        return this.createClosure(node.object);\n\n      default:\n        throw this.createInternalThrowError(Messages.AssignmentTypeSyntaxError, node.type, node);\n    }\n  } // for UnaryExpression UpdateExpression AssignmentExpression\n  ;\n\n  _proto2.createNameGetter = function createNameGetter(node) {\n    switch (node.type) {\n      case \"Identifier\":\n        return function () {\n          return node.name;\n        };\n\n      case \"MemberExpression\":\n        return this.createMemberKeyGetter(node);\n\n      default:\n        throw this.createInternalThrowError(Messages.AssignmentTypeSyntaxError, node.type, node);\n    }\n  };\n\n  _proto2.varDeclaration = function varDeclaration(name) {\n    var context = this.collectDeclVars;\n    context[name] = undefined;\n  };\n\n  _proto2.funcDeclaration = function funcDeclaration(name, func) {\n    var context = this.collectDeclFuncs;\n    context[name] = func;\n  };\n\n  _proto2.addDeclarationsToScope = function addDeclarationsToScope(declVars, declFuncs, scope) {\n    var scopeData = scope.data;\n\n    for (var key in declFuncs) {\n      var value = declFuncs[key];\n      scopeData[key] = value ? value() : value;\n    }\n\n    for (var _key5 in declVars) {\n      if (!(_key5 in scopeData)) {\n        scopeData[_key5] = void 0;\n      }\n    }\n  };\n\n  _proto2.getScopeValue = function getScopeValue(name, startScope) {\n    var scope = this.getScopeFromName(name, startScope);\n    return scope.data[name];\n  };\n\n  _proto2.getScopeDataFromName = function getScopeDataFromName(name, startScope) {\n    return this.getScopeFromName(name, startScope).data;\n  };\n\n  _proto2.getScopeFromName = function getScopeFromName(name, startScope) {\n    var scope = startScope;\n\n    do {\n      if (name in scope.data) {\n        //if (hasOwnProperty.call(scope.data, name)) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return this.globalScope;\n  };\n\n  _proto2.setValue = function setValue(value) {\n    var isFunctionCall = this.callStack.length;\n\n    if (this.isVarDeclMode || isFunctionCall || value === EmptyStatementReturn || value === Break || value === Continue || value instanceof BreakLabel || value instanceof ContinueLabel) {\n      return value;\n    }\n\n    this.value = value instanceof Return ? value.value : value;\n    return value;\n  };\n\n  _proto2.getValue = function getValue() {\n    return this.value;\n  };\n\n  return Interpreter;\n}();\nInterpreter.version = version;\nInterpreter.eval = internalEval;\nInterpreter.Function = internalFunction;\nInterpreter.ecmaVersion = 5; // alert.call(globalContextInFunction, 1);\n// fix: alert.call({}, 1); // Illegal invocation\n// function func(){\n//     this;// Interpreter.globalContextInFunction\n// }\n// func()\n\nInterpreter.globalContextInFunction = void 0;\nInterpreter.global = Object.create(null);"]},"metadata":{},"sourceType":"module"}