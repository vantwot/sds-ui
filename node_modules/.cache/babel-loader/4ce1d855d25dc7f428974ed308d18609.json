{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport LngLat from '../geo/lng_lat';\nimport { bezier, ease, interpolate, now } from '../util';\nimport DOM from '../utils/dom';\nvar wheelZoomDelta = 4.000244140625;\nvar defaultZoomRate = 1 / 100;\nvar wheelZoomRate = 1 / 450;\nvar maxScalePerFrame = 2;\n\nvar ScrollZoomHandler = function () {\n  function ScrollZoomHandler(map, handler) {\n    var _this = this;\n\n    _classCallCheck(this, ScrollZoomHandler);\n\n    _defineProperty(this, \"map\", void 0);\n\n    _defineProperty(this, \"el\", void 0);\n\n    _defineProperty(this, \"enabled\", void 0);\n\n    _defineProperty(this, \"active\", void 0);\n\n    _defineProperty(this, \"zooming\", void 0);\n\n    _defineProperty(this, \"aroundCenter\", void 0);\n\n    _defineProperty(this, \"around\", void 0);\n\n    _defineProperty(this, \"aroundPoint\", void 0);\n\n    _defineProperty(this, \"type\", void 0);\n\n    _defineProperty(this, \"lastValue\", void 0);\n\n    _defineProperty(this, \"timeout\", void 0);\n\n    _defineProperty(this, \"finishTimeout\", void 0);\n\n    _defineProperty(this, \"lastWheelEvent\", void 0);\n\n    _defineProperty(this, \"lastWheelEventTime\", void 0);\n\n    _defineProperty(this, \"startZoom\", void 0);\n\n    _defineProperty(this, \"targetZoom\", void 0);\n\n    _defineProperty(this, \"delta\", void 0);\n\n    _defineProperty(this, \"easing\", void 0);\n\n    _defineProperty(this, \"prevEase\", void 0);\n\n    _defineProperty(this, \"frameId\", void 0);\n\n    _defineProperty(this, \"handler\", void 0);\n\n    _defineProperty(this, \"defaultZoomRate\", void 0);\n\n    _defineProperty(this, \"wheelZoomRate\", void 0);\n\n    _defineProperty(this, \"onScrollFrame\", function () {\n      if (!_this.frameId) {\n        return;\n      }\n\n      _this.frameId = null;\n\n      if (!_this.isActive()) {\n        return;\n      }\n\n      var tr = _this.map.transform;\n\n      if (_this.delta !== 0) {\n        var zoomRate = _this.type === 'wheel' && Math.abs(_this.delta) > wheelZoomDelta ? _this.wheelZoomRate : _this.defaultZoomRate;\n        var scale = maxScalePerFrame / (1 + Math.exp(-Math.abs(_this.delta * zoomRate)));\n\n        if (_this.delta < 0 && scale !== 0) {\n          scale = 1 / scale;\n        }\n\n        var fromScale = typeof _this.targetZoom === 'number' ? tr.zoomScale(_this.targetZoom) : tr.scale;\n        _this.targetZoom = Math.min(tr.maxZoom, Math.max(tr.minZoom, tr.scaleZoom(fromScale * scale)));\n\n        if (_this.type === 'wheel') {\n          _this.startZoom = tr.zoom;\n          _this.easing = _this.smoothOutEasing(200);\n        }\n\n        _this.delta = 0;\n      }\n\n      var targetZoom = typeof _this.targetZoom === 'number' ? _this.targetZoom : tr.zoom;\n      var startZoom = _this.startZoom;\n      var easing = _this.easing;\n      var finished = false;\n      var zoom;\n\n      if (_this.type === 'wheel' && startZoom && easing) {\n        var t = Math.min((now() - _this.lastWheelEventTime) / 200, 1);\n        var k = easing(t);\n        zoom = interpolate(startZoom, targetZoom, k);\n\n        if (t < 1) {\n          if (!_this.frameId) {\n            _this.frameId = true;\n          }\n        } else {\n          finished = true;\n        }\n      } else {\n        zoom = targetZoom;\n        finished = true;\n      }\n\n      _this.active = true;\n\n      if (finished) {\n        _this.active = false;\n        _this.finishTimeout = setTimeout(function () {\n          _this.zooming = false;\n\n          _this.handler.triggerRenderFrame();\n\n          delete _this.targetZoom;\n          delete _this.finishTimeout;\n        }, 200);\n      }\n\n      return {\n        noInertia: true,\n        needsRenderFrame: !finished,\n        zoomDelta: zoom - tr.zoom,\n        around: _this.aroundPoint,\n        originalEvent: _this.lastWheelEvent\n      };\n    });\n\n    this.map = map;\n    this.el = map.getCanvasContainer();\n    this.handler = handler;\n    this.delta = 0;\n    this.defaultZoomRate = defaultZoomRate;\n    this.wheelZoomRate = wheelZoomRate;\n  }\n\n  _createClass(ScrollZoomHandler, [{\n    key: \"setZoomRate\",\n    value: function setZoomRate(zoomRate) {\n      this.defaultZoomRate = zoomRate;\n    }\n  }, {\n    key: \"setWheelZoomRate\",\n    value: function setWheelZoomRate(zoomRate) {\n      this.wheelZoomRate = zoomRate;\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return !!this.enabled;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return !!this.active || this.finishTimeout !== undefined;\n    }\n  }, {\n    key: \"isZooming\",\n    value: function isZooming() {\n      return !!this.zooming;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable(options) {\n      if (this.isEnabled()) {\n        return;\n      }\n\n      this.enabled = true;\n      this.aroundCenter = options && options.around === 'center';\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      if (!this.isEnabled()) {\n        return;\n      }\n\n      this.enabled = false;\n    }\n  }, {\n    key: \"wheel\",\n    value: function wheel(e) {\n      if (!this.isEnabled()) {\n        return;\n      }\n\n      var value = e.deltaMode === window.WheelEvent.DOM_DELTA_LINE ? e.deltaY * 40 : e.deltaY;\n      var nowTime = now();\n      var timeDelta = nowTime - (this.lastWheelEventTime || 0);\n      this.lastWheelEventTime = nowTime;\n\n      if (value !== 0 && value % wheelZoomDelta === 0) {\n        this.type = 'wheel';\n      } else if (value !== 0 && Math.abs(value) < 4) {\n        this.type = 'trackpad';\n      } else if (timeDelta > 400) {\n        this.type = null;\n        this.lastValue = value;\n        this.timeout = setTimeout(this.onTimeout, 40, e);\n      } else if (!this.type) {\n        this.type = Math.abs(timeDelta * value) < 200 ? 'trackpad' : 'wheel';\n\n        if (this.timeout) {\n          clearTimeout(this.timeout);\n          this.timeout = null;\n          value += this.lastValue;\n        }\n      }\n\n      if (e.shiftKey && value) {\n        value = value / 4;\n      }\n\n      if (this.type) {\n        this.lastWheelEvent = e;\n        this.delta -= value;\n\n        if (!this.active) {\n          this.start(e);\n        }\n      }\n\n      e.preventDefault();\n    }\n  }, {\n    key: \"renderFrame\",\n    value: function renderFrame() {\n      return this.onScrollFrame();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.active = false;\n    }\n  }, {\n    key: \"onTimeout\",\n    value: function onTimeout(initialEvent) {\n      this.type = 'wheel';\n      this.delta -= this.lastValue;\n\n      if (!this.active && this.start) {\n        this.start(initialEvent);\n      }\n    }\n  }, {\n    key: \"start\",\n    value: function start(e) {\n      if (!this.delta) {\n        return;\n      }\n\n      if (this.frameId) {\n        this.frameId = null;\n      }\n\n      this.active = true;\n\n      if (!this.isZooming()) {\n        this.zooming = true;\n      }\n\n      if (this.finishTimeout) {\n        clearTimeout(this.finishTimeout);\n        delete this.finishTimeout;\n      }\n\n      var pos = DOM.mousePos(this.el, e);\n      this.around = LngLat.convert(this.aroundCenter ? this.map.getCenter() : this.map.unproject(pos));\n      this.aroundPoint = this.map.transform.locationPoint(this.around);\n\n      if (!this.frameId) {\n        this.frameId = true;\n        this.handler.triggerRenderFrame();\n      }\n    }\n  }, {\n    key: \"smoothOutEasing\",\n    value: function smoothOutEasing(duration) {\n      var easing = ease;\n\n      if (this.prevEase) {\n        var preEase = this.prevEase;\n        var t = (now() - preEase.start) / preEase.duration;\n        var speed = preEase.easing(t + 0.01) - preEase.easing(t);\n        var x = 0.27 / Math.sqrt(speed * speed + 0.0001) * 0.01;\n        var y = Math.sqrt(0.27 * 0.27 - x * x);\n        easing = bezier(x, y, 0.25, 1);\n      }\n\n      this.prevEase = {\n        start: now(),\n        duration: duration,\n        easing: easing\n      };\n      return easing;\n    }\n  }]);\n\n  return ScrollZoomHandler;\n}();\n\nexport default ScrollZoomHandler;","map":{"version":3,"sources":["../../src/handler/scroll_zoom.ts"],"names":["wheelZoomDelta","defaultZoomRate","wheelZoomRate","maxScalePerFrame","ScrollZoomHandler","map","options","value","e","window","nowTime","now","timeDelta","Math","setTimeout","clearTimeout","tr","zoomRate","scale","fromScale","targetZoom","startZoom","easing","finished","t","k","zoom","interpolate","noInertia","needsRenderFrame","zoomDelta","around","originalEvent","lastWheelEvent","pos","DOM","LngLat","preEase","speed","x","y","bezier","start","duration"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport { EarthMap } from '../earthmap';\nimport LngLat from '../geo/lng_lat';\nimport Point from '../geo/point';\nimport { Map } from '../map';\nimport { bezier, ease, interpolate, now } from '../util';\nimport DOM from '../utils/dom';\nimport HandlerManager from './handler_manager';\n\n// deltaY value for mouse scroll wheel identification\nconst wheelZoomDelta = 4.000244140625;\n\n// These magic numbers control the rate of zoom. Trackpad events fire at a greater\n// frequency than mouse scroll wheel, so reduce the zoom rate per wheel tick\nconst defaultZoomRate = 1 / 100;\nconst wheelZoomRate = 1 / 450;\n\n// upper bound on how much we scale the map in any single render frame; this\n// is used to limit zoom rate in the case of very fast scrolling\nconst maxScalePerFrame = 2;\n\n/**\n * The `ScrollZoomHandler` allows the user to zoom the map by scrolling.\n */\nclass ScrollZoomHandler {\n  private map: Map | EarthMap;\n  private el: HTMLElement;\n  private enabled: boolean;\n  private active: boolean;\n  private zooming: boolean;\n  private aroundCenter: boolean;\n  private around: LngLat;\n  private aroundPoint: Point;\n  private type: 'wheel' | 'trackpad' | null;\n  private lastValue: number;\n  private timeout: number | null; // used for delayed-handling of a single wheel movement\n  private finishTimeout: number; // used to delay final '{move,zoom}end' events\n\n  private lastWheelEvent: any;\n  private lastWheelEventTime: number;\n\n  private startZoom: number;\n  private targetZoom: number;\n  private delta: number;\n  private easing: (time: number) => number;\n  private prevEase: {\n    start: number;\n    duration: number;\n    easing: (_: number) => number;\n  };\n\n  private frameId: boolean | null;\n  private handler: HandlerManager;\n\n  private defaultZoomRate: number;\n  private wheelZoomRate: number;\n\n  /**\n   * @private\n   */\n  constructor(map: Map | EarthMap, handler: HandlerManager) {\n    this.map = map;\n    this.el = map.getCanvasContainer();\n    this.handler = handler;\n\n    this.delta = 0;\n    this.defaultZoomRate = defaultZoomRate;\n    this.wheelZoomRate = wheelZoomRate;\n  }\n\n  /**\n   * Set the zoom rate of a trackpad\n   * @param {number} [zoomRate=1/100] The rate used to scale trackpad movement to a zoom value.\n   * @example\n   * // Speed up trackpad zoom\n   * map.scrollZoom.setZoomRate(1/25);\n   */\n  public setZoomRate(zoomRate: number) {\n    this.defaultZoomRate = zoomRate;\n  }\n\n  /**\n   * Set the zoom rate of a mouse wheel\n   * @param {number} [wheelZoomRate=1/450] The rate used to scale mouse wheel movement to a zoom value.\n   * @example\n   * // Slow down zoom of mouse wheel\n   * map.scrollZoom.setWheelZoomRate(1/600);\n   */\n  public setWheelZoomRate(zoomRate: number) {\n    this.wheelZoomRate = zoomRate;\n  }\n\n  /**\n   * Returns a Boolean indicating whether the \"scroll to zoom\" interaction is enabled.\n   *\n   * @returns {boolean} `true` if the \"scroll to zoom\" interaction is enabled.\n   */\n  public isEnabled() {\n    return !!this.enabled;\n  }\n\n  /*\n   * Active state is turned on and off with every scroll wheel event and is set back to false before the map\n   * render is called, so _active is not a good candidate for determining if a scroll zoom animation is in\n   * progress.\n   */\n  public isActive() {\n    return !!this.active || this.finishTimeout !== undefined;\n  }\n\n  public isZooming() {\n    return !!this.zooming;\n  }\n\n  /**\n   * Enables the \"scroll to zoom\" interaction.\n   *\n   * @param {Object} [options] Options object.\n   * @param {string} [options.around] If \"center\" is passed, map will zoom around center of map\n   *\n   * @example\n   *   map.scrollZoom.enable();\n   * @example\n   *  map.scrollZoom.enable({ around: 'center' })\n   */\n  public enable(options?: any) {\n    if (this.isEnabled()) {\n      return;\n    }\n    this.enabled = true;\n    this.aroundCenter = options && options.around === 'center';\n  }\n\n  /**\n   * Disables the \"scroll to zoom\" interaction.\n   *\n   * @example\n   *   map.scrollZoom.disable();\n   */\n  public disable() {\n    if (!this.isEnabled()) {\n      return;\n    }\n    this.enabled = false;\n  }\n\n  public wheel(e: WheelEvent) {\n    if (!this.isEnabled()) {\n      return;\n    }\n    // Remove `any` cast when https://github.com/facebook/flow/issues/4879 is fixed.\n    let value =\n      e.deltaMode === window.WheelEvent.DOM_DELTA_LINE\n        ? e.deltaY * 40\n        : e.deltaY;\n    const nowTime = now();\n    const timeDelta = nowTime - (this.lastWheelEventTime || 0);\n\n    this.lastWheelEventTime = nowTime;\n\n    if (value !== 0 && value % wheelZoomDelta === 0) {\n      // This one is definitely a mouse wheel event.\n      this.type = 'wheel';\n    } else if (value !== 0 && Math.abs(value) < 4) {\n      // This one is definitely a trackpad event because it is so small.\n      this.type = 'trackpad';\n    } else if (timeDelta > 400) {\n      // This is likely a new scroll action.\n      this.type = null;\n      this.lastValue = value;\n\n      // Start a timeout in case this was a singular event, and dely it by up to 40ms.\n      // @ts-ignore\n      this.timeout = setTimeout(this.onTimeout, 40, e);\n    } else if (!this.type) {\n      // This is a repeating event, but we don't know the type of event just yet.\n      // If the delta per time is small, we assume it's a fast trackpad; otherwise we switch into wheel mode.\n      this.type = Math.abs(timeDelta * value) < 200 ? 'trackpad' : 'wheel';\n\n      // Make sure our delayed event isn't fired again, because we accumulate\n      // the previous event (which was less than 40ms ago) into this event.\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n        this.timeout = null;\n        value += this.lastValue;\n      }\n    }\n\n    // Slow down zoom if shift key is held for more precise zooming\n    if (e.shiftKey && value) {\n      value = value / 4;\n    }\n    // Only fire the callback if we actually know what type of scrolling device the user uses.\n    if (this.type) {\n      this.lastWheelEvent = e;\n      this.delta -= value;\n      if (!this.active) {\n        this.start(e);\n      }\n    }\n\n    e.preventDefault();\n  }\n\n  public renderFrame() {\n    return this.onScrollFrame();\n  }\n\n  public reset() {\n    this.active = false;\n  }\n\n  private onScrollFrame = () => {\n    if (!this.frameId) {\n      return;\n    }\n    this.frameId = null;\n\n    if (!this.isActive()) {\n      return;\n    }\n    const tr = this.map.transform;\n\n    // if we've had scroll events since the last render frame, consume the\n    // accumulated delta, and update the target zoom level accordingly\n    if (this.delta !== 0) {\n      // For trackpad events and single mouse wheel ticks, use the default zoom rate\n      const zoomRate =\n        this.type === 'wheel' && Math.abs(this.delta) > wheelZoomDelta\n          ? this.wheelZoomRate\n          : this.defaultZoomRate;\n      // Scale by sigmoid of scroll wheel delta.\n      let scale =\n        maxScalePerFrame / (1 + Math.exp(-Math.abs(this.delta * zoomRate)));\n\n      if (this.delta < 0 && scale !== 0) {\n        scale = 1 / scale;\n      }\n\n      const fromScale =\n        typeof this.targetZoom === 'number'\n          ? tr.zoomScale(this.targetZoom)\n          : tr.scale;\n      this.targetZoom = Math.min(\n        tr.maxZoom,\n        Math.max(tr.minZoom, tr.scaleZoom(fromScale * scale)),\n      );\n\n      // if this is a mouse wheel, refresh the starting zoom and easing\n      // function we're using to smooth out the zooming between wheel\n      // events\n      if (this.type === 'wheel') {\n        this.startZoom = tr.zoom;\n        this.easing = this.smoothOutEasing(200);\n      }\n\n      this.delta = 0;\n    }\n\n    const targetZoom =\n      typeof this.targetZoom === 'number' ? this.targetZoom : tr.zoom;\n    const startZoom = this.startZoom;\n    const easing = this.easing;\n\n    let finished = false;\n    let zoom;\n    if (this.type === 'wheel' && startZoom && easing) {\n      const t = Math.min((now() - this.lastWheelEventTime) / 200, 1);\n      const k = easing(t);\n      zoom = interpolate(startZoom, targetZoom, k);\n      if (t < 1) {\n        if (!this.frameId) {\n          this.frameId = true;\n        }\n      } else {\n        finished = true;\n      }\n    } else {\n      zoom = targetZoom;\n      finished = true;\n    }\n\n    this.active = true;\n\n    if (finished) {\n      this.active = false;\n      // @ts-ignore\n      this.finishTimeout = setTimeout(() => {\n        this.zooming = false;\n        this.handler.triggerRenderFrame();\n        // @ts-ignore\n        delete this.targetZoom;\n        // @ts-ignore\n        delete this.finishTimeout;\n      }, 200);\n    }\n\n    return {\n      noInertia: true,\n      needsRenderFrame: !finished,\n      zoomDelta: zoom - tr.zoom,\n      around: this.aroundPoint,\n      originalEvent: this.lastWheelEvent,\n    };\n  };\n\n  private onTimeout(initialEvent: any) {\n    this.type = 'wheel';\n    this.delta -= this.lastValue;\n    if (!this.active && this.start) {\n      this.start(initialEvent);\n    }\n  }\n\n  private start(e: any) {\n    if (!this.delta) {\n      return;\n    }\n\n    if (this.frameId) {\n      this.frameId = null;\n    }\n\n    this.active = true;\n    if (!this.isZooming()) {\n      this.zooming = true;\n    }\n\n    if (this.finishTimeout) {\n      clearTimeout(this.finishTimeout);\n      // @ts-ignore\n      delete this.finishTimeout;\n    }\n\n    const pos = DOM.mousePos(this.el, e);\n\n    this.around = LngLat.convert(\n      this.aroundCenter ? this.map.getCenter() : this.map.unproject(pos),\n    );\n    this.aroundPoint = this.map.transform.locationPoint(this.around);\n    if (!this.frameId) {\n      this.frameId = true;\n      this.handler.triggerRenderFrame();\n    }\n  }\n\n  private smoothOutEasing(duration: number) {\n    let easing = ease;\n\n    if (this.prevEase) {\n      const preEase = this.prevEase;\n      const t = (now() - preEase.start) / preEase.duration;\n      const speed = preEase.easing(t + 0.01) - preEase.easing(t);\n\n      // Quick hack to make new bezier that is continuous with last\n      const x = (0.27 / Math.sqrt(speed * speed + 0.0001)) * 0.01;\n      const y = Math.sqrt(0.27 * 0.27 - x * x);\n\n      easing = bezier(x, y, 0.25, 1);\n    }\n\n    this.prevEase = {\n      start: now(),\n      duration,\n      easing,\n    };\n\n    return easing;\n  }\n}\n\nexport default ScrollZoomHandler;\n"]},"metadata":{},"sourceType":"module"}