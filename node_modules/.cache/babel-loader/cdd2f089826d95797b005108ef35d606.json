{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport Point from '../../geo/point';\nimport DOM from '../../utils/dom';\nimport { Event } from './event';\n\nvar MapTouchEvent = function (_Event) {\n  _inherits(MapTouchEvent, _Event);\n\n  var _super = _createSuper(MapTouchEvent);\n\n  function MapTouchEvent(type, map, originalEvent) {\n    var _this;\n\n    _classCallCheck(this, MapTouchEvent);\n\n    var touches = type === 'touchend' ? originalEvent.changedTouches : originalEvent.touches;\n    var points = DOM.touchPos(map.getCanvasContainer(), touches);\n    var lngLats = points.map(function (t) {\n      return map.unproject(t);\n    });\n    var point = points.reduce(function (prev, curr, i, arr) {\n      return prev.add(curr.div(arr.length));\n    }, new Point(0, 0));\n    var lngLat = map.unproject(point);\n    _this = _super.call(this, type, {\n      points: points,\n      point: point,\n      lngLats: lngLats,\n      lngLat: lngLat,\n      originalEvent: originalEvent\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"target\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"originalEvent\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"lngLat\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"point\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"points\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"lngLats\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"defaultPrevented\", void 0);\n\n    _this.defaultPrevented = false;\n    return _this;\n  }\n\n  _createClass(MapTouchEvent, [{\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      this.defaultPrevented = true;\n    }\n  }]);\n\n  return MapTouchEvent;\n}(Event);\n\nexport { MapTouchEvent as default };","map":{"version":3,"sources":["../../../src/handler/events/map_touch_event.ts"],"names":["MapTouchEvent","Event","touches","type","originalEvent","points","DOM","map","lngLats","point","prev","curr","arr","lngLat"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,OAAA,KAAA,MAAA,iBAAA;AAEA,OAAA,GAAA,MAAA,iBAAA;AACA,SAAA,KAAA,QAAA,SAAA;;IACqBA,a;;;;;AAiDnB,WAAA,aAAA,CAAA,IAAA,EAAA,GAAA,EAAA,aAAA,EAA0E;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,aAAA,CAAA;;AACxE,QAAME,OAAO,GACXC,IAAI,KAAJA,UAAAA,GACIC,aAAa,CADjBD,cAAAA,GAEIC,aAAa,CAHnB,OAAA;AAIA,QAAMC,MAAM,GAAGC,GAAG,CAAHA,QAAAA,CAAaC,GAAG,CAAhBD,kBAAaC,EAAbD,EAAf,OAAeA,CAAf;AACA,QAAME,OAAO,GAAG,MAAM,CAAN,GAAA,CAAW,UAAA,CAAA,EAAA;AAAA,aAAcD,GAAG,CAAHA,SAAAA,CAAd,CAAcA,CAAd;AAA3B,KAAgB,CAAhB;AACA,QAAME,KAAK,GAAG,MAAM,CAAN,MAAA,CACZ,UAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,GAAA,EAAuD;AACrD,aAAOC,IAAI,CAAJA,GAAAA,CAASC,IAAI,CAAJA,GAAAA,CAASC,GAAG,CAA5B,MAAgBD,CAATD,CAAP;AAFU,KAAA,EAIZ,IAAA,KAAA,CAAA,CAAA,EAJF,CAIE,CAJY,CAAd;AAMA,QAAMG,MAAM,GAAGN,GAAG,CAAHA,SAAAA,CAAf,KAAeA,CAAf;AACA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,IAAA,EAAY;AAAEF,MAAAA,MAAM,EAAR,MAAA;AAAUI,MAAAA,KAAK,EAAf,KAAA;AAAiBD,MAAAA,OAAO,EAAxB,OAAA;AAA0BK,MAAAA,MAAM,EAAhC,MAAA;AAAkCT,MAAAA,aAAa,EAAbA;AAAlC,KAAZ,CAAA;;AAdwE,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,MAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,eAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,kBAAA,EAAA,KAAA,CAAA,CAAA;;AAexE,IAAA,KAAA,CAAA,gBAAA,GAAA,KAAA;AAfwE,WAAA,KAAA;AAgBzE;;;;WAWD,SAAA,cAAA,GAAyB;AACvB,WAAA,gBAAA,GAAA,IAAA;AACD;;;;EA9EwCH,K;;SAAtBD,a","sourcesContent":["// @ts-ignore\nimport { EarthMap } from '../../earthmap';\nimport LngLat from '../../geo/lng_lat';\nimport Point from '../../geo/point';\nimport { Map } from '../../map';\nimport DOM from '../../utils/dom';\nimport { Event } from './event';\nexport default class MapTouchEvent extends Event {\n  /**\n   * The event type.\n   */\n  public type: 'touchstart' | 'touchend' | 'touchcancel';\n\n  /**\n   * The `Map` object that fired the event.\n   */\n  public target: Map | EarthMap;\n\n  /**\n   * The DOM event which caused the map event.\n   */\n  public originalEvent: TouchEvent;\n\n  /**\n   * The geographic location on the map of the center of the touch event points.\n   */\n  public lngLat: LngLat;\n\n  /**\n   * The pixel coordinates of the center of the touch event points, relative to the map and measured from the top left\n   * corner.\n   */\n  public point: Point;\n\n  /**\n   * The array of pixel coordinates corresponding to a\n   * [touch event's `touches`](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/touches) property.\n   */\n  public points: Point[];\n\n  /**\n   * The geographical locations on the map corresponding to a\n   * [touch event's `touches`](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/touches) property.\n   */\n  public lngLats: LngLat[];\n\n  /**\n   * `true` if `preventDefault` has been called.\n   * @private\n   */\n\n  public defaultPrevented: boolean;\n\n  /**\n   * @private\n   */\n  constructor(type: string, map: Map | EarthMap, originalEvent: TouchEvent) {\n    const touches =\n      type === 'touchend'\n        ? originalEvent.changedTouches\n        : originalEvent.touches;\n    const points = DOM.touchPos(map.getCanvasContainer(), touches);\n    const lngLats = points.map((t: Point) => map.unproject(t));\n    const point = points.reduce(\n      (prev: Point, curr: Point, i: number, arr: Point[]) => {\n        return prev.add(curr.div(arr.length));\n      },\n      new Point(0, 0),\n    );\n    const lngLat = map.unproject(point);\n    super(type, { points, point, lngLats, lngLat, originalEvent });\n    this.defaultPrevented = false;\n  }\n\n  /**\n   * Prevents subsequent default processing of the event by the map.\n   *\n   * Calling this method will prevent the following default map behaviors:\n   *\n   *   * On `touchstart` events, the behavior of {@link DragPanHandler}\n   *   * On `touchstart` events, the behavior of {@link TouchZoomRotateHandler}\n   *\n   */\n  private preventDefault() {\n    this.defaultPrevented = true;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}