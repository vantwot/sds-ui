{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PlotLayer = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar util_1 = require(\"@antv/util\");\n\nvar l7_source_1 = (0, tslib_1.__importDefault)(require(\"@antv/l7-source\"));\nvar event_emitter_1 = (0, tslib_1.__importDefault)(require(\"@antv/event-emitter\"));\n\nvar layer_1 = require(\"../../types/layer\");\n\nvar source_1 = require(\"../../adaptor/source\");\n\nvar constants_1 = require(\"../map/constants\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar LayerConfigkeys = ['name', 'zIndex', 'visible', 'minZoom', 'maxZoom', 'pickingBuffer', 'autoFit', 'blend'];\n\nvar PlotLayer =\n/** @class */\nfunction (_super) {\n  (0, tslib_1.__extends)(PlotLayer, _super);\n\n  function PlotLayer(options) {\n    var _this = _super.call(this) || this;\n\n    _this.options = (0, utils_1.deepAssign)({}, _this.getDefaultOptions(), options);\n    _this.lastOptions = _this.options;\n    return _this;\n  }\n  /**\n   * 获取默认配置\n   */\n\n\n  PlotLayer.prototype.getDefaultOptions = function () {\n    return {};\n  };\n\n  PlotLayer.prototype.pickLayerConfig = function (params) {\n    var config = (0, util_1.pick)(params, LayerConfigkeys);\n    return config;\n  };\n\n  PlotLayer.prototype.addTo = function (scene) {\n    scene.addLayer(this.layer);\n  };\n\n  PlotLayer.prototype.remove = function (scene) {\n    scene.removeLayer(this.layer);\n  };\n  /**\n   * 更新\n   */\n\n\n  PlotLayer.prototype.update = function (options) {\n    this.updateOption(options);\n    this.updateConfig(options);\n  };\n  /**\n   * 更新: 更新配置\n   */\n\n\n  PlotLayer.prototype.updateOption = function (options) {\n    this.lastOptions = this.options;\n    this.options = (0, utils_1.deepAssign)({}, this.options, options);\n  }; // 更新: 更新图层属性配置\n\n\n  PlotLayer.prototype.updateConfig = function (options) {\n    if (!(0, util_1.isUndefined)(options.zIndex) && !(0, util_1.isEqual)(this.lastOptions.zIndex, this.options.zIndex)) {\n      this.setIndex(options.zIndex);\n    }\n\n    if (!(0, util_1.isUndefined)(options.blend) && !(0, util_1.isEqual)(this.lastOptions.blend, this.options.blend)) {\n      this.setBlend(options.blend);\n    }\n\n    if (!(0, util_1.isUndefined)(options.minZoom) && !(0, util_1.isEqual)(this.lastOptions.minZoom, this.options.minZoom)) {\n      this.setMinZoom(options.minZoom);\n    }\n\n    if (!(0, util_1.isUndefined)(options.maxZoom) && !(0, util_1.isEqual)(this.lastOptions.maxZoom, this.options.maxZoom)) {\n      this.setMinZoom(options.maxZoom);\n    }\n\n    if (!(0, util_1.isUndefined)(options.visible) && !(0, util_1.isEqual)(this.lastOptions.visible, this.options.visible)) {\n      options.visible ? this.show() : this.hide();\n    }\n  };\n\n  PlotLayer.prototype.render = function () {\n    this.layer.renderLayers();\n  };\n\n  PlotLayer.prototype.setSource = function (source) {\n    if (source instanceof l7_source_1.default) {\n      this.layer.setSource(source);\n    } else {\n      var data = source.data,\n          aggregation = source.aggregation,\n          option = (0, tslib_1.__rest)(source, [\"data\", \"aggregation\"]);\n      aggregation && source_1.MappingSource.aggregation(option, aggregation);\n      this.layer.source(data, option);\n    }\n  };\n\n  PlotLayer.prototype.changeData = function (source) {\n    this.setSource(source);\n  };\n\n  PlotLayer.prototype.setIndex = function (zIndex) {\n    this.layer.setIndex(zIndex);\n  };\n\n  PlotLayer.prototype.setBlend = function (blend) {\n    this.layer.setBlend(blend);\n  };\n\n  PlotLayer.prototype.setMinZoom = function (minZoom) {\n    this.layer.setMinZoom(minZoom);\n  };\n\n  PlotLayer.prototype.setMaxZoom = function (maxZoom) {\n    this.layer.setMaxZoom(maxZoom);\n  };\n\n  PlotLayer.prototype.show = function () {\n    this.layer.inited && this.layer.show();\n  };\n\n  PlotLayer.prototype.hide = function () {\n    this.layer.inited && this.layer.hide();\n  };\n\n  PlotLayer.prototype.toggleVisible = function () {\n    this.isVisible() ? this.hide() : this.show();\n  };\n\n  PlotLayer.prototype.isVisible = function () {\n    return this.layer.inited ? this.layer.isVisible() : this.options.visible;\n  };\n\n  PlotLayer.prototype.fitBounds = function (fitBoundsOptions) {\n    this.layer.fitBounds(fitBoundsOptions);\n  };\n  /**\n   * 事件代理: 绑定事件\n   */\n\n\n  PlotLayer.prototype.on = function (name, callback) {\n    if (constants_1.LayerEventList.indexOf(name) !== -1) {\n      this.layer.on(name, callback);\n    } else {\n      _super.prototype.on.call(this, name, callback);\n    }\n\n    return this;\n  };\n  /**\n   * 事件代理: 绑定一次事件\n   */\n\n\n  PlotLayer.prototype.once = function (name, callback) {\n    if (constants_1.LayerEventList.indexOf(name) !== -1) {\n      this.layer.once(name, callback);\n    } else {\n      _super.prototype.once.call(this, name, callback);\n    }\n\n    return this;\n  };\n  /**\n   * 事件代理: 解绑事件\n   */\n\n\n  PlotLayer.prototype.off = function (name, callback) {\n    if (constants_1.LayerEventList.indexOf(name) !== -1) {\n      this.layer.off(name, callback);\n    } else {\n      _super.prototype.off.call(this, name, callback);\n    }\n\n    return this;\n  };\n  /**\n   * 地图图表类型\n   */\n\n\n  PlotLayer.LayerType = layer_1.LayerType;\n  /**\n   * 图层属性配置项 Keys\n   */\n\n  PlotLayer.LayerConfigkeys = LayerConfigkeys;\n  return PlotLayer;\n}(event_emitter_1.default);\n\nexports.PlotLayer = PlotLayer;","map":{"version":3,"sources":["../../../../src/core/layer/plot-layer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PlotLayer = void 0;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar l7_source_1 = (0, tslib_1.__importDefault)(require(\"@antv/l7-source\"));\nvar event_emitter_1 = (0, tslib_1.__importDefault)(require(\"@antv/event-emitter\"));\nvar layer_1 = require(\"../../types/layer\");\nvar source_1 = require(\"../../adaptor/source\");\nvar constants_1 = require(\"../map/constants\");\nvar utils_1 = require(\"../../utils\");\nvar LayerConfigkeys = ['name', 'zIndex', 'visible', 'minZoom', 'maxZoom', 'pickingBuffer', 'autoFit', 'blend'];\nvar PlotLayer = /** @class */ (function (_super) {\n    (0, tslib_1.__extends)(PlotLayer, _super);\n    function PlotLayer(options) {\n        var _this = _super.call(this) || this;\n        _this.options = (0, utils_1.deepAssign)({}, _this.getDefaultOptions(), options);\n        _this.lastOptions = _this.options;\n        return _this;\n    }\n    /**\n     * 获取默认配置\n     */\n    PlotLayer.prototype.getDefaultOptions = function () {\n        return {};\n    };\n    PlotLayer.prototype.pickLayerConfig = function (params) {\n        var config = (0, util_1.pick)(params, LayerConfigkeys);\n        return config;\n    };\n    PlotLayer.prototype.addTo = function (scene) {\n        scene.addLayer(this.layer);\n    };\n    PlotLayer.prototype.remove = function (scene) {\n        scene.removeLayer(this.layer);\n    };\n    /**\n     * 更新\n     */\n    PlotLayer.prototype.update = function (options) {\n        this.updateOption(options);\n        this.updateConfig(options);\n    };\n    /**\n     * 更新: 更新配置\n     */\n    PlotLayer.prototype.updateOption = function (options) {\n        this.lastOptions = this.options;\n        this.options = (0, utils_1.deepAssign)({}, this.options, options);\n    };\n    // 更新: 更新图层属性配置\n    PlotLayer.prototype.updateConfig = function (options) {\n        if (!(0, util_1.isUndefined)(options.zIndex) && !(0, util_1.isEqual)(this.lastOptions.zIndex, this.options.zIndex)) {\n            this.setIndex(options.zIndex);\n        }\n        if (!(0, util_1.isUndefined)(options.blend) && !(0, util_1.isEqual)(this.lastOptions.blend, this.options.blend)) {\n            this.setBlend(options.blend);\n        }\n        if (!(0, util_1.isUndefined)(options.minZoom) && !(0, util_1.isEqual)(this.lastOptions.minZoom, this.options.minZoom)) {\n            this.setMinZoom(options.minZoom);\n        }\n        if (!(0, util_1.isUndefined)(options.maxZoom) && !(0, util_1.isEqual)(this.lastOptions.maxZoom, this.options.maxZoom)) {\n            this.setMinZoom(options.maxZoom);\n        }\n        if (!(0, util_1.isUndefined)(options.visible) && !(0, util_1.isEqual)(this.lastOptions.visible, this.options.visible)) {\n            options.visible ? this.show() : this.hide();\n        }\n    };\n    PlotLayer.prototype.render = function () {\n        this.layer.renderLayers();\n    };\n    PlotLayer.prototype.setSource = function (source) {\n        if (source instanceof l7_source_1.default) {\n            this.layer.setSource(source);\n        }\n        else {\n            var data = source.data, aggregation = source.aggregation, option = (0, tslib_1.__rest)(source, [\"data\", \"aggregation\"]);\n            aggregation && source_1.MappingSource.aggregation(option, aggregation);\n            this.layer.source(data, option);\n        }\n    };\n    PlotLayer.prototype.changeData = function (source) {\n        this.setSource(source);\n    };\n    PlotLayer.prototype.setIndex = function (zIndex) {\n        this.layer.setIndex(zIndex);\n    };\n    PlotLayer.prototype.setBlend = function (blend) {\n        this.layer.setBlend(blend);\n    };\n    PlotLayer.prototype.setMinZoom = function (minZoom) {\n        this.layer.setMinZoom(minZoom);\n    };\n    PlotLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.layer.setMaxZoom(maxZoom);\n    };\n    PlotLayer.prototype.show = function () {\n        this.layer.inited && this.layer.show();\n    };\n    PlotLayer.prototype.hide = function () {\n        this.layer.inited && this.layer.hide();\n    };\n    PlotLayer.prototype.toggleVisible = function () {\n        this.isVisible() ? this.hide() : this.show();\n    };\n    PlotLayer.prototype.isVisible = function () {\n        return this.layer.inited ? this.layer.isVisible() : this.options.visible;\n    };\n    PlotLayer.prototype.fitBounds = function (fitBoundsOptions) {\n        this.layer.fitBounds(fitBoundsOptions);\n    };\n    /**\n     * 事件代理: 绑定事件\n     */\n    PlotLayer.prototype.on = function (name, callback) {\n        if (constants_1.LayerEventList.indexOf(name) !== -1) {\n            this.layer.on(name, callback);\n        }\n        else {\n            _super.prototype.on.call(this, name, callback);\n        }\n        return this;\n    };\n    /**\n     * 事件代理: 绑定一次事件\n     */\n    PlotLayer.prototype.once = function (name, callback) {\n        if (constants_1.LayerEventList.indexOf(name) !== -1) {\n            this.layer.once(name, callback);\n        }\n        else {\n            _super.prototype.once.call(this, name, callback);\n        }\n        return this;\n    };\n    /**\n     * 事件代理: 解绑事件\n     */\n    PlotLayer.prototype.off = function (name, callback) {\n        if (constants_1.LayerEventList.indexOf(name) !== -1) {\n            this.layer.off(name, callback);\n        }\n        else {\n            _super.prototype.off.call(this, name, callback);\n        }\n        return this;\n    };\n    /**\n     * 地图图表类型\n     */\n    PlotLayer.LayerType = layer_1.LayerType;\n    /**\n     * 图层属性配置项 Keys\n     */\n    PlotLayer.LayerConfigkeys = LayerConfigkeys;\n    return PlotLayer;\n}(event_emitter_1.default));\nexports.PlotLayer = PlotLayer;\n//# sourceMappingURL=plot-layer.js.map"]},"metadata":{},"sourceType":"script"}