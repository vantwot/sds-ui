{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport IconContext from \"@ant-design/icons/es/components/Context\";\nimport { FormProvider as RcFormProvider } from 'rc-field-form';\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport LocaleProvider, { ANT_MARK } from '../locale-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { ConfigConsumer, ConfigContext } from './context';\nimport SizeContext, { SizeContextProvider } from './SizeContext';\nimport message from '../message';\nimport notification from '../notification';\nimport { registerTheme } from './cssVariables';\nimport defaultLocale from '../locale/default';\nexport { ConfigContext, ConfigConsumer };\nexport var configConsumerProps = ['getTargetContainer', 'getPopupContainer', 'rootPrefixCls', 'getPrefixCls', 'renderEmpty', 'csp', 'autoInsertSpaceInButton', 'locale', 'pageHeader']; // These props is used by `useContext` directly in sub component\n\nvar PASSED_PROPS = ['getTargetContainer', 'getPopupContainer', 'renderEmpty', 'pageHeader', 'input', 'form'];\nexport var defaultPrefixCls = 'ant';\nexport var defaultIconPrefixCls = 'anticon';\nvar globalPrefixCls;\nvar globalIconPrefixCls;\n\nfunction getGlobalPrefixCls() {\n  return globalPrefixCls || defaultPrefixCls;\n}\n\nfunction getGlobalIconPrefixCls() {\n  return globalIconPrefixCls || defaultIconPrefixCls;\n}\n\nvar setGlobalConfig = function setGlobalConfig(_ref) {\n  var prefixCls = _ref.prefixCls,\n      iconPrefixCls = _ref.iconPrefixCls,\n      theme = _ref.theme;\n\n  if (prefixCls !== undefined) {\n    globalPrefixCls = prefixCls;\n  }\n\n  if (iconPrefixCls !== undefined) {\n    globalIconPrefixCls = iconPrefixCls;\n  }\n\n  if (theme) {\n    registerTheme(getGlobalPrefixCls(), theme);\n  }\n};\n\nexport var globalConfig = function globalConfig() {\n  return {\n    getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {\n      if (customizePrefixCls) return customizePrefixCls;\n      return suffixCls ? \"\".concat(getGlobalPrefixCls(), \"-\").concat(suffixCls) : getGlobalPrefixCls();\n    },\n    getIconPrefixCls: getGlobalIconPrefixCls,\n    getRootPrefixCls: function getRootPrefixCls(rootPrefixCls, customizePrefixCls) {\n      // Customize rootPrefixCls is first priority\n      if (rootPrefixCls) {\n        return rootPrefixCls;\n      } // If Global prefixCls provided, use this\n\n\n      if (globalPrefixCls) {\n        return globalPrefixCls;\n      } // [Legacy] If customize prefixCls provided, we cut it to get the prefixCls\n\n\n      if (customizePrefixCls && customizePrefixCls.includes('-')) {\n        return customizePrefixCls.replace(/^(.*)-[^-]*$/, '$1');\n      } // Fallback to default prefixCls\n\n\n      return getGlobalPrefixCls();\n    }\n  };\n};\n\nvar ProviderChildren = function ProviderChildren(props) {\n  var _a, _b, _c;\n\n  var children = props.children,\n      csp = props.csp,\n      autoInsertSpaceInButton = props.autoInsertSpaceInButton,\n      form = props.form,\n      locale = props.locale,\n      componentSize = props.componentSize,\n      direction = props.direction,\n      space = props.space,\n      virtual = props.virtual,\n      dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n      legacyLocale = props.legacyLocale,\n      parentContext = props.parentContext,\n      iconPrefixCls = props.iconPrefixCls;\n  var getPrefixCls = React.useCallback(function (suffixCls, customizePrefixCls) {\n    var prefixCls = props.prefixCls;\n    if (customizePrefixCls) return customizePrefixCls;\n    var mergedPrefixCls = prefixCls || parentContext.getPrefixCls('');\n    return suffixCls ? \"\".concat(mergedPrefixCls, \"-\").concat(suffixCls) : mergedPrefixCls;\n  }, [parentContext.getPrefixCls, props.prefixCls]);\n\n  var config = _extends(_extends({}, parentContext), {\n    csp: csp,\n    autoInsertSpaceInButton: autoInsertSpaceInButton,\n    locale: locale || legacyLocale,\n    direction: direction,\n    space: space,\n    virtual: virtual,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    getPrefixCls: getPrefixCls\n  }); // Pass the props used by `useContext` directly with child component.\n  // These props should merged into `config`.\n\n\n  PASSED_PROPS.forEach(function (propName) {\n    var propValue = props[propName];\n\n    if (propValue) {\n      config[propName] = propValue;\n    }\n  }); // https://github.com/ant-design/ant-design/issues/27617\n\n  var memoedConfig = useMemo(function () {\n    return config;\n  }, config, function (prevConfig, currentConfig) {\n    var prevKeys = Object.keys(prevConfig);\n    var currentKeys = Object.keys(currentConfig);\n    return prevKeys.length !== currentKeys.length || prevKeys.some(function (key) {\n      return prevConfig[key] !== currentConfig[key];\n    });\n  });\n  var memoIconContextValue = React.useMemo(function () {\n    return {\n      prefixCls: iconPrefixCls,\n      csp: csp\n    };\n  }, [iconPrefixCls]);\n  var childNode = children; // Additional Form provider\n\n  var validateMessages = _extends({}, (_a = defaultLocale.Form) === null || _a === void 0 ? void 0 : _a.defaultValidateMessages);\n\n  if (locale) {\n    validateMessages = ((_b = locale.Form) === null || _b === void 0 ? void 0 : _b.defaultValidateMessages) || ((_c = defaultLocale.Form) === null || _c === void 0 ? void 0 : _c.defaultValidateMessages) || {};\n  }\n\n  if (form && form.validateMessages) {\n    validateMessages = _extends(_extends({}, validateMessages), form.validateMessages);\n  }\n\n  if (Object.keys(validateMessages).length > 0) {\n    childNode = /*#__PURE__*/React.createElement(RcFormProvider, {\n      validateMessages: validateMessages\n    }, children);\n  }\n\n  if (locale) {\n    childNode = /*#__PURE__*/React.createElement(LocaleProvider, {\n      locale: locale,\n      _ANT_MARK__: ANT_MARK\n    }, childNode);\n  }\n\n  if (iconPrefixCls) {\n    childNode = /*#__PURE__*/React.createElement(IconContext.Provider, {\n      value: memoIconContextValue\n    }, childNode);\n  }\n\n  if (componentSize) {\n    childNode = /*#__PURE__*/React.createElement(SizeContextProvider, {\n      size: componentSize\n    }, childNode);\n  }\n\n  return /*#__PURE__*/React.createElement(ConfigContext.Provider, {\n    value: memoedConfig\n  }, childNode);\n};\n\nvar ConfigProvider = function ConfigProvider(props) {\n  React.useEffect(function () {\n    if (props.direction) {\n      message.config({\n        rtl: props.direction === 'rtl'\n      });\n      notification.config({\n        rtl: props.direction === 'rtl'\n      });\n    }\n  }, [props.direction]);\n  return /*#__PURE__*/React.createElement(LocaleReceiver, null, function (_, __, legacyLocale) {\n    return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (context) {\n      return /*#__PURE__*/React.createElement(ProviderChildren, _extends({\n        parentContext: context,\n        legacyLocale: legacyLocale\n      }, props));\n    });\n  });\n};\n/** @private internal Usage. do not use in your production */\n\n\nConfigProvider.ConfigContext = ConfigContext;\nConfigProvider.SizeContext = SizeContext;\nConfigProvider.config = setGlobalConfig;\nexport default ConfigProvider;","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/antd/es/config-provider/index.js"],"names":["_extends","React","IconContext","FormProvider","RcFormProvider","useMemo","LocaleProvider","ANT_MARK","LocaleReceiver","ConfigConsumer","ConfigContext","SizeContext","SizeContextProvider","message","notification","registerTheme","defaultLocale","configConsumerProps","PASSED_PROPS","defaultPrefixCls","defaultIconPrefixCls","globalPrefixCls","globalIconPrefixCls","getGlobalPrefixCls","getGlobalIconPrefixCls","setGlobalConfig","_ref","prefixCls","iconPrefixCls","theme","undefined","globalConfig","getPrefixCls","suffixCls","customizePrefixCls","concat","getIconPrefixCls","getRootPrefixCls","rootPrefixCls","includes","replace","ProviderChildren","props","_a","_b","_c","children","csp","autoInsertSpaceInButton","form","locale","componentSize","direction","space","virtual","dropdownMatchSelectWidth","legacyLocale","parentContext","useCallback","mergedPrefixCls","config","forEach","propName","propValue","memoedConfig","prevConfig","currentConfig","prevKeys","Object","keys","currentKeys","length","some","key","memoIconContextValue","childNode","validateMessages","Form","defaultValidateMessages","createElement","_ANT_MARK__","Provider","value","size","ConfigProvider","useEffect","rtl","_","__","context"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport IconContext from \"@ant-design/icons/es/components/Context\";\nimport { FormProvider as RcFormProvider } from 'rc-field-form';\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport LocaleProvider, { ANT_MARK } from '../locale-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { ConfigConsumer, ConfigContext } from './context';\nimport SizeContext, { SizeContextProvider } from './SizeContext';\nimport message from '../message';\nimport notification from '../notification';\nimport { registerTheme } from './cssVariables';\nimport defaultLocale from '../locale/default';\nexport { ConfigContext, ConfigConsumer };\nexport var configConsumerProps = ['getTargetContainer', 'getPopupContainer', 'rootPrefixCls', 'getPrefixCls', 'renderEmpty', 'csp', 'autoInsertSpaceInButton', 'locale', 'pageHeader']; // These props is used by `useContext` directly in sub component\n\nvar PASSED_PROPS = ['getTargetContainer', 'getPopupContainer', 'renderEmpty', 'pageHeader', 'input', 'form'];\nexport var defaultPrefixCls = 'ant';\nexport var defaultIconPrefixCls = 'anticon';\nvar globalPrefixCls;\nvar globalIconPrefixCls;\n\nfunction getGlobalPrefixCls() {\n  return globalPrefixCls || defaultPrefixCls;\n}\n\nfunction getGlobalIconPrefixCls() {\n  return globalIconPrefixCls || defaultIconPrefixCls;\n}\n\nvar setGlobalConfig = function setGlobalConfig(_ref) {\n  var prefixCls = _ref.prefixCls,\n      iconPrefixCls = _ref.iconPrefixCls,\n      theme = _ref.theme;\n\n  if (prefixCls !== undefined) {\n    globalPrefixCls = prefixCls;\n  }\n\n  if (iconPrefixCls !== undefined) {\n    globalIconPrefixCls = iconPrefixCls;\n  }\n\n  if (theme) {\n    registerTheme(getGlobalPrefixCls(), theme);\n  }\n};\n\nexport var globalConfig = function globalConfig() {\n  return {\n    getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {\n      if (customizePrefixCls) return customizePrefixCls;\n      return suffixCls ? \"\".concat(getGlobalPrefixCls(), \"-\").concat(suffixCls) : getGlobalPrefixCls();\n    },\n    getIconPrefixCls: getGlobalIconPrefixCls,\n    getRootPrefixCls: function getRootPrefixCls(rootPrefixCls, customizePrefixCls) {\n      // Customize rootPrefixCls is first priority\n      if (rootPrefixCls) {\n        return rootPrefixCls;\n      } // If Global prefixCls provided, use this\n\n\n      if (globalPrefixCls) {\n        return globalPrefixCls;\n      } // [Legacy] If customize prefixCls provided, we cut it to get the prefixCls\n\n\n      if (customizePrefixCls && customizePrefixCls.includes('-')) {\n        return customizePrefixCls.replace(/^(.*)-[^-]*$/, '$1');\n      } // Fallback to default prefixCls\n\n\n      return getGlobalPrefixCls();\n    }\n  };\n};\n\nvar ProviderChildren = function ProviderChildren(props) {\n  var _a, _b, _c;\n\n  var children = props.children,\n      csp = props.csp,\n      autoInsertSpaceInButton = props.autoInsertSpaceInButton,\n      form = props.form,\n      locale = props.locale,\n      componentSize = props.componentSize,\n      direction = props.direction,\n      space = props.space,\n      virtual = props.virtual,\n      dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n      legacyLocale = props.legacyLocale,\n      parentContext = props.parentContext,\n      iconPrefixCls = props.iconPrefixCls;\n  var getPrefixCls = React.useCallback(function (suffixCls, customizePrefixCls) {\n    var prefixCls = props.prefixCls;\n    if (customizePrefixCls) return customizePrefixCls;\n    var mergedPrefixCls = prefixCls || parentContext.getPrefixCls('');\n    return suffixCls ? \"\".concat(mergedPrefixCls, \"-\").concat(suffixCls) : mergedPrefixCls;\n  }, [parentContext.getPrefixCls, props.prefixCls]);\n\n  var config = _extends(_extends({}, parentContext), {\n    csp: csp,\n    autoInsertSpaceInButton: autoInsertSpaceInButton,\n    locale: locale || legacyLocale,\n    direction: direction,\n    space: space,\n    virtual: virtual,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    getPrefixCls: getPrefixCls\n  }); // Pass the props used by `useContext` directly with child component.\n  // These props should merged into `config`.\n\n\n  PASSED_PROPS.forEach(function (propName) {\n    var propValue = props[propName];\n\n    if (propValue) {\n      config[propName] = propValue;\n    }\n  }); // https://github.com/ant-design/ant-design/issues/27617\n\n  var memoedConfig = useMemo(function () {\n    return config;\n  }, config, function (prevConfig, currentConfig) {\n    var prevKeys = Object.keys(prevConfig);\n    var currentKeys = Object.keys(currentConfig);\n    return prevKeys.length !== currentKeys.length || prevKeys.some(function (key) {\n      return prevConfig[key] !== currentConfig[key];\n    });\n  });\n  var memoIconContextValue = React.useMemo(function () {\n    return {\n      prefixCls: iconPrefixCls,\n      csp: csp\n    };\n  }, [iconPrefixCls]);\n  var childNode = children; // Additional Form provider\n\n  var validateMessages = _extends({}, (_a = defaultLocale.Form) === null || _a === void 0 ? void 0 : _a.defaultValidateMessages);\n\n  if (locale) {\n    validateMessages = ((_b = locale.Form) === null || _b === void 0 ? void 0 : _b.defaultValidateMessages) || ((_c = defaultLocale.Form) === null || _c === void 0 ? void 0 : _c.defaultValidateMessages) || {};\n  }\n\n  if (form && form.validateMessages) {\n    validateMessages = _extends(_extends({}, validateMessages), form.validateMessages);\n  }\n\n  if (Object.keys(validateMessages).length > 0) {\n    childNode = /*#__PURE__*/React.createElement(RcFormProvider, {\n      validateMessages: validateMessages\n    }, children);\n  }\n\n  if (locale) {\n    childNode = /*#__PURE__*/React.createElement(LocaleProvider, {\n      locale: locale,\n      _ANT_MARK__: ANT_MARK\n    }, childNode);\n  }\n\n  if (iconPrefixCls) {\n    childNode = /*#__PURE__*/React.createElement(IconContext.Provider, {\n      value: memoIconContextValue\n    }, childNode);\n  }\n\n  if (componentSize) {\n    childNode = /*#__PURE__*/React.createElement(SizeContextProvider, {\n      size: componentSize\n    }, childNode);\n  }\n\n  return /*#__PURE__*/React.createElement(ConfigContext.Provider, {\n    value: memoedConfig\n  }, childNode);\n};\n\nvar ConfigProvider = function ConfigProvider(props) {\n  React.useEffect(function () {\n    if (props.direction) {\n      message.config({\n        rtl: props.direction === 'rtl'\n      });\n      notification.config({\n        rtl: props.direction === 'rtl'\n      });\n    }\n  }, [props.direction]);\n  return /*#__PURE__*/React.createElement(LocaleReceiver, null, function (_, __, legacyLocale) {\n    return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (context) {\n      return /*#__PURE__*/React.createElement(ProviderChildren, _extends({\n        parentContext: context,\n        legacyLocale: legacyLocale\n      }, props));\n    });\n  });\n};\n/** @private internal Usage. do not use in your production */\n\n\nConfigProvider.ConfigContext = ConfigContext;\nConfigProvider.SizeContext = SizeContext;\nConfigProvider.config = setGlobalConfig;\nexport default ConfigProvider;"]},"metadata":{},"sourceType":"module"}