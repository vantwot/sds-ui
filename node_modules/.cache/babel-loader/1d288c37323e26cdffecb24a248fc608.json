{"ast":null,"code":"import devicePixelRatio from './devicePixelRatio';\nimport * as Mixin from './util/mixin';\nvar canvas = {};\nvar canvas2D = {};\n\nfunction registerCanvas(c, id) {\n  canvas = c;\n  canvas.id = id;\n\n  if (!('tagName' in canvas)) {\n    canvas.tagName = 'CANVAS';\n  }\n\n  canvas.type = 'canvas';\n  Mixin.parentNode(canvas);\n  Mixin.style(canvas);\n  Mixin.classList(canvas);\n  Mixin.clientRegion(canvas);\n  Mixin.offsetRegion(canvas);\n\n  canvas.focus = function () {};\n\n  canvas.blur = function () {};\n}\n\nfunction registerCanvas2D(ctx, id) {\n  var width = 1024;\n  var height = 1024;\n  canvas2D = {\n    width: width,\n    height: height,\n    clientWidth: width / devicePixelRatio,\n    clientHeight: height / devicePixelRatio,\n    id: id,\n    type: 'canvas'\n  };\n\n  if (!('tagName' in canvas2D)) {\n    canvas2D.tagName = 'CANVAS';\n  }\n\n  Mixin.parentNode(canvas2D);\n  Mixin.style(canvas2D);\n  Mixin.classList(canvas2D);\n  Mixin.clientRegion(canvas2D);\n  Mixin.offsetRegion(canvas2D);\n\n  canvas2D.getContext = function (type) {\n    if (type === '2d') {\n      return ctx;\n    }\n  };\n\n  canvas2D.focus = function () {};\n\n  canvas2D.blur = function () {};\n}\n\nfunction getCanvas() {\n  return canvas;\n}\n\nfunction getCanvas2D() {\n  return canvas2D;\n}\n\nexport { registerCanvas, registerCanvas2D, getCanvas, getCanvas2D };","map":{"version":3,"sources":["../../src/mini-adapter/register.ts"],"names":["canvas","canvas2D","Mixin","width","height","clientWidth","clientHeight","id","type"],"mappings":"AAEA,OAAA,gBAAA,MAAA,oBAAA;AACA,OAAO,KAAP,KAAA,MAAA,cAAA;AAKA,IAAIA,MAAW,GAAf,EAAA;AACA,IAAIC,QAAa,GAAjB,EAAA;;AAGA,SAAA,cAAA,CAAA,CAAA,EAAA,EAAA,EAAuC;AACrCD,EAAAA,MAAM,GAANA,CAAAA;AACAA,EAAAA,MAAM,CAANA,EAAAA,GAAAA,EAAAA;;AAEA,MAAI,EAAE,aAAN,MAAI,CAAJ,EAA4B;AAC1BA,IAAAA,MAAM,CAANA,OAAAA,GAAAA,QAAAA;AACD;;AAEDA,EAAAA,MAAM,CAANA,IAAAA,GAAAA,QAAAA;AAEAE,EAAAA,KAAK,CAALA,UAAAA,CAAAA,MAAAA;AACAA,EAAAA,KAAK,CAALA,KAAAA,CAAAA,MAAAA;AACAA,EAAAA,KAAK,CAALA,SAAAA,CAAAA,MAAAA;AACAA,EAAAA,KAAK,CAALA,YAAAA,CAAAA,MAAAA;AACAA,EAAAA,KAAK,CAALA,YAAAA,CAAAA,MAAAA;;AAEAF,EAAAA,MAAM,CAANA,KAAAA,GAAe,YAAW,CAA1BA,CAAAA;;AACAA,EAAAA,MAAM,CAANA,IAAAA,GAAc,YAAW,CAAzBA,CAAAA;AAaD;;AAGD,SAAA,gBAAA,CAAA,GAAA,EAAA,EAAA,EAA2C;AACzC,MAAMG,KAAK,GAAX,IAAA;AACA,MAAMC,MAAM,GAAZ,IAAA;AACAH,EAAAA,QAAQ,GAAG;AACTE,IAAAA,KAAK,EADI,KAAA;AAETC,IAAAA,MAAM,EAFG,MAAA;AAGTC,IAAAA,WAAW,EAAEF,KAAK,GAHT,gBAAA;AAITG,IAAAA,YAAY,EAAEF,MAAM,GAJX,gBAAA;AAKTG,IAAAA,EAAE,EALO,EAAA;AAMTC,IAAAA,IAAI,EAAE;AANG,GAAXP;;AASA,MAAI,EAAE,aAAN,QAAI,CAAJ,EAA8B;AAC5BA,IAAAA,QAAQ,CAARA,OAAAA,GAAAA,QAAAA;AACD;;AAEDC,EAAAA,KAAK,CAALA,UAAAA,CAAAA,QAAAA;AACAA,EAAAA,KAAK,CAALA,KAAAA,CAAAA,QAAAA;AACAA,EAAAA,KAAK,CAALA,SAAAA,CAAAA,QAAAA;AACAA,EAAAA,KAAK,CAALA,YAAAA,CAAAA,QAAAA;AACAA,EAAAA,KAAK,CAALA,YAAAA,CAAAA,QAAAA;;AAEAD,EAAAA,QAAQ,CAARA,UAAAA,GAAsB,UAAA,IAAA,EAAe;AACnC,QAAIO,IAAI,KAAR,IAAA,EAAmB;AACjB,aAAA,GAAA;AACD;AAHHP,GAAAA;;AAKAA,EAAAA,QAAQ,CAARA,KAAAA,GAAiB,YAAW,CAA5BA,CAAAA;;AACAA,EAAAA,QAAQ,CAARA,IAAAA,GAAgB,YAAW,CAA3BA,CAAAA;AAaD;;AAGD,SAAA,SAAA,GAAqB;AACnB,SAAA,MAAA;AACD;;AAGD,SAAA,WAAA,GAAuB;AACrB,SAAA,QAAA;AACD;;AAED,SAAA,cAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,WAAA","sourcesContent":["// @ts-nocheck\n// tslint:disable\nimport devicePixelRatio from './devicePixelRatio';\nimport * as Mixin from './util/mixin';\n\ndeclare let my: any;\n\n// 同步和异步都需要的数据\nlet canvas: any = {};\nlet canvas2D: any = {};\n\n// 异步注册3Dcanvas\nfunction registerCanvas(c, id: string) {\n  canvas = c;\n  canvas.id = id;\n\n  if (!('tagName' in canvas)) {\n    canvas.tagName = 'CANVAS';\n  }\n\n  canvas.type = 'canvas';\n\n  Mixin.parentNode(canvas);\n  Mixin.style(canvas);\n  Mixin.classList(canvas);\n  Mixin.clientRegion(canvas);\n  Mixin.offsetRegion(canvas);\n\n  canvas.focus = function() {};\n  canvas.blur = function() {};\n  // Tip: 小程序中无法动态注册事件\n  // canvas.addEventListener = function(type, listener, options = {}) {\n  //   document.addEventListener(type, listener, options);\n  // };\n\n  // canvas.removeEventListener = function(type, listener) {\n  //   document.removeEventListener(type, listener);\n  // };\n\n  // canvas.dispatchEvent = function(event: any) {\n  //   document.dispatchEvent(event);\n  // };\n}\n\n// 异步注册2Dcanvas\nfunction registerCanvas2D(ctx, id: string) {\n  const width = 1024;\n  const height = 1024;\n  canvas2D = {\n    width,\n    height,\n    clientWidth: width / devicePixelRatio,\n    clientHeight: height / devicePixelRatio,\n    id,\n    type: 'canvas',\n  };\n\n  if (!('tagName' in canvas2D)) {\n    canvas2D.tagName = 'CANVAS';\n  }\n\n  Mixin.parentNode(canvas2D);\n  Mixin.style(canvas2D);\n  Mixin.classList(canvas2D);\n  Mixin.clientRegion(canvas2D);\n  Mixin.offsetRegion(canvas2D);\n\n  canvas2D.getContext = function(type) {\n    if (type === '2d') {\n      return ctx;\n    }\n  };\n  canvas2D.focus = function() {};\n  canvas2D.blur = function() {};\n  // Tip: 小程序中无法动态注册事件\n  // canvas2D.addEventListener = function(type, listener, options = {}) {\n  //   document.addEventListener(type, listener, options);\n  // };\n\n  // canvas2D.removeEventListener = function(type, listener) {\n  //   document.removeEventListener(type, listener);\n  // };\n\n  // canvas2D.dispatchEvent = function(event: any) {\n  //   document.dispatchEvent(event);\n  // };\n}\n\n// 异步获取3Dcanvas\nfunction getCanvas() {\n  return canvas;\n}\n\n// 异步获取2Dcanvas\nfunction getCanvas2D() {\n  return canvas2D;\n}\n\nexport { registerCanvas, registerCanvas2D, getCanvas, getCanvas2D };\n"]},"metadata":{},"sourceType":"module"}