{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Choropleth = exports.Area = exports.Flow = exports.Path = exports.Hexbin = exports.Grid = exports.Heatmap = exports.DotDensity = exports.Dot = exports.PrismLayer = exports.AreaLayer = exports.ArcLayer = exports.PathLayer = exports.HexbinLayer = exports.GridLayer = exports.HeatmapLayer = exports.TextLayer = exports.DotDensityLayer = exports.DotLayer = exports.L7Plot = exports.Plot = exports.Map = exports.registerTheme = exports.getTheme = exports.unregisterIconFont = exports.registerIconFonts = exports.registerIconFont = exports.unregisterFontFace = exports.registerFontFace = exports.unregisterImage = exports.registerImages = exports.registerImage = exports.version = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nexports.version = '0.0.3-alpha.5';\n/** 资源静态注册 **/\n\nvar register_1 = require(\"./core/map/register\");\n\nObject.defineProperty(exports, \"registerImage\", {\n  enumerable: true,\n  get: function () {\n    return register_1.registerImage;\n  }\n});\nObject.defineProperty(exports, \"registerImages\", {\n  enumerable: true,\n  get: function () {\n    return register_1.registerImages;\n  }\n});\nObject.defineProperty(exports, \"unregisterImage\", {\n  enumerable: true,\n  get: function () {\n    return register_1.unregisterImage;\n  }\n});\nObject.defineProperty(exports, \"registerFontFace\", {\n  enumerable: true,\n  get: function () {\n    return register_1.registerFontFace;\n  }\n});\nObject.defineProperty(exports, \"unregisterFontFace\", {\n  enumerable: true,\n  get: function () {\n    return register_1.unregisterFontFace;\n  }\n});\nObject.defineProperty(exports, \"registerIconFont\", {\n  enumerable: true,\n  get: function () {\n    return register_1.registerIconFont;\n  }\n});\nObject.defineProperty(exports, \"registerIconFonts\", {\n  enumerable: true,\n  get: function () {\n    return register_1.registerIconFonts;\n  }\n});\nObject.defineProperty(exports, \"unregisterIconFont\", {\n  enumerable: true,\n  get: function () {\n    return register_1.unregisterIconFont;\n  }\n});\n/** 主题注册 **/\n\nvar theme_1 = require(\"./theme\");\n\nObject.defineProperty(exports, \"getTheme\", {\n  enumerable: true,\n  get: function () {\n    return theme_1.getTheme;\n  }\n});\nObject.defineProperty(exports, \"registerTheme\", {\n  enumerable: true,\n  get: function () {\n    return theme_1.registerTheme;\n  }\n});\n/** 类型定义导出 **/\n\n(0, tslib_1.__exportStar)(require(\"./types\"), exports);\n/** L7Plot 的基类 **/\n\nvar map_1 = require(\"./core/map\");\n\nObject.defineProperty(exports, \"Map\", {\n  enumerable: true,\n  get: function () {\n    return map_1.Map;\n  }\n});\n/** 各图表的基类 Plot **/\n\nvar plot_1 = require(\"./core/plot\");\n\nObject.defineProperty(exports, \"Plot\", {\n  enumerable: true,\n  get: function () {\n    return plot_1.Plot;\n  }\n});\n/** 高级图表 **/\n\nvar plot_2 = require(\"./plot\");\n\nObject.defineProperty(exports, \"L7Plot\", {\n  enumerable: true,\n  get: function () {\n    return plot_2.L7Plot;\n  }\n});\n/** 图层 **/\n// 散点图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar dot_layer_1 = require(\"./layers/dot-layer\");\n\nObject.defineProperty(exports, \"DotLayer\", {\n  enumerable: true,\n  get: function () {\n    return dot_layer_1.DotLayer;\n  }\n}); // 点密度图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar dot_density_layer_1 = require(\"./layers/dot-density-layer\");\n\nObject.defineProperty(exports, \"DotDensityLayer\", {\n  enumerable: true,\n  get: function () {\n    return dot_density_layer_1.DotDensityLayer;\n  }\n}); // 文本图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar text_layer_1 = require(\"./layers/text-layer\");\n\nObject.defineProperty(exports, \"TextLayer\", {\n  enumerable: true,\n  get: function () {\n    return text_layer_1.TextLayer;\n  }\n}); // 热力图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar heatmap_layer_1 = require(\"./layers/heatmap-layer\");\n\nObject.defineProperty(exports, \"HeatmapLayer\", {\n  enumerable: true,\n  get: function () {\n    return heatmap_layer_1.HeatmapLayer;\n  }\n}); // 网格聚合图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar grid_layer_1 = require(\"./layers/grid-layer\");\n\nObject.defineProperty(exports, \"GridLayer\", {\n  enumerable: true,\n  get: function () {\n    return grid_layer_1.GridLayer;\n  }\n}); // 蜂窝聚合图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar hexbin_layer_1 = require(\"./layers/hexbin-layer\");\n\nObject.defineProperty(exports, \"HexbinLayer\", {\n  enumerable: true,\n  get: function () {\n    return hexbin_layer_1.HexbinLayer;\n  }\n}); // 路径图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar path_layer_1 = require(\"./layers/path-layer\");\n\nObject.defineProperty(exports, \"PathLayer\", {\n  enumerable: true,\n  get: function () {\n    return path_layer_1.PathLayer;\n  }\n}); // 弧线图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar arc_layer_1 = require(\"./layers/arc-layer\");\n\nObject.defineProperty(exports, \"ArcLayer\", {\n  enumerable: true,\n  get: function () {\n    return arc_layer_1.ArcLayer;\n  }\n}); // 区域图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar area_layer_1 = require(\"./layers/area-layer\");\n\nObject.defineProperty(exports, \"AreaLayer\", {\n  enumerable: true,\n  get: function () {\n    return area_layer_1.AreaLayer;\n  }\n}); // 水晶体图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar prism_layer_1 = require(\"./layers/prism-layer\");\n\nObject.defineProperty(exports, \"PrismLayer\", {\n  enumerable: true,\n  get: function () {\n    return prism_layer_1.PrismLayer;\n  }\n});\n/** 图表 **/\n// 散点图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar dot_1 = require(\"./plots/dot\");\n\nObject.defineProperty(exports, \"Dot\", {\n  enumerable: true,\n  get: function () {\n    return dot_1.Dot;\n  }\n}); // 点密度图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar dot_density_1 = require(\"./plots/dot-density\");\n\nObject.defineProperty(exports, \"DotDensity\", {\n  enumerable: true,\n  get: function () {\n    return dot_density_1.DotDensity;\n  }\n}); // 热力图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar heatmap_1 = require(\"./plots/heatmap\");\n\nObject.defineProperty(exports, \"Heatmap\", {\n  enumerable: true,\n  get: function () {\n    return heatmap_1.Heatmap;\n  }\n}); // 网格聚合图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar grid_1 = require(\"./plots/grid\");\n\nObject.defineProperty(exports, \"Grid\", {\n  enumerable: true,\n  get: function () {\n    return grid_1.Grid;\n  }\n}); // 蜂窝聚合图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar hexbin_1 = require(\"./plots/hexbin\");\n\nObject.defineProperty(exports, \"Hexbin\", {\n  enumerable: true,\n  get: function () {\n    return hexbin_1.Hexbin;\n  }\n}); // 路径图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar path_1 = require(\"./plots/path\");\n\nObject.defineProperty(exports, \"Path\", {\n  enumerable: true,\n  get: function () {\n    return path_1.Path;\n  }\n}); // 流向图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar flow_1 = require(\"./plots/flow\");\n\nObject.defineProperty(exports, \"Flow\", {\n  enumerable: true,\n  get: function () {\n    return flow_1.Flow;\n  }\n}); // 区域图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar area_1 = require(\"./plots/area\");\n\nObject.defineProperty(exports, \"Area\", {\n  enumerable: true,\n  get: function () {\n    return area_1.Area;\n  }\n}); // 行政区域图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\n\nvar choropleth_1 = require(\"./plots/choropleth\");\n\nObject.defineProperty(exports, \"Choropleth\", {\n  enumerable: true,\n  get: function () {\n    return choropleth_1.Choropleth;\n  }\n});","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Choropleth = exports.Area = exports.Flow = exports.Path = exports.Hexbin = exports.Grid = exports.Heatmap = exports.DotDensity = exports.Dot = exports.PrismLayer = exports.AreaLayer = exports.ArcLayer = exports.PathLayer = exports.HexbinLayer = exports.GridLayer = exports.HeatmapLayer = exports.TextLayer = exports.DotDensityLayer = exports.DotLayer = exports.L7Plot = exports.Plot = exports.Map = exports.registerTheme = exports.getTheme = exports.unregisterIconFont = exports.registerIconFonts = exports.registerIconFont = exports.unregisterFontFace = exports.registerFontFace = exports.unregisterImage = exports.registerImages = exports.registerImage = exports.version = void 0;\nvar tslib_1 = require(\"tslib\");\nexports.version = '0.0.3-alpha.5';\n/** 资源静态注册 **/\nvar register_1 = require(\"./core/map/register\");\nObject.defineProperty(exports, \"registerImage\", { enumerable: true, get: function () { return register_1.registerImage; } });\nObject.defineProperty(exports, \"registerImages\", { enumerable: true, get: function () { return register_1.registerImages; } });\nObject.defineProperty(exports, \"unregisterImage\", { enumerable: true, get: function () { return register_1.unregisterImage; } });\nObject.defineProperty(exports, \"registerFontFace\", { enumerable: true, get: function () { return register_1.registerFontFace; } });\nObject.defineProperty(exports, \"unregisterFontFace\", { enumerable: true, get: function () { return register_1.unregisterFontFace; } });\nObject.defineProperty(exports, \"registerIconFont\", { enumerable: true, get: function () { return register_1.registerIconFont; } });\nObject.defineProperty(exports, \"registerIconFonts\", { enumerable: true, get: function () { return register_1.registerIconFonts; } });\nObject.defineProperty(exports, \"unregisterIconFont\", { enumerable: true, get: function () { return register_1.unregisterIconFont; } });\n/** 主题注册 **/\nvar theme_1 = require(\"./theme\");\nObject.defineProperty(exports, \"getTheme\", { enumerable: true, get: function () { return theme_1.getTheme; } });\nObject.defineProperty(exports, \"registerTheme\", { enumerable: true, get: function () { return theme_1.registerTheme; } });\n/** 类型定义导出 **/\n(0, tslib_1.__exportStar)(require(\"./types\"), exports);\n/** L7Plot 的基类 **/\nvar map_1 = require(\"./core/map\");\nObject.defineProperty(exports, \"Map\", { enumerable: true, get: function () { return map_1.Map; } });\n/** 各图表的基类 Plot **/\nvar plot_1 = require(\"./core/plot\");\nObject.defineProperty(exports, \"Plot\", { enumerable: true, get: function () { return plot_1.Plot; } });\n/** 高级图表 **/\nvar plot_2 = require(\"./plot\");\nObject.defineProperty(exports, \"L7Plot\", { enumerable: true, get: function () { return plot_2.L7Plot; } });\n/** 图层 **/\n// 散点图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar dot_layer_1 = require(\"./layers/dot-layer\");\nObject.defineProperty(exports, \"DotLayer\", { enumerable: true, get: function () { return dot_layer_1.DotLayer; } });\n// 点密度图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar dot_density_layer_1 = require(\"./layers/dot-density-layer\");\nObject.defineProperty(exports, \"DotDensityLayer\", { enumerable: true, get: function () { return dot_density_layer_1.DotDensityLayer; } });\n// 文本图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar text_layer_1 = require(\"./layers/text-layer\");\nObject.defineProperty(exports, \"TextLayer\", { enumerable: true, get: function () { return text_layer_1.TextLayer; } });\n// 热力图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar heatmap_layer_1 = require(\"./layers/heatmap-layer\");\nObject.defineProperty(exports, \"HeatmapLayer\", { enumerable: true, get: function () { return heatmap_layer_1.HeatmapLayer; } });\n// 网格聚合图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar grid_layer_1 = require(\"./layers/grid-layer\");\nObject.defineProperty(exports, \"GridLayer\", { enumerable: true, get: function () { return grid_layer_1.GridLayer; } });\n// 蜂窝聚合图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar hexbin_layer_1 = require(\"./layers/hexbin-layer\");\nObject.defineProperty(exports, \"HexbinLayer\", { enumerable: true, get: function () { return hexbin_layer_1.HexbinLayer; } });\n// 路径图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar path_layer_1 = require(\"./layers/path-layer\");\nObject.defineProperty(exports, \"PathLayer\", { enumerable: true, get: function () { return path_layer_1.PathLayer; } });\n// 弧线图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar arc_layer_1 = require(\"./layers/arc-layer\");\nObject.defineProperty(exports, \"ArcLayer\", { enumerable: true, get: function () { return arc_layer_1.ArcLayer; } });\n// 区域图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar area_layer_1 = require(\"./layers/area-layer\");\nObject.defineProperty(exports, \"AreaLayer\", { enumerable: true, get: function () { return area_layer_1.AreaLayer; } });\n// 水晶体图层及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar prism_layer_1 = require(\"./layers/prism-layer\");\nObject.defineProperty(exports, \"PrismLayer\", { enumerable: true, get: function () { return prism_layer_1.PrismLayer; } });\n/** 图表 **/\n// 散点图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar dot_1 = require(\"./plots/dot\");\nObject.defineProperty(exports, \"Dot\", { enumerable: true, get: function () { return dot_1.Dot; } });\n// 点密度图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar dot_density_1 = require(\"./plots/dot-density\");\nObject.defineProperty(exports, \"DotDensity\", { enumerable: true, get: function () { return dot_density_1.DotDensity; } });\n// 热力图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar heatmap_1 = require(\"./plots/heatmap\");\nObject.defineProperty(exports, \"Heatmap\", { enumerable: true, get: function () { return heatmap_1.Heatmap; } });\n// 网格聚合图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar grid_1 = require(\"./plots/grid\");\nObject.defineProperty(exports, \"Grid\", { enumerable: true, get: function () { return grid_1.Grid; } });\n// 蜂窝聚合图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar hexbin_1 = require(\"./plots/hexbin\");\nObject.defineProperty(exports, \"Hexbin\", { enumerable: true, get: function () { return hexbin_1.Hexbin; } });\n// 路径图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar path_1 = require(\"./plots/path\");\nObject.defineProperty(exports, \"Path\", { enumerable: true, get: function () { return path_1.Path; } });\n// 流向图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar flow_1 = require(\"./plots/flow\");\nObject.defineProperty(exports, \"Flow\", { enumerable: true, get: function () { return flow_1.Flow; } });\n// 区域图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar area_1 = require(\"./plots/area\");\nObject.defineProperty(exports, \"Area\", { enumerable: true, get: function () { return area_1.Area; } });\n// 行政区域图及类型定义 | author by [yunji]](https://github.com/liuvigongzuoshi)\nvar choropleth_1 = require(\"./plots/choropleth\");\nObject.defineProperty(exports, \"Choropleth\", { enumerable: true, get: function () { return choropleth_1.Choropleth; } });\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}