{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { btoa } from './atob';\nexport var URL = function () {\n  function URL(url) {\n    var host = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    _classCallCheck(this, URL);\n\n    _defineProperty(this, \"href\", void 0);\n\n    if (url.indexOf('http://') == 0 || url.indexOf('https://') == 0) {\n      this.href = url;\n      return;\n    }\n\n    this.href = host + url;\n  }\n\n  _createClass(URL, null, [{\n    key: \"createObjectURL\",\n    value: function createObjectURL(blob) {\n      var buffer = blob.buffers[0];\n      var type = blob.type;\n\n      var base64 = _arrayBufferToBase64(buffer);\n\n      var prefix = \"data:\".concat(type, \";base64, \");\n      return prefix + base64;\n    }\n  }]);\n\n  return URL;\n}();\n\nfunction _arrayBufferToBase64(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var len = bytes.byteLength;\n\n  for (var i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n\n  return btoa(binary);\n}","map":{"version":3,"sources":["../../src/mini-adapter/url.ts"],"names":["URL","buffer","blob","type","base64","_arrayBufferToBase64","prefix","host","url","binary","bytes","len","i","String","btoa"],"mappings":";;;AAEA,SAAA,IAAA,QAAA,QAAA;AAGA,OAAA,IAAaA,GAAb,GAAA,YAAA;AAgBE,WAAA,GAAA,CAAA,GAAA,EAA4B;AAAA,QAAXO,IAAW,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,GAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,MAAA,EAAA,KAAA,CAAA,CAAA;;AAC1B,QAAIC,GAAG,CAAHA,OAAAA,CAAAA,SAAAA,KAAAA,CAAAA,IAA+BA,GAAG,CAAHA,OAAAA,CAAAA,UAAAA,KAAnC,CAAA,EAAiE;AAC/D,WAAA,IAAA,GAAA,GAAA;AACA;AACD;;AACD,SAAA,IAAA,GAAYD,IAAI,GAAhB,GAAA;AACD;;AAtBH,EAAA,YAAA,CAAA,GAAA,EAAA,IAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,iBAAA;AAAA,IAAA,KAAA,EAKE,SAAA,eAAA,CAAA,IAAA,EAA0C;AACxC,UAAMN,MAAM,GAAGC,IAAI,CAAJA,OAAAA,CAAf,CAAeA,CAAf;AACA,UAAMC,IAAI,GAAGD,IAAI,CAAjB,IAAA;;AACA,UAAME,MAAM,GAAGC,oBAAoB,CAAnC,MAAmC,CAAnC;;AACA,UAAMC,MAAM,GAAA,QAAA,MAAA,CAAA,IAAA,EAAZ,WAAY,CAAZ;AACA,aAAOA,MAAM,GAAb,MAAA;AACD;AAXH,GAAA,CAAA,CAAA;;AAAA,SAAA,GAAA;AAAA,CAAA,EAAA;;AAyBA,SAAA,oBAAA,CAAA,MAAA,EAAsC;AACpC,MAAIG,MAAM,GAAV,EAAA;AACA,MAAMC,KAAK,GAAG,IAAA,UAAA,CAAd,MAAc,CAAd;AACA,MAAMC,GAAG,GAAGD,KAAK,CAAjB,UAAA;;AACA,OAAK,IAAIE,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,GAAA,EAAyBA,CAAzB,EAAA,EAA8B;AAC5BH,IAAAA,MAAM,IAAII,MAAM,CAANA,YAAAA,CAAoBH,KAAK,CAAnCD,CAAmC,CAAzBI,CAAVJ;AACD;;AACD,SAAOK,IAAI,CAAX,MAAW,CAAX;AACD","sourcesContent":["// @ts-nocheck\n// tslint:disable\nimport { btoa } from './atob';\nimport { Blob } from './blob';\n\nexport class URL {\n  /**\n   * fake createObject, use base64 instead\n   * @param blob\n   */\n  public static createObjectURL(blob: Blob) {\n    const buffer = blob.buffers[0];\n    const type = blob.type;\n    const base64 = _arrayBufferToBase64(buffer);\n    const prefix = `data:${type};base64, `;\n    return prefix + base64;\n  }\n\n  public href: string;\n\n  // todo: 完善URL对象\n  constructor(url, host = '') {\n    if (url.indexOf('http://') == 0 || url.indexOf('https://') == 0) {\n      this.href = url;\n      return;\n    }\n    this.href = host + url;\n  }\n}\n\nfunction _arrayBufferToBase64(buffer) {\n  let binary = '';\n  const bytes = new Uint8Array(buffer);\n  const len = bytes.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary);\n}\n"]},"metadata":{},"sourceType":"module"}