{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport { mix } from '@antv/util';\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nregisterNode('rect', {\n  // 自定义节点时的配置\n  options: {\n    size: [100, 30],\n    style: {\n      radius: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    // 连接点，默认为左右\n    // anchorPoints: [{ x: 0, y: 0.5 }, { x: 1, y: 0.5 }]\n    anchorPoints: [[0, 0.5], [1, 0.5]],\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'rect',\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('rect', {\n      attrs: style,\n      className: this.type + \"-keyShape\",\n      name: this.type + \"-keyShape\",\n      draggable: true\n    });\n    group['shapeMap'][this.type + \"-keyShape\"] = keyShape;\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n        linkPoints = _a === void 0 ? {} : _a;\n\n    var top = linkPoints.top,\n        left = linkPoints.left,\n        right = linkPoints.right,\n        bottom = linkPoints.bottom,\n        markSize = linkPoints.size,\n        markR = linkPoints.r,\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = mix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var width = style.width || size[0];\n    var height = style.height || size[1];\n\n    var styles = __assign({\n      x: -width / 2,\n      y: -height / 2,\n      width: width,\n      height: height\n    }, style);\n\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer(); // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n\n    var defaultStyle = this.getOptions({}).style;\n    var size = this.getSize(cfg);\n    var keyShape = item.get('keyShape');\n\n    if (!cfg.size) {\n      size[0] = keyShape.attr('width') || defaultStyle.width;\n      size[1] = keyShape.attr('height') || defaultStyle.height;\n    } // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n\n\n    var strokeStyle = {\n      stroke: cfg.color,\n      x: -size[0] / 2,\n      y: -size[1] / 2,\n      width: size[0],\n      height: size[1]\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, false, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@antv/g6-element/es/nodes/rect.js"],"names":["__assign","__rest","mix","registerNode","BaseGlobal","Global","options","size","style","radius","stroke","defaultNode","fill","lineWidth","labelCfg","nodeLabel","fontSize","fontFamily","windowFontFamily","linkPoints","top","right","bottom","left","icon","show","img","width","height","anchorPoints","stateStyles","nodeStateStyles","shapeType","labelPosition","drawShape","cfg","group","getShapeStyle","keyShape","addShape","attrs","className","type","name","draggable","drawLinkPoints","_a","mergeStyle","getOptions","markSize","markR","r","markStyle","getSize","x","y","isAnchorPoint","defaultStyle","strokeStyle","color","styles","update","item","updateType","getContainer","get","attr","updateShape","updateLinkPoints"],"mappings":"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","sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport { mix } from '@antv/util';\nimport { registerNode, BaseGlobal as Global } from '@antv/g6-core';\nregisterNode('rect', {\n  // 自定义节点时的配置\n  options: {\n    size: [100, 30],\n    style: {\n      radius: 0,\n      stroke: Global.defaultNode.style.stroke,\n      fill: Global.defaultNode.style.fill,\n      lineWidth: Global.defaultNode.style.lineWidth\n    },\n    // 文本样式配置\n    labelCfg: {\n      style: {\n        fill: Global.nodeLabel.style.fill,\n        fontSize: Global.nodeLabel.style.fontSize,\n        fontFamily: Global.windowFontFamily\n      }\n    },\n    // 节点上左右上下四个方向上的链接circle配置\n    linkPoints: {\n      top: false,\n      right: false,\n      bottom: false,\n      left: false,\n      // circle的大小\n      size: Global.defaultNode.linkPoints.size,\n      lineWidth: Global.defaultNode.linkPoints.lineWidth,\n      fill: Global.defaultNode.linkPoints.fill,\n      stroke: Global.defaultNode.linkPoints.stroke\n    },\n    // 节点中icon配置\n    icon: {\n      // 是否显示icon，值为 false 则不渲染icon\n      show: false,\n      // icon的地址，字符串类型\n      img: 'https://gw.alipayobjects.com/zos/bmw-prod/5d015065-8505-4e7a-baec-976f81e3c41d.svg',\n      width: 20,\n      height: 20\n    },\n    // 连接点，默认为左右\n    // anchorPoints: [{ x: 0, y: 0.5 }, { x: 1, y: 0.5 }]\n    anchorPoints: [[0, 0.5], [1, 0.5]],\n    stateStyles: __assign({}, Global.nodeStateStyles)\n  },\n  shapeType: 'rect',\n  labelPosition: 'center',\n  drawShape: function drawShape(cfg, group) {\n    var style = this.getShapeStyle(cfg);\n    var keyShape = group.addShape('rect', {\n      attrs: style,\n      className: this.type + \"-keyShape\",\n      name: this.type + \"-keyShape\",\n      draggable: true\n    });\n    group['shapeMap'][this.type + \"-keyShape\"] = keyShape;\n    this.drawLinkPoints(cfg, group);\n    return keyShape;\n  },\n\n  /**\n   * 绘制节点上的LinkPoints\n   * @param {Object} cfg data数据配置项\n   * @param {Group} group Group实例\n   */\n  drawLinkPoints: function drawLinkPoints(cfg, group) {\n    var _a = (this.mergeStyle || this.getOptions(cfg)).linkPoints,\n        linkPoints = _a === void 0 ? {} : _a;\n\n    var top = linkPoints.top,\n        left = linkPoints.left,\n        right = linkPoints.right,\n        bottom = linkPoints.bottom,\n        markSize = linkPoints.size,\n        markR = linkPoints.r,\n        markStyle = __rest(linkPoints, [\"top\", \"left\", \"right\", \"bottom\", \"size\", \"r\"]);\n\n    var size = this.getSize(cfg);\n    var width = size[0];\n    var height = size[1];\n\n    if (left) {\n      // left circle\n      group['shapeMap']['link-point-left'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: -width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-left',\n        name: 'link-point-left',\n        isAnchorPoint: true\n      });\n    }\n\n    if (right) {\n      // right circle\n      group['shapeMap']['link-point-right'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: width / 2,\n          y: 0,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-right',\n        name: 'link-point-right',\n        isAnchorPoint: true\n      });\n    }\n\n    if (top) {\n      // top circle\n      group['shapeMap']['link-point-top'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: -height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-top',\n        name: 'link-point-top',\n        isAnchorPoint: true\n      });\n    }\n\n    if (bottom) {\n      // bottom circle\n      group['shapeMap']['link-point-bottom'] = group.addShape('circle', {\n        attrs: __assign(__assign({}, markStyle), {\n          x: 0,\n          y: height / 2,\n          r: markSize / 2 || markR || 5\n        }),\n        className: 'link-point-bottom',\n        name: 'link-point-bottom',\n        isAnchorPoint: true\n      });\n    }\n  },\n\n  /**\n   * 获取节点的样式，供基于该节点自定义时使用\n   * @param {Object} cfg 节点数据模型\n   * @return {Object} 节点的样式\n   */\n  getShapeStyle: function getShapeStyle(cfg) {\n    var defaultStyle = (this.mergeStyle || this.getOptions(cfg)).style;\n    var strokeStyle = {\n      stroke: cfg.color\n    }; // 如果设置了color，则覆盖默认的stroke属性\n\n    var style = mix({}, defaultStyle, strokeStyle);\n    var size = this.getSize(cfg);\n    var width = style.width || size[0];\n    var height = style.height || size[1];\n\n    var styles = __assign({\n      x: -width / 2,\n      y: -height / 2,\n      width: width,\n      height: height\n    }, style);\n\n    return styles;\n  },\n  update: function update(cfg, item, updateType) {\n    var group = item.getContainer(); // 这里不传 cfg 参数是因为 cfg.style 需要最后覆盖样式\n\n    var defaultStyle = this.getOptions({}).style;\n    var size = this.getSize(cfg);\n    var keyShape = item.get('keyShape');\n\n    if (!cfg.size) {\n      size[0] = keyShape.attr('width') || defaultStyle.width;\n      size[1] = keyShape.attr('height') || defaultStyle.height;\n    } // 下面这些属性需要覆盖默认样式与目前样式，但若在 cfg 中有指定则应该被 cfg 的相应配置覆盖。\n\n\n    var strokeStyle = {\n      stroke: cfg.color,\n      x: -size[0] / 2,\n      y: -size[1] / 2,\n      width: size[0],\n      height: size[1]\n    }; // 与 getShapeStyle 不同在于，update 时需要获取到当前的 style 进行融合。即新传入的配置项中没有涉及的属性，保留当前的配置。\n\n    var style = mix({}, defaultStyle, keyShape.attr(), strokeStyle);\n    style = mix(style, cfg.style);\n    this.updateShape(cfg, item, style, false, updateType);\n    this.updateLinkPoints(cfg, group);\n  }\n}, 'single-node');"]},"metadata":{},"sourceType":"module"}