{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Base } from './base';\nimport { Dom } from '../util';\nimport { Point, Rectangle } from '../geometry';\nexport var CoordManager = /*#__PURE__*/function (_Base) {\n  _inherits(CoordManager, _Base);\n\n  var _super = _createSuper(CoordManager);\n\n  function CoordManager() {\n    _classCallCheck(this, CoordManager);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CoordManager, [{\n    key: \"getClientMatrix\",\n    value: function getClientMatrix() {\n      return Dom.createSVGMatrix(this.view.stage.getScreenCTM());\n    }\n    /**\n     * Returns coordinates of the graph viewport, relative to the window.\n     */\n\n  }, {\n    key: \"getClientOffset\",\n    value: function getClientOffset() {\n      // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n      var rect = this.view.svg.getBoundingClientRect();\n      return new Point(rect.left, rect.top);\n    }\n    /**\n     * Returns coordinates of the graph viewport, relative to the document.\n     */\n\n  }, {\n    key: \"getPageOffset\",\n    value: function getPageOffset() {\n      // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n      return this.getClientOffset().translate(window.scrollX, window.scrollY);\n    }\n  }, {\n    key: \"snapToGrid\",\n    value: function snapToGrid(x, y) {\n      var p = typeof x === 'number' ? this.clientToLocalPoint(x, y) : this.clientToLocalPoint(x.x, x.y);\n      return p.snapToGrid(this.graph.getGridSize());\n    }\n  }, {\n    key: \"localToGraphPoint\",\n    value: function localToGraphPoint(x, y) {\n      var localPoint = Point.create(x, y);\n      return Dom.transformPoint(localPoint, this.graph.matrix());\n    }\n  }, {\n    key: \"localToClientPoint\",\n    value: function localToClientPoint(x, y) {\n      var localPoint = Point.create(x, y);\n      return Dom.transformPoint(localPoint, this.getClientMatrix());\n    }\n  }, {\n    key: \"localToPagePoint\",\n    value: function localToPagePoint(x, y) {\n      var p = typeof x === 'number' ? this.localToGraphPoint(x, y) : this.localToGraphPoint(x);\n      return p.translate(this.getPageOffset());\n    }\n  }, {\n    key: \"localToGraphRect\",\n    value: function localToGraphRect(x, y, width, height) {\n      var localRect = Rectangle.create(x, y, width, height);\n      return Dom.transformRectangle(localRect, this.graph.matrix());\n    }\n  }, {\n    key: \"localToClientRect\",\n    value: function localToClientRect(x, y, width, height) {\n      var localRect = Rectangle.create(x, y, width, height);\n      return Dom.transformRectangle(localRect, this.getClientMatrix());\n    }\n  }, {\n    key: \"localToPageRect\",\n    value: function localToPageRect(x, y, width, height) {\n      var rect = typeof x === 'number' ? this.localToGraphRect(x, y, width, height) : this.localToGraphRect(x);\n      return rect.translate(this.getPageOffset());\n    }\n  }, {\n    key: \"graphToLocalPoint\",\n    value: function graphToLocalPoint(x, y) {\n      var graphPoint = Point.create(x, y);\n      return Dom.transformPoint(graphPoint, this.graph.matrix().inverse());\n    }\n  }, {\n    key: \"clientToLocalPoint\",\n    value: function clientToLocalPoint(x, y) {\n      var clientPoint = Point.create(x, y);\n      return Dom.transformPoint(clientPoint, this.getClientMatrix().inverse());\n    }\n  }, {\n    key: \"clientToGraphPoint\",\n    value: function clientToGraphPoint(x, y) {\n      var clientPoint = Point.create(x, y);\n      return Dom.transformPoint(clientPoint, this.graph.matrix().multiply(this.getClientMatrix().inverse()));\n    }\n  }, {\n    key: \"pageToLocalPoint\",\n    value: function pageToLocalPoint(x, y) {\n      var pagePoint = Point.create(x, y);\n      var graphPoint = pagePoint.diff(this.getPageOffset());\n      return this.graphToLocalPoint(graphPoint);\n    }\n  }, {\n    key: \"graphToLocalRect\",\n    value: function graphToLocalRect(x, y, width, height) {\n      var graphRect = Rectangle.create(x, y, width, height);\n      return Dom.transformRectangle(graphRect, this.graph.matrix().inverse());\n    }\n  }, {\n    key: \"clientToLocalRect\",\n    value: function clientToLocalRect(x, y, width, height) {\n      var clientRect = Rectangle.create(x, y, width, height);\n      return Dom.transformRectangle(clientRect, this.getClientMatrix().inverse());\n    }\n  }, {\n    key: \"clientToGraphRect\",\n    value: function clientToGraphRect(x, y, width, height) {\n      var clientRect = Rectangle.create(x, y, width, height);\n      return Dom.transformRectangle(clientRect, this.graph.matrix().multiply(this.getClientMatrix().inverse()));\n    }\n  }, {\n    key: \"pageToLocalRect\",\n    value: function pageToLocalRect(x, y, width, height) {\n      var graphRect = Rectangle.create(x, y, width, height);\n      var pageOffset = this.getPageOffset();\n      graphRect.x -= pageOffset.x;\n      graphRect.y -= pageOffset.y;\n      return this.graphToLocalRect(graphRect);\n    }\n  }]);\n\n  return CoordManager;\n}(Base);","map":{"version":3,"sources":["../../src/graph/coord.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Base } from './base';\nimport { Dom } from '../util';\nimport { Point, Rectangle } from '../geometry';\nexport class CoordManager extends Base {\n    getClientMatrix() {\n        return Dom.createSVGMatrix(this.view.stage.getScreenCTM());\n    }\n    /**\n     * Returns coordinates of the graph viewport, relative to the window.\n     */\n    getClientOffset() {\n        // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n        const rect = this.view.svg.getBoundingClientRect();\n        return new Point(rect.left, rect.top);\n    }\n    /**\n     * Returns coordinates of the graph viewport, relative to the document.\n     */\n    getPageOffset() {\n        // see: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n        return this.getClientOffset().translate(window.scrollX, window.scrollY);\n    }\n    snapToGrid(x, y) {\n        const p = typeof x === 'number'\n            ? this.clientToLocalPoint(x, y)\n            : this.clientToLocalPoint(x.x, x.y);\n        return p.snapToGrid(this.graph.getGridSize());\n    }\n    localToGraphPoint(x, y) {\n        const localPoint = Point.create(x, y);\n        return Dom.transformPoint(localPoint, this.graph.matrix());\n    }\n    localToClientPoint(x, y) {\n        const localPoint = Point.create(x, y);\n        return Dom.transformPoint(localPoint, this.getClientMatrix());\n    }\n    localToPagePoint(x, y) {\n        const p = typeof x === 'number'\n            ? this.localToGraphPoint(x, y)\n            : this.localToGraphPoint(x);\n        return p.translate(this.getPageOffset());\n    }\n    localToGraphRect(x, y, width, height) {\n        const localRect = Rectangle.create(x, y, width, height);\n        return Dom.transformRectangle(localRect, this.graph.matrix());\n    }\n    localToClientRect(x, y, width, height) {\n        const localRect = Rectangle.create(x, y, width, height);\n        return Dom.transformRectangle(localRect, this.getClientMatrix());\n    }\n    localToPageRect(x, y, width, height) {\n        const rect = typeof x === 'number'\n            ? this.localToGraphRect(x, y, width, height)\n            : this.localToGraphRect(x);\n        return rect.translate(this.getPageOffset());\n    }\n    graphToLocalPoint(x, y) {\n        const graphPoint = Point.create(x, y);\n        return Dom.transformPoint(graphPoint, this.graph.matrix().inverse());\n    }\n    clientToLocalPoint(x, y) {\n        const clientPoint = Point.create(x, y);\n        return Dom.transformPoint(clientPoint, this.getClientMatrix().inverse());\n    }\n    clientToGraphPoint(x, y) {\n        const clientPoint = Point.create(x, y);\n        return Dom.transformPoint(clientPoint, this.graph.matrix().multiply(this.getClientMatrix().inverse()));\n    }\n    pageToLocalPoint(x, y) {\n        const pagePoint = Point.create(x, y);\n        const graphPoint = pagePoint.diff(this.getPageOffset());\n        return this.graphToLocalPoint(graphPoint);\n    }\n    graphToLocalRect(x, y, width, height) {\n        const graphRect = Rectangle.create(x, y, width, height);\n        return Dom.transformRectangle(graphRect, this.graph.matrix().inverse());\n    }\n    clientToLocalRect(x, y, width, height) {\n        const clientRect = Rectangle.create(x, y, width, height);\n        return Dom.transformRectangle(clientRect, this.getClientMatrix().inverse());\n    }\n    clientToGraphRect(x, y, width, height) {\n        const clientRect = Rectangle.create(x, y, width, height);\n        return Dom.transformRectangle(clientRect, this.graph.matrix().multiply(this.getClientMatrix().inverse()));\n    }\n    pageToLocalRect(x, y, width, height) {\n        const graphRect = Rectangle.create(x, y, width, height);\n        const pageOffset = this.getPageOffset();\n        graphRect.x -= pageOffset.x;\n        graphRect.y -= pageOffset.y;\n        return this.graphToLocalRect(graphRect);\n    }\n}\n//# sourceMappingURL=coord.js.map"]},"metadata":{},"sourceType":"module"}