{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Dom } from '../util';\nimport { ModifierKey } from '../types';\nimport { Base } from './base';\nexport var ScrollerManager = /*#__PURE__*/function (_Base) {\n  _inherits(ScrollerManager, _Base);\n\n  var _super = _createSuper(ScrollerManager);\n\n  function ScrollerManager() {\n    _classCallCheck(this, ScrollerManager);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ScrollerManager, [{\n    key: \"widgetOptions\",\n    get: function get() {\n      return this.options.scroller;\n    }\n  }, {\n    key: \"pannable\",\n    get: function get() {\n      if (this.widgetOptions) {\n        if (typeof this.widgetOptions.pannable === 'object') {\n          return this.widgetOptions.pannable.enabled;\n        }\n\n        return !!this.widgetOptions.pannable;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.widget = this.graph.hook.createScroller();\n      this.startListening();\n      this.updateClassName();\n\n      if (this.widget) {\n        this.widget.center();\n      }\n    }\n  }, {\n    key: \"startListening\",\n    value: function startListening() {\n      var eventTypes = [];\n      var pannable = this.widgetOptions.pannable;\n\n      if (typeof pannable === 'object') {\n        eventTypes = pannable.eventTypes || [];\n      } else {\n        eventTypes = ['leftMouseDown'];\n      }\n\n      if (eventTypes.includes('leftMouseDown')) {\n        this.graph.on('blank:mousedown', this.preparePanning, this);\n        this.graph.on('node:unhandled:mousedown', this.preparePanning, this);\n        this.graph.on('edge:unhandled:mousedown', this.preparePanning, this);\n      }\n\n      if (eventTypes.includes('rightMouseDown')) {\n        this.onRightMouseDown = this.onRightMouseDown.bind(this);\n        this.view.$(this.graph.container).on('mousedown', this.onRightMouseDown);\n      }\n    }\n  }, {\n    key: \"stopListening\",\n    value: function stopListening() {\n      var eventTypes = [];\n      var pannable = this.widgetOptions.pannable;\n\n      if (typeof pannable === 'object') {\n        eventTypes = pannable.eventTypes || [];\n      } else {\n        eventTypes = ['leftMouseDown'];\n      }\n\n      if (eventTypes.includes('leftMouseDown')) {\n        this.graph.off('blank:mousedown', this.preparePanning, this);\n        this.graph.off('node:unhandled:mousedown', this.preparePanning, this);\n        this.graph.off('edge:unhandled:mousedown', this.preparePanning, this);\n      }\n\n      if (eventTypes.includes('rightMouseDown')) {\n        this.view.$(this.graph.container).off('mousedown', this.onRightMouseDown);\n      }\n    }\n  }, {\n    key: \"onRightMouseDown\",\n    value: function onRightMouseDown(e) {\n      var _this = this;\n\n      if (e.button === 2 && this.allowPanning(e, true) && this.widget) {\n        this.updateClassName(true);\n        this.widget.startPanning(e);\n        this.widget.once('pan:stop', function () {\n          return _this.updateClassName(false);\n        });\n      }\n    }\n  }, {\n    key: \"preparePanning\",\n    value: function preparePanning(_ref) {\n      var _this2 = this;\n\n      var e = _ref.e;\n\n      if (this.widget) {\n        if (this.allowPanning(e, true) || this.allowPanning(e) && !this.graph.selection.allowRubberband(e, true)) {\n          this.updateClassName(true);\n          this.widget.startPanning(e);\n          this.widget.once('pan:stop', function () {\n            return _this2.updateClassName(false);\n          });\n        }\n      }\n    }\n  }, {\n    key: \"allowPanning\",\n    value: function allowPanning(e, strict) {\n      return this.widget && this.pannable && ModifierKey.isMatch(e, this.widgetOptions.modifiers, strict) && this.graph.hook.allowPanning(e);\n    }\n  }, {\n    key: \"updateClassName\",\n    value: function updateClassName(isPanning) {\n      if (this.widget == null) {\n        return;\n      }\n\n      var container = this.widget.container;\n      var pannable = this.view.prefixClassName('graph-scroller-pannable');\n\n      if (this.pannable) {\n        Dom.addClass(container, pannable);\n        container.dataset.panning = (!!isPanning).toString(); // Use dataset to control scroller panning style to avoid reflow caused by changing classList\n      } else {\n        Dom.removeClass(container, pannable);\n      }\n    }\n  }, {\n    key: \"enablePanning\",\n    value: function enablePanning() {\n      if (!this.pannable) {\n        this.widgetOptions.pannable = true;\n        this.updateClassName(); // if (\n        //   ModifierKey.equals(\n        //     this.graph.options.scroller.modifiers,\n        //     this.graph.options.selecting.modifiers,\n        //   )\n        // ) {\n        //   this.graph.selection.disableRubberband()\n        // }\n      }\n    }\n  }, {\n    key: \"disablePanning\",\n    value: function disablePanning() {\n      if (this.pannable) {\n        this.widgetOptions.pannable = false;\n        this.updateClassName();\n      }\n    }\n  }, {\n    key: \"lock\",\n    value: function lock() {\n      if (this.widget) {\n        this.widget.lock();\n      }\n    }\n  }, {\n    key: \"unlock\",\n    value: function unlock() {\n      if (this.widget) {\n        this.widget.unlock();\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.widget) {\n        this.widget.update();\n      }\n    }\n  }, {\n    key: \"enableAutoResize\",\n    value: function enableAutoResize() {\n      if (this.widget) {\n        this.widget.enableAutoResize();\n      }\n    }\n  }, {\n    key: \"disableAutoResize\",\n    value: function disableAutoResize() {\n      if (this.widget) {\n        this.widget.disableAutoResize();\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (this.widget) {\n        this.widget.resize(width, height);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this.widget) {\n        this.widget.dispose();\n      }\n\n      this.stopListening();\n    }\n  }]);\n\n  return ScrollerManager;\n}(Base);\n\n__decorate([Base.dispose()], ScrollerManager.prototype, \"dispose\", null);","map":{"version":3,"sources":["../../src/graph/scroller.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Dom } from '../util';\nimport { ModifierKey } from '../types';\nimport { Base } from './base';\nexport class ScrollerManager extends Base {\n    get widgetOptions() {\n        return this.options.scroller;\n    }\n    get pannable() {\n        if (this.widgetOptions) {\n            if (typeof this.widgetOptions.pannable === 'object') {\n                return this.widgetOptions.pannable.enabled;\n            }\n            return !!this.widgetOptions.pannable;\n        }\n        return false;\n    }\n    init() {\n        this.widget = this.graph.hook.createScroller();\n        this.startListening();\n        this.updateClassName();\n        if (this.widget) {\n            this.widget.center();\n        }\n    }\n    startListening() {\n        let eventTypes = [];\n        const pannable = this.widgetOptions.pannable;\n        if (typeof pannable === 'object') {\n            eventTypes = pannable.eventTypes || [];\n        }\n        else {\n            eventTypes = ['leftMouseDown'];\n        }\n        if (eventTypes.includes('leftMouseDown')) {\n            this.graph.on('blank:mousedown', this.preparePanning, this);\n            this.graph.on('node:unhandled:mousedown', this.preparePanning, this);\n            this.graph.on('edge:unhandled:mousedown', this.preparePanning, this);\n        }\n        if (eventTypes.includes('rightMouseDown')) {\n            this.onRightMouseDown = this.onRightMouseDown.bind(this);\n            this.view.$(this.graph.container).on('mousedown', this.onRightMouseDown);\n        }\n    }\n    stopListening() {\n        let eventTypes = [];\n        const pannable = this.widgetOptions.pannable;\n        if (typeof pannable === 'object') {\n            eventTypes = pannable.eventTypes || [];\n        }\n        else {\n            eventTypes = ['leftMouseDown'];\n        }\n        if (eventTypes.includes('leftMouseDown')) {\n            this.graph.off('blank:mousedown', this.preparePanning, this);\n            this.graph.off('node:unhandled:mousedown', this.preparePanning, this);\n            this.graph.off('edge:unhandled:mousedown', this.preparePanning, this);\n        }\n        if (eventTypes.includes('rightMouseDown')) {\n            this.view.$(this.graph.container).off('mousedown', this.onRightMouseDown);\n        }\n    }\n    onRightMouseDown(e) {\n        if (e.button === 2 && this.allowPanning(e, true) && this.widget) {\n            this.updateClassName(true);\n            this.widget.startPanning(e);\n            this.widget.once('pan:stop', () => this.updateClassName(false));\n        }\n    }\n    preparePanning({ e }) {\n        if (this.widget) {\n            if (this.allowPanning(e, true) ||\n                (this.allowPanning(e) && !this.graph.selection.allowRubberband(e, true))) {\n                this.updateClassName(true);\n                this.widget.startPanning(e);\n                this.widget.once('pan:stop', () => this.updateClassName(false));\n            }\n        }\n    }\n    allowPanning(e, strict) {\n        return (this.widget &&\n            this.pannable &&\n            ModifierKey.isMatch(e, this.widgetOptions.modifiers, strict) &&\n            this.graph.hook.allowPanning(e));\n    }\n    updateClassName(isPanning) {\n        if (this.widget == null) {\n            return;\n        }\n        const container = this.widget.container;\n        const pannable = this.view.prefixClassName('graph-scroller-pannable');\n        if (this.pannable) {\n            Dom.addClass(container, pannable);\n            container.dataset.panning = (!!isPanning).toString(); // Use dataset to control scroller panning style to avoid reflow caused by changing classList\n        }\n        else {\n            Dom.removeClass(container, pannable);\n        }\n    }\n    enablePanning() {\n        if (!this.pannable) {\n            this.widgetOptions.pannable = true;\n            this.updateClassName();\n            // if (\n            //   ModifierKey.equals(\n            //     this.graph.options.scroller.modifiers,\n            //     this.graph.options.selecting.modifiers,\n            //   )\n            // ) {\n            //   this.graph.selection.disableRubberband()\n            // }\n        }\n    }\n    disablePanning() {\n        if (this.pannable) {\n            this.widgetOptions.pannable = false;\n            this.updateClassName();\n        }\n    }\n    lock() {\n        if (this.widget) {\n            this.widget.lock();\n        }\n    }\n    unlock() {\n        if (this.widget) {\n            this.widget.unlock();\n        }\n    }\n    update() {\n        if (this.widget) {\n            this.widget.update();\n        }\n    }\n    enableAutoResize() {\n        if (this.widget) {\n            this.widget.enableAutoResize();\n        }\n    }\n    disableAutoResize() {\n        if (this.widget) {\n            this.widget.disableAutoResize();\n        }\n    }\n    resize(width, height) {\n        if (this.widget) {\n            this.widget.resize(width, height);\n        }\n    }\n    dispose() {\n        if (this.widget) {\n            this.widget.dispose();\n        }\n        this.stopListening();\n    }\n}\n__decorate([\n    Base.dispose()\n], ScrollerManager.prototype, \"dispose\", null);\n//# sourceMappingURL=scroller.js.map"]},"metadata":{},"sourceType":"module"}