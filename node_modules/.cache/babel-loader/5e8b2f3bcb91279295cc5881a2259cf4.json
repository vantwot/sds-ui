{"ast":null,"code":"import _slicedToArray from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useState } from 'react';\nimport { useXflowPrefixCls } from '@antv/xflow-core';\nimport { DoubleRightOutlined, DoubleLeftOutlined } from '@ant-design/icons';\nimport { WorkspacePanel } from '../base-panel';\nimport { NodePanelBody } from './panel-body'; // import { NodePanelHeader } from '../canvas-node-tree-panel/panel-header'\n\nimport { NodePanelHeader } from './panel-header';\nimport { usePanelLyaoutStyle } from '../canvas-node-tree-panel/utils';\nimport { usePanelData } from './service';\nimport { CONTAINER_CLASS, PANEL_HEADER_HEIGHT } from './constants';\nexport { setGroupRender } from './group-panel';\nexport * from './constants';\nexport * from './utils';\nexport * from './interface';\nimport './style/index';\nexport var NodePanelMain = function NodePanelMain(props) {\n  var prefixClz = props.prefixClz,\n      _props$position = props.position,\n      position = _props$position === void 0 ? {\n    width: 240,\n    top: 0,\n    bottom: 0,\n    left: 0\n  } : _props$position,\n      _props$showHeader = props.showHeader,\n      showHeader = _props$showHeader === void 0 ? true : _props$showHeader,\n      rest = __rest(props, [\"prefixClz\", \"position\", \"showHeader\"]);\n\n  var _position$width = position.width,\n      width = _position$width === void 0 ? 200 : _position$width;\n\n  var _usePanelLyaoutStyle = usePanelLyaoutStyle(props),\n      headerStyle = _usePanelLyaoutStyle.headerStyle,\n      bodyStyle = _usePanelLyaoutStyle.bodyStyle;\n\n  var _usePanelData = usePanelData(props),\n      state = _usePanelData.state,\n      onKeywordChange = _usePanelData.onKeywordChange;\n\n  return React.createElement(React.Fragment, null, showHeader && React.createElement(WorkspacePanel, Object.assign({}, rest, {\n    position: {\n      top: 0,\n      left: 0,\n      height: PANEL_HEADER_HEIGHT,\n      width: width\n    }\n  }), React.createElement(NodePanelHeader, Object.assign({}, props, {\n    state: state,\n    style: headerStyle,\n    onKeywordChange: onKeywordChange\n  }))), React.createElement(WorkspacePanel, Object.assign({\n    className: \"\".concat(CONTAINER_CLASS, \"-nodes\")\n  }, rest, {\n    position: Object.assign(Object.assign({}, position), {\n      top: showHeader ? PANEL_HEADER_HEIGHT : 0\n    })\n  }), React.createElement(NodePanelBody, Object.assign({}, props, {\n    state: state,\n    style: bodyStyle\n  }))));\n};\nexport var FlowchartNodePanel = function FlowchartNodePanel(props) {\n  var prefixClz = useXflowPrefixCls('node-panel');\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      collpased = _useState2[0],\n      setCollpased = _useState2[1];\n\n  var _props$show = props.show,\n      show = _props$show === void 0 ? true : _props$show,\n      _props$position2 = props.position,\n      position = _props$position2 === void 0 ? {\n    width: 240,\n    top: 40,\n    bottom: 0,\n    left: 0\n  } : _props$position2,\n      rest = __rest(props, [\"show\", \"position\"]);\n\n  if (!show) {\n    return null;\n  }\n\n  var _position$width2 = position.width,\n      width = _position$width2 === void 0 ? 200 : _position$width2,\n      left = position.left;\n  return React.createElement(WorkspacePanel, {\n    className: CONTAINER_CLASS,\n    position: Object.assign(Object.assign({}, position), {\n      left: !collpased ? left : -width\n    })\n  }, React.createElement(\"div\", {\n    className: \"\".concat(CONTAINER_CLASS, \"-wrapper\")\n  }, React.createElement(WorkspacePanel, Object.assign({\n    className: prefixClz\n  }, rest, {\n    position: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    }\n  }), React.createElement(NodePanelMain, Object.assign({}, props, {\n    prefixClz: prefixClz,\n    position: position\n  }))), React.createElement(\"div\", {\n    className: \"\".concat(CONTAINER_CLASS, \"-icon\"),\n    style: {\n      top: 21,\n      right: !collpased ? -10 : -20,\n      borderRadius: !collpased ? '50%' : '0 50% 50% 0',\n      borderLeft: !collpased ? '' : 'none'\n    },\n    onClick: function onClick() {\n      setCollpased(!collpased);\n    }\n  }, collpased ? React.createElement(DoubleRightOutlined, null) : React.createElement(DoubleLeftOutlined, null))));\n};","map":{"version":3,"sources":["../../src/flowchart-node-panel/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useState } from 'react';\nimport { useXflowPrefixCls } from '@antv/xflow-core';\nimport { DoubleRightOutlined, DoubleLeftOutlined } from '@ant-design/icons';\nimport { WorkspacePanel } from '../base-panel';\nimport { NodePanelBody } from './panel-body';\n// import { NodePanelHeader } from '../canvas-node-tree-panel/panel-header'\nimport { NodePanelHeader } from './panel-header';\nimport { usePanelLyaoutStyle } from '../canvas-node-tree-panel/utils';\nimport { usePanelData } from './service';\nimport { CONTAINER_CLASS, PANEL_HEADER_HEIGHT } from './constants';\nexport { setGroupRender } from './group-panel';\nexport * from './constants';\nexport * from './utils';\nexport * from './interface';\nimport './style/index';\nexport const NodePanelMain = props => {\n    const { prefixClz, position = { width: 240, top: 0, bottom: 0, left: 0 }, showHeader = true } = props, rest = __rest(props, [\"prefixClz\", \"position\", \"showHeader\"]);\n    const { width = 200 } = position;\n    const { headerStyle, bodyStyle } = usePanelLyaoutStyle(props);\n    const { state, onKeywordChange } = usePanelData(props);\n    return (React.createElement(React.Fragment, null,\n        showHeader && (React.createElement(WorkspacePanel, Object.assign({}, rest, { position: {\n                top: 0,\n                left: 0,\n                height: PANEL_HEADER_HEIGHT,\n                width,\n            } }),\n            React.createElement(NodePanelHeader, Object.assign({}, props, { state: state, style: headerStyle, onKeywordChange: onKeywordChange })))),\n        React.createElement(WorkspacePanel, Object.assign({ className: `${CONTAINER_CLASS}-nodes` }, rest, { position: Object.assign(Object.assign({}, position), { top: showHeader ? PANEL_HEADER_HEIGHT : 0 }) }),\n            React.createElement(NodePanelBody, Object.assign({}, props, { state: state, style: bodyStyle })))));\n};\nexport const FlowchartNodePanel = props => {\n    const prefixClz = useXflowPrefixCls('node-panel');\n    const [collpased, setCollpased] = useState(false);\n    const { show = true, position = { width: 240, top: 40, bottom: 0, left: 0 } } = props, rest = __rest(props, [\"show\", \"position\"]);\n    if (!show) {\n        return null;\n    }\n    const { width = 200, left } = position;\n    return (React.createElement(WorkspacePanel, { className: CONTAINER_CLASS, position: Object.assign(Object.assign({}, position), { left: !collpased ? left : -width }) },\n        React.createElement(\"div\", { className: `${CONTAINER_CLASS}-wrapper` },\n            React.createElement(WorkspacePanel, Object.assign({ className: prefixClz }, rest, { position: {\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                } }),\n                React.createElement(NodePanelMain, Object.assign({}, props, { prefixClz: prefixClz, position: position }))),\n            React.createElement(\"div\", { className: `${CONTAINER_CLASS}-icon`, style: {\n                    top: 21,\n                    right: !collpased ? -10 : -20,\n                    borderRadius: !collpased ? '50%' : '0 50% 50% 0',\n                    borderLeft: !collpased ? '' : 'none',\n                }, onClick: () => {\n                    setCollpased(!collpased);\n                } }, collpased ? React.createElement(DoubleRightOutlined, null) : React.createElement(DoubleLeftOutlined, null)))));\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}