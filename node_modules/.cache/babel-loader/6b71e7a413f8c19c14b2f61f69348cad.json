{"ast":null,"code":"import { StringInput } from './string-input';\nimport { Checkbox } from './checkbox';\nimport { TextArea } from './text-area';\nimport { Select } from './select';\nimport { Datetime } from './datetime';\nimport { Float } from './float';\nimport { ControlShape } from '../../interface';\nexport const xflowDefaultControls = [[ControlShape.INPUT, StringInput], [ControlShape.CHECKBOX, Checkbox], [ControlShape.TEXTAREA, TextArea], [ControlShape.DATETIME, Datetime], [ControlShape.SELECT, Select], [ControlShape.FLOAT, Float]];\nexport const makeControlMap = controls => {\n  const controlMap = new Map();\n  controls.forEach(item => {\n    const [key, control] = item;\n    const uuid = key.toLowerCase();\n\n    if (controlMap.has(uuid)) {\n      console.error(`${key} is duplicated in controlMap:`, controlMap);\n    }\n\n    controlMap.set(uuid, control);\n  });\n  return controlMap;\n};\nexport const getControlFromMap = function (key, controlMap) {\n  let defaultControl = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : StringInput;\n\n  if (controlMap.has(key)) {\n    return controlMap.get(key);\n  }\n\n  const uuid = key.toLowerCase();\n\n  if (controlMap.has(uuid)) {\n    return controlMap.get(uuid);\n  }\n\n  console.warn(`${key} is not exist in controlmap, fallback to defaultControl`);\n  return defaultControl;\n};","map":{"version":3,"sources":["../../../../src/canvas-json-schema-form/schema-form/control-map/index.ts"],"names":[],"mappings":"AAAA,SAAS,WAAT,QAA4B,gBAA5B;AACA,SAAS,QAAT,QAAyB,YAAzB;AACA,SAAS,QAAT,QAAyB,aAAzB;AACA,SAAS,MAAT,QAAuB,UAAvB;AACA,SAAS,QAAT,QAAyB,YAAzB;AACA,SAAS,KAAT,QAAsB,SAAtB;AAGA,SAAS,YAAT,QAA6B,iBAA7B;AAEA,OAAO,MAAM,oBAAoB,GAAwC,CACvE,CAAC,YAAY,CAAC,KAAd,EAAqB,WAArB,CADuE,EAEvE,CAAC,YAAY,CAAC,QAAd,EAAwB,QAAxB,CAFuE,EAGvE,CAAC,YAAY,CAAC,QAAd,EAAwB,QAAxB,CAHuE,EAIvE,CAAC,YAAY,CAAC,QAAd,EAAwB,QAAxB,CAJuE,EAKvE,CAAC,YAAY,CAAC,MAAd,EAAsB,MAAtB,CALuE,EAMvE,CAAC,YAAY,CAAC,KAAd,EAAqB,KAArB,CANuE,CAAlE;AAWP,OAAO,MAAM,cAAc,GAAI,QAAD,IAAkD;AAC9E,QAAM,UAAU,GAAG,IAAI,GAAJ,EAAnB;AACA,EAAA,QAAQ,CAAC,OAAT,CAAiB,IAAI,IAAG;AACtB,UAAM,CAAC,GAAD,EAAM,OAAN,IAAiB,IAAvB;AACA,UAAM,IAAI,GAAG,GAAG,CAAC,WAAJ,EAAb;;AACA,QAAI,UAAU,CAAC,GAAX,CAAe,IAAf,CAAJ,EAA0B;AACxB,MAAA,OAAO,CAAC,KAAR,CAAc,GAAG,GAAG,+BAApB,EAAqD,UAArD;AACD;;AACD,IAAA,UAAU,CAAC,GAAX,CAAe,IAAf,EAAqB,OAArB;AACD,GAPD;AAQA,SAAO,UAAP;AACD,CAXM;AAaP,OAAO,MAAM,iBAAiB,GAAG,UAC/B,GAD+B,EAE/B,UAF+B,EAI7B;AAAA,MADF,cACE,uEADmD,WACnD;;AACF,MAAI,UAAU,CAAC,GAAX,CAAe,GAAf,CAAJ,EAAyB;AACvB,WAAO,UAAU,CAAC,GAAX,CAAe,GAAf,CAAP;AACD;;AACD,QAAM,IAAI,GAAG,GAAG,CAAC,WAAJ,EAAb;;AACA,MAAI,UAAU,CAAC,GAAX,CAAe,IAAf,CAAJ,EAA0B;AACxB,WAAO,UAAU,CAAC,GAAX,CAAe,IAAf,CAAP;AACD;;AACD,EAAA,OAAO,CAAC,IAAR,CAAa,GAAG,GAAG,yDAAnB;AACA,SAAO,cAAP;AACD,CAdM","sourceRoot":"","sourcesContent":["import { StringInput } from './string-input';\nimport { Checkbox } from './checkbox';\nimport { TextArea } from './text-area';\nimport { Select } from './select';\nimport { Datetime } from './datetime';\nimport { Float } from './float';\nimport { ControlShape } from '../../interface';\nexport const xflowDefaultControls = [\n    [ControlShape.INPUT, StringInput],\n    [ControlShape.CHECKBOX, Checkbox],\n    [ControlShape.TEXTAREA, TextArea],\n    [ControlShape.DATETIME, Datetime],\n    [ControlShape.SELECT, Select],\n    [ControlShape.FLOAT, Float],\n];\nexport const makeControlMap = (controls) => {\n    const controlMap = new Map();\n    controls.forEach(item => {\n        const [key, control] = item;\n        const uuid = key.toLowerCase();\n        if (controlMap.has(uuid)) {\n            console.error(`${key} is duplicated in controlMap:`, controlMap);\n        }\n        controlMap.set(uuid, control);\n    });\n    return controlMap;\n};\nexport const getControlFromMap = (key, controlMap, defaultControl = StringInput) => {\n    if (controlMap.has(key)) {\n        return controlMap.get(key);\n    }\n    const uuid = key.toLowerCase();\n    if (controlMap.has(uuid)) {\n        return controlMap.get(uuid);\n    }\n    console.warn(`${key} is not exist in controlmap, fallback to defaultControl`);\n    return defaultControl;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}