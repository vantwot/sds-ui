{"ast":null,"code":"/** hooks 执行的策略 */\nexport var ScheduleTypeEnum;\n\n(function (ScheduleTypeEnum) {\n  /** pipeline串行执行：所有async任务完成后再执行回调 */\n  ScheduleTypeEnum[\"ASYNC_SRRIES\"] = \"ASYNC_SRRIES\";\n  /** async并行执行：等待Promise.all所有async任务后再执行回调 */\n\n  ScheduleTypeEnum[\"ASYNC_PARALLEL\"] = \"ASYNC_PARALLEL\";\n})(ScheduleTypeEnum || (ScheduleTypeEnum = {}));","map":{"version":3,"sources":["../src/interface.ts"],"names":[],"mappings":"AA+BA;AACA,OAAA,IAAY,gBAAZ;;AAAA,CAAA,UAAY,gBAAZ,EAA4B;AAC1B;AACA,EAAA,gBAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA;;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAA;AACD,CALD,EAAY,gBAAgB,KAAhB,gBAAgB,GAAA,EAAA,CAA5B","sourceRoot":"","sourcesContent":["/** hooks 执行的策略 */\nexport var ScheduleTypeEnum;\n(function (ScheduleTypeEnum) {\n    /** pipeline串行执行：所有async任务完成后再执行回调 */\n    ScheduleTypeEnum[\"ASYNC_SRRIES\"] = \"ASYNC_SRRIES\";\n    /** async并行执行：等待Promise.all所有async任务后再执行回调 */\n    ScheduleTypeEnum[\"ASYNC_PARALLEL\"] = \"ASYNC_PARALLEL\";\n})(ScheduleTypeEnum || (ScheduleTypeEnum = {}));\n//# sourceMappingURL=interface.js.map"]},"metadata":{},"sourceType":"module"}