{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n/* eslint-disable @typescript-eslint/no-redeclare */\n\n/* eslint-disable no-await-in-loop */\n\n/* eslint-disable max-classes-per-file */\n\n\nimport { inject, singleton, contrib, Contribution } from 'mana-syringe';\nimport { Node as X6Node, Edge as X6Edge } from '@antv/x6';\nimport { IGraphProvider } from '../xflow-main/graph/graph-provider';\nimport { IGraphCommandService } from '../command/interface';\nimport { IModelService } from '../model-service';\nimport { IFrontendApplicationContribution } from './interface';\nimport { cellsToJson } from '../common/graph-utils';\nexport { IFrontendApplicationContribution } from './interface';\nvar TIMER_WARNING_THRESHOLD = 100;\n\nvar FrontendApplication = /*#__PURE__*/function () {\n  function FrontendApplication() {\n    var _this = this;\n\n    _classCallCheck(this, FrontendApplication);\n\n    /** 获取画布配置项 */\n    this.getGraphData = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var graph, cells;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.graphProvider.getGraphInstance();\n\n              case 2:\n                graph = _context.sent;\n                cells = graph.getCells();\n                return _context.abrupt(\"return\", cellsToJson(cells));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    };\n  }\n  /** 启动app */\n\n\n  _createClass(FrontendApplication, [{\n    key: \"start\",\n    value: function start() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.startContributions();\n\n              case 2:\n                this.registerEventListeners();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    }\n    /** 获取画布实例 */\n\n  }, {\n    key: \"getGraphInstance\",\n    value: function getGraphInstance() {\n      return this.graphProvider.getGraphInstance();\n    }\n    /** 获取画布配置项 */\n\n  }, {\n    key: \"getGraphConfig\",\n    value: function getGraphConfig() {\n      return this.graphProvider.getGraphOptions();\n    }\n    /** 获取画布所有节点 */\n\n  }, {\n    key: \"getAllNodes\",\n    value: function getAllNodes() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var graph;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.graphProvider.getGraphInstance();\n\n              case 2:\n                graph = _context3.sent;\n                return _context3.abrupt(\"return\", graph.getNodes());\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    }\n    /** 获取画布节点 */\n\n  }, {\n    key: \"getNodeById\",\n    value: function getNodeById(nodeId) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var graph;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.graphProvider.getGraphInstance();\n\n              case 2:\n                graph = _context4.sent;\n                return _context4.abrupt(\"return\", graph.getCellById(nodeId));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    }\n    /** 获取画布所有连线 */\n\n  }, {\n    key: \"getAllEdges\",\n    value: function getAllEdges() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var graph;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.graphProvider.getGraphInstance();\n\n              case 2:\n                graph = _context5.sent;\n                return _context5.abrupt(\"return\", graph.getEdges());\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    }\n    /** 获取画布连线 */\n\n  }, {\n    key: \"getEdgeById\",\n    value: function getEdgeById(edgeId) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var graph;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.graphProvider.getGraphInstance();\n\n              case 2:\n                graph = _context6.sent;\n                return _context6.abrupt(\"return\", graph.getCellById(edgeId));\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n    }\n    /** 更新节点样式 */\n\n  }, {\n    key: \"updateNodeAttrs\",\n    value: function updateNodeAttrs(node, attrs) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var x6Node;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(node instanceof X6Node)) {\n                  _context7.next = 4;\n                  break;\n                }\n\n                node.setAttrs(attrs);\n                _context7.next = 8;\n                break;\n\n              case 4:\n                _context7.next = 6;\n                return this.getNodeById(node);\n\n              case 6:\n                x6Node = _context7.sent;\n                x6Node.setAttrs(attrs);\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n    }\n    /** 更新连线样式 */\n\n  }, {\n    key: \"updateEdgeAttrs\",\n    value: function updateEdgeAttrs(edge, attrs) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var x6Edge;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!(edge instanceof X6Edge)) {\n                  _context8.next = 4;\n                  break;\n                }\n\n                edge.setAttrs(attrs);\n                _context8.next = 8;\n                break;\n\n              case 4:\n                _context8.next = 6;\n                return this.getEdgeById(edge);\n\n              case 6:\n                x6Edge = _context8.sent;\n                x6Edge.setAttrs(attrs);\n\n              case 8:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n    }\n    /** 平移画布 */\n\n  }, {\n    key: \"translateGraph\",\n    value: function translateGraph(tx, ty) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var graph, currentTranslate;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.graphProvider.getGraphInstance();\n\n              case 2:\n                graph = _context9.sent;\n                currentTranslate = graph.translate();\n                graph.translate(currentTranslate.tx + tx, currentTranslate.ty + ty);\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n    }\n    /** 暴露命令的执行接口 */\n\n  }, {\n    key: \"executeCommand\",\n    value: function executeCommand(commandId, cmdArgs) {\n      var hook = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      return this.commandService.executeCommand(commandId, cmdArgs, hook);\n    }\n    /** 暴露命令的批量执行接口 */\n\n  }, {\n    key: \"executeCommandPipeline\",\n    value: function executeCommandPipeline(cmdOptions) {\n      return this.commandService.executeCommandPipeline(cmdOptions);\n    }\n    /**\n     * Register global event listeners.\n     */\n\n  }, {\n    key: \"registerEventListeners\",\n    value: function registerEventListeners() {\n      var _this2 = this;\n\n      /** 触发app的卸载逻辑 */\n      window.addEventListener('unload', function () {\n        _this2.stopContributions();\n      });\n    }\n    /**\n     * Initialize and start the frontend application contributions.\n     */\n\n  }, {\n    key: \"startContributions\",\n    value: function startContributions() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var _this3 = this;\n\n        var _iterator, _step, _loop;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                console.log(this.contributions.getContributions());\n                _iterator = _createForOfIteratorHelper(this.contributions.getContributions());\n                _context11.prev = 2;\n                _loop = /*#__PURE__*/_regeneratorRuntime.mark(function _loop() {\n                  var contribution;\n                  return _regeneratorRuntime.wrap(function _loop$(_context10) {\n                    while (1) {\n                      switch (_context10.prev = _context10.next) {\n                        case 0:\n                          contribution = _step.value;\n\n                          if (!contribution.onStart) {\n                            _context10.next = 10;\n                            break;\n                          }\n\n                          _context10.prev = 2;\n                          _context10.next = 5;\n                          return _this3.measure(\"\".concat(contribution.constructor.name, \".onStart\"), function () {\n                            return contribution.onStart(_this3);\n                          });\n\n                        case 5:\n                          _context10.next = 10;\n                          break;\n\n                        case 7:\n                          _context10.prev = 7;\n                          _context10.t0 = _context10[\"catch\"](2);\n                          console.error('Could not start contribution', _context10.t0);\n\n                        case 10:\n                        case \"end\":\n                          return _context10.stop();\n                      }\n                    }\n                  }, _loop, null, [[2, 7]]);\n                });\n\n                _iterator.s();\n\n              case 5:\n                if ((_step = _iterator.n()).done) {\n                  _context11.next = 9;\n                  break;\n                }\n\n                return _context11.delegateYield(_loop(), \"t0\", 7);\n\n              case 7:\n                _context11.next = 5;\n                break;\n\n              case 9:\n                _context11.next = 14;\n                break;\n\n              case 11:\n                _context11.prev = 11;\n                _context11.t1 = _context11[\"catch\"](2);\n\n                _iterator.e(_context11.t1);\n\n              case 14:\n                _context11.prev = 14;\n\n                _iterator.f();\n\n                return _context11.finish(14);\n\n              case 17:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee10, this, [[2, 11, 14, 17]]);\n      }));\n    }\n    /**\n     * Stop the frontend application contributions. This is called when the window is unloaded.\n     */\n\n  }, {\n    key: \"stopContributions\",\n    value: function stopContributions() {\n      console.info('>>> Stopping frontend contributions...');\n\n      var _iterator2 = _createForOfIteratorHelper(this.contributions.getContributions()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var contribution = _step2.value;\n\n          if (contribution.onStop) {\n            try {\n              contribution.onStop(this);\n            } catch (error) {\n              console.error('Could not stop contribution', error);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      console.info('<<< All frontend contributions have been stopped.');\n    }\n  }, {\n    key: \"measure\",\n    value: function measure(name, fn) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var startMark, endMark, result, _iterator3, _step3, item, contribution;\n\n        return _regeneratorRuntime.wrap(function _callee11$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                startMark = \"\".concat(name, \"-start\");\n                endMark = \"\".concat(name, \"-end\");\n                performance.mark(startMark);\n                _context12.next = 5;\n                return fn();\n\n              case 5:\n                result = _context12.sent;\n                performance.mark(endMark);\n                performance.measure(name, startMark, endMark);\n                _iterator3 = _createForOfIteratorHelper(performance.getEntriesByName(name));\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    item = _step3.value;\n                    contribution = \"Frontend \".concat(item.name);\n\n                    if (item.duration > TIMER_WARNING_THRESHOLD) {\n                      console.warn(\"\".concat(contribution, \" is slow, took: \").concat(item.duration.toFixed(1), \" ms\"));\n                    } else {\n                      console.debug(\"\".concat(contribution, \" took: \").concat(item.duration.toFixed(1), \" ms\"));\n                    }\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n\n                performance.clearMeasures(name);\n                return _context12.abrupt(\"return\", result);\n\n              case 12:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee11);\n      }));\n    }\n  }]);\n\n  return FrontendApplication;\n}();\n\n__decorate([contrib(IFrontendApplicationContribution), __metadata(\"design:type\", Object)], FrontendApplication.prototype, \"contributions\", void 0);\n\n__decorate([inject(IGraphProvider), __metadata(\"design:type\", Object)], FrontendApplication.prototype, \"graphProvider\", void 0);\n\n__decorate([inject(IGraphCommandService), __metadata(\"design:type\", Object)], FrontendApplication.prototype, \"commandService\", void 0);\n\n__decorate([inject(IModelService), __metadata(\"design:type\", Object)], FrontendApplication.prototype, \"modelService\", void 0);\n\nFrontendApplication = __decorate([singleton()], FrontendApplication);\nexport { FrontendApplication };","map":{"version":3,"sources":["../../src/xflow-main/application.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/* eslint-disable @typescript-eslint/no-redeclare */\n/* eslint-disable no-await-in-loop */\n/* eslint-disable max-classes-per-file */\nimport { inject, singleton, contrib, Contribution } from 'mana-syringe';\nimport { Node as X6Node, Edge as X6Edge } from '@antv/x6';\nimport { IGraphProvider } from '../xflow-main/graph/graph-provider';\nimport { IGraphCommandService } from '../command/interface';\nimport { IModelService } from '../model-service';\nimport { IFrontendApplicationContribution } from './interface';\nimport { cellsToJson } from '../common/graph-utils';\nexport { IFrontendApplicationContribution } from './interface';\nconst TIMER_WARNING_THRESHOLD = 100;\nlet FrontendApplication = class FrontendApplication {\n    constructor() {\n        /** 获取画布配置项 */\n        this.getGraphData = () => __awaiter(this, void 0, void 0, function* () {\n            const graph = yield this.graphProvider.getGraphInstance();\n            const cells = graph.getCells();\n            return cellsToJson(cells);\n        });\n    }\n    /** 启动app */\n    start() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.startContributions();\n            this.registerEventListeners();\n        });\n    }\n    /** 获取画布实例 */\n    getGraphInstance() {\n        return this.graphProvider.getGraphInstance();\n    }\n    /** 获取画布配置项 */\n    getGraphConfig() {\n        return this.graphProvider.getGraphOptions();\n    }\n    /** 获取画布所有节点 */\n    getAllNodes() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const graph = yield this.graphProvider.getGraphInstance();\n            return graph.getNodes();\n        });\n    }\n    /** 获取画布节点 */\n    getNodeById(nodeId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const graph = yield this.graphProvider.getGraphInstance();\n            return graph.getCellById(nodeId);\n        });\n    }\n    /** 获取画布所有连线 */\n    getAllEdges() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const graph = yield this.graphProvider.getGraphInstance();\n            return graph.getEdges();\n        });\n    }\n    /** 获取画布连线 */\n    getEdgeById(edgeId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const graph = yield this.graphProvider.getGraphInstance();\n            return graph.getCellById(edgeId);\n        });\n    }\n    /** 更新节点样式 */\n    updateNodeAttrs(node, attrs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (node instanceof X6Node) {\n                node.setAttrs(attrs);\n            }\n            else {\n                const x6Node = yield this.getNodeById(node);\n                x6Node.setAttrs(attrs);\n            }\n        });\n    }\n    /** 更新连线样式 */\n    updateEdgeAttrs(edge, attrs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (edge instanceof X6Edge) {\n                edge.setAttrs(attrs);\n            }\n            else {\n                const x6Edge = yield this.getEdgeById(edge);\n                x6Edge.setAttrs(attrs);\n            }\n        });\n    }\n    /** 平移画布 */\n    translateGraph(tx, ty) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const graph = yield this.graphProvider.getGraphInstance();\n            const currentTranslate = graph.translate();\n            graph.translate(currentTranslate.tx + tx, currentTranslate.ty + ty);\n        });\n    }\n    /** 暴露命令的执行接口 */\n    executeCommand(commandId, cmdArgs, hook = []) {\n        return this.commandService.executeCommand(commandId, cmdArgs, hook);\n    }\n    /** 暴露命令的批量执行接口 */\n    executeCommandPipeline(cmdOptions) {\n        return this.commandService.executeCommandPipeline(cmdOptions);\n    }\n    /**\n     * Register global event listeners.\n     */\n    registerEventListeners() {\n        /** 触发app的卸载逻辑 */\n        window.addEventListener('unload', () => {\n            this.stopContributions();\n        });\n    }\n    /**\n     * Initialize and start the frontend application contributions.\n     */\n    startContributions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.log(this.contributions.getContributions());\n            for (const contribution of this.contributions.getContributions()) {\n                if (contribution.onStart) {\n                    try {\n                        yield this.measure(`${contribution.constructor.name}.onStart`, () => contribution.onStart(this));\n                    }\n                    catch (error) {\n                        console.error('Could not start contribution', error);\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Stop the frontend application contributions. This is called when the window is unloaded.\n     */\n    stopContributions() {\n        console.info('>>> Stopping frontend contributions...');\n        for (const contribution of this.contributions.getContributions()) {\n            if (contribution.onStop) {\n                try {\n                    contribution.onStop(this);\n                }\n                catch (error) {\n                    console.error('Could not stop contribution', error);\n                }\n            }\n        }\n        console.info('<<< All frontend contributions have been stopped.');\n    }\n    measure(name, fn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const startMark = `${name}-start`;\n            const endMark = `${name}-end`;\n            performance.mark(startMark);\n            const result = yield fn();\n            performance.mark(endMark);\n            performance.measure(name, startMark, endMark);\n            for (const item of performance.getEntriesByName(name)) {\n                const contribution = `Frontend ${item.name}`;\n                if (item.duration > TIMER_WARNING_THRESHOLD) {\n                    console.warn(`${contribution} is slow, took: ${item.duration.toFixed(1)} ms`);\n                }\n                else {\n                    console.debug(`${contribution} took: ${item.duration.toFixed(1)} ms`);\n                }\n            }\n            performance.clearMeasures(name);\n            return result;\n        });\n    }\n};\n__decorate([\n    contrib(IFrontendApplicationContribution),\n    __metadata(\"design:type\", Object)\n], FrontendApplication.prototype, \"contributions\", void 0);\n__decorate([\n    inject(IGraphProvider),\n    __metadata(\"design:type\", Object)\n], FrontendApplication.prototype, \"graphProvider\", void 0);\n__decorate([\n    inject(IGraphCommandService),\n    __metadata(\"design:type\", Object)\n], FrontendApplication.prototype, \"commandService\", void 0);\n__decorate([\n    inject(IModelService),\n    __metadata(\"design:type\", Object)\n], FrontendApplication.prototype, \"modelService\", void 0);\nFrontendApplication = __decorate([\n    singleton()\n], FrontendApplication);\nexport { FrontendApplication };\n//# sourceMappingURL=application.js.map"]},"metadata":{},"sourceType":"module"}