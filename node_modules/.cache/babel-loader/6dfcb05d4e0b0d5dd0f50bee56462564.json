{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React from 'react';\nimport { useXflowPrefixCls } from '@antv/xflow-core';\nimport { PanelFooter } from './panel-footer';\nimport { PanelHeader } from './panel-header';\nimport { PanelBody } from './panel-body';\nimport { usePanelLyaoutStyle } from './utils';\nimport { useJsonSchemaFormModel } from './service';\nexport { FormItemWrapper } from './schema-form';\nexport { executeJsonSchemaFormCommand } from './service';\nimport { WorkspacePanel } from '../base-panel';\n/** useFormPanelData获取数据 */\n\nexport const JsonSchemaFormMain = props => {\n  const {\n    prefixClz\n  } = props;\n  const {\n    getCustomRenderComponent,\n    afterUpdatingCb,\n    formValueUpdateService = () => {}\n  } = props;\n  const {\n    state,\n    commandService,\n    modelService\n  } = useJsonSchemaFormModel(props); // 联动更新form items的值\n\n  const triggerUpdate = React.useCallback(function (form) {\n    let values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return __awaiter(void 0, void 0, void 0, function* () {\n      form.setFieldsValue(values);\n      const changedFields = Object.entries(values).map(_ref => {\n        let [key, val] = _ref;\n        return {\n          name: key,\n          value: val\n        };\n      });\n      const allFields = Object.entries(state.targetData).map(_ref2 => {\n        let [key, val] = _ref2;\n        return {\n          name: key,\n          value: val\n        };\n      });\n      const result = yield formValueUpdateService({\n        allFields: allFields,\n        values: changedFields,\n        modelService,\n        commandService,\n        targetData: state.targetData,\n        targetType: state.targetType\n      });\n\n      if (afterUpdatingCb) {\n        afterUpdatingCb(result);\n      }\n    });\n  }, [afterUpdatingCb, commandService, formValueUpdateService, modelService, state.targetData, state.targetType]); // 在fields change时的回调\n\n  const onFieldsChange = React.useCallback((changedFields, allFields) => __awaiter(void 0, void 0, void 0, function* () {\n    const result = yield formValueUpdateService({\n      values: changedFields,\n      allFields,\n      modelService,\n      commandService,\n      targetData: state.targetData,\n      targetType: state.targetType\n    });\n\n    if (afterUpdatingCb) {\n      afterUpdatingCb(result);\n    }\n  }), [afterUpdatingCb, commandService, formValueUpdateService, modelService, state.targetData, state.targetType]);\n  /** schema为空的情况  */\n\n  const noSchema = React.useMemo(() => {\n    try {\n      return state.schema.tabs.length === 0 || !state.schema;\n    } catch (error) {\n      return true;\n    }\n  }, [state.schema]);\n  const {\n    headerStyle,\n    bodyStyle,\n    footerStyle\n  } = usePanelLyaoutStyle(props, noSchema);\n  /** 支持自定义渲染 */\n\n  if (getCustomRenderComponent) {\n    const Component = getCustomRenderComponent(state.targetType, state.targetData, modelService, commandService);\n\n    if (Component) {\n      return React.createElement(Component, Object.assign(Object.assign({}, props), {\n        headerStyle,\n        bodyStyle,\n        footerStyle,\n        targetData: state.targetData,\n        targetType: state.targetType,\n        modelService: modelService,\n        commandService: commandService\n      }));\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: prefixClz\n  }, React.createElement(PanelHeader, Object.assign({\n    hasSchema: !noSchema\n  }, props, {\n    state: state,\n    style: headerStyle,\n    prefixClz: props.prefixClz\n  })), React.createElement(PanelBody, Object.assign({}, props, {\n    key: state.targetData && state.targetData.id,\n    style: bodyStyle,\n    prefixClz: props.prefixClz,\n    loading: state.loading,\n    schema: state.schema,\n    triggerUpdate: triggerUpdate,\n    onFieldsChange: onFieldsChange\n  })), React.createElement(PanelFooter, Object.assign({}, props, {\n    state: state,\n    style: footerStyle\n  })));\n};\nexport const JsonSchemaForm = props => {\n  const prefixClz = useXflowPrefixCls('json-schema-form');\n  return React.createElement(WorkspacePanel, Object.assign({}, props, {\n    className: prefixClz\n  }), React.createElement(JsonSchemaFormMain, Object.assign({}, props, {\n    prefixClz: prefixClz\n  })));\n};","map":{"version":3,"sources":["../../src/canvas-json-schema-form/main.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from 'react';\nimport { useXflowPrefixCls } from '@antv/xflow-core';\nimport { PanelFooter } from './panel-footer';\nimport { PanelHeader } from './panel-header';\nimport { PanelBody } from './panel-body';\nimport { usePanelLyaoutStyle } from './utils';\nimport { useJsonSchemaFormModel } from './service';\nexport { FormItemWrapper } from './schema-form';\nexport { executeJsonSchemaFormCommand } from './service';\nimport { WorkspacePanel } from '../base-panel';\n/** useFormPanelData获取数据 */\nexport const JsonSchemaFormMain = props => {\n    const { prefixClz } = props;\n    const { getCustomRenderComponent, afterUpdatingCb, formValueUpdateService = () => { } } = props;\n    const { state, commandService, modelService } = useJsonSchemaFormModel(props);\n    // 联动更新form items的值\n    const triggerUpdate = React.useCallback((form, values = {}) => __awaiter(void 0, void 0, void 0, function* () {\n        form.setFieldsValue(values);\n        const changedFields = Object.entries(values).map(([key, val]) => {\n            return { name: key, value: val };\n        });\n        const allFields = Object.entries(state.targetData).map(([key, val]) => {\n            return { name: key, value: val };\n        });\n        const result = yield formValueUpdateService({\n            allFields: allFields,\n            values: changedFields,\n            modelService,\n            commandService,\n            targetData: state.targetData,\n            targetType: state.targetType,\n        });\n        if (afterUpdatingCb) {\n            afterUpdatingCb(result);\n        }\n    }), [\n        afterUpdatingCb,\n        commandService,\n        formValueUpdateService,\n        modelService,\n        state.targetData,\n        state.targetType,\n    ]);\n    // 在fields change时的回调\n    const onFieldsChange = React.useCallback((changedFields, allFields) => __awaiter(void 0, void 0, void 0, function* () {\n        const result = yield formValueUpdateService({\n            values: changedFields,\n            allFields,\n            modelService,\n            commandService,\n            targetData: state.targetData,\n            targetType: state.targetType,\n        });\n        if (afterUpdatingCb) {\n            afterUpdatingCb(result);\n        }\n    }), [\n        afterUpdatingCb,\n        commandService,\n        formValueUpdateService,\n        modelService,\n        state.targetData,\n        state.targetType,\n    ]);\n    /** schema为空的情况  */\n    const noSchema = React.useMemo(() => {\n        try {\n            return state.schema.tabs.length === 0 || !state.schema;\n        }\n        catch (error) {\n            return true;\n        }\n    }, [state.schema]);\n    const { headerStyle, bodyStyle, footerStyle } = usePanelLyaoutStyle(props, noSchema);\n    /** 支持自定义渲染 */\n    if (getCustomRenderComponent) {\n        const Component = getCustomRenderComponent(state.targetType, state.targetData, modelService, commandService);\n        if (Component) {\n            return React.createElement(Component, Object.assign(Object.assign({}, props), { headerStyle,\n                bodyStyle,\n                footerStyle, targetData: state.targetData, targetType: state.targetType, modelService: modelService, commandService: commandService }));\n        }\n    }\n    return (React.createElement(\"div\", { className: prefixClz },\n        React.createElement(PanelHeader, Object.assign({ hasSchema: !noSchema }, props, { state: state, style: headerStyle, prefixClz: props.prefixClz })),\n        React.createElement(PanelBody, Object.assign({}, props, { key: state.targetData && state.targetData.id, style: bodyStyle, prefixClz: props.prefixClz, loading: state.loading, schema: state.schema, triggerUpdate: triggerUpdate, onFieldsChange: onFieldsChange })),\n        React.createElement(PanelFooter, Object.assign({}, props, { state: state, style: footerStyle }))));\n};\nexport const JsonSchemaForm = props => {\n    const prefixClz = useXflowPrefixCls('json-schema-form');\n    return (React.createElement(WorkspacePanel, Object.assign({}, props, { className: prefixClz }),\n        React.createElement(JsonSchemaFormMain, Object.assign({}, props, { prefixClz: prefixClz }))));\n};\n//# sourceMappingURL=main.js.map"]},"metadata":{},"sourceType":"module"}