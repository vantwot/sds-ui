{"ast":null,"code":"import React, { useReducer } from 'react';\nexport var Portal;\n\n(function (Portal) {\n  let active = false;\n  let dispatch;\n\n  const reducer = (state, action) => {\n    const payload = action.payload;\n\n    switch (action.type) {\n      case 'add':\n        {\n          const index = state.findIndex(item => item.id === payload.id);\n\n          if (index >= 0) {\n            state[index] = payload;\n            return [...state];\n          }\n\n          return [...state, payload];\n        }\n\n      case 'remove':\n        {\n          const index = state.findIndex(item => item.id === payload.id);\n\n          if (index >= 0) {\n            const result = [...state];\n            result.splice(index, 1);\n            return result;\n          }\n\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n\n    return state;\n  };\n\n  function connect(id, portal) {\n    if (active) {\n      dispatch({\n        type: 'add',\n        payload: {\n          id,\n          portal\n        }\n      });\n    }\n  }\n\n  Portal.connect = connect;\n\n  function disconnect(id) {\n    if (active) {\n      dispatch({\n        type: 'remove',\n        payload: {\n          id\n        }\n      });\n    }\n  }\n\n  Portal.disconnect = disconnect;\n\n  function isActive() {\n    return active;\n  }\n\n  Portal.isActive = isActive;\n\n  function getProvider() {\n    // eslint-disable-next-line react/display-name\n    return () => {\n      active = true;\n      const [items, mutate] = useReducer(reducer, []);\n      dispatch = mutate; // eslint-disable-next-line react/no-children-prop\n\n      return React.createElement(React.Fragment, {\n        children: items.map(item => item.portal)\n      });\n    };\n  }\n\n  Portal.getProvider = getProvider;\n})(Portal || (Portal = {}));","map":{"version":3,"sources":["../src/portal.ts"],"names":[],"mappings":"AAAA,OAAO,KAAP,IAAgB,UAAhB,QAAkC,OAAlC;AAEA,OAAM,IAAW,MAAX;;AAAN,CAAA,UAAiB,MAAjB,EAAuB;AACrB,MAAI,MAAM,GAAG,KAAb;AACA,MAAI,QAAJ;;AAYA,QAAM,OAAO,GAAG,CAAC,KAAD,EAAmB,MAAnB,KAAqC;AACnD,UAAM,OAAO,GAAG,MAAM,CAAC,OAAvB;;AACA,YAAQ,MAAM,CAAC,IAAf;AACE,WAAK,KAAL;AAAY;AACV,gBAAM,KAAK,GAAG,KAAK,CAAC,SAAN,CAAiB,IAAD,IAAU,IAAI,CAAC,EAAL,KAAY,OAAO,CAAC,EAA9C,CAAd;;AACA,cAAI,KAAK,IAAI,CAAb,EAAgB;AACd,YAAA,KAAK,CAAC,KAAD,CAAL,GAAe,OAAf;AACA,mBAAO,CAAC,GAAG,KAAJ,CAAP;AACD;;AACD,iBAAO,CAAC,GAAG,KAAJ,EAAW,OAAX,CAAP;AACD;;AACD,WAAK,QAAL;AAAe;AACb,gBAAM,KAAK,GAAG,KAAK,CAAC,SAAN,CAAiB,IAAD,IAAU,IAAI,CAAC,EAAL,KAAY,OAAO,CAAC,EAA9C,CAAd;;AACA,cAAI,KAAK,IAAI,CAAb,EAAgB;AACd,kBAAM,MAAM,GAAG,CAAC,GAAG,KAAJ,CAAf;AACA,YAAA,MAAM,CAAC,MAAP,CAAc,KAAd,EAAqB,CAArB;AACA,mBAAO,MAAP;AACD;;AACD;AACD;;AACD;AAAS;AACP;AACD;AApBH;;AAsBA,WAAO,KAAP;AACD,GAzBD;;AA2BA,WAAgB,OAAhB,CAAwB,EAAxB,EAAoC,MAApC,EAA6D;AAC3D,QAAI,MAAJ,EAAY;AACV,MAAA,QAAQ,CAAC;AAAE,QAAA,IAAI,EAAE,KAAR;AAAe,QAAA,OAAO,EAAE;AAAE,UAAA,EAAF;AAAM,UAAA;AAAN;AAAxB,OAAD,CAAR;AACD;AACF;;AAJe,EAAA,MAAA,CAAA,OAAA,GAAO,OAAP;;AAMhB,WAAgB,UAAhB,CAA2B,EAA3B,EAAqC;AACnC,QAAI,MAAJ,EAAY;AACV,MAAA,QAAQ,CAAC;AAAE,QAAA,IAAI,EAAE,QAAR;AAAkB,QAAA,OAAO,EAAE;AAAE,UAAA;AAAF;AAA3B,OAAD,CAAR;AACD;AACF;;AAJe,EAAA,MAAA,CAAA,UAAA,GAAU,UAAV;;AAMhB,WAAgB,QAAhB,GAAwB;AACtB,WAAO,MAAP;AACD;;AAFe,EAAA,MAAA,CAAA,QAAA,GAAQ,QAAR;;AAIhB,WAAgB,WAAhB,GAA2B;AACzB;AACA,WAAO,MAAK;AACV,MAAA,MAAM,GAAG,IAAT;AACA,YAAM,CAAC,KAAD,EAAQ,MAAR,IAAkB,UAAU,CAAC,OAAD,EAAU,EAAV,CAAlC;AACA,MAAA,QAAQ,GAAG,MAAX,CAHU,CAIV;;AACA,aAAO,KAAK,CAAC,aAAN,CAAoB,KAAK,CAAC,QAA1B,EAAoC;AACzC,QAAA,QAAQ,EAAE,KAAK,CAAC,GAAN,CAAW,IAAD,IAAU,IAAI,CAAC,MAAzB;AAD+B,OAApC,CAAP;AAGD,KARD;AASD;;AAXe,EAAA,MAAA,CAAA,WAAA,GAAW,WAAX;AAYjB,CArED,EAAiB,MAAM,KAAN,MAAM,GAAA,EAAA,CAAvB","sourceRoot":"","sourcesContent":["import React, { useReducer } from 'react';\nexport var Portal;\n(function (Portal) {\n    let active = false;\n    let dispatch;\n    const reducer = (state, action) => {\n        const payload = action.payload;\n        switch (action.type) {\n            case 'add': {\n                const index = state.findIndex((item) => item.id === payload.id);\n                if (index >= 0) {\n                    state[index] = payload;\n                    return [...state];\n                }\n                return [...state, payload];\n            }\n            case 'remove': {\n                const index = state.findIndex((item) => item.id === payload.id);\n                if (index >= 0) {\n                    const result = [...state];\n                    result.splice(index, 1);\n                    return result;\n                }\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n        return state;\n    };\n    function connect(id, portal) {\n        if (active) {\n            dispatch({ type: 'add', payload: { id, portal } });\n        }\n    }\n    Portal.connect = connect;\n    function disconnect(id) {\n        if (active) {\n            dispatch({ type: 'remove', payload: { id } });\n        }\n    }\n    Portal.disconnect = disconnect;\n    function isActive() {\n        return active;\n    }\n    Portal.isActive = isActive;\n    function getProvider() {\n        // eslint-disable-next-line react/display-name\n        return () => {\n            active = true;\n            const [items, mutate] = useReducer(reducer, []);\n            dispatch = mutate;\n            // eslint-disable-next-line react/no-children-prop\n            return React.createElement(React.Fragment, {\n                children: items.map((item) => item.portal),\n            });\n        };\n    }\n    Portal.getProvider = getProvider;\n})(Portal || (Portal = {}));\n//# sourceMappingURL=portal.js.map"]},"metadata":{},"sourceType":"module"}