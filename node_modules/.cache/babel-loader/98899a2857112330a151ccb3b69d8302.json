{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport TapRecognizer from './tap_recognizer';\n\nvar TapZoomHandler = function () {\n  function TapZoomHandler() {\n    _classCallCheck(this, TapZoomHandler);\n\n    _defineProperty(this, \"enabled\", void 0);\n\n    _defineProperty(this, \"active\", void 0);\n\n    _defineProperty(this, \"zoomIn\", void 0);\n\n    _defineProperty(this, \"zoomOut\", void 0);\n\n    this.zoomIn = new TapRecognizer({\n      numTouches: 1,\n      numTaps: 2\n    });\n    this.zoomOut = new TapRecognizer({\n      numTouches: 2,\n      numTaps: 1\n    });\n    this.reset();\n  }\n\n  _createClass(TapZoomHandler, [{\n    key: \"reset\",\n    value: function reset() {\n      this.active = false;\n      this.zoomIn.reset();\n      this.zoomOut.reset();\n    }\n  }, {\n    key: \"touchstart\",\n    value: function touchstart(e, points, mapTouches) {\n      this.zoomIn.touchstart(e, points, mapTouches);\n      this.zoomOut.touchstart(e, points, mapTouches);\n    }\n  }, {\n    key: \"touchmove\",\n    value: function touchmove(e, points, mapTouches) {\n      this.zoomIn.touchmove(e, points, mapTouches);\n      this.zoomOut.touchmove(e, points, mapTouches);\n    }\n  }, {\n    key: \"touchend\",\n    value: function touchend(e, points, mapTouches) {\n      var _this = this;\n\n      var zoomInPoint = this.zoomIn.touchend(e, points, mapTouches);\n      var zoomOutPoint = this.zoomOut.touchend(e, points, mapTouches);\n\n      if (zoomInPoint) {\n        this.active = true;\n        e.preventDefault();\n        setTimeout(function () {\n          return _this.reset();\n        }, 0);\n        return {\n          cameraAnimation: function cameraAnimation(map) {\n            return map.easeTo({\n              duration: 300,\n              zoom: map.getZoom() + 1,\n              around: map.unproject(zoomInPoint)\n            }, {\n              originalEvent: e\n            });\n          }\n        };\n      } else if (zoomOutPoint) {\n        this.active = true;\n        e.preventDefault();\n        setTimeout(function () {\n          return _this.reset();\n        }, 0);\n        return {\n          cameraAnimation: function cameraAnimation(map) {\n            return map.easeTo({\n              duration: 300,\n              zoom: map.getZoom() - 1,\n              around: map.unproject(zoomOutPoint)\n            }, {\n              originalEvent: e\n            });\n          }\n        };\n      }\n    }\n  }, {\n    key: \"touchcancel\",\n    value: function touchcancel() {\n      this.reset();\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.enabled = true;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.enabled = false;\n      this.reset();\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.enabled;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.active;\n    }\n  }]);\n\n  return TapZoomHandler;\n}();\n\nexport { TapZoomHandler as default };","map":{"version":3,"sources":["../../../src/handler/tap/tap_zoom.ts"],"names":["TapZoomHandler","numTouches","numTaps","zoomInPoint","zoomOutPoint","e","setTimeout","cameraAnimation","duration","zoom","map","around","originalEvent"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport { EarthMap } from '../../earthmap';\nimport Point from '../../geo/point';\nimport { Map } from '../../map';\nimport TapRecognizer from './tap_recognizer';\n\nexport default class TapZoomHandler {\n  public enabled: boolean;\n  public active: boolean;\n  public zoomIn: TapRecognizer;\n  public zoomOut: TapRecognizer;\n\n  constructor() {\n    this.zoomIn = new TapRecognizer({\n      numTouches: 1,\n      numTaps: 2,\n    });\n\n    this.zoomOut = new TapRecognizer({\n      numTouches: 2,\n      numTaps: 1,\n    });\n\n    this.reset();\n  }\n\n  public reset() {\n    this.active = false;\n    this.zoomIn.reset();\n    this.zoomOut.reset();\n  }\n\n  public touchstart(e: TouchEvent, points: Point[], mapTouches: Touch[]) {\n    this.zoomIn.touchstart(e, points, mapTouches);\n    this.zoomOut.touchstart(e, points, mapTouches);\n  }\n\n  public touchmove(e: TouchEvent, points: Point[], mapTouches: Touch[]) {\n    this.zoomIn.touchmove(e, points, mapTouches);\n    this.zoomOut.touchmove(e, points, mapTouches);\n  }\n\n  public touchend(e: TouchEvent, points: Point[], mapTouches: Touch[]) {\n    const zoomInPoint = this.zoomIn.touchend(e, points, mapTouches);\n    const zoomOutPoint = this.zoomOut.touchend(e, points, mapTouches);\n\n    if (zoomInPoint) {\n      this.active = true;\n      e.preventDefault();\n      setTimeout(() => this.reset(), 0);\n      return {\n        cameraAnimation: (map: Map | EarthMap) =>\n          map.easeTo(\n            {\n              duration: 300,\n              zoom: map.getZoom() + 1,\n              around: map.unproject(zoomInPoint),\n            },\n            { originalEvent: e },\n          ),\n      };\n    } else if (zoomOutPoint) {\n      this.active = true;\n      e.preventDefault();\n      setTimeout(() => this.reset(), 0);\n      return {\n        cameraAnimation: (map: Map | EarthMap) =>\n          map.easeTo(\n            {\n              duration: 300,\n              zoom: map.getZoom() - 1,\n              around: map.unproject(zoomOutPoint),\n            },\n            { originalEvent: e },\n          ),\n      };\n    }\n  }\n\n  public touchcancel() {\n    this.reset();\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n    this.reset();\n  }\n\n  public isEnabled() {\n    return this.enabled;\n  }\n\n  public isActive() {\n    return this.active;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}