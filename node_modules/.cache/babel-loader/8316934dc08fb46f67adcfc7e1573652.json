{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nexport var defaultFormSchemaService = function defaultFormSchemaService(args) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _a, targetType, isGroup, groupSchema, nodeSchema, edgeSchema;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            targetType = args.targetType;\n            isGroup = (_a = args.targetData) === null || _a === void 0 ? void 0 : _a.isGroup;\n            groupSchema = {\n              tabs: [{\n                name: '设置',\n                groups: [{\n                  name: 'groupName',\n                  controls: [{\n                    label: '分组名',\n                    name: 'group-service',\n                    shape: 'group-service',\n                    placeholder: '分组名称'\n                  }]\n                }]\n              }]\n            };\n            nodeSchema = {\n              tabs: [{\n                name: '设置',\n                groups: [{\n                  name: 'groupName',\n                  controls: [{\n                    label: '节点名',\n                    name: 'node-service',\n                    shape: 'node-service',\n                    placeholder: '节点名称'\n                  }]\n                }]\n              }]\n            };\n            edgeSchema = {\n              tabs: [{\n                name: '设置',\n                groups: [{\n                  name: 'groupName',\n                  controls: [{\n                    label: '边',\n                    name: 'edge-service',\n                    shape: 'edge-service',\n                    placeholder: '边名称'\n                  }]\n                }]\n              }]\n            };\n\n            if (!isGroup) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", groupSchema);\n\n          case 7:\n            if (!(targetType === 'node')) {\n              _context.next = 9;\n              break;\n            }\n\n            return _context.abrupt(\"return\", nodeSchema);\n\n          case 9:\n            if (!(targetType === 'edge')) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"return\", edgeSchema);\n\n          case 11:\n            return _context.abrupt(\"return\", {\n              tabs: [{\n                name: '设置',\n                groups: [{\n                  name: 'groupName',\n                  controls: [{\n                    label: '',\n                    name: 'canvas-service',\n                    shape: 'canvas-service'\n                  }]\n                }]\n              }]\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n};","map":{"version":3,"sources":["../../../src/flowchart-editor-panel/form-schema-service/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAO,IAAM,wBAAwB,GAAwC,SAAhE,wBAAgE,CAAM,IAAN;AAAA,SAAa,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChF,YAAA,UADgF,GACjE,IADiE,CAChF,UADgF;AAElF,YAAA,OAFkF,GAExE,CAAA,EAAA,GAAA,IAAI,CAAC,UAAL,MAAe,IAAf,IAAe,EAAA,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAe,EAAA,CAAE,OAFuD;AAIlF,YAAA,WAJkF,GAI1C;AAC5C,cAAA,IAAI,EAAE,CACJ;AACE,gBAAA,IAAI,EAAE,IADR;AAEE,gBAAA,MAAM,EAAE,CACN;AACE,kBAAA,IAAI,EAAE,WADR;AAEE,kBAAA,QAAQ,EAAE,CACR;AACE,oBAAA,KAAK,EAAE,KADT;AAEE,oBAAA,IAAI,EAAE,eAFR;AAGE,oBAAA,KAAK,EAAE,eAHT;AAIE,oBAAA,WAAW,EAAE;AAJf,mBADQ;AAFZ,iBADM;AAFV,eADI;AADsC,aAJ0C;AAyBlF,YAAA,UAzBkF,GAyB3C;AAC3C,cAAA,IAAI,EAAE,CACJ;AACE,gBAAA,IAAI,EAAE,IADR;AAEE,gBAAA,MAAM,EAAE,CACN;AACE,kBAAA,IAAI,EAAE,WADR;AAEE,kBAAA,QAAQ,EAAE,CACR;AACE,oBAAA,KAAK,EAAE,KADT;AAEE,oBAAA,IAAI,EAAE,cAFR;AAGE,oBAAA,KAAK,EAAE,cAHT;AAIE,oBAAA,WAAW,EAAE;AAJf,mBADQ;AAFZ,iBADM;AAFV,eADI;AADqC,aAzB2C;AA6ClF,YAAA,UA7CkF,GA6C3C;AAC3C,cAAA,IAAI,EAAE,CACJ;AACE,gBAAA,IAAI,EAAE,IADR;AAEE,gBAAA,MAAM,EAAE,CACN;AACE,kBAAA,IAAI,EAAE,WADR;AAEE,kBAAA,QAAQ,EAAE,CACR;AACE,oBAAA,KAAK,EAAE,GADT;AAEE,oBAAA,IAAI,EAAE,cAFR;AAGE,oBAAA,KAAK,EAAE,cAHT;AAIE,oBAAA,WAAW,EAAE;AAJf,mBADQ;AAFZ,iBADM;AAFV,eADI;AADqC,aA7C2C;;AAAA,iBAkEpF,OAlEoF;AAAA;AAAA;AAAA;;AAAA,6CAmE/E,WAnE+E;;AAAA;AAAA,kBAsEpF,UAAU,KAAK,MAtEqE;AAAA;AAAA;AAAA;;AAAA,6CAuE/E,UAvE+E;;AAAA;AAAA,kBA0EpF,UAAU,KAAK,MA1EqE;AAAA;AAAA;AAAA;;AAAA,6CA2E/E,UA3E+E;;AAAA;AAAA,6CA6EjF;AACL,cAAA,IAAI,EAAE,CACJ;AACE,gBAAA,IAAI,EAAE,IADR;AAEE,gBAAA,MAAM,EAAE,CACN;AACE,kBAAA,IAAI,EAAE,WADR;AAEE,kBAAA,QAAQ,EAAE,CACR;AACE,oBAAA,KAAK,EAAE,EADT;AAEE,oBAAA,IAAI,EAAE,gBAFR;AAGE,oBAAA,KAAK,EAAE;AAHT,mBADQ;AAFZ,iBADM;AAFV,eADI;AADD,aA7EiF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,EAAb;AAAA,CAAtE","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const defaultFormSchemaService = (args) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a;\n    const { targetType } = args;\n    const isGroup = (_a = args.targetData) === null || _a === void 0 ? void 0 : _a.isGroup;\n    const groupSchema = {\n        tabs: [\n            {\n                name: '设置',\n                groups: [\n                    {\n                        name: 'groupName',\n                        controls: [\n                            {\n                                label: '分组名',\n                                name: 'group-service',\n                                shape: 'group-service',\n                                placeholder: '分组名称',\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    };\n    const nodeSchema = {\n        tabs: [\n            {\n                name: '设置',\n                groups: [\n                    {\n                        name: 'groupName',\n                        controls: [\n                            {\n                                label: '节点名',\n                                name: 'node-service',\n                                shape: 'node-service',\n                                placeholder: '节点名称',\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    };\n    const edgeSchema = {\n        tabs: [\n            {\n                name: '设置',\n                groups: [\n                    {\n                        name: 'groupName',\n                        controls: [\n                            {\n                                label: '边',\n                                name: 'edge-service',\n                                shape: 'edge-service',\n                                placeholder: '边名称',\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    };\n    if (isGroup) {\n        return groupSchema;\n    }\n    if (targetType === 'node') {\n        return nodeSchema;\n    }\n    if (targetType === 'edge') {\n        return edgeSchema;\n    }\n    return {\n        tabs: [\n            {\n                name: '设置',\n                groups: [\n                    {\n                        name: 'groupName',\n                        controls: [\n                            {\n                                label: '',\n                                name: 'canvas-service',\n                                shape: 'canvas-service',\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    };\n});\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}