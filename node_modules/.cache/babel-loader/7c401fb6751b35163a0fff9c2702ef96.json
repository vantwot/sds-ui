{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Base } from './base';\nexport var KnobManager = /*#__PURE__*/function (_Base) {\n  _inherits(KnobManager, _Base);\n\n  var _super = _createSuper(KnobManager);\n\n  function KnobManager() {\n    var _this;\n\n    _classCallCheck(this, KnobManager);\n\n    _this = _super.apply(this, arguments);\n    _this.widgets = new Map();\n    return _this;\n  }\n\n  _createClass(KnobManager, [{\n    key: \"isSelectionEnabled\",\n    get: function get() {\n      return this.options.selecting.enabled === true;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.startListening();\n    }\n  }, {\n    key: \"startListening\",\n    value: function startListening() {\n      this.graph.on('node:mouseup', this.onNodeMouseUp, this);\n      this.graph.on('node:selected', this.onNodeSelected, this);\n      this.graph.on('node:unselected', this.onNodeUnSelected, this);\n    }\n  }, {\n    key: \"stopListening\",\n    value: function stopListening() {\n      this.graph.off('node:mouseup', this.onNodeMouseUp, this);\n      this.graph.off('node:selected', this.onNodeSelected, this);\n      this.graph.off('node:unselected', this.onNodeUnSelected, this);\n    }\n  }, {\n    key: \"onNodeMouseUp\",\n    value: function onNodeMouseUp(_ref) {\n      var node = _ref.node;\n\n      if (!this.isSelectionEnabled) {\n        var widgets = this.graph.hook.createKnob(node, {\n          clearAll: true\n        });\n\n        if (widgets) {\n          this.widgets.set(node, widgets);\n        }\n      }\n    }\n  }, {\n    key: \"onNodeSelected\",\n    value: function onNodeSelected(_ref2) {\n      var node = _ref2.node;\n\n      if (this.isSelectionEnabled) {\n        var widgets = this.graph.hook.createKnob(node, {\n          clearAll: false\n        });\n\n        if (widgets) {\n          this.widgets.set(node, widgets);\n        }\n      }\n    }\n  }, {\n    key: \"onNodeUnSelected\",\n    value: function onNodeUnSelected(_ref3) {\n      var node = _ref3.node;\n\n      if (this.isSelectionEnabled) {\n        var widgets = this.widgets.get(node);\n\n        if (widgets) {\n          widgets.forEach(function (widget) {\n            return widget.dispose();\n          });\n        }\n\n        this.widgets.delete(node);\n      }\n    }\n  }]);\n\n  return KnobManager;\n}(Base);","map":{"version":3,"sources":["../../src/graph/knob.ts"],"names":[],"mappings":";;;;AAEA,SAAS,IAAT,QAAqB,QAArB;AAGA,WAAa,WAAb;AAAA;;AAAA;;AAAA,yBAAA;AAAA;;AAAA;;;AACY,UAAA,OAAA,GAA6B,IAAI,GAAJ,EAA7B;AADZ;AAkDC;;AAlDD;AAAA;AAAA,SAGE,eAAgC;AAC9B,aAAO,KAAK,OAAL,CAAa,SAAb,CAAuB,OAAvB,KAAmC,IAA1C;AACD;AALH;AAAA;AAAA,WAOY,gBAAI;AACZ,WAAK,cAAL;AACD;AATH;AAAA;AAAA,WAWY,0BAAc;AACtB,WAAK,KAAL,CAAW,EAAX,CAAc,cAAd,EAA8B,KAAK,aAAnC,EAAkD,IAAlD;AACA,WAAK,KAAL,CAAW,EAAX,CAAc,eAAd,EAA+B,KAAK,cAApC,EAAoD,IAApD;AACA,WAAK,KAAL,CAAW,EAAX,CAAc,iBAAd,EAAiC,KAAK,gBAAtC,EAAwD,IAAxD;AACD;AAfH;AAAA;AAAA,WAiBY,yBAAa;AACrB,WAAK,KAAL,CAAW,GAAX,CAAe,cAAf,EAA+B,KAAK,aAApC,EAAmD,IAAnD;AACA,WAAK,KAAL,CAAW,GAAX,CAAe,eAAf,EAAgC,KAAK,cAArC,EAAqD,IAArD;AACA,WAAK,KAAL,CAAW,GAAX,CAAe,iBAAf,EAAkC,KAAK,gBAAvC,EAAyD,IAAzD;AACD;AArBH;AAAA;AAAA,WAuBY,6BAAiD;AAAA,UAAjC,IAAiC,QAAjC,IAAiC;;AACzD,UAAI,CAAC,KAAK,kBAAV,EAA8B;AAC5B,YAAM,OAAO,GAAG,KAAK,KAAL,CAAW,IAAX,CAAgB,UAAhB,CAA2B,IAA3B,EAAiC;AAAE,UAAA,QAAQ,EAAE;AAAZ,SAAjC,CAAhB;;AACA,YAAI,OAAJ,EAAa;AACX,eAAK,OAAL,CAAa,GAAb,CAAiB,IAAjB,EAAuB,OAAvB;AACD;AACF;AACF;AA9BH;AAAA;AAAA,WAgCY,+BAAmD;AAAA,UAAlC,IAAkC,SAAlC,IAAkC;;AAC3D,UAAI,KAAK,kBAAT,EAA6B;AAC3B,YAAM,OAAO,GAAG,KAAK,KAAL,CAAW,IAAX,CAAgB,UAAhB,CAA2B,IAA3B,EAAiC;AAAE,UAAA,QAAQ,EAAE;AAAZ,SAAjC,CAAhB;;AACA,YAAI,OAAJ,EAAa;AACX,eAAK,OAAL,CAAa,GAAb,CAAiB,IAAjB,EAAuB,OAAvB;AACD;AACF;AACF;AAvCH;AAAA;AAAA,WAyCY,iCAAuD;AAAA,UAApC,IAAoC,SAApC,IAAoC;;AAC/D,UAAI,KAAK,kBAAT,EAA6B;AAC3B,YAAM,OAAO,GAAG,KAAK,OAAL,CAAa,GAAb,CAAiB,IAAjB,CAAhB;;AACA,YAAI,OAAJ,EAAa;AACX,UAAA,OAAO,CAAC,OAAR,CAAgB,UAAC,MAAD;AAAA,mBAAY,MAAM,CAAC,OAAP,EAAZ;AAAA,WAAhB;AACD;;AACD,aAAK,OAAL,CAAa,MAAb,CAAoB,IAApB;AACD;AACF;AAjDH;;AAAA;AAAA,EAAiC,IAAjC","sourceRoot":"","sourcesContent":["import { Base } from './base';\nexport class KnobManager extends Base {\n    constructor() {\n        super(...arguments);\n        this.widgets = new Map();\n    }\n    get isSelectionEnabled() {\n        return this.options.selecting.enabled === true;\n    }\n    init() {\n        this.startListening();\n    }\n    startListening() {\n        this.graph.on('node:mouseup', this.onNodeMouseUp, this);\n        this.graph.on('node:selected', this.onNodeSelected, this);\n        this.graph.on('node:unselected', this.onNodeUnSelected, this);\n    }\n    stopListening() {\n        this.graph.off('node:mouseup', this.onNodeMouseUp, this);\n        this.graph.off('node:selected', this.onNodeSelected, this);\n        this.graph.off('node:unselected', this.onNodeUnSelected, this);\n    }\n    onNodeMouseUp({ node }) {\n        if (!this.isSelectionEnabled) {\n            const widgets = this.graph.hook.createKnob(node, { clearAll: true });\n            if (widgets) {\n                this.widgets.set(node, widgets);\n            }\n        }\n    }\n    onNodeSelected({ node }) {\n        if (this.isSelectionEnabled) {\n            const widgets = this.graph.hook.createKnob(node, { clearAll: false });\n            if (widgets) {\n                this.widgets.set(node, widgets);\n            }\n        }\n    }\n    onNodeUnSelected({ node }) {\n        if (this.isSelectionEnabled) {\n            const widgets = this.widgets.get(node);\n            if (widgets) {\n                widgets.forEach((widget) => widget.dispose());\n            }\n            this.widgets.delete(node);\n        }\n    }\n}\n//# sourceMappingURL=knob.js.map"]},"metadata":{},"sourceType":"module"}