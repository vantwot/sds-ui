{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { ModifierKey } from '../types';\nimport { Base } from './base';\nexport var SelectionManager = /*#__PURE__*/function (_Base) {\n  _inherits(SelectionManager, _Base);\n\n  var _super = _createSuper(SelectionManager);\n\n  function SelectionManager() {\n    var _this;\n\n    _classCallCheck(this, SelectionManager);\n\n    _this = _super.apply(this, arguments);\n    _this.movedMap = new WeakMap();\n    _this.unselectMap = new WeakMap();\n    return _this;\n  }\n\n  _createClass(SelectionManager, [{\n    key: \"widgetOptions\",\n    get: function get() {\n      return this.options.selecting;\n    }\n  }, {\n    key: \"rubberbandDisabled\",\n    get: function get() {\n      return this.widgetOptions.enabled !== true || this.widgetOptions.rubberband !== true;\n    }\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.widgetOptions.enabled !== true;\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.widget.length;\n    }\n  }, {\n    key: \"cells\",\n    get: function get() {\n      return this.widget.cells;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.widget = this.graph.hook.createSelection();\n      this.startListening();\n    }\n  }, {\n    key: \"startListening\",\n    value: function startListening() {\n      this.graph.on('blank:mousedown', this.onBlankMouseDown, this);\n      this.graph.on('blank:click', this.onBlankClick, this);\n      this.graph.on('cell:mousemove', this.onCellMouseMove, this);\n      this.graph.on('cell:mouseup', this.onCellMouseUp, this);\n      this.widget.on('box:mousedown', this.onBoxMouseDown, this);\n    }\n  }, {\n    key: \"stopListening\",\n    value: function stopListening() {\n      this.graph.off('blank:mousedown', this.onBlankMouseDown, this);\n      this.graph.off('blank:click', this.onBlankClick, this);\n      this.graph.off('cell:mousemove', this.onCellMouseMove, this);\n      this.graph.off('cell:mouseup', this.onCellMouseUp, this);\n      this.widget.off('box:mousedown', this.onBoxMouseDown, this);\n    }\n  }, {\n    key: \"onBlankMouseDown\",\n    value: function onBlankMouseDown(_ref) {\n      var e = _ref.e;\n\n      if (this.allowRubberband(e, true) || this.allowRubberband(e) && !this.graph.scroller.allowPanning(e, true) && !this.graph.panning.allowPanning(e, true)) {\n        this.startRubberband(e);\n      }\n    }\n  }, {\n    key: \"onBlankClick\",\n    value: function onBlankClick() {\n      this.clean();\n    }\n  }, {\n    key: \"allowRubberband\",\n    value: function allowRubberband(e, strict) {\n      return !this.rubberbandDisabled && ModifierKey.isMatch(e, this.widgetOptions.modifiers, strict) && this.graph.hook.allowRubberband(e);\n    }\n  }, {\n    key: \"onCellMouseMove\",\n    value: function onCellMouseMove(_ref2) {\n      var cell = _ref2.cell;\n      this.movedMap.set(cell, true);\n    }\n  }, {\n    key: \"onCellMouseUp\",\n    value: function onCellMouseUp(_ref3) {\n      var e = _ref3.e,\n          cell = _ref3.cell;\n      var options = this.widgetOptions;\n      var disabled = this.disabled;\n\n      if (!disabled && this.movedMap.has(cell)) {\n        disabled = options.selectCellOnMoved === false;\n\n        if (!disabled) {\n          disabled = options.selectNodeOnMoved === false && cell.isNode();\n        }\n\n        if (!disabled) {\n          disabled = options.selectEdgeOnMoved === false && cell.isEdge();\n        }\n      }\n\n      if (!disabled) {\n        if (options.multiple === false || !e.ctrlKey && !e.metaKey) {\n          this.reset(cell);\n        } else if (this.unselectMap.has(cell)) {\n          this.unselectMap.delete(cell);\n        } else if (this.isSelected(cell)) {\n          this.unselect(cell);\n        } else {\n          this.select(cell);\n        }\n      }\n\n      this.movedMap.delete(cell);\n    }\n  }, {\n    key: \"onBoxMouseDown\",\n    value: function onBoxMouseDown(_ref4) {\n      var e = _ref4.e,\n          cell = _ref4.cell;\n\n      if (!this.disabled) {\n        if (this.widgetOptions.multiple !== false && (e.ctrlKey || e.metaKey)) {\n          this.unselect(cell);\n          this.unselectMap.set(cell, true);\n        }\n      }\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.length <= 0;\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected(cell) {\n      return this.widget.isSelected(cell);\n    }\n  }, {\n    key: \"getCells\",\n    value: function getCells(cells) {\n      var _this2 = this;\n\n      return (Array.isArray(cells) ? cells : [cells]).map(function (cell) {\n        return typeof cell === 'string' ? _this2.graph.getCellById(cell) : cell;\n      }).filter(function (cell) {\n        return cell != null;\n      });\n    }\n  }, {\n    key: \"select\",\n    value: function select(cells) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var selected = this.getCells(cells);\n\n      if (selected.length) {\n        if (this.isMultiple()) {\n          this.widget.select(selected, options);\n        } else {\n          this.reset(selected.slice(0, 1), options);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"unselect\",\n    value: function unselect(cells) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.widget.unselect(this.getCells(cells), options);\n      return this;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(cells) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      this.widget.reset(cells ? this.getCells(cells) : [], options);\n      return this;\n    }\n  }, {\n    key: \"clean\",\n    value: function clean() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.widget.clean(options);\n      return this;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      if (this.disabled) {\n        this.widgetOptions.enabled = true;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      if (!this.disabled) {\n        this.widgetOptions.enabled = false;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"startRubberband\",\n    value: function startRubberband(e) {\n      if (!this.rubberbandDisabled) {\n        this.widget.startSelecting(e);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"enableRubberband\",\n    value: function enableRubberband() {\n      if (this.rubberbandDisabled) {\n        this.widgetOptions.rubberband = true; // if (\n        //   ModifierKey.equals(\n        //     this.graph.options.scroller.modifiers,\n        //     this.graph.options.selecting.modifiers,\n        //   )\n        // ) {\n        //   this.graph.scroller.disablePanning()\n        // }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"disableRubberband\",\n    value: function disableRubberband() {\n      if (!this.rubberbandDisabled) {\n        this.widgetOptions.rubberband = false;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"isMultiple\",\n    value: function isMultiple() {\n      return this.widgetOptions.multiple !== false;\n    }\n  }, {\n    key: \"enableMultiple\",\n    value: function enableMultiple() {\n      this.widgetOptions.multiple = true;\n      return this;\n    }\n  }, {\n    key: \"disableMultiple\",\n    value: function disableMultiple() {\n      this.widgetOptions.multiple = false;\n      return this;\n    }\n  }, {\n    key: \"setModifiers\",\n    value: function setModifiers(modifiers) {\n      this.widgetOptions.modifiers = modifiers;\n      return this;\n    }\n  }, {\n    key: \"setContent\",\n    value: function setContent(content) {\n      this.widget.setContent(content);\n      return this;\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(filter) {\n      this.widget.setFilter(filter);\n      return this;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.stopListening();\n      this.widget.dispose();\n    }\n  }]);\n\n  return SelectionManager;\n}(Base);\n\n__decorate([Base.dispose()], SelectionManager.prototype, \"dispose\", null);","map":{"version":3,"sources":["../../src/graph/selection.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ModifierKey } from '../types';\nimport { Base } from './base';\nexport class SelectionManager extends Base {\n    constructor() {\n        super(...arguments);\n        this.movedMap = new WeakMap();\n        this.unselectMap = new WeakMap();\n    }\n    get widgetOptions() {\n        return this.options.selecting;\n    }\n    get rubberbandDisabled() {\n        return (this.widgetOptions.enabled !== true ||\n            this.widgetOptions.rubberband !== true);\n    }\n    get disabled() {\n        return this.widgetOptions.enabled !== true;\n    }\n    get length() {\n        return this.widget.length;\n    }\n    get cells() {\n        return this.widget.cells;\n    }\n    init() {\n        this.widget = this.graph.hook.createSelection();\n        this.startListening();\n    }\n    startListening() {\n        this.graph.on('blank:mousedown', this.onBlankMouseDown, this);\n        this.graph.on('blank:click', this.onBlankClick, this);\n        this.graph.on('cell:mousemove', this.onCellMouseMove, this);\n        this.graph.on('cell:mouseup', this.onCellMouseUp, this);\n        this.widget.on('box:mousedown', this.onBoxMouseDown, this);\n    }\n    stopListening() {\n        this.graph.off('blank:mousedown', this.onBlankMouseDown, this);\n        this.graph.off('blank:click', this.onBlankClick, this);\n        this.graph.off('cell:mousemove', this.onCellMouseMove, this);\n        this.graph.off('cell:mouseup', this.onCellMouseUp, this);\n        this.widget.off('box:mousedown', this.onBoxMouseDown, this);\n    }\n    onBlankMouseDown({ e }) {\n        if (this.allowRubberband(e, true) ||\n            (this.allowRubberband(e) &&\n                !this.graph.scroller.allowPanning(e, true) &&\n                !this.graph.panning.allowPanning(e, true))) {\n            this.startRubberband(e);\n        }\n    }\n    onBlankClick() {\n        this.clean();\n    }\n    allowRubberband(e, strict) {\n        return (!this.rubberbandDisabled &&\n            ModifierKey.isMatch(e, this.widgetOptions.modifiers, strict) &&\n            this.graph.hook.allowRubberband(e));\n    }\n    onCellMouseMove({ cell }) {\n        this.movedMap.set(cell, true);\n    }\n    onCellMouseUp({ e, cell }) {\n        const options = this.widgetOptions;\n        let disabled = this.disabled;\n        if (!disabled && this.movedMap.has(cell)) {\n            disabled = options.selectCellOnMoved === false;\n            if (!disabled) {\n                disabled = options.selectNodeOnMoved === false && cell.isNode();\n            }\n            if (!disabled) {\n                disabled = options.selectEdgeOnMoved === false && cell.isEdge();\n            }\n        }\n        if (!disabled) {\n            if (options.multiple === false || (!e.ctrlKey && !e.metaKey)) {\n                this.reset(cell);\n            }\n            else if (this.unselectMap.has(cell)) {\n                this.unselectMap.delete(cell);\n            }\n            else if (this.isSelected(cell)) {\n                this.unselect(cell);\n            }\n            else {\n                this.select(cell);\n            }\n        }\n        this.movedMap.delete(cell);\n    }\n    onBoxMouseDown({ e, cell }) {\n        if (!this.disabled) {\n            if (this.widgetOptions.multiple !== false && (e.ctrlKey || e.metaKey)) {\n                this.unselect(cell);\n                this.unselectMap.set(cell, true);\n            }\n        }\n    }\n    isEmpty() {\n        return this.length <= 0;\n    }\n    isSelected(cell) {\n        return this.widget.isSelected(cell);\n    }\n    getCells(cells) {\n        return (Array.isArray(cells) ? cells : [cells])\n            .map((cell) => typeof cell === 'string' ? this.graph.getCellById(cell) : cell)\n            .filter((cell) => cell != null);\n    }\n    select(cells, options = {}) {\n        const selected = this.getCells(cells);\n        if (selected.length) {\n            if (this.isMultiple()) {\n                this.widget.select(selected, options);\n            }\n            else {\n                this.reset(selected.slice(0, 1), options);\n            }\n        }\n        return this;\n    }\n    unselect(cells, options = {}) {\n        this.widget.unselect(this.getCells(cells), options);\n        return this;\n    }\n    reset(cells, options = {}) {\n        this.widget.reset(cells ? this.getCells(cells) : [], options);\n        return this;\n    }\n    clean(options = {}) {\n        this.widget.clean(options);\n        return this;\n    }\n    enable() {\n        if (this.disabled) {\n            this.widgetOptions.enabled = true;\n        }\n        return this;\n    }\n    disable() {\n        if (!this.disabled) {\n            this.widgetOptions.enabled = false;\n        }\n        return this;\n    }\n    startRubberband(e) {\n        if (!this.rubberbandDisabled) {\n            this.widget.startSelecting(e);\n        }\n        return this;\n    }\n    enableRubberband() {\n        if (this.rubberbandDisabled) {\n            this.widgetOptions.rubberband = true;\n            // if (\n            //   ModifierKey.equals(\n            //     this.graph.options.scroller.modifiers,\n            //     this.graph.options.selecting.modifiers,\n            //   )\n            // ) {\n            //   this.graph.scroller.disablePanning()\n            // }\n        }\n        return this;\n    }\n    disableRubberband() {\n        if (!this.rubberbandDisabled) {\n            this.widgetOptions.rubberband = false;\n        }\n        return this;\n    }\n    isMultiple() {\n        return this.widgetOptions.multiple !== false;\n    }\n    enableMultiple() {\n        this.widgetOptions.multiple = true;\n        return this;\n    }\n    disableMultiple() {\n        this.widgetOptions.multiple = false;\n        return this;\n    }\n    setModifiers(modifiers) {\n        this.widgetOptions.modifiers = modifiers;\n        return this;\n    }\n    setContent(content) {\n        this.widget.setContent(content);\n        return this;\n    }\n    setFilter(filter) {\n        this.widget.setFilter(filter);\n        return this;\n    }\n    dispose() {\n        this.stopListening();\n        this.widget.dispose();\n    }\n}\n__decorate([\n    Base.dispose()\n], SelectionManager.prototype, \"dispose\", null);\n//# sourceMappingURL=selection.js.map"]},"metadata":{},"sourceType":"module"}