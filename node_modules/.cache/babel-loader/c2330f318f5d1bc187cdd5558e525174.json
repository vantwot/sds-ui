{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowEdgeCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nexport var NsAddEdge;\n\n(function (NsAddEdge) {\n  /** Command: 用于注册named factory */\n  NsAddEdge.command = XFlowEdgeCommands.ADD_EDGE;\n  /** hookName */\n\n  NsAddEdge.hookKey = 'addEdge';\n  /** edge id 类型 */\n\n  NsAddEdge.createEdgeId = function (edge) {\n    return \"\".concat(edge.source, \":\").concat(edge.sourcePortId, \"-\").concat(edge.target, \":\").concat(edge.targetPortId);\n  };\n})(NsAddEdge || (NsAddEdge = {}));\n\nvar AddEdgeCommand =\n/*#__PURE__*/\n\n/** 创建节点命令 */\nfunction () {\n  function AddEdgeCommand() {\n    var _this = this;\n\n    _classCallCheck(this, AddEdgeCommand);\n\n    /** 处理edgeConfig的兜底逻辑 */\n    this.processEdgeConfig = function (args, edge) {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _args$createIdService, createIdService;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (edge.id) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _args$createIdService = args.createIdService, createIdService = _args$createIdService === void 0 ? NsAddEdge.createEdgeId : _args$createIdService;\n                _context.next = 4;\n                return createIdService(edge);\n\n              case 4:\n                edge.id = _context.sent;\n\n              case 5:\n                return _context.abrupt(\"return\", edge);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    };\n    /** 执行Cmd */\n\n\n    this.execute = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var _this$ctx$getArgs, args, runtimeHook, hooks, result;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this$ctx$getArgs = this.ctx.getArgs(), args = _this$ctx$getArgs.args, runtimeHook = _this$ctx$getArgs.hooks;\n                hooks = this.ctx.getHooks();\n                _context3.next = 4;\n                return hooks.addEdge.call(\n                /** 执行 hooks pipeline处理args */\n                args,\n                /** 执行 callback */\n                function (handlerArgs) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                    var cellFactory, createEdgeService, commandService, edgeConfig, graph, edgeCell, cell, undo;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            cellFactory = handlerArgs.cellFactory, createEdgeService = handlerArgs.createEdgeService, commandService = handlerArgs.commandService;\n\n                            if (!createEdgeService) {\n                              _context2.next = 7;\n                              break;\n                            }\n\n                            _context2.next = 4;\n                            return createEdgeService(handlerArgs);\n\n                          case 4:\n                            _context2.t0 = _context2.sent;\n                            _context2.next = 8;\n                            break;\n\n                          case 7:\n                            _context2.t0 = handlerArgs.edgeConfig;\n\n                          case 8:\n                            edgeConfig = _context2.t0;\n                            _context2.next = 11;\n                            return this.ctx.getX6Graph();\n\n                          case 11:\n                            graph = _context2.sent;\n                            _context2.next = 14;\n                            return this.processEdgeConfig(handlerArgs, edgeConfig);\n\n                          case 14:\n                            if (!cellFactory) {\n                              _context2.next = 21;\n                              break;\n                            }\n\n                            _context2.next = 17;\n                            return cellFactory(edgeConfig, this);\n\n                          case 17:\n                            cell = _context2.sent;\n                            edgeCell = graph.addEdge(cell);\n                            _context2.next = 22;\n                            break;\n\n                          case 21:\n                            edgeCell = graph.addEdge(Object.assign(Object.assign({}, edgeConfig), {\n                              /** 由于X6的实现是React节点挂在label上的, 所以必须要给label设置值 */\n                              label: (edgeConfig === null || edgeConfig === void 0 ? void 0 : edgeConfig.label) || edgeConfig,\n                              data: Object.assign({}, edgeConfig)\n                            }));\n\n                          case 22:\n                            /** 创建 undo */\n                            undo = Disposable.create(function () {\n                              commandService.executeCommand(XFlowEdgeCommands.DEL_EDGE.id, {\n                                x6Edge: edgeCell\n                              });\n                            });\n                            /** add undo */\n\n                            /** add undo */\n                            this.ctx.addUndo(undo);\n                            return _context2.abrupt(\"return\", {\n                              edgeConfig: edgeConfig,\n                              edgeCell: edgeCell\n                            });\n\n                          case 25:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2, this);\n                  }));\n                }, runtimeHook);\n\n              case 4:\n                result = _context3.sent;\n                this.ctx.setResult(result);\n                return _context3.abrupt(\"return\", this);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    };\n    /** undo cmd */\n\n\n    this.undo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.ctx.undo();\n                return _context4.abrupt(\"return\", this);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    };\n    /** redo cmd */\n\n\n    this.redo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this.isUndoable) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                _context5.next = 3;\n                return this.execute();\n\n              case 3:\n                return _context5.abrupt(\"return\", this);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n    };\n  }\n\n  _createClass(AddEdgeCommand, [{\n    key: \"init\",\n    value: function init() {\n      this.ctx = this.contextProvider();\n    }\n  }, {\n    key: \"isUndoable\",\n    value: function isUndoable() {\n      return this.ctx.isUndoable();\n    }\n  }]);\n\n  return AddEdgeCommand;\n}();\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], AddEdgeCommand.prototype, \"contextProvider\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], AddEdgeCommand.prototype, \"init\", null);\n\nAddEdgeCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsAddEdge.command.id\n  }\n})\n/** 创建节点命令 */\n], AddEdgeCommand);\nexport { AddEdgeCommand };","map":{"version":3,"sources":["../../../src/command-contributions/edge/edge-add.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowEdgeCommands } from '../constant';\nimport { Disposable } from '../../common/disposable';\nexport var NsAddEdge;\n(function (NsAddEdge) {\n    /** Command: 用于注册named factory */\n    NsAddEdge.command = XFlowEdgeCommands.ADD_EDGE;\n    /** hookName */\n    NsAddEdge.hookKey = 'addEdge';\n    /** edge id 类型 */\n    NsAddEdge.createEdgeId = (edge) => {\n        return `${edge.source}:${edge.sourcePortId}-${edge.target}:${edge.targetPortId}`;\n    };\n})(NsAddEdge || (NsAddEdge = {}));\nlet AddEdgeCommand = \n/** 创建节点命令 */\nclass AddEdgeCommand {\n    constructor() {\n        /** 处理edgeConfig的兜底逻辑 */\n        this.processEdgeConfig = (args, edge) => __awaiter(this, void 0, void 0, function* () {\n            /** 处理edgeConfig没有返回id的问题 */\n            if (!edge.id) {\n                const { createIdService = NsAddEdge.createEdgeId } = args;\n                edge.id = yield createIdService(edge);\n            }\n            return edge;\n        });\n        /** 执行Cmd */\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const { args, hooks: runtimeHook } = this.ctx.getArgs();\n            const hooks = this.ctx.getHooks();\n            const result = yield hooks.addEdge.call(\n            /** 执行 hooks pipeline处理args */\n            args, \n            /** 执行 callback */\n            (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                const { cellFactory, createEdgeService, commandService } = handlerArgs;\n                const edgeConfig = createEdgeService\n                    ? yield createEdgeService(handlerArgs)\n                    : handlerArgs.edgeConfig;\n                const graph = yield this.ctx.getX6Graph();\n                yield this.processEdgeConfig(handlerArgs, edgeConfig);\n                let edgeCell;\n                if (cellFactory) {\n                    const cell = yield cellFactory(edgeConfig, this);\n                    edgeCell = graph.addEdge(cell);\n                }\n                else {\n                    edgeCell = graph.addEdge(Object.assign(Object.assign({}, edgeConfig), { \n                        /** 由于X6的实现是React节点挂在label上的, 所以必须要给label设置值 */\n                        label: (edgeConfig === null || edgeConfig === void 0 ? void 0 : edgeConfig.label) || edgeConfig, data: Object.assign({}, edgeConfig) }));\n                }\n                /** 创建 undo */\n                const undo = Disposable.create(() => {\n                    commandService.executeCommand(XFlowEdgeCommands.DEL_EDGE.id, {\n                        x6Edge: edgeCell,\n                    });\n                });\n                /** add undo */\n                this.ctx.addUndo(undo);\n                return { edgeConfig: edgeConfig, edgeCell };\n            }), runtimeHook);\n            this.ctx.setResult(result);\n            return this;\n        });\n        /** undo cmd */\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            this.ctx.undo();\n            return this;\n        });\n        /** redo cmd */\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.isUndoable) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    init() {\n        this.ctx = this.contextProvider();\n    }\n    isUndoable() {\n        return this.ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], AddEdgeCommand.prototype, \"contextProvider\", void 0);\n__decorate([\n    postConstruct(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], AddEdgeCommand.prototype, \"init\", null);\nAddEdgeCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsAddEdge.command.id },\n    })\n    /** 创建节点命令 */\n], AddEdgeCommand);\nexport { AddEdgeCommand };\n//# sourceMappingURL=edge-add.js.map"]},"metadata":{},"sourceType":"module"}