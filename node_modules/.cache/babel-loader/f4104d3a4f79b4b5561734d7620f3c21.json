{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _dec, _class;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { isMini } from '@antv/l7-utils';\nimport { injectable } from 'inversify';\nimport regl from 'l7regl';\nimport 'reflect-metadata';\nimport ReglAttribute from './ReglAttribute';\nimport ReglBuffer from './ReglBuffer';\nimport ReglElements from './ReglElements';\nimport ReglFramebuffer from './ReglFramebuffer';\nimport ReglModel from './ReglModel';\nimport ReglTexture2D from './ReglTexture2D';\nvar ReglRendererService = (_dec = injectable(), _dec(_class = function () {\n  function ReglRendererService() {\n    var _this = this;\n\n    _classCallCheck(this, ReglRendererService);\n\n    _defineProperty(this, \"extensionObject\", void 0);\n\n    _defineProperty(this, \"gl\", void 0);\n\n    _defineProperty(this, \"$container\", void 0);\n\n    _defineProperty(this, \"canvas\", void 0);\n\n    _defineProperty(this, \"width\", void 0);\n\n    _defineProperty(this, \"height\", void 0);\n\n    _defineProperty(this, \"isDirty\", void 0);\n\n    _defineProperty(this, \"createModel\", function (options) {\n      return new ReglModel(_this.gl, options);\n    });\n\n    _defineProperty(this, \"createAttribute\", function (options) {\n      return new ReglAttribute(_this.gl, options);\n    });\n\n    _defineProperty(this, \"createBuffer\", function (options) {\n      return new ReglBuffer(_this.gl, options);\n    });\n\n    _defineProperty(this, \"createElements\", function (options) {\n      return new ReglElements(_this.gl, options);\n    });\n\n    _defineProperty(this, \"createTexture2D\", function (options) {\n      return new ReglTexture2D(_this.gl, options);\n    });\n\n    _defineProperty(this, \"createFramebuffer\", function (options) {\n      return new ReglFramebuffer(_this.gl, options);\n    });\n\n    _defineProperty(this, \"useFramebuffer\", function (framebuffer, drawCommands) {\n      _this.gl({\n        framebuffer: framebuffer ? framebuffer.get() : null\n      })(drawCommands);\n    });\n\n    _defineProperty(this, \"clear\", function (options) {\n      var color = options.color,\n          depth = options.depth,\n          stencil = options.stencil,\n          _options$framebuffer = options.framebuffer,\n          framebuffer = _options$framebuffer === void 0 ? null : _options$framebuffer;\n      var reglClearOptions = {\n        color: color,\n        depth: depth,\n        stencil: stencil\n      };\n      reglClearOptions.framebuffer = framebuffer === null ? framebuffer : framebuffer.get();\n\n      _this.gl.clear(reglClearOptions);\n    });\n\n    _defineProperty(this, \"viewport\", function (_ref) {\n      var x = _ref.x,\n          y = _ref.y,\n          width = _ref.width,\n          height = _ref.height;\n\n      _this.gl._gl.viewport(x, y, width, height);\n\n      _this.width = width;\n      _this.height = height;\n\n      _this.gl._refresh();\n    });\n\n    _defineProperty(this, \"readPixels\", function (options) {\n      var framebuffer = options.framebuffer,\n          x = options.x,\n          y = options.y,\n          width = options.width,\n          height = options.height;\n      var readPixelsOptions = {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n\n      if (framebuffer) {\n        readPixelsOptions.framebuffer = framebuffer.get();\n      }\n\n      return _this.gl.read(readPixelsOptions);\n    });\n\n    _defineProperty(this, \"getViewportSize\", function () {\n      return {\n        width: _this.gl._gl.drawingBufferWidth,\n        height: _this.gl._gl.drawingBufferHeight\n      };\n    });\n\n    _defineProperty(this, \"getContainer\", function () {\n      if (isMini) {\n        return _this.canvas;\n      } else {\n        var _this$canvas;\n\n        return (_this$canvas = _this.canvas) === null || _this$canvas === void 0 ? void 0 : _this$canvas.parentElement;\n      }\n    });\n\n    _defineProperty(this, \"getCanvas\", function () {\n      return _this.canvas;\n    });\n\n    _defineProperty(this, \"getGLContext\", function () {\n      return _this.gl._gl;\n    });\n\n    _defineProperty(this, \"destroy\", function () {\n      _this.gl.destroy();\n    });\n  }\n\n  _createClass(ReglRendererService, [{\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(canvas, cfg) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.canvas = canvas;\n                _context.next = 3;\n                return new Promise(function (resolve, reject) {\n                  regl({\n                    canvas: _this2.canvas,\n                    attributes: {\n                      alpha: true,\n                      antialias: cfg.antialias,\n                      premultipliedAlpha: true,\n                      preserveDrawingBuffer: cfg.preserveDrawingBuffer\n                    },\n                    extensions: ['OES_element_index_uint', 'OES_standard_derivatives', 'ANGLE_instanced_arrays'],\n                    optionalExtensions: ['oes_texture_float_linear', 'OES_texture_float', 'EXT_texture_filter_anisotropic', 'EXT_blend_minmax', 'WEBGL_depth_texture'],\n                    profile: true,\n                    onDone: function onDone(err, r) {\n                      if (err || !r) {\n                        reject(err);\n                      }\n\n                      resolve(r);\n                    }\n                  });\n                });\n\n              case 3:\n                this.gl = _context.sent;\n                this.extensionObject = {\n                  OES_texture_float: this.testExtension('OES_texture_float')\n                };\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function init(_x, _x2) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"testExtension\",\n    value: function testExtension(name) {\n      return !!this.getGLContext().getExtension(name);\n    }\n  }, {\n    key: \"setState\",\n    value: function setState() {\n      this.gl({\n        cull: {\n          enable: false,\n          face: 'back'\n        },\n        viewport: {\n          x: 0,\n          y: 0,\n          height: this.width,\n          width: this.height\n        },\n        blend: {\n          enable: true,\n          equation: 'add'\n        },\n        framebuffer: null\n      });\n    }\n  }, {\n    key: \"setBaseState\",\n    value: function setBaseState() {\n      this.gl({\n        cull: {\n          enable: false,\n          face: 'back'\n        },\n        viewport: {\n          x: 0,\n          y: 0,\n          height: this.width,\n          width: this.height\n        },\n        blend: {\n          enable: false,\n          equation: 'add'\n        },\n        framebuffer: null\n      });\n\n      this.gl._refresh();\n    }\n  }, {\n    key: \"setCustomLayerDefaults\",\n    value: function setCustomLayerDefaults() {\n      var gl = this.getGLContext();\n      gl.disable(gl.CULL_FACE);\n    }\n  }, {\n    key: \"setDirty\",\n    value: function setDirty(flag) {\n      this.isDirty = flag;\n    }\n  }, {\n    key: \"getDirty\",\n    value: function getDirty() {\n      return this.isDirty;\n    }\n  }]);\n\n  return ReglRendererService;\n}()) || _class);\nexport { ReglRendererService as default };","map":{"version":3,"sources":["../../src/regl/index.ts"],"names":["injectable","ReglRendererService","regl","canvas","attributes","alpha","antialias","cfg","premultipliedAlpha","preserveDrawingBuffer","extensions","optionalExtensions","profile","onDone","err","reject","resolve","OES_texture_float","framebuffer","color","depth","stencil","options","reglClearOptions","x","y","width","height","readPixelsOptions","drawingBufferHeight","cull","enable","face","viewport","blend","equation","gl"],"mappings":"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","sourcesContent":["/**\n * render w/ regl\n * @see https://github.com/regl-project/regl/blob/gh-pages/API.md\n */\nimport {\n  IAttribute,\n  IAttributeInitializationOptions,\n  IBuffer,\n  IBufferInitializationOptions,\n  IClearOptions,\n  IElements,\n  IElementsInitializationOptions,\n  IExtensions,\n  IFramebuffer,\n  IFramebufferInitializationOptions,\n  IModel,\n  IModelInitializationOptions,\n  IReadPixelsOptions,\n  IRenderConfig,\n  IRendererService,\n  ITexture2D,\n  ITexture2DInitializationOptions,\n} from '@antv/l7-core';\nimport { isMini } from '@antv/l7-utils';\nimport { injectable } from 'inversify';\nimport regl from 'l7regl';\nimport 'reflect-metadata';\nimport ReglAttribute from './ReglAttribute';\nimport ReglBuffer from './ReglBuffer';\nimport ReglElements from './ReglElements';\nimport ReglFramebuffer from './ReglFramebuffer';\nimport ReglModel from './ReglModel';\nimport ReglTexture2D from './ReglTexture2D';\n\n/**\n * regl renderer\n */\n@injectable()\nexport default class ReglRendererService implements IRendererService {\n  public extensionObject: IExtensions;\n  private gl: regl.Regl;\n  private $container: HTMLDivElement | null;\n  private canvas: HTMLCanvasElement;\n  private width: number;\n  private height: number;\n  private isDirty: boolean;\n\n  public async init(\n    canvas: HTMLCanvasElement,\n    cfg: IRenderConfig,\n  ): Promise<void> {\n    // this.$container = $container;\n    this.canvas = canvas;\n    // tslint:disable-next-line:typedef\n    this.gl = await new Promise((resolve, reject) => {\n      regl({\n        canvas: this.canvas,\n        attributes: {\n          alpha: true,\n          // use TAA instead of MSAA\n          // @see https://www.khronos.org/registry/webgl/specs/1.0/#5.2.1\n          antialias: cfg.antialias,\n          premultipliedAlpha: true,\n          preserveDrawingBuffer: cfg.preserveDrawingBuffer,\n        },\n        // TODO: use extensions\n        extensions: [\n          'OES_element_index_uint',\n          'OES_standard_derivatives', // wireframe\n          'ANGLE_instanced_arrays', // VSM shadow map\n        ],\n        optionalExtensions: [\n          'oes_texture_float_linear',\n          'OES_texture_float',\n          'EXT_texture_filter_anisotropic',\n          'EXT_blend_minmax',\n          'WEBGL_depth_texture',\n        ],\n        profile: true,\n        onDone: (err: Error | null, r?: regl.Regl | undefined): void => {\n          if (err || !r) {\n            reject(err);\n          }\n          // @ts-ignore\n          resolve(r);\n        },\n      });\n    });\n\n    this.extensionObject = {\n      OES_texture_float: this.testExtension('OES_texture_float'),\n    };\n  }\n\n  public testExtension(name: string) {\n    // OES_texture_float\n    return !!this.getGLContext().getExtension(name);\n  }\n\n  public createModel = (options: IModelInitializationOptions): IModel =>\n    new ReglModel(this.gl, options);\n\n  public createAttribute = (\n    options: IAttributeInitializationOptions,\n  ): IAttribute => new ReglAttribute(this.gl, options);\n\n  public createBuffer = (options: IBufferInitializationOptions): IBuffer =>\n    new ReglBuffer(this.gl, options);\n\n  public createElements = (\n    options: IElementsInitializationOptions,\n  ): IElements => new ReglElements(this.gl, options);\n\n  public createTexture2D = (\n    options: ITexture2DInitializationOptions,\n  ): ITexture2D => new ReglTexture2D(this.gl, options);\n\n  public createFramebuffer = (options: IFramebufferInitializationOptions) =>\n    new ReglFramebuffer(this.gl, options);\n\n  public useFramebuffer = (\n    framebuffer: IFramebuffer | null,\n    drawCommands: () => void,\n  ) => {\n    this.gl({\n      framebuffer: framebuffer ? (framebuffer as ReglFramebuffer).get() : null,\n    })(drawCommands);\n  };\n\n  public clear = (options: IClearOptions) => {\n    // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clear-the-draw-buffer\n    const { color, depth, stencil, framebuffer = null } = options;\n    const reglClearOptions: regl.ClearOptions = {\n      color,\n      depth,\n      stencil,\n    };\n\n    reglClearOptions.framebuffer =\n      framebuffer === null\n        ? framebuffer\n        : (framebuffer as ReglFramebuffer).get();\n\n    this.gl.clear(reglClearOptions);\n  };\n\n  public viewport = ({\n    x,\n    y,\n    width,\n    height,\n  }: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  }) => {\n    // use WebGL context directly\n    // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#unsafe-escape-hatch\n    this.gl._gl.viewport(x, y, width, height);\n    this.width = width;\n    this.height = height;\n    this.gl._refresh();\n  };\n\n  public readPixels = (options: IReadPixelsOptions) => {\n    const { framebuffer, x, y, width, height } = options;\n    const readPixelsOptions: regl.ReadOptions = {\n      x,\n      y,\n      width,\n      height,\n    };\n    if (framebuffer) {\n      readPixelsOptions.framebuffer = (framebuffer as ReglFramebuffer).get();\n    }\n    return this.gl.read(readPixelsOptions);\n  };\n\n  public getViewportSize = () => {\n    return {\n      width: this.gl._gl.drawingBufferWidth,\n      height: this.gl._gl.drawingBufferHeight,\n    };\n  };\n\n  public getContainer = () => {\n    if (isMini) {\n      return this.canvas;\n    } else {\n      return this.canvas?.parentElement;\n    }\n  };\n\n  public getCanvas = () => {\n    // return this.$container?.getElementsByTagName('canvas')[0] || null;\n    return this.canvas;\n  };\n\n  public getGLContext = () => {\n    return this.gl._gl;\n  };\n\n  // TODO: 临时方法\n  public setState() {\n    this.gl({\n      cull: {\n        enable: false,\n        face: 'back',\n      },\n      viewport: {\n        x: 0,\n        y: 0,\n        height: this.width,\n        width: this.height,\n      },\n      blend: {\n        enable: true,\n        equation: 'add',\n      },\n      framebuffer: null,\n    });\n  }\n\n  public setBaseState() {\n    this.gl({\n      cull: {\n        enable: false,\n        face: 'back',\n      },\n      viewport: {\n        x: 0,\n        y: 0,\n        height: this.width,\n        width: this.height,\n      },\n      blend: {\n        enable: false,\n        equation: 'add',\n      },\n      framebuffer: null,\n    });\n    this.gl._refresh();\n  }\n  public setCustomLayerDefaults() {\n    const gl = this.getGLContext();\n    gl.disable(gl.CULL_FACE);\n  }\n\n  public setDirty(flag: boolean): void {\n    this.isDirty = flag;\n  }\n\n  public getDirty(): boolean {\n    return this.isDirty;\n  }\n\n  public destroy = () => {\n    // @see https://github.com/regl-project/regl/blob/gh-pages/API.md#clean-up\n    this.gl.destroy();\n  };\n}\n"]},"metadata":{},"sourceType":"module"}