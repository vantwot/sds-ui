{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/initializerWarningHelper\";\n\nvar _dec, _dec2, _class, _class2, _descriptor;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { TYPES } from '../../../types';\nimport { PassType } from '../IMultiPassRenderer';\nvar MultiPassRenderer = (_dec = injectable(), _dec2 = inject(TYPES.IPostProcessor), _dec(_class = (_class2 = function () {\n  function MultiPassRenderer() {\n    _classCallCheck(this, MultiPassRenderer);\n\n    _defineProperty(this, \"passes\", []);\n\n    _initializerDefineProperty(this, \"postProcessor\", _descriptor, this);\n\n    _defineProperty(this, \"layer\", void 0);\n\n    _defineProperty(this, \"renderFlag\", void 0);\n\n    _defineProperty(this, \"width\", 0);\n\n    _defineProperty(this, \"height\", 0);\n  }\n\n  _createClass(MultiPassRenderer, [{\n    key: \"setLayer\",\n    value: function setLayer(layer) {\n      this.layer = layer;\n    }\n  }, {\n    key: \"setRenderFlag\",\n    value: function setRenderFlag(renderFlag) {\n      this.renderFlag = renderFlag;\n    }\n  }, {\n    key: \"getRenderFlag\",\n    value: function getRenderFlag() {\n      return this.renderFlag;\n    }\n  }, {\n    key: \"getPostProcessor\",\n    value: function getPostProcessor() {\n      return this.postProcessor;\n    }\n  }, {\n    key: \"render\",\n    value: function () {\n      var _render = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n        var _iterator, _step, pass;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _iterator = _createForOfIteratorHelper(this.passes);\n                _context.prev = 1;\n\n                _iterator.s();\n\n              case 3:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 9;\n                  break;\n                }\n\n                pass = _step.value;\n                _context.next = 7;\n                return pass.render(this.layer);\n\n              case 7:\n                _context.next = 3;\n                break;\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n\n                _iterator.e(_context.t0);\n\n              case 14:\n                _context.prev = 14;\n\n                _iterator.f();\n\n                return _context.finish(14);\n\n              case 17:\n                this.layer.renderModels();\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 11, 14, 17]]);\n      }));\n\n      function render() {\n        return _render.apply(this, arguments);\n      }\n\n      return render;\n    }()\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (this.width !== width || this.height !== height) {\n        this.width = width;\n        this.height = height;\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add(pass, config) {\n      if (pass.getType() === PassType.PostProcessing) {\n        this.postProcessor.add(pass, this.layer, config);\n      } else {\n        pass.init(this.layer, config);\n        this.passes.push(pass);\n      }\n    }\n  }, {\n    key: \"insert\",\n    value: function insert(pass, config, index) {\n      pass.init(this.layer, config);\n      this.passes.splice(index, 0, pass);\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.passes.length = 0;\n    }\n  }]);\n\n  return MultiPassRenderer;\n}(), _descriptor = _applyDecoratedDescriptor(_class2.prototype, \"postProcessor\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _class2)) || _class);\nexport { MultiPassRenderer as default };","map":{"version":3,"sources":["../../../../src/services/renderer/passes/MultiPassRenderer.ts"],"names":["injectable","MultiPassRenderer","inject","TYPES","pass","PassType"],"mappings":"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","sourcesContent":["import { inject, injectable } from 'inversify';\nimport 'reflect-metadata';\nimport { TYPES } from '../../../types';\nimport { ILayer } from '../../layer/ILayerService';\nimport {\n  IMultiPassRenderer,\n  IPass,\n  IPostProcessingPass,\n  IPostProcessor,\n  PassType,\n} from '../IMultiPassRenderer';\n\n/**\n * ported from Three.js EffectComposer\n * @example\n * const renderer = new MultiPassRenderer([\n *   new ClearPass(),\n *   new RenderPass({\n *     models: [\n *       new Model(),\n *       new Model(),\n *     ],\n *   }),\n *   new CopyPass({\n *     renderToScreen: true,\n *   }),\n *   new TAAPass(),\n * ]);\n * renderer.render();\n * @see https://yuque.antfin-inc.com/yuqi.pyq/fgetpa/apuvbf#dRM8W\n */\n@injectable()\nexport default class MultiPassRenderer implements IMultiPassRenderer {\n  private passes: Array<IPass<unknown>> = [];\n\n  @inject(TYPES.IPostProcessor)\n  private postProcessor: IPostProcessor;\n\n  private layer: ILayer;\n  private renderFlag: boolean;\n\n  private width: number = 0;\n\n  private height: number = 0;\n\n  public setLayer(layer: ILayer) {\n    this.layer = layer;\n  }\n\n  public setRenderFlag(renderFlag: boolean) {\n    this.renderFlag = renderFlag;\n  }\n\n  public getRenderFlag() {\n    return this.renderFlag;\n  }\n\n  public getPostProcessor() {\n    return this.postProcessor;\n  }\n\n  public async render() {\n    for (const pass of this.passes) {\n      await pass.render(this.layer);\n    }\n    this.layer.renderModels();\n    // await this.postProcessor.render(this.layer);\n  }\n\n  public resize(width: number, height: number) {\n    if (this.width !== width || this.height !== height) {\n      // this.postProcessor.resize(width, height);\n      this.width = width;\n      this.height = height;\n    }\n  }\n\n  public add<T>(pass: IPass<T>, config?: Partial<T>) {\n    if (pass.getType() === PassType.PostProcessing) {\n      this.postProcessor.add<T>(\n        pass as IPostProcessingPass<T>,\n        this.layer,\n        config,\n      );\n    } else {\n      pass.init(this.layer, config);\n      this.passes.push(pass);\n    }\n  }\n\n  public insert<T>(pass: IPass<T>, config: Partial<T>, index: number) {\n    pass.init(this.layer, config);\n    this.passes.splice(index, 0, pass);\n  }\n\n  public destroy() {\n    this.passes.length = 0;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}