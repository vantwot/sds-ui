{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport React from 'react';\nimport { CanvasToolbar as XFlowToolbarPanel } from '@antv/xflow';\nimport { useToolbarConfig } from './util';\nexport var ToolbarPanel = function (props) {\n  var _a = props.layout,\n      layout = _a === void 0 ? 'horizontal' : _a,\n      _b = props.position,\n      position = _b === void 0 ? {\n    top: 0,\n    left: 240,\n    right: 240,\n    bottom: 0\n  } : _b,\n      _c = props.show,\n      show = _c === void 0 ? true : _c,\n      className = props.className,\n      style = props.style;\n  var toolbarConfig = useToolbarConfig(props);\n\n  if (!show) {\n    return null;\n  }\n\n  return React.createElement(XFlowToolbarPanel, {\n    className: className,\n    layout: layout,\n    config: toolbarConfig,\n    style: __assign({\n      borderBottom: '1px solid #ccc'\n    }, style),\n    position: position\n  });\n};\nexport default ToolbarPanel;","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@ant-design/flowchart/es/components/toolbar/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","CanvasToolbar","XFlowToolbarPanel","useToolbarConfig","ToolbarPanel","props","_a","layout","_b","position","top","left","right","bottom","_c","show","className","style","toolbarConfig","createElement","config","borderBottom"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,OAAOO,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,iBAA1B,QAAmD,aAAnD;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAO,IAAIC,YAAY,GAAG,UAAUC,KAAV,EAAiB;AACvC,MAAIC,EAAE,GAAGD,KAAK,CAACE,MAAf;AAAA,MAAuBA,MAAM,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,YAAhB,GAA+BA,EAA/D;AAAA,MAAmEE,EAAE,GAAGH,KAAK,CAACI,QAA9E;AAAA,MAAwFA,QAAQ,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB;AAAEE,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,IAAI,EAAE,GAAhB;AAAqBC,IAAAA,KAAK,EAAE,GAA5B;AAAiCC,IAAAA,MAAM,EAAE;AAAzC,GAAhB,GAA+DL,EAAlK;AAAA,MAAsKM,EAAE,GAAGT,KAAK,CAACU,IAAjL;AAAA,MAAuLA,IAAI,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAArN;AAAA,MAAyNE,SAAS,GAAGX,KAAK,CAACW,SAA3O;AAAA,MAAsPC,KAAK,GAAGZ,KAAK,CAACY,KAApQ;AACA,MAAIC,aAAa,GAAGf,gBAAgB,CAACE,KAAD,CAApC;;AACA,MAAI,CAACU,IAAL,EAAW;AACP,WAAO,IAAP;AACH;;AACD,SAAQf,KAAK,CAACmB,aAAN,CAAoBjB,iBAApB,EAAuC;AAAEc,IAAAA,SAAS,EAAEA,SAAb;AAAwBT,IAAAA,MAAM,EAAEA,MAAhC;AAAwCa,IAAAA,MAAM,EAAEF,aAAhD;AAA+DD,IAAAA,KAAK,EAAE/B,QAAQ,CAAC;AAAEmC,MAAAA,YAAY,EAAE;AAAhB,KAAD,EAAqCJ,KAArC,CAA9E;AAA2HR,IAAAA,QAAQ,EAAEA;AAArI,GAAvC,CAAR;AACH,CAPM;AAQP,eAAeL,YAAf","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { CanvasToolbar as XFlowToolbarPanel } from '@antv/xflow';\nimport { useToolbarConfig } from './util';\nexport var ToolbarPanel = function (props) {\n    var _a = props.layout, layout = _a === void 0 ? 'horizontal' : _a, _b = props.position, position = _b === void 0 ? { top: 0, left: 240, right: 240, bottom: 0 } : _b, _c = props.show, show = _c === void 0 ? true : _c, className = props.className, style = props.style;\n    var toolbarConfig = useToolbarConfig(props);\n    if (!show) {\n        return null;\n    }\n    return (React.createElement(XFlowToolbarPanel, { className: className, layout: layout, config: toolbarConfig, style: __assign({ borderBottom: '1px solid #ccc' }, style), position: position }));\n};\nexport default ToolbarPanel;\n"]},"metadata":{},"sourceType":"module"}