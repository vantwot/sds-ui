{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Base } from './base';\nexport class SnaplineManager extends Base {\n  constructor() {\n    super(...arguments);\n    this.widget = this.graph.hook.createSnapline();\n  }\n\n  dispose() {\n    this.widget.dispose();\n  }\n\n}\n\n__decorate([Base.dispose()], SnaplineManager.prototype, \"dispose\", null);","map":{"version":3,"sources":["../../src/graph/snapline.ts"],"names":[],"mappings":";;;;;;;;AACA,SAAS,IAAT,QAAqB,QAArB;AAEA,OAAM,MAAO,eAAP,SAA+B,IAA/B,CAAmC;AAAzC,EAAA,WAAA,GAAA;;AACkB,SAAA,MAAA,GAAmB,KAAK,KAAL,CAAW,IAAX,CAAgB,cAAhB,EAAnB;AAMjB;;AAHC,EAAA,OAAO,GAAA;AACL,SAAK,MAAL,CAAY,OAAZ;AACD;;AANsC;;AAIvC,UAAA,CAAA,CADC,IAAI,CAAC,OAAL,EACD,CAAA,E,yBAAA,E,SAAA,EAEC,IAFD,CAAA","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Base } from './base';\nexport class SnaplineManager extends Base {\n    constructor() {\n        super(...arguments);\n        this.widget = this.graph.hook.createSnapline();\n    }\n    dispose() {\n        this.widget.dispose();\n    }\n}\n__decorate([\n    Base.dispose()\n], SnaplineManager.prototype, \"dispose\", null);\n//# sourceMappingURL=snapline.js.map"]},"metadata":{},"sourceType":"module"}