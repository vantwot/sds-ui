{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport React from 'react';\nimport classnames from 'classnames';\nimport addEventListener from 'rc-util/lib/Dom/addEventListener';\nimport { MenubarItem } from './item';\nimport { MenubarContext } from './context';\nexport var Menubar = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Menubar, _React$PureComponent);\n\n  var _super = _createSuper(Menubar);\n\n  function Menubar(props) {\n    var _this;\n\n    _classCallCheck(this, Menubar);\n\n    _this = _super.call(this, props);\n\n    _this.onDocumentClick = function () {\n      _this.setState({\n        active: false\n      });\n\n      _this.unbindDocEvent();\n    };\n\n    _this.activeMenubar = function () {\n      _this.setState({\n        active: true\n      });\n\n      if (!_this.removeDocClickEvent) {\n        _this.removeDocClickEvent = addEventListener(document.documentElement, 'click', _this.onDocumentClick).remove;\n      }\n    };\n\n    _this.state = {\n      active: false\n    };\n    return _this;\n  }\n\n  _createClass(Menubar, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unbindDocEvent();\n    }\n  }, {\n    key: \"unbindDocEvent\",\n    value: function unbindDocEvent() {\n      if (this.removeDocClickEvent) {\n        this.removeDocClickEvent();\n        this.removeDocClickEvent = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          prefixCls = _this$props.prefixCls,\n          className = _this$props.className,\n          children = _this$props.children,\n          extra = _this$props.extra;\n      var baseCls = \"\".concat(prefixCls, \"-menubar\");\n      var contextValue = {\n        prefixCls: baseCls,\n        activeMenubar: this.activeMenubar,\n        menubarActived: this.state.active === true\n      };\n      return React.createElement(\"div\", {\n        className: classnames(baseCls, className)\n      }, React.createElement(\"div\", {\n        className: \"\".concat(baseCls, \"-content\")\n      }, React.createElement(\"div\", {\n        className: \"\".concat(baseCls, \"-content-inner\")\n      }, React.createElement(MenubarContext.Provider, {\n        value: contextValue\n      }, children)), extra && React.createElement(\"div\", {\n        className: \"\".concat(baseCls, \"-content-extras\")\n      }, extra)));\n    }\n  }]);\n\n  return Menubar;\n}(React.PureComponent);\n\n(function (Menubar) {\n  Menubar.Item = MenubarItem;\n  Menubar.defaultProps = {\n    prefixCls: 'x6'\n  };\n})(Menubar || (Menubar = {}));","map":{"version":3,"sources":["../../src/menubar/menubar.tsx"],"names":[],"mappings":";;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,gBAAP,MAA6B,kCAA7B;AACA,SAAS,WAAT,QAA4B,QAA5B;AACA,SAAS,cAAT,QAA+B,WAA/B;AAEA,WAAa,OAAb;AAAA;;AAAA;;AAGE,mBAAY,KAAZ,EAAgC;AAAA;;AAAA;;AAC9B,8BAAM,KAAN;;AAQF,UAAA,eAAA,GAAkB,YAAK;AACrB,YAAK,QAAL,CAAc;AAAE,QAAA,MAAM,EAAE;AAAV,OAAd;;AACA,YAAK,cAAL;AACD,KAHD;;AAYA,UAAA,aAAA,GAAgB,YAAK;AACnB,YAAK,QAAL,CAAc;AAAE,QAAA,MAAM,EAAE;AAAV,OAAd;;AACA,UAAI,CAAC,MAAK,mBAAV,EAA+B;AAC7B,cAAK,mBAAL,GAA2B,gBAAgB,CACzC,QAAQ,CAAC,eADgC,EAEzC,OAFyC,EAGzC,MAAK,eAHoC,CAAhB,CAIzB,MAJF;AAKD;AACF,KATD;;AAnBE,UAAK,KAAL,GAAa;AAAE,MAAA,MAAM,EAAE;AAAV,KAAb;AAF8B;AAG/B;;AANH;AAAA;AAAA,WAQE,gCAAoB;AAClB,WAAK,cAAL;AACD;AAVH;AAAA;AAAA,WAiBE,0BAAc;AACZ,UAAI,KAAK,mBAAT,EAA8B;AAC5B,aAAK,mBAAL;AACA,aAAK,mBAAL,GAA2B,IAA3B;AACD;AACF;AAtBH;AAAA;AAAA,WAmCE,kBAAM;AACJ,wBAAkD,KAAK,KAAvD;AAAA,UAAQ,SAAR,eAAQ,SAAR;AAAA,UAAmB,SAAnB,eAAmB,SAAnB;AAAA,UAA8B,QAA9B,eAA8B,QAA9B;AAAA,UAAwC,KAAxC,eAAwC,KAAxC;AACA,UAAM,OAAO,aAAM,SAAN,aAAb;AACA,UAAM,YAAY,GAA4B;AAC5C,QAAA,SAAS,EAAE,OADiC;AAE5C,QAAA,aAAa,EAAE,KAAK,aAFwB;AAG5C,QAAA,cAAc,EAAE,KAAK,KAAL,CAAW,MAAX,KAAsB;AAHM,OAA9C;AAMA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAE,UAAU,CAAC,OAAD,EAAU,SAAV;AAA1B,OAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,YAAK,OAAL;AAAd,OAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,YAAK,OAAL;AAAd,OAAA,EACE,KAAA,CAAA,aAAA,CAAC,cAAc,CAAC,QAAhB,EAAwB;AAAC,QAAA,KAAK,EAAE;AAAR,OAAxB,EACG,QADH,CADF,CADF,EAMG,KAAK,IAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,YAAK,OAAL;AAAd,OAAA,EAA8C,KAA9C,CANZ,CADF,CADF;AAYD;AAxDH;;AAAA;AAAA,EAA6B,KAAK,CAAC,aAAnC;;AA2DA,CAAA,UAAiB,OAAjB,EAAwB;AACT,EAAA,OAAA,CAAA,IAAA,GAAO,WAAP;AAYA,EAAA,OAAA,CAAA,YAAA,GAAsB;AACjC,IAAA,SAAS,EAAE;AADsB,GAAtB;AAGd,CAhBD,EAAiB,OAAO,KAAP,OAAO,GAAA,EAAA,CAAxB","sourceRoot":"","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport addEventListener from 'rc-util/lib/Dom/addEventListener';\nimport { MenubarItem } from './item';\nimport { MenubarContext } from './context';\nexport class Menubar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.onDocumentClick = () => {\n            this.setState({ active: false });\n            this.unbindDocEvent();\n        };\n        this.activeMenubar = () => {\n            this.setState({ active: true });\n            if (!this.removeDocClickEvent) {\n                this.removeDocClickEvent = addEventListener(document.documentElement, 'click', this.onDocumentClick).remove;\n            }\n        };\n        this.state = { active: false };\n    }\n    componentWillUnmount() {\n        this.unbindDocEvent();\n    }\n    unbindDocEvent() {\n        if (this.removeDocClickEvent) {\n            this.removeDocClickEvent();\n            this.removeDocClickEvent = null;\n        }\n    }\n    render() {\n        const { prefixCls, className, children, extra } = this.props;\n        const baseCls = `${prefixCls}-menubar`;\n        const contextValue = {\n            prefixCls: baseCls,\n            activeMenubar: this.activeMenubar,\n            menubarActived: this.state.active === true,\n        };\n        return (React.createElement(\"div\", { className: classnames(baseCls, className) },\n            React.createElement(\"div\", { className: `${baseCls}-content` },\n                React.createElement(\"div\", { className: `${baseCls}-content-inner` },\n                    React.createElement(MenubarContext.Provider, { value: contextValue }, children)),\n                extra && React.createElement(\"div\", { className: `${baseCls}-content-extras` }, extra))));\n    }\n}\n(function (Menubar) {\n    Menubar.Item = MenubarItem;\n    Menubar.defaultProps = {\n        prefixCls: 'x6',\n    };\n})(Menubar || (Menubar = {}));\n//# sourceMappingURL=menubar.js.map"]},"metadata":{},"sourceType":"module"}