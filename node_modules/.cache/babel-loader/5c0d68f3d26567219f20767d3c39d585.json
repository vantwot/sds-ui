{"ast":null,"code":"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\n\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n}\n\nfunction unwrapExports(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar isArrayLike_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = isArrayLike;\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number' && value.length >= 0 && value.length % 1 === 0;\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(isArrayLike_1);\nvar initialParams = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (fn) {\n    return function\n      /*, callback*/\n    () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      var callback = args.pop();\n      return fn.call(this, args, callback);\n    };\n  };\n\n  module.exports = exports[\"default\"];\n});\nunwrapExports(initialParams);\nvar setImmediate_1 = createCommonjsModule(function (module, exports) {\n  /* istanbul ignore file */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.fallback = fallback;\n  exports.wrap = wrap;\n  var hasSetImmediate = exports.hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\n  var hasNextTick = exports.hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\n  function fallback(fn) {\n    setTimeout(fn, 0);\n  }\n\n  function wrap(defer) {\n    return function (fn) {\n      var args = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) args[len] = arguments[len + 1];\n\n      return defer(function () {\n        return fn.apply(void 0, args);\n      });\n    };\n  }\n\n  var _defer;\n\n  if (hasSetImmediate) {\n    _defer = setImmediate;\n  } else if (hasNextTick) {\n    _defer = process.nextTick;\n  } else {\n    _defer = fallback;\n  }\n\n  exports.default = wrap(_defer);\n});\nunwrapExports(setImmediate_1);\nvar setImmediate_2 = setImmediate_1.fallback;\nvar setImmediate_3 = setImmediate_1.wrap;\nvar setImmediate_4 = setImmediate_1.hasSetImmediate;\nvar setImmediate_5 = setImmediate_1.hasNextTick;\nvar asyncify_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = asyncify;\n\n  var _initialParams2 = _interopRequireDefault(initialParams);\n\n  var _setImmediate2 = _interopRequireDefault(setImmediate_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  /**\n   * Take a sync function and make it async, passing its return value to a\n   * callback. This is useful for plugging sync functions into a waterfall,\n   * series, or other async functions. Any arguments passed to the generated\n   * function will be passed to the wrapped function (except for the final\n   * callback argument). Errors thrown will be passed to the callback.\n   *\n   * If the function passed to `asyncify` returns a Promise, that promises's\n   * resolved/rejected state will be used to call the callback, rather than simply\n   * the synchronous return value.\n   *\n   * This also means you can asyncify ES2017 `async` functions.\n   *\n   * @name asyncify\n   * @static\n   * @memberOf module:Utils\n   * @method\n   * @alias wrapSync\n   * @category Util\n   * @param {Function} func - The synchronous function, or Promise-returning\n   * function to convert to an {@link AsyncFunction}.\n   * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n   * invoked with `(args..., callback)`.\n   * @example\n   *\n   * // passing a regular synchronous function\n   * async.waterfall([\n   *     async.apply(fs.readFile, filename, \"utf8\"),\n   *     async.asyncify(JSON.parse),\n   *     function (data, next) {\n   *         // data is the result of parsing the text.\n   *         // If there was a parsing error, it would have been caught.\n   *     }\n   * ], callback);\n   *\n   * // passing a function returning a promise\n   * async.waterfall([\n   *     async.apply(fs.readFile, filename, \"utf8\"),\n   *     async.asyncify(function (contents) {\n   *         return db.model.create(contents);\n   *     }),\n   *     function (model, next) {\n   *         // `model` is the instantiated model object.\n   *         // If there was an error, this function would be skipped.\n   *     }\n   * ], callback);\n   *\n   * // es2017 example, though `asyncify` is not needed if your JS environment\n   * // supports async functions out of the box\n   * var q = async.queue(async.asyncify(async function(file) {\n   *     var intermediateStep = await processFile(file);\n   *     return await somePromise(intermediateStep)\n   * }));\n   *\n   * q.push(files);\n   */\n\n\n  function asyncify(func) {\n    if ((0, wrapAsync_1.isAsync)(func)) {\n      return function\n        /*, callback*/\n      () {\n        var args = [],\n            len = arguments.length;\n\n        while (len--) args[len] = arguments[len];\n\n        var callback = args.pop();\n        var promise = func.apply(this, args);\n        return handlePromise(promise, callback);\n      };\n    }\n\n    return (0, _initialParams2.default)(function (args, callback) {\n      var result;\n\n      try {\n        result = func.apply(this, args);\n      } catch (e) {\n        return callback(e);\n      } // if result is Promise object\n\n\n      if (result && typeof result.then === 'function') {\n        return handlePromise(result, callback);\n      } else {\n        callback(null, result);\n      }\n    });\n  }\n\n  function handlePromise(promise, callback) {\n    return promise.then(function (value) {\n      invokeCallback(callback, null, value);\n    }, function (err) {\n      invokeCallback(callback, err && err.message ? err : new Error(err));\n    });\n  }\n\n  function invokeCallback(callback, error, value) {\n    try {\n      callback(error, value);\n    } catch (err) {\n      (0, _setImmediate2.default)(function (e) {\n        throw e;\n      }, err);\n    }\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(asyncify_1);\nvar wrapAsync_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isAsyncIterable = exports.isAsyncGenerator = exports.isAsync = undefined;\n\n  var _asyncify2 = _interopRequireDefault(asyncify_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function isAsync(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncFunction';\n  }\n\n  function isAsyncGenerator(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncGenerator';\n  }\n\n  function isAsyncIterable(obj) {\n    return typeof obj[Symbol.asyncIterator] === 'function';\n  }\n\n  function wrapAsync(asyncFn) {\n    if (typeof asyncFn !== 'function') {\n      throw new Error('expected a function');\n    }\n\n    return isAsync(asyncFn) ? (0, _asyncify2.default)(asyncFn) : asyncFn;\n  }\n\n  exports.default = wrapAsync;\n  exports.isAsync = isAsync;\n  exports.isAsyncGenerator = isAsyncGenerator;\n  exports.isAsyncIterable = isAsyncIterable;\n});\nunwrapExports(wrapAsync_1);\nvar wrapAsync_2 = wrapAsync_1.isAsyncIterable;\nvar wrapAsync_3 = wrapAsync_1.isAsyncGenerator;\nvar wrapAsync_4 = wrapAsync_1.isAsync;\nvar awaitify_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = awaitify; // conditionally promisify a function.\n  // only return a promise if a callback is omitted\n\n  function awaitify(asyncFn, arity) {\n    if (arity === void 0) arity = asyncFn.length;\n\n    if (!arity) {\n      throw new Error('arity is undefined');\n    }\n\n    function awaitable() {\n      var this$1 = this;\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      if (typeof args[arity - 1] === 'function') {\n        return asyncFn.apply(this, args);\n      }\n\n      return new Promise(function (resolve, reject) {\n        args[arity - 1] = function (err) {\n          var cbArgs = [],\n              len = arguments.length - 1;\n\n          while (len-- > 0) cbArgs[len] = arguments[len + 1];\n\n          if (err) {\n            return reject(err);\n          }\n\n          resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);\n        };\n\n        asyncFn.apply(this$1, args);\n      });\n    }\n\n    Object.defineProperty(awaitable, 'name', {\n      configurable: true,\n      // allows redefining\n      value: \"awaitable(\" + asyncFn.name + \")\"\n    });\n    return awaitable;\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(awaitify_1);\nvar parallel = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _isArrayLike2 = _interopRequireDefault(isArrayLike_1);\n\n  var _wrapAsync2 = _interopRequireDefault(wrapAsync_1);\n\n  var _awaitify2 = _interopRequireDefault(awaitify_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.default = (0, _awaitify2.default)(function (eachfn, tasks, callback) {\n    var results = (0, _isArrayLike2.default)(tasks) ? [] : {};\n    eachfn(tasks, function (task, key, taskCb) {\n      (0, _wrapAsync2.default)(task)(function (err) {\n        var assign;\n        var result = [],\n            len = arguments.length - 1;\n\n        while (len-- > 0) result[len] = arguments[len + 1];\n\n        if (result.length < 2) {\n          assign = result, result = assign[0];\n        }\n\n        results[key] = result;\n        taskCb(err);\n      });\n    }, function (err) {\n      return callback(err, results);\n    });\n  }, 3);\n  module.exports = exports['default'];\n});\nunwrapExports(parallel);\nvar once_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = once;\n\n  function once(fn) {\n    function wrapper() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      if (fn === null) {\n        return;\n      }\n\n      var callFn = fn;\n      fn = null;\n      callFn.apply(this, args);\n    }\n\n    Object.assign(wrapper, fn);\n    return wrapper;\n  }\n\n  module.exports = exports[\"default\"];\n});\nunwrapExports(once_1);\nvar getIterator = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (coll) {\n    return coll[Symbol.iterator] && coll[Symbol.iterator]();\n  };\n\n  module.exports = exports[\"default\"];\n});\nunwrapExports(getIterator);\nvar iterator = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createIterator;\n\n  var _isArrayLike2 = _interopRequireDefault(isArrayLike_1);\n\n  var _getIterator2 = _interopRequireDefault(getIterator);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n      return ++i < len ? {\n        value: coll[i],\n        key: i\n      } : null;\n    };\n  }\n\n  function createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n      var item = iterator.next();\n\n      if (item.done) {\n        return null;\n      }\n\n      i++;\n      return {\n        value: item.value,\n        key: i\n      };\n    };\n  }\n\n  function createObjectIterator(obj) {\n    var okeys = obj ? Object.keys(obj) : [];\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n      var key = okeys[++i];\n      return i < len ? {\n        value: obj[key],\n        key: key\n      } : null;\n    };\n  }\n\n  function createIterator(coll) {\n    if ((0, _isArrayLike2.default)(coll)) {\n      return createArrayIterator(coll);\n    }\n\n    var iterator = (0, _getIterator2.default)(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(iterator);\nvar onlyOnce_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = onlyOnce;\n\n  function onlyOnce(fn) {\n    return function () {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      if (fn === null) {\n        throw new Error(\"Callback was already called.\");\n      }\n\n      var callFn = fn;\n      fn = null;\n      callFn.apply(this, args);\n    };\n  }\n\n  module.exports = exports[\"default\"];\n});\nunwrapExports(onlyOnce_1);\nvar breakLoop_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); // A temporary value used to identify if the loop should be broken.\n  // See #1064, #1293\n\n  var breakLoop = {};\n  exports.default = breakLoop;\n  module.exports = exports[\"default\"];\n});\nunwrapExports(breakLoop_1);\nvar asyncEachOfLimit_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = asyncEachOfLimit;\n\n  var _breakLoop2 = _interopRequireDefault(breakLoop_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  } // for async generators\n\n\n  function asyncEachOfLimit(generator, limit, iteratee, callback) {\n    var done = false;\n    var canceled = false;\n    var awaiting = false;\n    var running = 0;\n    var idx = 0;\n\n    function replenish() {\n      //console.log('replenish')\n      if (running >= limit || awaiting || done) {\n        return;\n      } //console.log('replenish awaiting')\n\n\n      awaiting = true;\n      generator.next().then(function (ref) {\n        var value = ref.value;\n        var iterDone = ref.done; //console.log('got value', value)\n\n        if (canceled || done) {\n          return;\n        }\n\n        awaiting = false;\n\n        if (iterDone) {\n          done = true;\n\n          if (running <= 0) {\n            //console.log('done nextCb')\n            callback(null);\n          }\n\n          return;\n        }\n\n        running++;\n        iteratee(value, idx, iterateeCallback);\n        idx++;\n        replenish();\n      }).catch(handleError);\n    }\n\n    function iterateeCallback(err, result) {\n      //console.log('iterateeCallback')\n      running -= 1;\n\n      if (canceled) {\n        return;\n      }\n\n      if (err) {\n        return handleError(err);\n      }\n\n      if (err === false) {\n        done = true;\n        canceled = true;\n        return;\n      }\n\n      if (result === _breakLoop2.default || done && running <= 0) {\n        done = true; //console.log('done iterCb')\n\n        return callback(null);\n      }\n\n      replenish();\n    }\n\n    function handleError(err) {\n      if (canceled) {\n        return;\n      }\n\n      awaiting = false;\n      done = true;\n      callback(err);\n    }\n\n    replenish();\n  }\n\n  module.exports = exports['default'];\n});\nunwrapExports(asyncEachOfLimit_1);\nvar eachOfLimit = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _once2 = _interopRequireDefault(once_1);\n\n  var _iterator2 = _interopRequireDefault(iterator);\n\n  var _onlyOnce2 = _interopRequireDefault(onlyOnce_1);\n\n  var _asyncEachOfLimit2 = _interopRequireDefault(asyncEachOfLimit_1);\n\n  var _breakLoop2 = _interopRequireDefault(breakLoop_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  exports.default = function (limit) {\n    return function (obj, iteratee, callback) {\n      callback = (0, _once2.default)(callback);\n\n      if (limit <= 0) {\n        throw new RangeError('concurrency limit cannot be less than 1');\n      }\n\n      if (!obj) {\n        return callback(null);\n      }\n\n      if ((0, wrapAsync_1.isAsyncGenerator)(obj)) {\n        return (0, _asyncEachOfLimit2.default)(obj, limit, iteratee, callback);\n      }\n\n      if ((0, wrapAsync_1.isAsyncIterable)(obj)) {\n        return (0, _asyncEachOfLimit2.default)(obj[Symbol.asyncIterator](), limit, iteratee, callback);\n      }\n\n      var nextElem = (0, _iterator2.default)(obj);\n      var done = false;\n      var canceled = false;\n      var running = 0;\n      var looping = false;\n\n      function iterateeCallback(err, value) {\n        if (canceled) {\n          return;\n        }\n\n        running -= 1;\n\n        if (err) {\n          done = true;\n          callback(err);\n        } else if (err === false) {\n          done = true;\n          canceled = true;\n        } else if (value === _breakLoop2.default || done && running <= 0) {\n          done = true;\n          return callback(null);\n        } else if (!looping) {\n          replenish();\n        }\n      }\n\n      function replenish() {\n        looping = true;\n\n        while (running < limit && !done) {\n          var elem = nextElem();\n\n          if (elem === null) {\n            done = true;\n\n            if (running <= 0) {\n              callback(null);\n            }\n\n            return;\n          }\n\n          running += 1;\n          iteratee(elem.value, elem.key, (0, _onlyOnce2.default)(iterateeCallback));\n        }\n\n        looping = false;\n      }\n\n      replenish();\n    };\n  };\n\n  module.exports = exports['default'];\n});\nunwrapExports(eachOfLimit);\nvar eachOfLimit_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _eachOfLimit3 = _interopRequireDefault(eachOfLimit);\n\n  var _wrapAsync2 = _interopRequireDefault(wrapAsync_1);\n\n  var _awaitify2 = _interopRequireDefault(awaitify_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  /**\n   * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n   * time.\n   *\n   * @name eachOfLimit\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.eachOf]{@link module:Collections.eachOf}\n   * @alias forEachOfLimit\n   * @category Collection\n   * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n   * @param {number} limit - The maximum number of async operations at a time.\n   * @param {AsyncFunction} iteratee - An async function to apply to each\n   * item in `coll`. The `key` is the item's key, or index in the case of an\n   * array.\n   * Invoked with (item, key, callback).\n   * @param {Function} [callback] - A callback which is called when all\n   * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n   * @returns {Promise} a promise, if a callback is omitted\n   */\n\n\n  function eachOfLimit$1(coll, limit, iteratee, callback) {\n    return (0, _eachOfLimit3.default)(limit)(coll, (0, _wrapAsync2.default)(iteratee), callback);\n  }\n\n  exports.default = (0, _awaitify2.default)(eachOfLimit$1, 4);\n  module.exports = exports['default'];\n});\nunwrapExports(eachOfLimit_1);\nvar eachOfSeries_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _eachOfLimit2 = _interopRequireDefault(eachOfLimit_1);\n\n  var _awaitify2 = _interopRequireDefault(awaitify_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  /**\n   * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n   *\n   * @name eachOfSeries\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @see [async.eachOf]{@link module:Collections.eachOf}\n   * @alias forEachOfSeries\n   * @category Collection\n   * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n   * @param {AsyncFunction} iteratee - An async function to apply to each item in\n   * `coll`.\n   * Invoked with (item, key, callback).\n   * @param {Function} [callback] - A callback which is called when all `iteratee`\n   * functions have finished, or an error occurs. Invoked with (err).\n   * @returns {Promise} a promise, if a callback is omitted\n   */\n\n\n  function eachOfSeries(coll, iteratee, callback) {\n    return (0, _eachOfLimit2.default)(coll, 1, iteratee, callback);\n  }\n\n  exports.default = (0, _awaitify2.default)(eachOfSeries, 3);\n  module.exports = exports['default'];\n});\nunwrapExports(eachOfSeries_1);\nvar series_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = series;\n\n  var _parallel3 = _interopRequireDefault(parallel);\n\n  var _eachOfSeries2 = _interopRequireDefault(eachOfSeries_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  /**\n   * Run the functions in the `tasks` collection in series, each one running once\n   * the previous function has completed. If any functions in the series pass an\n   * error to its callback, no more functions are run, and `callback` is\n   * immediately called with the value of the error. Otherwise, `callback`\n   * receives an array of results when `tasks` have completed.\n   *\n   * It is also possible to use an object instead of an array. Each property will\n   * be run as a function, and the results will be passed to the final `callback`\n   * as an object instead of an array. This can be a more readable way of handling\n   *  results from {@link async.series}.\n   *\n   * **Note** that while many implementations preserve the order of object\n   * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n   * explicitly states that\n   *\n   * > The mechanics and order of enumerating the properties is not specified.\n   *\n   * So if you rely on the order in which your series of functions are executed,\n   * and want this to work on all platforms, consider using an array.\n   *\n   * @name series\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @category Control Flow\n   * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing\n   * [async functions]{@link AsyncFunction} to run in series.\n   * Each function can complete with any number of optional `result` values.\n   * @param {Function} [callback] - An optional callback to run once all the\n   * functions have completed. This function gets a results array (or object)\n   * containing all the result arguments passed to the `task` callbacks. Invoked\n   * with (err, result).\n   * @return {Promise} a promise, if no callback is passed\n   * @example\n   * async.series([\n   *     function(callback) {\n   *         // do some stuff ...\n   *         callback(null, 'one');\n   *     },\n   *     function(callback) {\n   *         // do some more stuff ...\n   *         callback(null, 'two');\n   *     }\n   * ],\n   * // optional callback\n   * function(err, results) {\n   *     // results is now equal to ['one', 'two']\n   * });\n   *\n   * async.series({\n   *     one: function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 1);\n   *         }, 200);\n   *     },\n   *     two: function(callback){\n   *         setTimeout(function() {\n   *             callback(null, 2);\n   *         }, 100);\n   *     }\n   * }, function(err, results) {\n   *     // results is now equal to: {one: 1, two: 2}\n   * });\n   */\n\n\n  function series(tasks, callback) {\n    return (0, _parallel3.default)(_eachOfSeries2.default, tasks, callback);\n  }\n\n  module.exports = exports['default'];\n});\nvar series = unwrapExports(series_1);\n\nvar SyncHook = function () {\n  function SyncHook() {\n    var arguments$1 = arguments;\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments$1[_i];\n    }\n\n    this.args = [];\n    this.tasks = [];\n  }\n\n  SyncHook.prototype.call = function () {\n    var arguments$1 = arguments;\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments$1[_i];\n    }\n\n    this.args = args;\n    return series(this.tasks);\n  };\n\n  SyncHook.prototype.tap = function (name, cb) {\n    var _this = this;\n\n    this.tasks.push(function (callback) {\n      cb.apply(void 0, __spread(_this.args));\n      callback(null, name);\n    });\n  };\n\n  return SyncHook;\n}();\n\nvar eachOf_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _isArrayLike2 = _interopRequireDefault(isArrayLike_1);\n\n  var _breakLoop2 = _interopRequireDefault(breakLoop_1);\n\n  var _eachOfLimit2 = _interopRequireDefault(eachOfLimit_1);\n\n  var _once2 = _interopRequireDefault(once_1);\n\n  var _onlyOnce2 = _interopRequireDefault(onlyOnce_1);\n\n  var _wrapAsync2 = _interopRequireDefault(wrapAsync_1);\n\n  var _awaitify2 = _interopRequireDefault(awaitify_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  } // eachOf implementation optimized for array-likes\n\n\n  function eachOfArrayLike(coll, iteratee, callback) {\n    callback = (0, _once2.default)(callback);\n    var index = 0,\n        completed = 0;\n    var length = coll.length;\n    var canceled = false;\n\n    if (length === 0) {\n      callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n      if (err === false) {\n        canceled = true;\n      }\n\n      if (canceled === true) {\n        return;\n      }\n\n      if (err) {\n        callback(err);\n      } else if (++completed === length || value === _breakLoop2.default) {\n        callback(null);\n      }\n    }\n\n    for (; index < length; index++) {\n      iteratee(coll[index], index, (0, _onlyOnce2.default)(iteratorCallback));\n    }\n  } // a generic version of eachOf which can handle array, object, and iterator cases.\n\n\n  function eachOfGeneric(coll, iteratee, callback) {\n    return (0, _eachOfLimit2.default)(coll, Infinity, iteratee, callback);\n  }\n  /**\n   * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n   * to the iteratee.\n   *\n   * @name eachOf\n   * @static\n   * @memberOf module:Collections\n   * @method\n   * @alias forEachOf\n   * @category Collection\n   * @see [async.each]{@link module:Collections.each}\n   * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n   * @param {AsyncFunction} iteratee - A function to apply to each\n   * item in `coll`.\n   * The `key` is the item's key, or index in the case of an array.\n   * Invoked with (item, key, callback).\n   * @param {Function} [callback] - A callback which is called when all\n   * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n   * @returns {Promise} a promise, if a callback is omitted\n   * @example\n   *\n   * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n   * var configs = {};\n   *\n   * async.forEachOf(obj, function (value, key, callback) {\n   *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n   *         if (err) return callback(err);\n   *         try {\n   *             configs[key] = JSON.parse(data);\n   *         } catch (e) {\n   *             return callback(e);\n   *         }\n   *         callback();\n   *     });\n   * }, function (err) {\n   *     if (err) console.error(err.message);\n   *     // configs is now a map of JSON data\n   *     doSomethingWith(configs);\n   * });\n   */\n\n\n  function eachOf(coll, iteratee, callback) {\n    var eachOfImplementation = (0, _isArrayLike2.default)(coll) ? eachOfArrayLike : eachOfGeneric;\n    return eachOfImplementation(coll, (0, _wrapAsync2.default)(iteratee), callback);\n  }\n\n  exports.default = (0, _awaitify2.default)(eachOf, 3);\n  module.exports = exports['default'];\n});\nunwrapExports(eachOf_1);\nvar parallel_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = parallel$1;\n\n  var _eachOf2 = _interopRequireDefault(eachOf_1);\n\n  var _parallel3 = _interopRequireDefault(parallel);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  /**\n   * Run the `tasks` collection of functions in parallel, without waiting until\n   * the previous function has completed. If any of the functions pass an error to\n   * its callback, the main `callback` is immediately called with the value of the\n   * error. Once the `tasks` have completed, the results are passed to the final\n   * `callback` as an array.\n   *\n   * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n   * parallel execution of code.  If your tasks do not use any timers or perform\n   * any I/O, they will actually be executed in series.  Any synchronous setup\n   * sections for each task will happen one after the other.  JavaScript remains\n   * single-threaded.\n   *\n   * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n   * execution of other tasks when a task fails.\n   *\n   * It is also possible to use an object instead of an array. Each property will\n   * be run as a function and the results will be passed to the final `callback`\n   * as an object instead of an array. This can be a more readable way of handling\n   * results from {@link async.parallel}.\n   *\n   * @name parallel\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @category Control Flow\n   * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n   * [async functions]{@link AsyncFunction} to run.\n   * Each async function can complete with any number of optional `result` values.\n   * @param {Function} [callback] - An optional callback to run once all the\n   * functions have completed successfully. This function gets a results array\n   * (or object) containing all the result arguments passed to the task callbacks.\n   * Invoked with (err, results).\n   * @returns {Promise} a promise, if a callback is not passed\n   *\n   * @example\n   * async.parallel([\n   *     function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 'one');\n   *         }, 200);\n   *     },\n   *     function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 'two');\n   *         }, 100);\n   *     }\n   * ],\n   * // optional callback\n   * function(err, results) {\n   *     // the results array will equal ['one','two'] even though\n   *     // the second function had a shorter timeout.\n   * });\n   *\n   * // an example using an object instead of an array\n   * async.parallel({\n   *     one: function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 1);\n   *         }, 200);\n   *     },\n   *     two: function(callback) {\n   *         setTimeout(function() {\n   *             callback(null, 2);\n   *         }, 100);\n   *     }\n   * }, function(err, results) {\n   *     // results is now equals to: {one: 1, two: 2}\n   * });\n   */\n\n\n  function parallel$1(tasks, callback) {\n    return (0, _parallel3.default)(_eachOf2.default, tasks, callback);\n  }\n\n  module.exports = exports['default'];\n});\nvar parallel$1 = unwrapExports(parallel_1);\n\nvar AsyncParallelHook = function () {\n  function AsyncParallelHook() {\n    var arguments$1 = arguments;\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments$1[_i];\n    }\n\n    this.tasks = [];\n  }\n\n  AsyncParallelHook.prototype.promise = function () {\n    var arguments$1 = arguments;\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments$1[_i];\n    }\n\n    return parallel$1(this.tasks);\n  };\n\n  AsyncParallelHook.prototype.tapPromise = function (name, cb) {\n    var _this = this;\n\n    this.tasks.push(function (callback) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, cb()];\n\n            case 1:\n              _a.sent();\n\n              callback(null, name);\n              return [2];\n          }\n        });\n      });\n    });\n  };\n\n  return AsyncParallelHook;\n}();\n\nvar waterfall_1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _once2 = _interopRequireDefault(once_1);\n\n  var _onlyOnce2 = _interopRequireDefault(onlyOnce_1);\n\n  var _wrapAsync2 = _interopRequireDefault(wrapAsync_1);\n\n  var _awaitify2 = _interopRequireDefault(awaitify_1);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  /**\n   * Runs the `tasks` array of functions in series, each passing their results to\n   * the next in the array. However, if any of the `tasks` pass an error to their\n   * own callback, the next function is not executed, and the main `callback` is\n   * immediately called with the error.\n   *\n   * @name waterfall\n   * @static\n   * @memberOf module:ControlFlow\n   * @method\n   * @category Control Flow\n   * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n   * to run.\n   * Each function should complete with any number of `result` values.\n   * The `result` values will be passed as arguments, in order, to the next task.\n   * @param {Function} [callback] - An optional callback to run once all the\n   * functions have completed. This will be passed the results of the last task's\n   * callback. Invoked with (err, [results]).\n   * @returns undefined\n   * @example\n   *\n   * async.waterfall([\n   *     function(callback) {\n   *         callback(null, 'one', 'two');\n   *     },\n   *     function(arg1, arg2, callback) {\n   *         // arg1 now equals 'one' and arg2 now equals 'two'\n   *         callback(null, 'three');\n   *     },\n   *     function(arg1, callback) {\n   *         // arg1 now equals 'three'\n   *         callback(null, 'done');\n   *     }\n   * ], function (err, result) {\n   *     // result now equals 'done'\n   * });\n   *\n   * // Or, with named functions:\n   * async.waterfall([\n   *     myFirstFunction,\n   *     mySecondFunction,\n   *     myLastFunction,\n   * ], function (err, result) {\n   *     // result now equals 'done'\n   * });\n   * function myFirstFunction(callback) {\n   *     callback(null, 'one', 'two');\n   * }\n   * function mySecondFunction(arg1, arg2, callback) {\n   *     // arg1 now equals 'one' and arg2 now equals 'two'\n   *     callback(null, 'three');\n   * }\n   * function myLastFunction(arg1, callback) {\n   *     // arg1 now equals 'three'\n   *     callback(null, 'done');\n   * }\n   */\n\n\n  function waterfall(tasks, callback) {\n    callback = (0, _once2.default)(callback);\n\n    if (!Array.isArray(tasks)) {\n      return callback(new Error('First argument to waterfall must be an array of functions'));\n    }\n\n    if (!tasks.length) {\n      return callback();\n    }\n\n    var taskIndex = 0;\n\n    function nextTask(args) {\n      var task = (0, _wrapAsync2.default)(tasks[taskIndex++]);\n      task.apply(void 0, args.concat([(0, _onlyOnce2.default)(next)]));\n    }\n\n    function next(err) {\n      var args = [],\n          len = arguments.length - 1;\n\n      while (len-- > 0) args[len] = arguments[len + 1];\n\n      if (err === false) {\n        return;\n      }\n\n      if (err || taskIndex === tasks.length) {\n        return callback.apply(void 0, [err].concat(args));\n      }\n\n      nextTask(args);\n    }\n\n    nextTask([]);\n  }\n\n  exports.default = (0, _awaitify2.default)(waterfall);\n  module.exports = exports['default'];\n});\nvar waterfall = unwrapExports(waterfall_1);\n\nvar SyncWaterfallHook = function () {\n  function SyncWaterfallHook() {\n    var arguments$1 = arguments;\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments$1[_i];\n    }\n\n    this.tasks = [];\n  }\n\n  SyncWaterfallHook.prototype.call = function () {\n    var arguments$1 = arguments;\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments$1[_i];\n    }\n\n    return waterfall(this.tasks);\n  };\n\n  SyncWaterfallHook.prototype.tap = function (name, cb) {\n    if (this.tasks.length === 0) {\n      this.tasks.push(function (callback) {\n        var value = cb();\n        callback(value ? null : false, value);\n      });\n    } else {\n      this.tasks.push(function (arg, callback) {\n        var value = cb();\n        callback(value ? null : false, name);\n      });\n    }\n  };\n\n  return SyncWaterfallHook;\n}();\n\nvar SyncBailHook = function () {\n  function SyncBailHook() {\n    var arguments$1 = arguments;\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments$1[_i];\n    }\n\n    this.tasks = [];\n  }\n\n  SyncBailHook.prototype.call = function () {\n    var arguments$1 = arguments;\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments$1[_i];\n    }\n\n    return series(this.tasks);\n  };\n\n  SyncBailHook.prototype.tap = function (name, cb) {\n    this.tasks.push(function (callback) {\n      var err = cb();\n      callback(err, name);\n    });\n  };\n\n  return SyncBailHook;\n}();\n\nexport { AsyncParallelHook, SyncBailHook, SyncHook, SyncWaterfallHook };","map":{"version":3,"sources":["../node_modules/async/internal/isArrayLike.js","../node_modules/async/internal/initialParams.js","../node_modules/async/internal/setImmediate.js","../node_modules/async/asyncify.js","../node_modules/async/internal/wrapAsync.js","../node_modules/async/internal/awaitify.js","../node_modules/async/internal/parallel.js","../node_modules/async/internal/once.js","../node_modules/async/internal/getIterator.js","../node_modules/async/internal/iterator.js","../node_modules/async/internal/onlyOnce.js","../node_modules/async/internal/breakLoop.js","../node_modules/async/internal/asyncEachOfLimit.js","../node_modules/async/internal/eachOfLimit.js","../node_modules/async/eachOfLimit.js","../node_modules/async/eachOfSeries.js","../node_modules/async/series.js","../src/core/SyncHook.ts","../node_modules/async/eachOf.js","../node_modules/async/parallel.js","../src/core/AsyncParallelHook.ts","../node_modules/async/waterfall.js","../src/core/SyncWaterfallHook.ts","../src/core/SyncBailHook.ts"],"names":["_initialParams","_setImmediate","_wrapAsync","const","_asyncify","this","_isArrayLike","_awaitify","_getIterator","_breakLoop","let","_once","_iterator","_onlyOnce","_asyncEachOfLimit","_eachOfLimit2","eachOfLimit","_eachOfLimit","_parallel2","_eachOfSeries","parallel","_eachOf"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = isArrayLike;\nfunction isArrayLike(value) {\n    return value && typeof value.length === 'number' && value.length >= 0 && value.length % 1 === 0;\n}\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (fn) {\n    return function (...args /*, callback*/) {\n        var callback = args.pop();\n        return fn.call(this, args, callback);\n    };\n};\n\nmodule.exports = exports[\"default\"];","'use strict';\n/* istanbul ignore file */\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.fallback = fallback;\nexports.wrap = wrap;\nvar hasSetImmediate = exports.hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = exports.hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return (fn, ...args) => defer(() => fn(...args));\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nexports.default = wrap(_defer);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = asyncify;\n\nvar _initialParams = require('./internal/initialParams');\n\nvar _initialParams2 = _interopRequireDefault(_initialParams);\n\nvar _setImmediate = require('./internal/setImmediate');\n\nvar _setImmediate2 = _interopRequireDefault(_setImmediate);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    if ((0, _wrapAsync.isAsync)(func)) {\n        return function (...args /*, callback*/) {\n            const callback = args.pop();\n            const promise = func.apply(this, args);\n            return handlePromise(promise, callback);\n        };\n    }\n\n    return (0, _initialParams2.default)(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (result && typeof result.then === 'function') {\n            return handlePromise(result, callback);\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction handlePromise(promise, callback) {\n    return promise.then(value => {\n        invokeCallback(callback, null, value);\n    }, err => {\n        invokeCallback(callback, err && err.message ? err : new Error(err));\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (err) {\n        (0, _setImmediate2.default)(e => {\n            throw e;\n        }, err);\n    }\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.isAsyncIterable = exports.isAsyncGenerator = exports.isAsync = undefined;\n\nvar _asyncify = require('../asyncify');\n\nvar _asyncify2 = _interopRequireDefault(_asyncify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isAsync(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction isAsyncGenerator(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncGenerator';\n}\n\nfunction isAsyncIterable(obj) {\n    return typeof obj[Symbol.asyncIterator] === 'function';\n}\n\nfunction wrapAsync(asyncFn) {\n    if (typeof asyncFn !== 'function') throw new Error('expected a function');\n    return isAsync(asyncFn) ? (0, _asyncify2.default)(asyncFn) : asyncFn;\n}\n\nexports.default = wrapAsync;\nexports.isAsync = isAsync;\nexports.isAsyncGenerator = isAsyncGenerator;\nexports.isAsyncIterable = isAsyncIterable;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = awaitify;\n// conditionally promisify a function.\n// only return a promise if a callback is omitted\nfunction awaitify(asyncFn, arity = asyncFn.length) {\n    if (!arity) throw new Error('arity is undefined');\n    function awaitable(...args) {\n        if (typeof args[arity - 1] === 'function') {\n            return asyncFn.apply(this, args);\n        }\n\n        return new Promise((resolve, reject) => {\n            args[arity - 1] = (err, ...cbArgs) => {\n                if (err) return reject(err);\n                resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);\n            };\n            asyncFn.apply(this, args);\n        });\n    }\n\n    Object.defineProperty(awaitable, 'name', {\n        configurable: true, // allows redefining\n        value: `awaitable(${asyncFn.name})`\n    });\n\n    return awaitable;\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _isArrayLike = require('./isArrayLike');\n\nvar _isArrayLike2 = _interopRequireDefault(_isArrayLike);\n\nvar _wrapAsync = require('./wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _awaitify = require('./awaitify');\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = (0, _awaitify2.default)((eachfn, tasks, callback) => {\n    var results = (0, _isArrayLike2.default)(tasks) ? [] : {};\n\n    eachfn(tasks, (task, key, taskCb) => {\n        (0, _wrapAsync2.default)(task)((err, ...result) => {\n            if (result.length < 2) {\n                [result] = result;\n            }\n            results[key] = result;\n            taskCb(err);\n        });\n    }, err => callback(err, results));\n}, 3);\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = once;\nfunction once(fn) {\n    function wrapper(...args) {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    }\n    Object.assign(wrapper, fn);\n    return wrapper;\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (coll) {\n    return coll[Symbol.iterator] && coll[Symbol.iterator]();\n};\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = createIterator;\n\nvar _isArrayLike = require('./isArrayLike');\n\nvar _isArrayLike2 = _interopRequireDefault(_isArrayLike);\n\nvar _getIterator = require('./getIterator');\n\nvar _getIterator2 = _interopRequireDefault(_getIterator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? { value: coll[i], key: i } : null;\n    };\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done) return null;\n        i++;\n        return { value: item.value, key: i };\n    };\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = obj ? Object.keys(obj) : [];\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        return i < len ? { value: obj[key], key } : null;\n    };\n}\n\nfunction createIterator(coll) {\n    if ((0, _isArrayLike2.default)(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = (0, _getIterator2.default)(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\nmodule.exports = exports['default'];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = onlyOnce;\nfunction onlyOnce(fn) {\n    return function (...args) {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    };\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nconst breakLoop = {};\nexports.default = breakLoop;\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = asyncEachOfLimit;\n\nvar _breakLoop = require('./breakLoop');\n\nvar _breakLoop2 = _interopRequireDefault(_breakLoop);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// for async generators\nfunction asyncEachOfLimit(generator, limit, iteratee, callback) {\n    let done = false;\n    let canceled = false;\n    let awaiting = false;\n    let running = 0;\n    let idx = 0;\n\n    function replenish() {\n        //console.log('replenish')\n        if (running >= limit || awaiting || done) return;\n        //console.log('replenish awaiting')\n        awaiting = true;\n        generator.next().then(({ value, done: iterDone }) => {\n            //console.log('got value', value)\n            if (canceled || done) return;\n            awaiting = false;\n            if (iterDone) {\n                done = true;\n                if (running <= 0) {\n                    //console.log('done nextCb')\n                    callback(null);\n                }\n                return;\n            }\n            running++;\n            iteratee(value, idx, iterateeCallback);\n            idx++;\n            replenish();\n        }).catch(handleError);\n    }\n\n    function iterateeCallback(err, result) {\n        //console.log('iterateeCallback')\n        running -= 1;\n        if (canceled) return;\n        if (err) return handleError(err);\n\n        if (err === false) {\n            done = true;\n            canceled = true;\n            return;\n        }\n\n        if (result === _breakLoop2.default || done && running <= 0) {\n            done = true;\n            //console.log('done iterCb')\n            return callback(null);\n        }\n        replenish();\n    }\n\n    function handleError(err) {\n        if (canceled) return;\n        awaiting = false;\n        done = true;\n        callback(err);\n    }\n\n    replenish();\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _once = require('./once');\n\nvar _once2 = _interopRequireDefault(_once);\n\nvar _iterator = require('./iterator');\n\nvar _iterator2 = _interopRequireDefault(_iterator);\n\nvar _onlyOnce = require('./onlyOnce');\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nvar _wrapAsync = require('./wrapAsync');\n\nvar _asyncEachOfLimit = require('./asyncEachOfLimit');\n\nvar _asyncEachOfLimit2 = _interopRequireDefault(_asyncEachOfLimit);\n\nvar _breakLoop = require('./breakLoop');\n\nvar _breakLoop2 = _interopRequireDefault(_breakLoop);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = limit => {\n    return (obj, iteratee, callback) => {\n        callback = (0, _once2.default)(callback);\n        if (limit <= 0) {\n            throw new RangeError('concurrency limit cannot be less than 1');\n        }\n        if (!obj) {\n            return callback(null);\n        }\n        if ((0, _wrapAsync.isAsyncGenerator)(obj)) {\n            return (0, _asyncEachOfLimit2.default)(obj, limit, iteratee, callback);\n        }\n        if ((0, _wrapAsync.isAsyncIterable)(obj)) {\n            return (0, _asyncEachOfLimit2.default)(obj[Symbol.asyncIterator](), limit, iteratee, callback);\n        }\n        var nextElem = (0, _iterator2.default)(obj);\n        var done = false;\n        var canceled = false;\n        var running = 0;\n        var looping = false;\n\n        function iterateeCallback(err, value) {\n            if (canceled) return;\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            } else if (err === false) {\n                done = true;\n                canceled = true;\n            } else if (value === _breakLoop2.default || done && running <= 0) {\n                done = true;\n                return callback(null);\n            } else if (!looping) {\n                replenish();\n            }\n        }\n\n        function replenish() {\n            looping = true;\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, (0, _onlyOnce2.default)(iterateeCallback));\n            }\n            looping = false;\n        }\n\n        replenish();\n    };\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _eachOfLimit2 = require('./internal/eachOfLimit');\n\nvar _eachOfLimit3 = _interopRequireDefault(_eachOfLimit2);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _awaitify = require('./internal/awaitify');\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n  return (0, _eachOfLimit3.default)(limit)(coll, (0, _wrapAsync2.default)(iteratee), callback);\n}\n\nexports.default = (0, _awaitify2.default)(eachOfLimit, 4);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _eachOfLimit = require('./eachOfLimit');\n\nvar _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);\n\nvar _awaitify = require('./internal/awaitify');\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfSeries(coll, iteratee, callback) {\n  return (0, _eachOfLimit2.default)(coll, 1, iteratee, callback);\n}\nexports.default = (0, _awaitify2.default)(eachOfSeries, 3);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = series;\n\nvar _parallel2 = require('./internal/parallel');\n\nvar _parallel3 = _interopRequireDefault(_parallel2);\n\nvar _eachOfSeries = require('./eachOfSeries');\n\nvar _eachOfSeries2 = _interopRequireDefault(_eachOfSeries);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing\n * [async functions]{@link AsyncFunction} to run in series.\n * Each function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @return {Promise} a promise, if no callback is passed\n * @example\n * async.series([\n *     function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     },\n *     function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // results is now equal to ['one', 'two']\n * });\n *\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback){\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equal to: {one: 1, two: 2}\n * });\n */\nfunction series(tasks, callback) {\n  return (0, _parallel3.default)(_eachOfSeries2.default, tasks, callback);\n}\nmodule.exports = exports['default'];","// @ts-ignore\n// tslint:disable-next-line:no-submodule-imports\nimport series from 'async/series';\nimport { CallBack, IHook } from './IHook';\nexport default class SyncHook implements IHook {\n  private tasks: any[];\n  private args: any[] = [];\n  constructor(...args: any[]) {\n    this.tasks = [];\n  }\n\n  public call(...args: any[]): void {\n    this.args = args;\n    return series(this.tasks);\n  }\n  public tap(name: string, cb: CallBack) {\n    this.tasks.push((callback: any) => {\n      cb(...this.args);\n      callback(null, name);\n    });\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _isArrayLike = require('./internal/isArrayLike');\n\nvar _isArrayLike2 = _interopRequireDefault(_isArrayLike);\n\nvar _breakLoop = require('./internal/breakLoop');\n\nvar _breakLoop2 = _interopRequireDefault(_breakLoop);\n\nvar _eachOfLimit = require('./eachOfLimit');\n\nvar _eachOfLimit2 = _interopRequireDefault(_eachOfLimit);\n\nvar _once = require('./internal/once');\n\nvar _once2 = _interopRequireDefault(_once);\n\nvar _onlyOnce = require('./internal/onlyOnce');\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _awaitify = require('./internal/awaitify');\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = (0, _once2.default)(callback);\n    var index = 0,\n        completed = 0,\n        { length } = coll,\n        canceled = false;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err === false) {\n            canceled = true;\n        }\n        if (canceled === true) return;\n        if (err) {\n            callback(err);\n        } else if (++completed === length || value === _breakLoop2.default) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, (0, _onlyOnce2.default)(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nfunction eachOfGeneric(coll, iteratee, callback) {\n    return (0, _eachOfLimit2.default)(coll, Infinity, iteratee, callback);\n}\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nfunction eachOf(coll, iteratee, callback) {\n    var eachOfImplementation = (0, _isArrayLike2.default)(coll) ? eachOfArrayLike : eachOfGeneric;\n    return eachOfImplementation(coll, (0, _wrapAsync2.default)(iteratee), callback);\n}\n\nexports.default = (0, _awaitify2.default)(eachOf, 3);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parallel;\n\nvar _eachOf = require('./eachOf');\n\nvar _eachOf2 = _interopRequireDefault(_eachOf);\n\nvar _parallel2 = require('./internal/parallel');\n\nvar _parallel3 = _interopRequireDefault(_parallel2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n *\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n *\n * @example\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // the results array will equal ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equals to: {one: 1, two: 2}\n * });\n */\nfunction parallel(tasks, callback) {\n  return (0, _parallel3.default)(_eachOf2.default, tasks, callback);\n}\nmodule.exports = exports['default'];","// @ts-ignore\n// tslint:disable-next-line:no-submodule-imports\nimport parallel from 'async/parallel';\nimport { CallBack } from './IHook';\nexport default class AsyncParallelHook {\n  private tasks: any[];\n  constructor(...args: any[]) {\n    this.tasks = [];\n  }\n\n  public promise(...args: any[]) {\n    return parallel(this.tasks);\n  }\n  public tapPromise(name: string, cb: CallBack) {\n    this.tasks.push(async (callback: any) => {\n      await cb();\n      callback(null, name);\n    });\n  }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _once = require('./internal/once');\n\nvar _once2 = _interopRequireDefault(_once);\n\nvar _onlyOnce = require('./internal/onlyOnce');\n\nvar _onlyOnce2 = _interopRequireDefault(_onlyOnce);\n\nvar _wrapAsync = require('./internal/wrapAsync');\n\nvar _wrapAsync2 = _interopRequireDefault(_wrapAsync);\n\nvar _awaitify = require('./internal/awaitify');\n\nvar _awaitify2 = _interopRequireDefault(_awaitify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nfunction waterfall(tasks, callback) {\n    callback = (0, _once2.default)(callback);\n    if (!Array.isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = (0, _wrapAsync2.default)(tasks[taskIndex++]);\n        task(...args, (0, _onlyOnce2.default)(next));\n    }\n\n    function next(err, ...args) {\n        if (err === false) return;\n        if (err || taskIndex === tasks.length) {\n            return callback(err, ...args);\n        }\n        nextTask(args);\n    }\n\n    nextTask([]);\n}\n\nexports.default = (0, _awaitify2.default)(waterfall);\nmodule.exports = exports['default'];","// @ts-ignore\n// tslint:disable-next-line:no-submodule-imports\nimport waterfall from 'async/waterfall';\nimport { CallBack, IHook } from './IHook';\nexport default class SyncWaterfallHook implements IHook {\n  private tasks: any[];\n  constructor(...args: any[]) {\n    this.tasks = [];\n  }\n\n  public call(...args: any[]): void {\n    return waterfall(this.tasks);\n  }\n  public tap(name: string, cb: CallBack) {\n    if (this.tasks.length === 0) {\n      this.tasks.push((callback: any) => {\n        const value = cb();\n        callback(value ? null : false, value);\n      });\n    } else {\n      this.tasks.push((arg: any, callback: any) => {\n        const value = cb();\n        callback(value ? null : false, name);\n      });\n    }\n  }\n}\n","// @ts-ignore\n// tslint:disable-next-line:no-submodule-imports\nimport series from 'async/series';\nimport { CallBack, IHook } from './IHook';\nexport default class SyncBailHook implements IHook {\n  private tasks: any[];\n  constructor(...args: any[]) {\n    this.tasks = [];\n  }\n\n  public call(...args: any[]): void {\n    return series(this.tasks);\n  }\n  public tap(name: string, cb: CallBack) {\n    this.tasks.push((callback: any) => {\n      const err = cb();\n      callback(err, name);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}