{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport { $document } from '../document';\nimport { Event } from '../Event';\nimport { getCanvas } from '../register';\n\nvar TouchEvent = function (_Event) {\n  _inherits(TouchEvent, _Event);\n\n  var _super = _createSuper(TouchEvent);\n\n  function TouchEvent(type) {\n    var _this;\n\n    _classCallCheck(this, TouchEvent);\n\n    _this = _super.call(this, type);\n\n    _defineProperty(_assertThisInitialized(_this), \"touches\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"targetTouches\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"changedTouches\", void 0);\n\n    _this.touches = [];\n    _this.targetTouches = [];\n    _this.changedTouches = [];\n    _this.target = getCanvas();\n    _this.currentTarget = getCanvas();\n    return _this;\n  }\n\n  return TouchEvent;\n}(Event);\n\nfunction mapEvent(event) {\n  var _ref = event || {},\n      _ref$x = _ref.x,\n      x = _ref$x === void 0 ? 0 : _ref$x,\n      _ref$y = _ref.y,\n      y = _ref$y === void 0 ? 0 : _ref$y,\n      _ref$clientX = _ref.clientX,\n      clientX = _ref$clientX === void 0 ? 0 : _ref$clientX,\n      _ref$clientY = _ref.clientY,\n      clientY = _ref$clientY === void 0 ? 0 : _ref$clientY;\n\n  if (Object.keys(event).indexOf('x') !== -1) {\n    event.pageX = event.clientX = x;\n    event.pageY = event.clientY = y;\n  } else {\n    event.x = clientX;\n    event.y = clientY;\n  }\n}\n\nfunction eventHandlerFactory(type) {\n  return function (rawEvent) {\n    var event = new TouchEvent(type);\n    event.changedTouches = rawEvent.changedTouches;\n    event.touches = rawEvent.touches;\n    event.targetTouches = Array.prototype.slice.call(rawEvent.touches);\n    event.timeStamp = rawEvent.timeStamp;\n    event.changedTouches.forEach(function (e) {\n      return mapEvent(e);\n    });\n    event.touches.forEach(function (e) {\n      return mapEvent(e);\n    });\n    event.targetTouches.forEach(function (e) {\n      return mapEvent(e);\n    });\n    $document.dispatchEvent(event);\n  };\n}\n\nfunction eventMapHandlerFactory(type) {\n  return function (rawEvent) {\n    rawEvent.type = type;\n    $document.dispatchEvent(rawEvent);\n  };\n}\n\nvar dispatchTouchStart = eventHandlerFactory('touchstart');\nvar dispatchTouchMove = eventHandlerFactory('touchmove');\nvar dispatchTouchEnd = eventHandlerFactory('touchend');\nvar dispatchMapCameraParams = eventMapHandlerFactory('mapCameaParams');\nexport { dispatchTouchStart, dispatchTouchMove, dispatchTouchEnd, dispatchMapCameraParams };","map":{"version":3,"sources":["../../../src/mini-adapter/EventIniter/TouchEvent.ts"],"names":["TouchEvent","Event","getCanvas","x","y","clientX","clientY","event","Object","rawEvent","Array","mapEvent","$document","dispatchTouchStart","eventHandlerFactory","dispatchTouchMove","dispatchTouchEnd","dispatchMapCameraParams","eventMapHandlerFactory"],"mappings":"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","sourcesContent":["// @ts-nocheck\n// tslint:disable\nimport { $document } from '../document';\nimport { Event } from '../Event';\nimport { getCanvas } from '../register';\n\nclass TouchEvent extends Event {\n  public touches: any[];\n  public targetTouches: any[];\n  public changedTouches: any[];\n\n  constructor(type) {\n    super(type);\n\n    this.touches = [];\n    this.targetTouches = [];\n    this.changedTouches = [];\n\n    this.target = getCanvas();\n    this.currentTarget = getCanvas();\n  }\n}\n\nfunction mapEvent(event) {\n  const { x = 0, y = 0, clientX = 0, clientY = 0 } = event || {};\n  // 小程序不支持Object.hasOwnProperty\n  // (抹平不同的view事件)[https://docs.alipay.com/mini/framework/event-object]\n  if (Object.keys(event).indexOf('x') !== -1) {\n    event.pageX = event.clientX = x;\n    event.pageY = event.clientY = y;\n  } else {\n    event.x = clientX;\n    event.y = clientY;\n  }\n}\n\nfunction eventHandlerFactory(type) {\n  return (rawEvent) => {\n    const event = new TouchEvent(type);\n\n    event.changedTouches = rawEvent.changedTouches;\n    event.touches = rawEvent.touches;\n    event.targetTouches = Array.prototype.slice.call(rawEvent.touches);\n    event.timeStamp = rawEvent.timeStamp;\n\n    event.changedTouches.forEach((e) => mapEvent(e));\n    event.touches.forEach((e) => mapEvent(e));\n    event.targetTouches.forEach((e) => mapEvent(e));\n\n    $document.dispatchEvent(event);\n  };\n}\n\nfunction eventMapHandlerFactory(type) {\n  return function (rawEvent) {\n    rawEvent.type = type;\n    $document.dispatchEvent(rawEvent);\n  };\n}\n\nconst dispatchTouchStart = eventHandlerFactory('touchstart');\nconst dispatchTouchMove = eventHandlerFactory('touchmove');\nconst dispatchTouchEnd = eventHandlerFactory('touchend');\nconst dispatchMapCameraParams = eventMapHandlerFactory('mapCameaParams');\nexport { dispatchTouchStart, dispatchTouchMove, dispatchTouchEnd, dispatchMapCameraParams };\n"]},"metadata":{},"sourceType":"module"}