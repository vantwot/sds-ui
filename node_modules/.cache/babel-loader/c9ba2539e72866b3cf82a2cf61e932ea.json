{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Choropleth = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar util_1 = require(\"@antv/util\");\n\nvar plot_1 = require(\"../../core/plot\");\n\nvar utils_1 = require(\"../../utils\");\n\nvar constants_1 = require(\"./constants\");\n\nvar area_layer_1 = require(\"../../layers/area-layer\");\n\nvar text_layer_1 = require(\"../../layers/text-layer\");\n\nvar types_1 = require(\"../../types\");\n\nvar layer_group_1 = require(\"../../core/layer/layer-group\");\n\nvar layer_1 = require(\"./layer\");\n\nvar cache_1 = require(\"./cache\");\n\nvar helper_1 = require(\"./helper\");\n\nvar Choropleth =\n/** @class */\nfunction (_super) {\n  (0, tslib_1.__extends)(Choropleth, _super);\n\n  function Choropleth() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * 图表类型\n     */\n\n\n    _this.type = plot_1.Plot.PlotType.Choropleth;\n    /**\n     * 国界数据\n     */\n\n    _this.chinaBoundaryData = {\n      type: 'FeatureCollection',\n      features: []\n    };\n    /**\n     * 当前行政数据数据\n     */\n\n    _this.currentDistrictData = {\n      type: 'FeatureCollection',\n      features: []\n    };\n    /**\n     * 数据钻取路径\n     */\n\n    _this.drillSteps = [];\n    /**\n     * 钻取行政栈数据\n     */\n\n    _this.drillStacks = [];\n    /**\n     * 向下钻取事件回调\n     */\n\n    _this.onDrillDownHander = function (event) {\n      var _a;\n\n      var _b = _this.options.drill,\n          steps = _b.steps,\n          onDown = _b.onDown;\n      var properties = (_a = event.feature) === null || _a === void 0 ? void 0 : _a.properties;\n      var adcode = properties.adcode; // 还没有开始钻取\n\n      if (!_this.drillStacks.length) {\n        var _c = _this.options.viewLevel,\n            level_1 = _c.level,\n            adcode_1 = _c.adcode,\n            _d = _c.granularity,\n            granularity_1 = _d === void 0 ? constants_1.DEFAULT_AREA_GRANULARITY[level_1] : _d;\n        var config = (0, helper_1.getDrillStepDefaultConfig)(_this.options);\n        _this.drillStacks = [{\n          level: level_1,\n          adcode: adcode_1,\n          granularity: granularity_1,\n          config: config\n        }];\n      } // 已经下钻到最后\n\n\n      if (_this.drillStacks.length === steps.length + 1) {\n        return;\n      } // 已开始下钻\n\n\n      var from = _this.drillStacks.slice(-1)[0];\n\n      var depth = _this.drillStacks.length - 1;\n      var _e = _this.drillSteps[depth],\n          level = _e.level,\n          _f = _e.granularity,\n          granularity = _f === void 0 ? constants_1.DEFAULT_AREA_GRANULARITY[level] : _f,\n          drillConfig = (0, tslib_1.__rest)(_e, [\"level\", \"granularity\"]);\n      var downParams = {\n        from: {\n          level: from.level,\n          adcode: from.adcode,\n          granularity: from.granularity\n        },\n        to: {\n          level: level,\n          adcode: adcode,\n          granularity: granularity,\n          properties: properties\n        }\n      };\n\n      var callback = function (config) {\n        if (config === void 0) {\n          config = {};\n        }\n\n        var view = {\n          level: level,\n          adcode: adcode,\n          granularity: granularity\n        };\n        var mergeConfig = (0, utils_1.deepAssign)({}, drillConfig, config);\n\n        _this.changeView(view, mergeConfig).then(function (drillData) {\n          if (drillData) {\n            _this.drillStacks.push(drillData);\n\n            _this.emit('drilldown', downParams);\n          }\n        });\n      };\n\n      if (onDown) {\n        onDown(downParams.from, downParams.to, callback);\n      } else {\n        callback();\n      }\n    };\n    /**\n     * 向上钻取事件回调\n     */\n\n\n    _this.onDrillUpHander = function () {\n      var onUp = _this.options.drill.onUp; // 已经上卷到最高层级\n\n      var isTopDrillStack = _this.drillStacks.length === 0 || _this.drillStacks.length === 1;\n\n      if (isTopDrillStack) {\n        return;\n      }\n\n      var lastIndex = _this.drillStacks.length - 1;\n      var from = _this.drillStacks[lastIndex];\n      var to = _this.drillStacks[lastIndex - 1];\n      var upParams = {\n        from: {\n          level: from.level,\n          adcode: from.adcode,\n          granularity: from.granularity\n        },\n        to: {\n          level: to.level,\n          adcode: to.adcode,\n          granularity: to.granularity\n        }\n      };\n\n      var callback = function (config) {\n        if (config === void 0) {\n          config = {};\n        }\n\n        var view = upParams.to;\n        var mergeConfig = (0, utils_1.deepAssign)({}, to.config, config);\n\n        _this.changeView(view, mergeConfig).then(function (drillData) {\n          if (drillData) {\n            _this.drillStacks.pop();\n\n            _this.emit('drillup', upParams);\n          }\n        });\n      };\n\n      if (onUp) {\n        onUp(upParams.from, upParams.to, callback);\n      } else {\n        callback();\n      }\n    };\n\n    return _this;\n  }\n  /**\n   * 初始化图层\n   */\n\n\n  Choropleth.prototype.initLayers = function () {\n    var _this = this;\n\n    this.getInitDistrictData().then(function () {\n      _this.source = _this.createSource();\n\n      _this.render();\n\n      _this.inited = true;\n    });\n  };\n  /**\n   * 渲染\n   */\n\n\n  Choropleth.prototype.render = function () {\n    console.time('l7plot choropleth render time');\n\n    if (this.inited) {\n      this.updateLayers(this.options);\n      this.updateComponents(); // this.fillAreaLayer.render();\n    } else {\n      var layerGroup = this.createLayers(this.source);\n      this.layerGroup = layerGroup;\n      this.onLayersLoaded();\n      layerGroup.addTo(this.scene);\n    }\n\n    this.initLayersEvent();\n    console.timeEnd('l7plot choropleth render time');\n  };\n  /**\n   * 更新: 更新配置且重新渲染\n   */\n\n\n  Choropleth.prototype.update = function (options) {\n    var _this = this;\n\n    var _a, _b, _c;\n\n    this.updateOption(options);\n\n    if (options.map && !(0, util_1.isEqual)(this.lastOptions.map, this.options.map)) {\n      this.updateMap(options.map);\n    } // 下钻路径发生更新\n\n\n    if (options.drill && options.drill.enabled !== false && !(0, util_1.isEqual)((_a = this.lastOptions.drill) === null || _a === void 0 ? void 0 : _a.steps, (_b = this.options.drill) === null || _b === void 0 ? void 0 : _b.steps)) {\n      this.drillReset();\n    } // 行政级别及范围发生更新\n\n\n    if (options.viewLevel && !(0, util_1.isEqual)(this.lastOptions.viewLevel, this.options.viewLevel)) {\n      var geoData = (_c = options.source) === null || _c === void 0 ? void 0 : _c.joinBy.geoData;\n      console.time('l7plot choropleth update viewLevel time');\n      this.getDistrictData(geoData).then(function () {\n        var _a = _this.options.source,\n            data = _a.data,\n            sourceConfig = (0, tslib_1.__rest)(_a, [\"data\"]);\n\n        _this.changeData(data, sourceConfig);\n\n        _this.render();\n\n        console.timeEnd('l7plot choropleth update viewLevel time');\n      });\n    } else {\n      if (options.source && !(0, util_1.isEqual)(this.lastOptions.source, this.options.source)) {\n        var _d = this.options.source,\n            data = _d.data,\n            sourceConfig = (0, tslib_1.__rest)(_d, [\"data\"]);\n        this.changeData(data, sourceConfig);\n      }\n\n      this.render(); // this.fillAreaLayer.render();\n    }\n  };\n  /**\n   * 获取默认配置\n   */\n\n\n  Choropleth.prototype.getDefaultOptions = function () {\n    return Choropleth.DefaultOptions;\n  };\n  /**\n   * 解析 source 配置\n   */\n\n\n  Choropleth.prototype.parserSourceConfig = function (source) {\n    var joinData = source.data,\n        joinBy = source.joinBy,\n        sourceCFG = (0, tslib_1.__rest)(source, [\"data\", \"joinBy\"]);\n    var sourceField = joinBy.sourceField,\n        targetField = joinBy.geoField,\n        geoData = joinBy.geoData;\n    var data = geoData;\n    var config = {\n      type: 'join',\n      sourceField: sourceField,\n      targetField: targetField,\n      data: joinData\n    };\n\n    if (sourceCFG.transforms) {\n      sourceCFG.transforms.push(config);\n    } else {\n      sourceCFG.transforms = [config];\n    }\n\n    if (sourceCFG['parser']) {\n      delete sourceCFG['parser'];\n    }\n\n    return {\n      data: data,\n      sourceCFG: sourceCFG\n    };\n  };\n  /**\n   * 创建 source 实例\n   */\n\n\n  Choropleth.prototype.createSource = function () {\n    var _a = this.parserSourceConfig(this.options.source),\n        data = _a.data,\n        sourceCFG = _a.sourceCFG;\n\n    var source = new types_1.Source(data, sourceCFG);\n    return source;\n  };\n  /**\n   * 更新: 更新数据\n   */\n\n\n  Choropleth.prototype.changeData = function (data, cfg) {\n    console.time('l7plot choropleth update data time');\n    this.options.source = (0, utils_1.deepAssign)({}, this.options.source, (0, tslib_1.__assign)({\n      data: data\n    }, cfg));\n\n    var _a = this.parserSourceConfig(this.options.source),\n        geoData = _a.data,\n        sourceCFG = _a.sourceCFG;\n\n    this.source.setData(geoData, sourceCFG);\n    console.timeEnd('l7plot choropleth update data time'); // 更新 legend\n\n    if (this.options.legend) {\n      this.updateLegendControl(this.options.legend);\n    }\n  };\n  /**\n   * 创建图层\n   */\n\n\n  Choropleth.prototype.createLayers = function (source) {\n    this.fillAreaLayer = new area_layer_1.AreaLayer((0, tslib_1.__assign)({\n      name: 'fillAreaLayer',\n      source: source\n    }, (0, util_1.pick)(this.options, area_layer_1.AreaLayer.LayerOptionsKeys)));\n    var layerGroup = new layer_group_1.LayerGroup([this.fillAreaLayer]);\n\n    if (this.options.chinaBorder) {\n      var _a = (0, layer_1.createCountryBoundaryLayer)(this.chinaBoundaryData, this.options),\n          chinaBoundaryLayer = _a.chinaBoundaryLayer,\n          chinaDisputeBoundaryLayer = _a.chinaDisputeBoundaryLayer;\n\n      this.chinaBoundaryLayer = chinaBoundaryLayer;\n      this.chinaDisputeBoundaryLayer = chinaDisputeBoundaryLayer;\n      layerGroup.addLayer(this.chinaBoundaryLayer);\n      layerGroup.addLayer(this.chinaDisputeBoundaryLayer);\n    }\n\n    if (this.options.label) {\n      this.labelLayer = this.createLabelLayer(source, this.options.label);\n      layerGroup.addLayer(this.labelLayer);\n    }\n\n    return layerGroup;\n  };\n  /**\n   * 创建数据标签图层\n   */\n\n\n  Choropleth.prototype.createLabelLayer = function (source, label) {\n    var _this = this;\n\n    var data = source['originData'].features.map(function (_a) {\n      var properties = _a.properties;\n      return Object.assign({}, properties, {\n        centroid: properties['centroid'] || properties['center']\n      });\n    }).filter(function (_a) {\n      var centroid = _a.centroid;\n      return centroid;\n    });\n    var _a = this.options,\n        visible = _a.visible,\n        minZoom = _a.minZoom,\n        maxZoom = _a.maxZoom,\n        _b = _a.zIndex,\n        zIndex = _b === void 0 ? 0 : _b;\n    var textLayer = new text_layer_1.TextLayer((0, tslib_1.__assign)({\n      name: 'labelLayer',\n      source: {\n        data: data,\n        parser: {\n          type: 'json',\n          coordinates: 'centroid'\n        },\n        transforms: source.transforms\n      },\n      visible: visible,\n      minZoom: minZoom,\n      maxZoom: maxZoom,\n      zIndex: zIndex + 0.1\n    }, label));\n    source.on('update', function () {\n      var data = _this.source['originData'].features.map(function (_a) {\n        var properties = _a.properties;\n        return properties;\n      }).filter(function (_a) {\n        var centroid = _a.centroid;\n        return centroid;\n      });\n\n      textLayer.layer.setData(data);\n    });\n    return textLayer;\n  };\n  /**\n   * 更新图层\n   */\n\n\n  Choropleth.prototype.updateLayers = function (options) {\n    var fillAreaLayerConfig = (0, util_1.pick)(options, area_layer_1.AreaLayer.LayerOptionsKeys);\n    this.fillAreaLayer.update(fillAreaLayerConfig);\n\n    if (options.chinaBorder) {\n      if (!this.chinaBoundaryLayer) {\n        var _a = (0, layer_1.createCountryBoundaryLayer)(this.chinaBoundaryData, this.options),\n            chinaBoundaryLayer = _a.chinaBoundaryLayer,\n            chinaDisputeBoundaryLayer = _a.chinaDisputeBoundaryLayer;\n\n        this.chinaBoundaryLayer = chinaBoundaryLayer;\n        this.chinaDisputeBoundaryLayer = chinaDisputeBoundaryLayer;\n        this.layerGroup.addLayer(this.chinaBoundaryLayer);\n        this.layerGroup.addLayer(this.chinaDisputeBoundaryLayer);\n      }\n    } else {\n      if (this.chinaBoundaryLayer) {\n        this.layerGroup.removeLayer(this.chinaBoundaryLayer);\n      }\n\n      if (this.chinaDisputeBoundaryLayer) {\n        this.layerGroup.removeLayer(this.chinaDisputeBoundaryLayer);\n      }\n    }\n\n    if (options.label) {\n      if (this.labelLayer) {\n        this.labelLayer.update((0, tslib_1.__assign)({}, options.label));\n      } else {\n        this.labelLayer = this.createLabelLayer(this.source, options.label);\n        this.layerGroup.addLayer(this.labelLayer);\n      }\n    } else {\n      if (this.labelLayer) {\n        this.layerGroup.removeLayer(this.labelLayer);\n      }\n    }\n  };\n  /**\n   * 初始化图层事件\n   */\n\n\n  Choropleth.prototype.initLayersEvent = function () {\n    this.initDrillEvent();\n  };\n  /**\n   * 初始化钻取事件\n   */\n\n\n  Choropleth.prototype.initDrillEvent = function () {\n    // 更新：取消上次绑定事件\n    if (this.lastOptions.drill) {\n      var _a = this.lastOptions.drill,\n          _b = _a.triggerUp,\n          triggerUp_1 = _b === void 0 ? 'unclick' : _b,\n          _c = _a.triggerDown,\n          triggerDown_1 = _c === void 0 ? 'click' : _c;\n      this.fillAreaLayer.off(triggerUp_1, this.onDrillUpHander);\n      this.fillAreaLayer.off(triggerDown_1, this.onDrillDownHander);\n    } // 没有下钻\n\n\n    if (!this.options.drill || this.options.drill.enabled === false) {\n      return;\n    }\n\n    var _d = this.options.drill,\n        steps = _d.steps,\n        _e = _d.triggerUp,\n        triggerUp = _e === void 0 ? 'unclick' : _e,\n        _f = _d.triggerDown,\n        triggerDown = _f === void 0 ? 'click' : _f;\n    var dillSteps = steps.map(function (step) {\n      if (typeof step === 'string') {\n        return {\n          level: step,\n          granularity: constants_1.DEFAULT_AREA_GRANULARITY[step]\n        };\n      }\n\n      if (!step.granularity) {\n        step.granularity = constants_1.DEFAULT_AREA_GRANULARITY[step.level];\n      }\n\n      return step;\n    }); // 初始化或钻取路径更新时\n\n    if (!(0, helper_1.isEqualDrillSteps)(dillSteps, this.drillSteps)) {\n      this.drillSteps = dillSteps;\n      this.drillStacks = [];\n    } // 上卷事件\n\n\n    this.fillAreaLayer.on(triggerUp, this.onDrillUpHander); // 下钻事件\n\n    this.fillAreaLayer.on(triggerDown, this.onDrillDownHander);\n  };\n  /**\n   * 重置钻取缓存数据\n   */\n\n\n  Choropleth.prototype.drillReset = function () {\n    this.drillStacks = [];\n  };\n  /**\n   * 实现 legend 配置项\n   */\n\n\n  Choropleth.prototype.getLegendOptions = function () {\n    var colorLegendItems = this.fillAreaLayer.getColorLegendItems();\n\n    if (colorLegendItems.length !== 0) {\n      return {\n        type: 'category',\n        items: colorLegendItems\n      };\n    }\n\n    return {};\n  };\n  /**\n   * 请求数据\n   */\n\n\n  Choropleth.prototype.fetchData = function (level, adcode, granularity) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {\n      var fileName, cacheArea, _a, url, type, extension, response, data;\n\n      return (0, tslib_1.__generator)(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            fileName = \"\".concat(adcode, \"_\").concat(level, \"_\").concat(granularity);\n            cacheArea = (0, cache_1.getCacheArea)(fileName);\n            if (cacheArea) return [2\n            /*return*/\n            , cacheArea];\n            _a = (0, helper_1.getGeoAreaConfig)(this.options.geoArea), url = _a.url, type = _a.type, extension = _a.extension;\n            return [4\n            /*yield*/\n            , fetch(\"\".concat(url, \"/\").concat(level, \"/\").concat(fileName, \".\").concat(extension))];\n\n          case 1:\n            response = _b.sent();\n            return [4\n            /*yield*/\n            , response.json()];\n\n          case 2:\n            data = _b.sent();\n\n            if (type === 'topojson') {\n              data = (0, helper_1.topojson2geojson)(data);\n            }\n\n            (0, cache_1.registerCacheArea)(fileName, data);\n            return [2\n            /*return*/\n            , data];\n        }\n      });\n    });\n  };\n  /**\n   * 请求初始化区域数据\n   */\n\n\n  Choropleth.prototype.getInitDistrictData = function () {\n    var _a;\n\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {\n      var fetchChinaBoundaryData, geoData, err_1;\n\n      var _b;\n\n      return (0, tslib_1.__generator)(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            fetchChinaBoundaryData = this.fetchData('country', '100000', 'boundary');\n            geoData = (_a = this.options.source) === null || _a === void 0 ? void 0 : _a.joinBy.geoData;\n            _c.label = 1;\n\n          case 1:\n            _c.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , Promise.all([fetchChinaBoundaryData, this.getDistrictData(geoData)])];\n\n          case 2:\n            _b = tslib_1.__read.apply(void 0, [_c.sent(), 1]), this.chinaBoundaryData = _b[0];\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            err_1 = _c.sent();\n            throw new Error(\"Failed to get china boundary data\\uFF0C\".concat(err_1));\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * 请求区域数据\n   */\n\n\n  Choropleth.prototype.getDistrictData = function (geoData) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {\n      var _a, level, adcode, _b, granularity, fetchCurrentDistrictData, _c, err_2;\n\n      return (0, tslib_1.__generator)(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _a = this.options.viewLevel, level = _a.level, adcode = _a.adcode, _b = _a.granularity, granularity = _b === void 0 ? constants_1.DEFAULT_AREA_GRANULARITY[level] : _b;\n            fetchCurrentDistrictData = geoData ? Promise.resolve(geoData) : this.fetchData(level, adcode, granularity);\n            _d.label = 1;\n\n          case 1:\n            _d.trys.push([1, 3,, 4]);\n\n            _c = this;\n            return [4\n            /*yield*/\n            , fetchCurrentDistrictData];\n\n          case 2:\n            _c.currentDistrictData = _d.sent();\n            this.options.source = (0, utils_1.deepAssign)({}, this.options.source, {\n              joinBy: {\n                geoData: this.currentDistrictData\n              }\n            });\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            err_2 = _d.sent();\n            throw new Error(\"Failed to get district data\\uFF0C\".concat(err_2));\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * 向下钻取方法\n   */\n\n\n  Choropleth.prototype.drillDown = function (view, config) {\n    var _this = this;\n\n    if (config === void 0) {\n      config = {};\n    }\n\n    this.changeView(view, config).then(function (drillData) {\n      drillData && _this.drillStacks.push(drillData);\n    });\n  };\n  /**\n   * 向上钻取方法\n   */\n\n\n  Choropleth.prototype.drillUp = function (config) {\n    if (config === void 0) {\n      config = {};\n    } // 已经上卷到最高层级\n\n\n    var isTopDrillStack = this.drillStacks.length === 0 || this.drillStacks.length === 1;\n\n    if (isTopDrillStack) {\n      return;\n    }\n\n    var lastIndex = this.drillStacks.length - 1;\n    var _a = this.drillStacks[lastIndex - 1],\n        drillConfig = _a.config,\n        view = (0, tslib_1.__rest)(_a, [\"config\"]);\n    var mergeConfig = (0, utils_1.deepAssign)({}, drillConfig, config);\n    this.changeView(view, mergeConfig);\n    this.drillStacks.pop();\n  };\n  /**\n   * 更新显示区域\n   */\n\n\n  Choropleth.prototype.changeView = function (view, config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {\n      var level, adcode, _a, granularity, geoData, mergeConfig, drillData;\n\n      return (0, tslib_1.__generator)(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            level = view.level, adcode = view.adcode, _a = view.granularity, granularity = _a === void 0 ? constants_1.DEFAULT_AREA_GRANULARITY[level] : _a;\n            return [4\n            /*yield*/\n            , this.fetchData(level, adcode, granularity)];\n\n          case 1:\n            geoData = _b.sent();\n            if (!geoData.features.length) return [2\n            /*return*/\n            ];\n            mergeConfig = (0, utils_1.deepAssign)({}, (0, helper_1.getDrillStepDefaultConfig)(this.options), config, {\n              viewLevel: {\n                level: level,\n                adcode: adcode,\n                granularity: granularity\n              },\n              source: {\n                joinBy: {\n                  geoData: geoData\n                }\n              }\n            });\n            this.update(mergeConfig);\n            drillData = {\n              level: level,\n              adcode: adcode,\n              granularity: granularity,\n              config: mergeConfig\n            };\n            return [2\n            /*return*/\n            , drillData];\n        }\n      });\n    });\n  };\n  /**\n   * 默认配置项\n   */\n\n\n  Choropleth.DefaultOptions = constants_1.DEFAULT_OPTIONS;\n  /**\n   * 地理数据地址\n   */\n\n  Choropleth.GeoDataUrl = constants_1.GEO_DATA_URL;\n  /**\n   * 行政数据地址\n   */\n\n  Choropleth.GeoAreaUrl = constants_1.GEO_AREA_URL;\n  return Choropleth;\n}(plot_1.Plot);\n\nexports.Choropleth = Choropleth;","map":{"version":3,"sources":["../../../../src/plots/choropleth/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Choropleth = void 0;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar plot_1 = require(\"../../core/plot\");\nvar utils_1 = require(\"../../utils\");\nvar constants_1 = require(\"./constants\");\nvar area_layer_1 = require(\"../../layers/area-layer\");\nvar text_layer_1 = require(\"../../layers/text-layer\");\nvar types_1 = require(\"../../types\");\nvar layer_group_1 = require(\"../../core/layer/layer-group\");\nvar layer_1 = require(\"./layer\");\nvar cache_1 = require(\"./cache\");\nvar helper_1 = require(\"./helper\");\nvar Choropleth = /** @class */ (function (_super) {\n    (0, tslib_1.__extends)(Choropleth, _super);\n    function Choropleth() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * 图表类型\n         */\n        _this.type = plot_1.Plot.PlotType.Choropleth;\n        /**\n         * 国界数据\n         */\n        _this.chinaBoundaryData = { type: 'FeatureCollection', features: [] };\n        /**\n         * 当前行政数据数据\n         */\n        _this.currentDistrictData = { type: 'FeatureCollection', features: [] };\n        /**\n         * 数据钻取路径\n         */\n        _this.drillSteps = [];\n        /**\n         * 钻取行政栈数据\n         */\n        _this.drillStacks = [];\n        /**\n         * 向下钻取事件回调\n         */\n        _this.onDrillDownHander = function (event) {\n            var _a;\n            var _b = _this.options.drill, steps = _b.steps, onDown = _b.onDown;\n            var properties = (_a = event.feature) === null || _a === void 0 ? void 0 : _a.properties;\n            var adcode = properties.adcode;\n            // 还没有开始钻取\n            if (!_this.drillStacks.length) {\n                var _c = _this.options.viewLevel, level_1 = _c.level, adcode_1 = _c.adcode, _d = _c.granularity, granularity_1 = _d === void 0 ? constants_1.DEFAULT_AREA_GRANULARITY[level_1] : _d;\n                var config = (0, helper_1.getDrillStepDefaultConfig)(_this.options);\n                _this.drillStacks = [{ level: level_1, adcode: adcode_1, granularity: granularity_1, config: config }];\n            }\n            // 已经下钻到最后\n            if (_this.drillStacks.length === steps.length + 1) {\n                return;\n            }\n            // 已开始下钻\n            var from = _this.drillStacks.slice(-1)[0];\n            var depth = _this.drillStacks.length - 1;\n            var _e = _this.drillSteps[depth], level = _e.level, _f = _e.granularity, granularity = _f === void 0 ? constants_1.DEFAULT_AREA_GRANULARITY[level] : _f, drillConfig = (0, tslib_1.__rest)(_e, [\"level\", \"granularity\"]);\n            var downParams = {\n                from: { level: from.level, adcode: from.adcode, granularity: from.granularity },\n                to: { level: level, adcode: adcode, granularity: granularity, properties: properties },\n            };\n            var callback = function (config) {\n                if (config === void 0) { config = {}; }\n                var view = { level: level, adcode: adcode, granularity: granularity };\n                var mergeConfig = (0, utils_1.deepAssign)({}, drillConfig, config);\n                _this.changeView(view, mergeConfig).then(function (drillData) {\n                    if (drillData) {\n                        _this.drillStacks.push(drillData);\n                        _this.emit('drilldown', downParams);\n                    }\n                });\n            };\n            if (onDown) {\n                onDown(downParams.from, downParams.to, callback);\n            }\n            else {\n                callback();\n            }\n        };\n        /**\n         * 向上钻取事件回调\n         */\n        _this.onDrillUpHander = function () {\n            var onUp = _this.options.drill.onUp;\n            // 已经上卷到最高层级\n            var isTopDrillStack = _this.drillStacks.length === 0 || _this.drillStacks.length === 1;\n            if (isTopDrillStack) {\n                return;\n            }\n            var lastIndex = _this.drillStacks.length - 1;\n            var from = _this.drillStacks[lastIndex];\n            var to = _this.drillStacks[lastIndex - 1];\n            var upParams = {\n                from: { level: from.level, adcode: from.adcode, granularity: from.granularity },\n                to: { level: to.level, adcode: to.adcode, granularity: to.granularity },\n            };\n            var callback = function (config) {\n                if (config === void 0) { config = {}; }\n                var view = upParams.to;\n                var mergeConfig = (0, utils_1.deepAssign)({}, to.config, config);\n                _this.changeView(view, mergeConfig).then(function (drillData) {\n                    if (drillData) {\n                        _this.drillStacks.pop();\n                        _this.emit('drillup', upParams);\n                    }\n                });\n            };\n            if (onUp) {\n                onUp(upParams.from, upParams.to, callback);\n            }\n            else {\n                callback();\n            }\n        };\n        return _this;\n    }\n    /**\n     * 初始化图层\n     */\n    Choropleth.prototype.initLayers = function () {\n        var _this = this;\n        this.getInitDistrictData().then(function () {\n            _this.source = _this.createSource();\n            _this.render();\n            _this.inited = true;\n        });\n    };\n    /**\n     * 渲染\n     */\n    Choropleth.prototype.render = function () {\n        console.time('l7plot choropleth render time');\n        if (this.inited) {\n            this.updateLayers(this.options);\n            this.updateComponents();\n            // this.fillAreaLayer.render();\n        }\n        else {\n            var layerGroup = this.createLayers(this.source);\n            this.layerGroup = layerGroup;\n            this.onLayersLoaded();\n            layerGroup.addTo(this.scene);\n        }\n        this.initLayersEvent();\n        console.timeEnd('l7plot choropleth render time');\n    };\n    /**\n     * 更新: 更新配置且重新渲染\n     */\n    Choropleth.prototype.update = function (options) {\n        var _this = this;\n        var _a, _b, _c;\n        this.updateOption(options);\n        if (options.map && !(0, util_1.isEqual)(this.lastOptions.map, this.options.map)) {\n            this.updateMap(options.map);\n        }\n        // 下钻路径发生更新\n        if (options.drill &&\n            options.drill.enabled !== false &&\n            !(0, util_1.isEqual)((_a = this.lastOptions.drill) === null || _a === void 0 ? void 0 : _a.steps, (_b = this.options.drill) === null || _b === void 0 ? void 0 : _b.steps)) {\n            this.drillReset();\n        }\n        // 行政级别及范围发生更新\n        if (options.viewLevel && !(0, util_1.isEqual)(this.lastOptions.viewLevel, this.options.viewLevel)) {\n            var geoData = (_c = options.source) === null || _c === void 0 ? void 0 : _c.joinBy.geoData;\n            console.time('l7plot choropleth update viewLevel time');\n            this.getDistrictData(geoData).then(function () {\n                var _a = _this.options.source, data = _a.data, sourceConfig = (0, tslib_1.__rest)(_a, [\"data\"]);\n                _this.changeData(data, sourceConfig);\n                _this.render();\n                console.timeEnd('l7plot choropleth update viewLevel time');\n            });\n        }\n        else {\n            if (options.source && !(0, util_1.isEqual)(this.lastOptions.source, this.options.source)) {\n                var _d = this.options.source, data = _d.data, sourceConfig = (0, tslib_1.__rest)(_d, [\"data\"]);\n                this.changeData(data, sourceConfig);\n            }\n            this.render();\n            // this.fillAreaLayer.render();\n        }\n    };\n    /**\n     * 获取默认配置\n     */\n    Choropleth.prototype.getDefaultOptions = function () {\n        return Choropleth.DefaultOptions;\n    };\n    /**\n     * 解析 source 配置\n     */\n    Choropleth.prototype.parserSourceConfig = function (source) {\n        var joinData = source.data, joinBy = source.joinBy, sourceCFG = (0, tslib_1.__rest)(source, [\"data\", \"joinBy\"]);\n        var sourceField = joinBy.sourceField, targetField = joinBy.geoField, geoData = joinBy.geoData;\n        var data = geoData;\n        var config = { type: 'join', sourceField: sourceField, targetField: targetField, data: joinData };\n        if (sourceCFG.transforms) {\n            sourceCFG.transforms.push(config);\n        }\n        else {\n            sourceCFG.transforms = [config];\n        }\n        if (sourceCFG['parser']) {\n            delete sourceCFG['parser'];\n        }\n        return { data: data, sourceCFG: sourceCFG };\n    };\n    /**\n     * 创建 source 实例\n     */\n    Choropleth.prototype.createSource = function () {\n        var _a = this.parserSourceConfig(this.options.source), data = _a.data, sourceCFG = _a.sourceCFG;\n        var source = new types_1.Source(data, sourceCFG);\n        return source;\n    };\n    /**\n     * 更新: 更新数据\n     */\n    Choropleth.prototype.changeData = function (data, cfg) {\n        console.time('l7plot choropleth update data time');\n        this.options.source = (0, utils_1.deepAssign)({}, this.options.source, (0, tslib_1.__assign)({ data: data }, cfg));\n        var _a = this.parserSourceConfig(this.options.source), geoData = _a.data, sourceCFG = _a.sourceCFG;\n        this.source.setData(geoData, sourceCFG);\n        console.timeEnd('l7plot choropleth update data time');\n        // 更新 legend\n        if (this.options.legend) {\n            this.updateLegendControl(this.options.legend);\n        }\n    };\n    /**\n     * 创建图层\n     */\n    Choropleth.prototype.createLayers = function (source) {\n        this.fillAreaLayer = new area_layer_1.AreaLayer((0, tslib_1.__assign)({ name: 'fillAreaLayer', source: source }, (0, util_1.pick)(this.options, area_layer_1.AreaLayer.LayerOptionsKeys)));\n        var layerGroup = new layer_group_1.LayerGroup([this.fillAreaLayer]);\n        if (this.options.chinaBorder) {\n            var _a = (0, layer_1.createCountryBoundaryLayer)(this.chinaBoundaryData, this.options), chinaBoundaryLayer = _a.chinaBoundaryLayer, chinaDisputeBoundaryLayer = _a.chinaDisputeBoundaryLayer;\n            this.chinaBoundaryLayer = chinaBoundaryLayer;\n            this.chinaDisputeBoundaryLayer = chinaDisputeBoundaryLayer;\n            layerGroup.addLayer(this.chinaBoundaryLayer);\n            layerGroup.addLayer(this.chinaDisputeBoundaryLayer);\n        }\n        if (this.options.label) {\n            this.labelLayer = this.createLabelLayer(source, this.options.label);\n            layerGroup.addLayer(this.labelLayer);\n        }\n        return layerGroup;\n    };\n    /**\n     * 创建数据标签图层\n     */\n    Choropleth.prototype.createLabelLayer = function (source, label) {\n        var _this = this;\n        var data = source['originData'].features\n            .map(function (_a) {\n            var properties = _a.properties;\n            return Object.assign({}, properties, { centroid: properties['centroid'] || properties['center'] });\n        })\n            .filter(function (_a) {\n            var centroid = _a.centroid;\n            return centroid;\n        });\n        var _a = this.options, visible = _a.visible, minZoom = _a.minZoom, maxZoom = _a.maxZoom, _b = _a.zIndex, zIndex = _b === void 0 ? 0 : _b;\n        var textLayer = new text_layer_1.TextLayer((0, tslib_1.__assign)({ name: 'labelLayer', source: {\n                data: data,\n                parser: { type: 'json', coordinates: 'centroid' },\n                transforms: source.transforms,\n            }, visible: visible, minZoom: minZoom, maxZoom: maxZoom, zIndex: zIndex + 0.1 }, label));\n        source.on('update', function () {\n            var data = _this.source['originData'].features\n                .map(function (_a) {\n                var properties = _a.properties;\n                return properties;\n            })\n                .filter(function (_a) {\n                var centroid = _a.centroid;\n                return centroid;\n            });\n            textLayer.layer.setData(data);\n        });\n        return textLayer;\n    };\n    /**\n     * 更新图层\n     */\n    Choropleth.prototype.updateLayers = function (options) {\n        var fillAreaLayerConfig = (0, util_1.pick)(options, area_layer_1.AreaLayer.LayerOptionsKeys);\n        this.fillAreaLayer.update(fillAreaLayerConfig);\n        if (options.chinaBorder) {\n            if (!this.chinaBoundaryLayer) {\n                var _a = (0, layer_1.createCountryBoundaryLayer)(this.chinaBoundaryData, this.options), chinaBoundaryLayer = _a.chinaBoundaryLayer, chinaDisputeBoundaryLayer = _a.chinaDisputeBoundaryLayer;\n                this.chinaBoundaryLayer = chinaBoundaryLayer;\n                this.chinaDisputeBoundaryLayer = chinaDisputeBoundaryLayer;\n                this.layerGroup.addLayer(this.chinaBoundaryLayer);\n                this.layerGroup.addLayer(this.chinaDisputeBoundaryLayer);\n            }\n        }\n        else {\n            if (this.chinaBoundaryLayer) {\n                this.layerGroup.removeLayer(this.chinaBoundaryLayer);\n            }\n            if (this.chinaDisputeBoundaryLayer) {\n                this.layerGroup.removeLayer(this.chinaDisputeBoundaryLayer);\n            }\n        }\n        if (options.label) {\n            if (this.labelLayer) {\n                this.labelLayer.update((0, tslib_1.__assign)({}, options.label));\n            }\n            else {\n                this.labelLayer = this.createLabelLayer(this.source, options.label);\n                this.layerGroup.addLayer(this.labelLayer);\n            }\n        }\n        else {\n            if (this.labelLayer) {\n                this.layerGroup.removeLayer(this.labelLayer);\n            }\n        }\n    };\n    /**\n     * 初始化图层事件\n     */\n    Choropleth.prototype.initLayersEvent = function () {\n        this.initDrillEvent();\n    };\n    /**\n     * 初始化钻取事件\n     */\n    Choropleth.prototype.initDrillEvent = function () {\n        // 更新：取消上次绑定事件\n        if (this.lastOptions.drill) {\n            var _a = this.lastOptions.drill, _b = _a.triggerUp, triggerUp_1 = _b === void 0 ? 'unclick' : _b, _c = _a.triggerDown, triggerDown_1 = _c === void 0 ? 'click' : _c;\n            this.fillAreaLayer.off(triggerUp_1, this.onDrillUpHander);\n            this.fillAreaLayer.off(triggerDown_1, this.onDrillDownHander);\n        }\n        // 没有下钻\n        if (!this.options.drill || this.options.drill.enabled === false) {\n            return;\n        }\n        var _d = this.options.drill, steps = _d.steps, _e = _d.triggerUp, triggerUp = _e === void 0 ? 'unclick' : _e, _f = _d.triggerDown, triggerDown = _f === void 0 ? 'click' : _f;\n        var dillSteps = steps.map(function (step) {\n            if (typeof step === 'string') {\n                return {\n                    level: step,\n                    granularity: constants_1.DEFAULT_AREA_GRANULARITY[step],\n                };\n            }\n            if (!step.granularity) {\n                step.granularity = constants_1.DEFAULT_AREA_GRANULARITY[step.level];\n            }\n            return step;\n        });\n        // 初始化或钻取路径更新时\n        if (!(0, helper_1.isEqualDrillSteps)(dillSteps, this.drillSteps)) {\n            this.drillSteps = dillSteps;\n            this.drillStacks = [];\n        }\n        // 上卷事件\n        this.fillAreaLayer.on(triggerUp, this.onDrillUpHander);\n        // 下钻事件\n        this.fillAreaLayer.on(triggerDown, this.onDrillDownHander);\n    };\n    /**\n     * 重置钻取缓存数据\n     */\n    Choropleth.prototype.drillReset = function () {\n        this.drillStacks = [];\n    };\n    /**\n     * 实现 legend 配置项\n     */\n    Choropleth.prototype.getLegendOptions = function () {\n        var colorLegendItems = this.fillAreaLayer.getColorLegendItems();\n        if (colorLegendItems.length !== 0) {\n            return { type: 'category', items: colorLegendItems };\n        }\n        return {};\n    };\n    /**\n     * 请求数据\n     */\n    Choropleth.prototype.fetchData = function (level, adcode, granularity) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {\n            var fileName, cacheArea, _a, url, type, extension, response, data;\n            return (0, tslib_1.__generator)(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        fileName = \"\".concat(adcode, \"_\").concat(level, \"_\").concat(granularity);\n                        cacheArea = (0, cache_1.getCacheArea)(fileName);\n                        if (cacheArea)\n                            return [2 /*return*/, cacheArea];\n                        _a = (0, helper_1.getGeoAreaConfig)(this.options.geoArea), url = _a.url, type = _a.type, extension = _a.extension;\n                        return [4 /*yield*/, fetch(\"\".concat(url, \"/\").concat(level, \"/\").concat(fileName, \".\").concat(extension))];\n                    case 1:\n                        response = _b.sent();\n                        return [4 /*yield*/, response.json()];\n                    case 2:\n                        data = _b.sent();\n                        if (type === 'topojson') {\n                            data = (0, helper_1.topojson2geojson)(data);\n                        }\n                        (0, cache_1.registerCacheArea)(fileName, data);\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    /**\n     * 请求初始化区域数据\n     */\n    Choropleth.prototype.getInitDistrictData = function () {\n        var _a;\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {\n            var fetchChinaBoundaryData, geoData, err_1;\n            var _b;\n            return (0, tslib_1.__generator)(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        fetchChinaBoundaryData = this.fetchData('country', '100000', 'boundary');\n                        geoData = (_a = this.options.source) === null || _a === void 0 ? void 0 : _a.joinBy.geoData;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, Promise.all([fetchChinaBoundaryData, this.getDistrictData(geoData)])];\n                    case 2:\n                        _b = tslib_1.__read.apply(void 0, [_c.sent(), 1]), this.chinaBoundaryData = _b[0];\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _c.sent();\n                        throw new Error(\"Failed to get china boundary data\\uFF0C\".concat(err_1));\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * 请求区域数据\n     */\n    Choropleth.prototype.getDistrictData = function (geoData) {\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {\n            var _a, level, adcode, _b, granularity, fetchCurrentDistrictData, _c, err_2;\n            return (0, tslib_1.__generator)(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = this.options.viewLevel, level = _a.level, adcode = _a.adcode, _b = _a.granularity, granularity = _b === void 0 ? constants_1.DEFAULT_AREA_GRANULARITY[level] : _b;\n                        fetchCurrentDistrictData = geoData ? Promise.resolve(geoData) : this.fetchData(level, adcode, granularity);\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 3, , 4]);\n                        _c = this;\n                        return [4 /*yield*/, fetchCurrentDistrictData];\n                    case 2:\n                        _c.currentDistrictData = _d.sent();\n                        this.options.source = (0, utils_1.deepAssign)({}, this.options.source, { joinBy: { geoData: this.currentDistrictData } });\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_2 = _d.sent();\n                        throw new Error(\"Failed to get district data\\uFF0C\".concat(err_2));\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * 向下钻取方法\n     */\n    Choropleth.prototype.drillDown = function (view, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        this.changeView(view, config).then(function (drillData) {\n            drillData && _this.drillStacks.push(drillData);\n        });\n    };\n    /**\n     * 向上钻取方法\n     */\n    Choropleth.prototype.drillUp = function (config) {\n        if (config === void 0) { config = {}; }\n        // 已经上卷到最高层级\n        var isTopDrillStack = this.drillStacks.length === 0 || this.drillStacks.length === 1;\n        if (isTopDrillStack) {\n            return;\n        }\n        var lastIndex = this.drillStacks.length - 1;\n        var _a = this.drillStacks[lastIndex - 1], drillConfig = _a.config, view = (0, tslib_1.__rest)(_a, [\"config\"]);\n        var mergeConfig = (0, utils_1.deepAssign)({}, drillConfig, config);\n        this.changeView(view, mergeConfig);\n        this.drillStacks.pop();\n    };\n    /**\n     * 更新显示区域\n     */\n    Choropleth.prototype.changeView = function (view, config) {\n        if (config === void 0) { config = {}; }\n        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {\n            var level, adcode, _a, granularity, geoData, mergeConfig, drillData;\n            return (0, tslib_1.__generator)(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        level = view.level, adcode = view.adcode, _a = view.granularity, granularity = _a === void 0 ? constants_1.DEFAULT_AREA_GRANULARITY[level] : _a;\n                        return [4 /*yield*/, this.fetchData(level, adcode, granularity)];\n                    case 1:\n                        geoData = _b.sent();\n                        if (!geoData.features.length)\n                            return [2 /*return*/];\n                        mergeConfig = (0, utils_1.deepAssign)({}, (0, helper_1.getDrillStepDefaultConfig)(this.options), config, {\n                            viewLevel: { level: level, adcode: adcode, granularity: granularity },\n                            source: { joinBy: { geoData: geoData } },\n                        });\n                        this.update(mergeConfig);\n                        drillData = {\n                            level: level,\n                            adcode: adcode,\n                            granularity: granularity,\n                            config: mergeConfig,\n                        };\n                        return [2 /*return*/, drillData];\n                }\n            });\n        });\n    };\n    /**\n     * 默认配置项\n     */\n    Choropleth.DefaultOptions = constants_1.DEFAULT_OPTIONS;\n    /**\n     * 地理数据地址\n     */\n    Choropleth.GeoDataUrl = constants_1.GEO_DATA_URL;\n    /**\n     * 行政数据地址\n     */\n    Choropleth.GeoAreaUrl = constants_1.GEO_AREA_URL;\n    return Choropleth;\n}(plot_1.Plot));\nexports.Choropleth = Choropleth;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}