{"ast":null,"code":"import React from 'react';\nimport clamp from 'clamp';\nimport classNames from 'classnames';\nimport { Box } from './box';\nimport { Resizer } from './resizer';\nexport class SplitBox extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onMouseDown = () => {\n      const {\n        maxSize,\n        minSize\n      } = this.getRange();\n      this.minSize = minSize;\n      this.maxSize = maxSize;\n      this.curSize = this.getPrimarySize();\n      this.rawSize = this.curSize;\n      this.resizing = true;\n      this.createMask();\n      this.updateCursor(this.curSize, minSize, maxSize);\n    };\n\n    this.onMouseMove = (deltaX, deltaY) => {\n      if (this.props.resizable && this.resizing) {\n        const delta = this.getDelta(deltaX, deltaY);\n\n        if (delta === 0) {\n          return;\n        }\n\n        if (this.rawSize < this.minSize || this.rawSize > this.maxSize) {\n          this.rawSize -= delta;\n          return;\n        }\n\n        this.rawSize -= delta;\n        this.curSize = this.rawSize;\n        this.curSize = clamp(this.curSize, this.minSize, this.maxSize);\n        this.setPrimarySize(this.curSize);\n        this.updateCursor(this.curSize, this.minSize, this.maxSize);\n\n        if (this.props.onResizing) {\n          this.props.onResizing(this.curSize);\n        }\n      }\n    };\n\n    this.onMouseMoveEnd = () => {\n      if (this.props.resizable && this.resizing) {\n        if (this.props.onResizeEnd) {\n          this.props.onResizeEnd(this.curSize);\n        }\n\n        if (this.props.refresh) {\n          const isPrimaryFirst = this.isPrimaryFirst();\n          this.setState({\n            box1Size: isPrimaryFirst ? this.curSize : undefined,\n            box2Size: isPrimaryFirst ? undefined : this.curSize\n          });\n        }\n\n        this.resizing = false;\n        this.removeMask();\n      }\n    };\n\n    this.refContainer = container => {\n      this.container = container;\n    };\n\n    this.refResizer = elem => {\n      this.resizerElem = elem;\n    };\n\n    this.state = this.getNextState(props);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const nextState = this.getNextState(nextProps);\n    this.setState(nextState);\n  }\n\n  getNextState(props) {\n    const {\n      size,\n      defaultSize,\n      primary\n    } = props;\n    const initialSize = size != null ? size : defaultSize != null ? defaultSize : '25%';\n    return {\n      box1Size: primary === 'first' ? initialSize : undefined,\n      box2Size: primary === 'second' ? initialSize : undefined\n    };\n  }\n\n  isVertical() {\n    return this.props.split === 'vertical';\n  }\n\n  isPrimaryFirst() {\n    return this.props.primary === 'first';\n  }\n\n  getDelta(deltaX, deltaY) {\n    const {\n      step\n    } = this.props;\n    const isVertical = this.isVertical();\n    const isPrimaryFirst = this.isPrimaryFirst();\n    let delta = isVertical ? deltaX : deltaY;\n\n    if (delta === 0) {\n      return 0;\n    }\n\n    if (step && Math.abs(delta) >= step) {\n      delta = ~~(delta / step) * step; // eslint-disable-line\n    }\n\n    delta = isPrimaryFirst ? -delta : delta;\n    const primaryBox = isPrimaryFirst ? this.box1Elem : this.box2Elem;\n    const secondBox = isPrimaryFirst ? this.box2Elem : this.box1Elem;\n    const box1Order = parseInt(window.getComputedStyle(primaryBox).order, 10);\n    const box2Order = parseInt(window.getComputedStyle(secondBox).order, 10);\n\n    if (box1Order > box2Order) {\n      delta = -delta;\n    }\n\n    return delta;\n  }\n\n  getRange() {\n    const {\n      maxSize,\n      minSize\n    } = this.props;\n    const containerRect = this.container.getBoundingClientRect();\n    const containerSize = this.isVertical() ? containerRect.width : containerRect.height;\n    let newMinSize = minSize !== undefined ? minSize : 0;\n    let newMaxSize = maxSize !== undefined ? maxSize : 0;\n\n    while (newMinSize < 0) {\n      newMinSize = containerSize + newMinSize;\n    }\n\n    while (newMaxSize <= 0) {\n      newMaxSize = containerSize + newMaxSize;\n    }\n\n    return {\n      minSize: clamp(newMinSize, 0, containerSize),\n      maxSize: clamp(newMaxSize, 0, containerSize)\n    };\n  }\n\n  getPrimarySize() {\n    const primaryBox = this.isPrimaryFirst() ? this.box1Elem : this.box2Elem;\n    return this.isVertical() ? primaryBox.getBoundingClientRect().width : primaryBox.getBoundingClientRect().height;\n  }\n\n  setPrimarySize(size) {\n    const isFirstPrimary = this.isPrimaryFirst();\n    const primaryBox = isFirstPrimary ? this.box1Elem : this.box2Elem;\n    const secondBox = isFirstPrimary ? this.box2Elem : this.box1Elem;\n    const resizerElem = this.resizerElem;\n    const value = `${size}px`;\n\n    if (this.isVertical()) {\n      primaryBox.style.width = value;\n\n      if (isFirstPrimary) {\n        secondBox.style.left = value;\n        resizerElem.style.left = value;\n      } else {\n        secondBox.style.right = value;\n        resizerElem.style.right = value;\n      }\n    } else {\n      primaryBox.style.height = value;\n\n      if (isFirstPrimary) {\n        secondBox.style.top = value;\n        resizerElem.style.top = value;\n      } else {\n        secondBox.style.bottom = value;\n        resizerElem.style.bottom = value;\n      }\n    }\n  }\n\n  updateCursor(size, minSize, maxSize) {\n    let cursor = '';\n\n    if (this.isVertical()) {\n      if (size === minSize) {\n        cursor = this.isPrimaryFirst() ? 'e-resize' : 'w-resize';\n      } else if (size === maxSize) {\n        cursor = this.isPrimaryFirst() ? 'w-resize' : 'e-resize';\n      } else {\n        cursor = 'col-resize';\n      }\n    } else if (size === minSize) {\n      cursor = this.isPrimaryFirst() ? 's-resize' : 'n-resize';\n    } else if (size === maxSize) {\n      cursor = this.isPrimaryFirst() ? 'n-resize' : 's-resize';\n    } else {\n      cursor = 'row-resize';\n    }\n\n    this.maskElem.style.cursor = cursor;\n  }\n\n  createMask() {\n    const mask = document.createElement('div');\n    mask.style.position = 'absolute';\n    mask.style.top = '0';\n    mask.style.right = '0';\n    mask.style.bottom = '0';\n    mask.style.left = '0';\n    mask.style.zIndex = '9999';\n    document.body.appendChild(mask);\n    this.maskElem = mask;\n  }\n\n  removeMask() {\n    if (this.maskElem.parentNode) {\n      this.maskElem.parentNode.removeChild(this.maskElem);\n    }\n  }\n\n  renderBox(baseCls, index) {\n    const primary = index === 1 ? 'first' : 'second';\n    const isPrimary = this.props.primary === primary;\n    const currentSize = index === 1 ? this.state.box1Size : this.state.box2Size;\n    const oppositeSize = index === 1 ? this.state.box2Size : this.state.box1Size;\n    const style = Object.assign(Object.assign({}, this.props.boxStyle), isPrimary ? this.props.primaryBoxStyle : this.props.secondBoxStyle);\n    const classes = classNames(`${baseCls}-item`, isPrimary ? `${baseCls}-item-primary` : `${baseCls}-item-second`);\n\n    const ref = elem => {\n      if (index === 1) {\n        this.box1Elem = elem;\n      } else {\n        this.box2Elem = elem;\n      }\n    };\n\n    const children = this.props.children;\n    return React.createElement(Box, {\n      key: `box${index}`,\n      refIt: ref,\n      style: style,\n      index: index,\n      className: classes,\n      currentSize: currentSize,\n      oppositeSize: oppositeSize,\n      vertical: this.isVertical(),\n      isPrimary: isPrimary\n    }, children[index - 1]);\n  }\n\n  renderResizer(baseCls) {\n    const style = Object.assign({}, this.props.resizerStyle);\n    style.position = 'absolute';\n    style.zIndex = 2;\n\n    if (this.isVertical()) {\n      style.top = 0;\n      style.bottom = 0;\n\n      if (this.props.resizable === true) {\n        style.cursor = 'col-resize';\n      }\n\n      if (this.isPrimaryFirst()) {\n        style.left = this.state.box1Size;\n      } else {\n        style.right = this.state.box2Size;\n      }\n    } else {\n      style.left = 0;\n      style.right = 0;\n\n      if (this.props.resizable === true) {\n        style.cursor = 'row-resize';\n      }\n\n      if (this.isPrimaryFirst()) {\n        style.top = this.state.box1Size;\n      } else {\n        style.bottom = this.state.box2Size;\n      }\n    }\n\n    return React.createElement(Resizer, {\n      key: \"resizer\",\n      style: style,\n      className: `${baseCls}-resizer`,\n      refIt: this.refResizer,\n      onClick: this.props.onResizerClick,\n      onMouseDown: this.onMouseDown,\n      onMouseMove: this.onMouseMove,\n      onMouseMoveEnd: this.onMouseMoveEnd,\n      onDoubleClick: this.props.onResizerDoubleClick\n    });\n  }\n\n  render() {\n    const style = Object.assign(Object.assign({}, this.props.style), {\n      overflow: 'hidden',\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    });\n    const baseCls = `${this.props.prefixCls}-split-box`;\n    const classes = classNames(baseCls, `${baseCls}-${this.props.split}`, {\n      [`${baseCls}-disabled`]: !this.props.resizable\n    });\n    return React.createElement(\"div\", {\n      style: style,\n      className: classes,\n      ref: this.refContainer\n    }, this.renderBox(baseCls, 1), this.renderResizer(baseCls), this.renderBox(baseCls, 2));\n  }\n\n}\n\n(function (SplitBox) {\n  SplitBox.defaultProps = {\n    resizable: true,\n    split: 'vertical',\n    primary: 'first',\n    prefixCls: 'x6',\n    defaultSize: '25%'\n  };\n})(SplitBox || (SplitBox = {}));","map":{"version":3,"sources":["../../src/split-box/splitbox.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from 'react';\nimport clamp from 'clamp';\nimport classNames from 'classnames';\nimport { Box } from './box';\nimport { Resizer } from './resizer';\nexport class SplitBox extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.onMouseDown = () => {\n            const { maxSize, minSize } = this.getRange();\n            this.minSize = minSize;\n            this.maxSize = maxSize;\n            this.curSize = this.getPrimarySize();\n            this.rawSize = this.curSize;\n            this.resizing = true;\n            this.createMask();\n            this.updateCursor(this.curSize, minSize, maxSize);\n        };\n        this.onMouseMove = (deltaX, deltaY) => {\n            if (this.props.resizable && this.resizing) {\n                const delta = this.getDelta(deltaX, deltaY);\n                if (delta === 0) {\n                    return;\n                }\n                if (this.rawSize < this.minSize || this.rawSize > this.maxSize) {\n                    this.rawSize -= delta;\n                    return;\n                }\n                this.rawSize -= delta;\n                this.curSize = this.rawSize;\n                this.curSize = clamp(this.curSize, this.minSize, this.maxSize);\n                this.setPrimarySize(this.curSize);\n                this.updateCursor(this.curSize, this.minSize, this.maxSize);\n                if (this.props.onResizing) {\n                    this.props.onResizing(this.curSize);\n                }\n            }\n        };\n        this.onMouseMoveEnd = () => {\n            if (this.props.resizable && this.resizing) {\n                if (this.props.onResizeEnd) {\n                    this.props.onResizeEnd(this.curSize);\n                }\n                if (this.props.refresh) {\n                    const isPrimaryFirst = this.isPrimaryFirst();\n                    this.setState({\n                        box1Size: isPrimaryFirst ? this.curSize : undefined,\n                        box2Size: isPrimaryFirst ? undefined : this.curSize,\n                    });\n                }\n                this.resizing = false;\n                this.removeMask();\n            }\n        };\n        this.refContainer = (container) => {\n            this.container = container;\n        };\n        this.refResizer = (elem) => {\n            this.resizerElem = elem;\n        };\n        this.state = this.getNextState(props);\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        const nextState = this.getNextState(nextProps);\n        this.setState(nextState);\n    }\n    getNextState(props) {\n        const { size, defaultSize, primary } = props;\n        const initialSize = size != null ? size : defaultSize != null ? defaultSize : '25%';\n        return {\n            box1Size: primary === 'first' ? initialSize : undefined,\n            box2Size: primary === 'second' ? initialSize : undefined,\n        };\n    }\n    isVertical() {\n        return this.props.split === 'vertical';\n    }\n    isPrimaryFirst() {\n        return this.props.primary === 'first';\n    }\n    getDelta(deltaX, deltaY) {\n        const { step } = this.props;\n        const isVertical = this.isVertical();\n        const isPrimaryFirst = this.isPrimaryFirst();\n        let delta = isVertical ? deltaX : deltaY;\n        if (delta === 0) {\n            return 0;\n        }\n        if (step && Math.abs(delta) >= step) {\n            delta = ~~(delta / step) * step; // eslint-disable-line\n        }\n        delta = isPrimaryFirst ? -delta : delta;\n        const primaryBox = isPrimaryFirst ? this.box1Elem : this.box2Elem;\n        const secondBox = isPrimaryFirst ? this.box2Elem : this.box1Elem;\n        const box1Order = parseInt(window.getComputedStyle(primaryBox).order, 10);\n        const box2Order = parseInt(window.getComputedStyle(secondBox).order, 10);\n        if (box1Order > box2Order) {\n            delta = -delta;\n        }\n        return delta;\n    }\n    getRange() {\n        const { maxSize, minSize } = this.props;\n        const containerRect = this.container.getBoundingClientRect();\n        const containerSize = this.isVertical()\n            ? containerRect.width\n            : containerRect.height;\n        let newMinSize = minSize !== undefined ? minSize : 0;\n        let newMaxSize = maxSize !== undefined ? maxSize : 0;\n        while (newMinSize < 0) {\n            newMinSize = containerSize + newMinSize;\n        }\n        while (newMaxSize <= 0) {\n            newMaxSize = containerSize + newMaxSize;\n        }\n        return {\n            minSize: clamp(newMinSize, 0, containerSize),\n            maxSize: clamp(newMaxSize, 0, containerSize),\n        };\n    }\n    getPrimarySize() {\n        const primaryBox = this.isPrimaryFirst() ? this.box1Elem : this.box2Elem;\n        return this.isVertical()\n            ? primaryBox.getBoundingClientRect().width\n            : primaryBox.getBoundingClientRect().height;\n    }\n    setPrimarySize(size) {\n        const isFirstPrimary = this.isPrimaryFirst();\n        const primaryBox = isFirstPrimary ? this.box1Elem : this.box2Elem;\n        const secondBox = isFirstPrimary ? this.box2Elem : this.box1Elem;\n        const resizerElem = this.resizerElem;\n        const value = `${size}px`;\n        if (this.isVertical()) {\n            primaryBox.style.width = value;\n            if (isFirstPrimary) {\n                secondBox.style.left = value;\n                resizerElem.style.left = value;\n            }\n            else {\n                secondBox.style.right = value;\n                resizerElem.style.right = value;\n            }\n        }\n        else {\n            primaryBox.style.height = value;\n            if (isFirstPrimary) {\n                secondBox.style.top = value;\n                resizerElem.style.top = value;\n            }\n            else {\n                secondBox.style.bottom = value;\n                resizerElem.style.bottom = value;\n            }\n        }\n    }\n    updateCursor(size, minSize, maxSize) {\n        let cursor = '';\n        if (this.isVertical()) {\n            if (size === minSize) {\n                cursor = this.isPrimaryFirst() ? 'e-resize' : 'w-resize';\n            }\n            else if (size === maxSize) {\n                cursor = this.isPrimaryFirst() ? 'w-resize' : 'e-resize';\n            }\n            else {\n                cursor = 'col-resize';\n            }\n        }\n        else if (size === minSize) {\n            cursor = this.isPrimaryFirst() ? 's-resize' : 'n-resize';\n        }\n        else if (size === maxSize) {\n            cursor = this.isPrimaryFirst() ? 'n-resize' : 's-resize';\n        }\n        else {\n            cursor = 'row-resize';\n        }\n        this.maskElem.style.cursor = cursor;\n    }\n    createMask() {\n        const mask = document.createElement('div');\n        mask.style.position = 'absolute';\n        mask.style.top = '0';\n        mask.style.right = '0';\n        mask.style.bottom = '0';\n        mask.style.left = '0';\n        mask.style.zIndex = '9999';\n        document.body.appendChild(mask);\n        this.maskElem = mask;\n    }\n    removeMask() {\n        if (this.maskElem.parentNode) {\n            this.maskElem.parentNode.removeChild(this.maskElem);\n        }\n    }\n    renderBox(baseCls, index) {\n        const primary = index === 1 ? 'first' : 'second';\n        const isPrimary = this.props.primary === primary;\n        const currentSize = index === 1 ? this.state.box1Size : this.state.box2Size;\n        const oppositeSize = index === 1 ? this.state.box2Size : this.state.box1Size;\n        const style = Object.assign(Object.assign({}, this.props.boxStyle), (isPrimary ? this.props.primaryBoxStyle : this.props.secondBoxStyle));\n        const classes = classNames(`${baseCls}-item`, isPrimary ? `${baseCls}-item-primary` : `${baseCls}-item-second`);\n        const ref = (elem) => {\n            if (index === 1) {\n                this.box1Elem = elem;\n            }\n            else {\n                this.box2Elem = elem;\n            }\n        };\n        const children = this.props.children;\n        return (React.createElement(Box, { key: `box${index}`, refIt: ref, style: style, index: index, className: classes, currentSize: currentSize, oppositeSize: oppositeSize, vertical: this.isVertical(), isPrimary: isPrimary }, children[index - 1]));\n    }\n    renderResizer(baseCls) {\n        const style = Object.assign({}, this.props.resizerStyle);\n        style.position = 'absolute';\n        style.zIndex = 2;\n        if (this.isVertical()) {\n            style.top = 0;\n            style.bottom = 0;\n            if (this.props.resizable === true) {\n                style.cursor = 'col-resize';\n            }\n            if (this.isPrimaryFirst()) {\n                style.left = this.state.box1Size;\n            }\n            else {\n                style.right = this.state.box2Size;\n            }\n        }\n        else {\n            style.left = 0;\n            style.right = 0;\n            if (this.props.resizable === true) {\n                style.cursor = 'row-resize';\n            }\n            if (this.isPrimaryFirst()) {\n                style.top = this.state.box1Size;\n            }\n            else {\n                style.bottom = this.state.box2Size;\n            }\n        }\n        return (React.createElement(Resizer, { key: \"resizer\", style: style, className: `${baseCls}-resizer`, refIt: this.refResizer, onClick: this.props.onResizerClick, onMouseDown: this.onMouseDown, onMouseMove: this.onMouseMove, onMouseMoveEnd: this.onMouseMoveEnd, onDoubleClick: this.props.onResizerDoubleClick }));\n    }\n    render() {\n        const style = Object.assign(Object.assign({}, this.props.style), { overflow: 'hidden', position: 'relative', width: '100%', height: '100%' });\n        const baseCls = `${this.props.prefixCls}-split-box`;\n        const classes = classNames(baseCls, `${baseCls}-${this.props.split}`, {\n            [`${baseCls}-disabled`]: !this.props.resizable,\n        });\n        return (React.createElement(\"div\", { style: style, className: classes, ref: this.refContainer },\n            this.renderBox(baseCls, 1),\n            this.renderResizer(baseCls),\n            this.renderBox(baseCls, 2)));\n    }\n}\n(function (SplitBox) {\n    SplitBox.defaultProps = {\n        resizable: true,\n        split: 'vertical',\n        primary: 'first',\n        prefixCls: 'x6',\n        defaultSize: '25%',\n    };\n})(SplitBox || (SplitBox = {}));\n//# sourceMappingURL=splitbox.js.map"]},"metadata":{},"sourceType":"module"}