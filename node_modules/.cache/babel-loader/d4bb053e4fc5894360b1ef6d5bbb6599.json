{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectDestructuringEmpty from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport React from 'react';\nimport { createModule } from '../module';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nexport var ToolbarRegistry = function ToolbarRegistry(props) {\n  _objectDestructuringEmpty(props);\n  /** 获取配置中心 */\n\n\n  var extensionRegistry = useExtensionRegistry();\n  React.useEffect(function () {\n    var disposable = extensionRegistry.addCoreModule({\n      config: {\n        CONFIG_TYPE: 'ToolbarRegistry',\n        getConfig: function getConfig() {\n          return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n        }\n      },\n      createModule: createModule\n    });\n    return function () {\n      disposable.dispose();\n    };\n  }, [extensionRegistry]);\n  return null;\n};\nToolbarRegistry.defaultProps = {\n  XFlowModuleType: 'ToolbarRegistry'\n};","map":{"version":3,"sources":["../../../src/toolbar/components/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,YAAT,QAA6B,WAA7B;AACA,SAAS,oBAAT,QAAqC,+CAArC;AAIA,OAAO,IAAM,eAAe,GAAqB,SAApC,eAAoC,CAAA,KAAK,EAAG;AACvD,4BAAW,KAAX;AACA;;;AACA,MAAM,iBAAiB,GAAG,oBAAoB,EAA9C;AAEA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAK;AACnB,QAAM,UAAU,GAAG,iBAAiB,CAAC,aAAlB,CAAgC;AACjD,MAAA,MAAM,EAAE;AAAE,QAAA,WAAW,EAAE,iBAAf;AAAkC,QAAA,SAAS,EAAE;AAAA,iBAAW,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAA,EAAX;AAAA;AAA7C,OADyC;AAEjD,MAAA,YAAY,EAAZ;AAFiD,KAAhC,CAAnB;AAIA,WAAO,YAAK;AACV,MAAA,UAAU,CAAC,OAAX;AACD,KAFD;AAGD,GARD,EAQG,CAAC,iBAAD,CARH;AAUA,SAAO,IAAP;AACD,CAhBM;AAkBP,eAAe,CAAC,YAAhB,GAA+B;AAAE,EAAA,eAAe,EAAE;AAAnB,CAA/B","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport React from 'react';\nimport { createModule } from '../module';\nimport { useExtensionRegistry } from '../../xflow-main/components/extension-context';\nexport const ToolbarRegistry = props => {\n    const {} = props;\n    /** 获取配置中心 */\n    const extensionRegistry = useExtensionRegistry();\n    React.useEffect(() => {\n        const disposable = extensionRegistry.addCoreModule({\n            config: { CONFIG_TYPE: 'ToolbarRegistry', getConfig: () => __awaiter(void 0, void 0, void 0, function* () { }) },\n            createModule,\n        });\n        return () => {\n            disposable.dispose();\n        };\n    }, [extensionRegistry]);\n    return null;\n};\nToolbarRegistry.defaultProps = { XFlowModuleType: 'ToolbarRegistry' };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}