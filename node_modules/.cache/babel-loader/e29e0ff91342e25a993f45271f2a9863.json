{"ast":null,"code":"// eslint-disable-next-line\nexport var ModifierKey;\n\n(function (ModifierKey) {\n  function parse(modifiers) {\n    const or = [];\n    const and = [];\n\n    if (Array.isArray(modifiers)) {\n      or.push(...modifiers);\n    } else {\n      modifiers.split('|').forEach(item => {\n        if (item.indexOf('&') === -1) {\n          or.push(item);\n        } else {\n          and.push(...item.split('&'));\n        }\n      });\n    }\n\n    return {\n      or,\n      and\n    };\n  }\n\n  ModifierKey.parse = parse;\n\n  function equals(modifiers1, modifiers2) {\n    if (modifiers1 != null && modifiers2 != null) {\n      const m1 = parse(modifiers1);\n      const m2 = parse(modifiers2);\n      const or1 = m1.or.sort();\n      const or2 = m2.or.sort();\n      const and1 = m1.and.sort();\n      const and2 = m2.and.sort();\n\n      const equal = (a1, a2) => {\n        return a1.length === a2.length && (a1.length === 0 || a1.every((a, i) => a === a2[i]));\n      };\n\n      return equal(or1, or2) && equal(and1, and2);\n    }\n\n    if (modifiers1 == null && modifiers2 == null) {\n      return true;\n    }\n\n    return false;\n  }\n\n  ModifierKey.equals = equals;\n\n  function isMatch(e, modifiers, strict) {\n    if (modifiers == null || Array.isArray(modifiers) && modifiers.length === 0) {\n      return strict ? e.altKey !== true && e.ctrlKey !== true && e.metaKey !== true && e.shiftKey !== true : true;\n    }\n\n    const {\n      or,\n      and\n    } = parse(modifiers);\n\n    const match = key => {\n      const name = `${key.toLowerCase()}Key`;\n      return e[name] === true;\n    };\n\n    return or.some(key => match(key)) && and.every(key => match(key));\n  }\n\n  ModifierKey.isMatch = isMatch;\n})(ModifierKey || (ModifierKey = {}));","map":{"version":3,"sources":["../../src/types/modifier.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["// eslint-disable-next-line\nexport var ModifierKey;\n(function (ModifierKey) {\n    function parse(modifiers) {\n        const or = [];\n        const and = [];\n        if (Array.isArray(modifiers)) {\n            or.push(...modifiers);\n        }\n        else {\n            modifiers.split('|').forEach((item) => {\n                if (item.indexOf('&') === -1) {\n                    or.push(item);\n                }\n                else {\n                    and.push(...item.split('&'));\n                }\n            });\n        }\n        return { or, and };\n    }\n    ModifierKey.parse = parse;\n    function equals(modifiers1, modifiers2) {\n        if (modifiers1 != null && modifiers2 != null) {\n            const m1 = parse(modifiers1);\n            const m2 = parse(modifiers2);\n            const or1 = m1.or.sort();\n            const or2 = m2.or.sort();\n            const and1 = m1.and.sort();\n            const and2 = m2.and.sort();\n            const equal = (a1, a2) => {\n                return (a1.length === a2.length &&\n                    (a1.length === 0 || a1.every((a, i) => a === a2[i])));\n            };\n            return equal(or1, or2) && equal(and1, and2);\n        }\n        if (modifiers1 == null && modifiers2 == null) {\n            return true;\n        }\n        return false;\n    }\n    ModifierKey.equals = equals;\n    function isMatch(e, modifiers, strict) {\n        if (modifiers == null ||\n            (Array.isArray(modifiers) && modifiers.length === 0)) {\n            return strict\n                ? e.altKey !== true &&\n                    e.ctrlKey !== true &&\n                    e.metaKey !== true &&\n                    e.shiftKey !== true\n                : true;\n        }\n        const { or, and } = parse(modifiers);\n        const match = (key) => {\n            const name = `${key.toLowerCase()}Key`;\n            return e[name] === true;\n        };\n        return or.some((key) => match(key)) && and.every((key) => match(key));\n    }\n    ModifierKey.isMatch = isMatch;\n})(ModifierKey || (ModifierKey = {}));\n//# sourceMappingURL=modifier.js.map"]},"metadata":{},"sourceType":"module"}