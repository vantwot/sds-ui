{"ast":null,"code":"import React from 'react';\nimport { useXFlowApp, XFlowAppExtensionMoudle } from '@antv/xflow-core';\nimport { ContextMenuConfig } from './config';\nimport { createModule } from './module';\nimport { ContextMenuRender } from './components';\nexport const CONFIG_TYPE = 'CanvasContextMenu';\nexport const CanvasContextMenu = props => {\n  const xflow = useXFlowApp();\n  const canRender = !!xflow;\n  /** 获取ContextMenu的配置 */\n\n  const contextMenuConfig = React.useMemo(() => props.config ? props.config : new ContextMenuConfig(), [props.config]);\n  return React.createElement(XFlowAppExtensionMoudle, {\n    createModule: createModule,\n    config: contextMenuConfig\n  }, canRender && React.createElement(ContextMenuRender, {\n    config: contextMenuConfig\n  }));\n};\nexport const createCtxMenuConfig = addOptions => props => {\n  /** bridge config and props */\n  const proxy = React.useMemo(() => ({\n    getValue: () => ({})\n  }), []);\n\n  proxy.getValue = () => props;\n\n  const toolbarConfig = React.useMemo(() => {\n    const config = new ContextMenuConfig();\n    addOptions(config, proxy);\n    return config;\n  }, [proxy]);\n  return toolbarConfig;\n};","map":{"version":3,"sources":["../../src/canvas-context-menu/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,WAAT,EAAsB,uBAAtB,QAAqD,kBAArD;AACA,SAAS,iBAAT,QAAkC,UAAlC;AACA,SAAS,YAAT,QAA6B,UAA7B;AACA,SAAS,iBAAT,QAAkC,cAAlC;AAEA,OAAO,MAAM,WAAW,GAAG,mBAApB;AAQP,OAAO,MAAM,iBAAiB,GAAqB,KAAK,IAAG;AACzD,QAAM,KAAK,GAAG,WAAW,EAAzB;AACA,QAAM,SAAS,GAAG,CAAC,CAAC,KAApB;AACA;;AACA,QAAM,iBAAiB,GAAG,KAAK,CAAC,OAAN,CACxB,MAAO,KAAK,CAAC,MAAN,GAAe,KAAK,CAAC,MAArB,GAA8B,IAAI,iBAAJ,EADb,EAExB,CAAC,KAAK,CAAC,MAAP,CAFwB,CAA1B;AAKA,SACE,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB;AACtB,IAAA,YAAY,EAAE,YADQ;AAEtB,IAAA,MAAM,EAAE;AAFc,GAAxB,EAIG,SAAS,IAAI,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB;AAAC,IAAA,MAAM,EAAE;AAAT,GAAlB,CAJhB,CADF;AAQD,CAjBM;AAmBP,OAAO,MAAM,mBAAmB,GAC9B,UADiC,IAE7B,KAAD,IAAc;AACjB;AACA,QAAM,KAAK,GAAG,KAAK,CAAC,OAAN,CAAc,OAAO;AAAE,IAAA,QAAQ,EAAE,OAAO,EAAP;AAAZ,GAAP,CAAd,EAAqD,EAArD,CAAd;;AACA,EAAA,KAAK,CAAC,QAAN,GAAiB,MAAM,KAAvB;;AAEA,QAAM,aAAa,GAAG,KAAK,CAAC,OAAN,CAAc,MAAK;AACvC,UAAM,MAAM,GAAG,IAAI,iBAAJ,EAAf;AACA,IAAA,UAAU,CAAC,MAAD,EAAS,KAAT,CAAV;AACA,WAAO,MAAP;AACD,GAJqB,EAInB,CAAC,KAAD,CAJmB,CAAtB;AAMA,SAAO,aAAP;AACD,CAdM","sourceRoot":"","sourcesContent":["import React from 'react';\nimport { useXFlowApp, XFlowAppExtensionMoudle } from '@antv/xflow-core';\nimport { ContextMenuConfig } from './config';\nimport { createModule } from './module';\nimport { ContextMenuRender } from './components';\nexport const CONFIG_TYPE = 'CanvasContextMenu';\nexport const CanvasContextMenu = props => {\n    const xflow = useXFlowApp();\n    const canRender = !!xflow;\n    /** 获取ContextMenu的配置 */\n    const contextMenuConfig = React.useMemo(() => (props.config ? props.config : new ContextMenuConfig()), [props.config]);\n    return (React.createElement(XFlowAppExtensionMoudle, { createModule: createModule, config: contextMenuConfig }, canRender && React.createElement(ContextMenuRender, { config: contextMenuConfig })));\n};\nexport const createCtxMenuConfig = (addOptions) => (props) => {\n    /** bridge config and props */\n    const proxy = React.useMemo(() => ({ getValue: () => ({}) }), []);\n    proxy.getValue = () => props;\n    const toolbarConfig = React.useMemo(() => {\n        const config = new ContextMenuConfig();\n        addOptions(config, proxy);\n        return config;\n    }, [proxy]);\n    return toolbarConfig;\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}