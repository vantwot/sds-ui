{"ast":null,"code":"import _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowNodeCommands } from '../constant';\nexport var NsSelectNode;\n\n(function (NsSelectNode) {\n  NsSelectNode.command = XFlowNodeCommands.SELECT_NODE;\n  NsSelectNode.hookKey = 'selectNode';\n})(NsSelectNode || (NsSelectNode = {}));\n\nvar SelectNodeCommand =\n/*#__PURE__*/\n\n/** 节点更新命令 */\nfunction () {\n  function SelectNodeCommand() {\n    var _this = this;\n\n    _classCallCheck(this, SelectNodeCommand);\n\n    this.execute = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var _this$ctx$getArgs, args, runtimeHook, hooks, result;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$ctx$getArgs = this.ctx.getArgs(), args = _this$ctx$getArgs.args, runtimeHook = _this$ctx$getArgs.hooks;\n                hooks = this.ctx.getHooks();\n                _context2.next = 4;\n                return hooks.selectNode.call(args, function (handlerArgs) {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                    var x6Graph, currentSelectionIds, nodeIds, resetSelection, commandService;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return this.ctx.getX6Graph();\n\n                          case 2:\n                            x6Graph = _context.sent;\n                            currentSelectionIds = x6Graph.getSelectedCells().map(function (node) {\n                              return node.id;\n                            });\n                            nodeIds = handlerArgs.nodeIds, resetSelection = handlerArgs.resetSelection, commandService = handlerArgs.commandService;\n\n                            if (resetSelection) {\n                              x6Graph.resetSelection(nodeIds);\n                            } else {\n                              x6Graph.select(nodeIds);\n                            }\n\n                            this.ctx.addUndo({\n                              dispose: function dispose() {\n                                commandService.executeUndoCommand(XFlowNodeCommands.SELECT_NODE.id, {\n                                  nodeIds: currentSelectionIds,\n                                  resetSelection: true\n                                });\n                              }\n                            });\n                            return _context.abrupt(\"return\", {});\n\n                          case 8:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, this);\n                  }));\n                }, runtimeHook);\n\n              case 4:\n                result = _context2.sent;\n                this.ctx.setResult(result);\n                return _context2.abrupt(\"return\", this);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    };\n\n    this.undo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.ctx.undo();\n                return _context3.abrupt(\"return\", this);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n    };\n\n    this.redo = function () {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.ctx.isUndoable) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                _context4.next = 3;\n                return this.execute();\n\n              case 3:\n                return _context4.abrupt(\"return\", this);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n    };\n  }\n\n  _createClass(SelectNodeCommand, [{\n    key: \"init\",\n    value: function init() {\n      this.ctx = this.contextProvider();\n    }\n  }, {\n    key: \"isUndoable\",\n    value: function isUndoable() {\n      return this.ctx.isUndoable();\n    }\n  }]);\n\n  return SelectNodeCommand;\n}();\n\n__decorate([inject(ICommandContextProvider), __metadata(\"design:type\", Object)], SelectNodeCommand.prototype, \"contextProvider\", void 0);\n\n__decorate([postConstruct(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], SelectNodeCommand.prototype, \"init\", null);\n\nSelectNodeCommand = __decorate([injectable({\n  token: {\n    token: ICommandHandler,\n    named: NsSelectNode.command.id\n  }\n})\n/** 节点更新命令 */\n], SelectNodeCommand);\nexport { SelectNodeCommand };","map":{"version":3,"sources":["../../../src/command-contributions/node/node-select.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable, postConstruct } from 'mana-syringe';\nimport { ICommandHandler, ICommandContextProvider } from '../../command/interface';\nimport { XFlowNodeCommands } from '../constant';\nexport var NsSelectNode;\n(function (NsSelectNode) {\n    NsSelectNode.command = XFlowNodeCommands.SELECT_NODE;\n    NsSelectNode.hookKey = 'selectNode';\n})(NsSelectNode || (NsSelectNode = {}));\nlet SelectNodeCommand = \n/** 节点更新命令 */\nclass SelectNodeCommand {\n    constructor() {\n        this.execute = () => __awaiter(this, void 0, void 0, function* () {\n            const { args, hooks: runtimeHook } = this.ctx.getArgs();\n            const hooks = this.ctx.getHooks();\n            const result = yield hooks.selectNode.call(args, (handlerArgs) => __awaiter(this, void 0, void 0, function* () {\n                const x6Graph = yield this.ctx.getX6Graph();\n                const currentSelectionIds = x6Graph.getSelectedCells().map(node => node.id);\n                const { nodeIds, resetSelection, commandService } = handlerArgs;\n                if (resetSelection) {\n                    x6Graph.resetSelection(nodeIds);\n                }\n                else {\n                    x6Graph.select(nodeIds);\n                }\n                this.ctx.addUndo({\n                    dispose: () => {\n                        commandService.executeUndoCommand(XFlowNodeCommands.SELECT_NODE.id, {\n                            nodeIds: currentSelectionIds,\n                            resetSelection: true,\n                        });\n                    },\n                });\n                return {};\n            }), runtimeHook);\n            this.ctx.setResult(result);\n            return this;\n        });\n        this.undo = () => __awaiter(this, void 0, void 0, function* () {\n            this.ctx.undo();\n            return this;\n        });\n        this.redo = () => __awaiter(this, void 0, void 0, function* () {\n            if (!this.ctx.isUndoable) {\n                yield this.execute();\n            }\n            return this;\n        });\n    }\n    init() {\n        this.ctx = this.contextProvider();\n    }\n    isUndoable() {\n        return this.ctx.isUndoable();\n    }\n};\n__decorate([\n    inject(ICommandContextProvider),\n    __metadata(\"design:type\", Object)\n], SelectNodeCommand.prototype, \"contextProvider\", void 0);\n__decorate([\n    postConstruct(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], SelectNodeCommand.prototype, \"init\", null);\nSelectNodeCommand = __decorate([\n    injectable({\n        token: { token: ICommandHandler, named: NsSelectNode.command.id },\n    })\n    /** 节点更新命令 */\n], SelectNodeCommand);\nexport { SelectNodeCommand };\n//# sourceMappingURL=node-select.js.map"]},"metadata":{},"sourceType":"module"}