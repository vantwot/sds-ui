{"ast":null,"code":"import { debounce } from './util';\nexport function createSensor(element) {\n  let sensor = null;\n  let listeners = [];\n\n  const create = () => {\n    if (getComputedStyle(element).position === 'static') {\n      const style = element.style;\n      style.position = 'relative';\n    }\n\n    const obj = document.createElement('object');\n\n    obj.onload = () => {\n      obj.contentDocument.defaultView.addEventListener('resize', trigger);\n      trigger();\n    };\n\n    obj.style.display = 'block';\n    obj.style.position = 'absolute';\n    obj.style.top = '0';\n    obj.style.left = '0';\n    obj.style.height = '100%';\n    obj.style.width = '100%';\n    obj.style.overflow = 'hidden';\n    obj.style.pointerEvents = 'none';\n    obj.style.zIndex = '-1';\n    obj.style.opacity = '0';\n    obj.setAttribute('tabindex', '-1');\n    obj.type = 'text/html';\n    element.appendChild(obj); // for ie, should set data attribute delay, or will be white screen\n\n    obj.data = 'about:blank';\n    return obj;\n  };\n\n  const trigger = debounce(() => {\n    listeners.forEach(listener => listener(element));\n  });\n\n  const bind = listener => {\n    if (!sensor) {\n      sensor = create();\n    }\n\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  const destroy = () => {\n    if (sensor && sensor.parentNode) {\n      if (sensor.contentDocument) {\n        sensor.contentDocument.defaultView.removeEventListener('resize', trigger);\n      }\n\n      sensor.parentNode.removeChild(sensor);\n      sensor = null;\n      listeners = [];\n    }\n  };\n\n  const unbind = listener => {\n    const idx = listeners.indexOf(listener);\n\n    if (idx !== -1) {\n      listeners.splice(idx, 1);\n    } // no listener, and sensor is exist then destroy the sensor\n\n\n    if (listeners.length === 0 && sensor) {\n      destroy();\n    }\n  };\n\n  return {\n    element,\n    bind,\n    destroy,\n    unbind\n  };\n}","map":{"version":3,"sources":["../../../../src/util/size-sensor/sensors/object.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { debounce } from './util';\nexport function createSensor(element) {\n    let sensor = null;\n    let listeners = [];\n    const create = () => {\n        if (getComputedStyle(element).position === 'static') {\n            const style = element.style;\n            style.position = 'relative';\n        }\n        const obj = document.createElement('object');\n        obj.onload = () => {\n            obj.contentDocument.defaultView.addEventListener('resize', trigger);\n            trigger();\n        };\n        obj.style.display = 'block';\n        obj.style.position = 'absolute';\n        obj.style.top = '0';\n        obj.style.left = '0';\n        obj.style.height = '100%';\n        obj.style.width = '100%';\n        obj.style.overflow = 'hidden';\n        obj.style.pointerEvents = 'none';\n        obj.style.zIndex = '-1';\n        obj.style.opacity = '0';\n        obj.setAttribute('tabindex', '-1');\n        obj.type = 'text/html';\n        element.appendChild(obj);\n        // for ie, should set data attribute delay, or will be white screen\n        obj.data = 'about:blank';\n        return obj;\n    };\n    const trigger = debounce(() => {\n        listeners.forEach((listener) => listener(element));\n    });\n    const bind = (listener) => {\n        if (!sensor) {\n            sensor = create();\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    const destroy = () => {\n        if (sensor && sensor.parentNode) {\n            if (sensor.contentDocument) {\n                sensor.contentDocument.defaultView.removeEventListener('resize', trigger);\n            }\n            sensor.parentNode.removeChild(sensor);\n            sensor = null;\n            listeners = [];\n        }\n    };\n    const unbind = (listener) => {\n        const idx = listeners.indexOf(listener);\n        if (idx !== -1) {\n            listeners.splice(idx, 1);\n        }\n        // no listener, and sensor is exist then destroy the sensor\n        if (listeners.length === 0 && sensor) {\n            destroy();\n        }\n    };\n    return {\n        element,\n        bind,\n        destroy,\n        unbind,\n    };\n}\n//# sourceMappingURL=object.js.map"]},"metadata":{},"sourceType":"module"}