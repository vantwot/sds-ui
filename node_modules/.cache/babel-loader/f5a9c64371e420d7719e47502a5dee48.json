{"ast":null,"code":"import JQuery from 'jquery';\nexport function sanitizeHTML(html) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // If documentContext (second parameter) is not specified or given as\n  // `null` or `undefined`, a new document is used. Inline events will not\n  // execute when the HTML is parsed; this includes, for example, sending\n  // GET requests for images.\n  // If keepScripts (last parameter) is `false`, scripts are not executed.\n  const nodes = JQuery.parseHTML(html, null, false);\n  nodes.forEach(node => {\n    const elem = node;\n\n    if (elem) {\n      const attrs = elem.attributes;\n\n      if (attrs) {\n        for (let i = 0, ii = attrs.length; i < ii; i += 1) {\n          const attr = attrs.item(i);\n\n          if (attr) {\n            const val = attr.value.toLowerCase();\n            const name = attr.name.toLowerCase(); // Removes attribute name starts with \"on\" (e.g. onload,\n            // onerror...).\n            // Removes attribute value starts with \"javascript:\" pseudo\n            // protocol (e.g. `href=\"javascript:alert(1)\"`).\n\n            if (name.startsWith('on') || val.startsWith('javascript:') || // eslint-disable-line no-script-url\n            // ref: https://lgtm.com/rules/1510852698359/\n            val.startsWith('data:') || val.startsWith('vbscript:')) {\n              elem.removeAttribute(name);\n            }\n          }\n        }\n      }\n    }\n  });\n\n  if (options.raw) {\n    return nodes;\n  }\n\n  return JQuery('<div/>').append(nodes).html();\n}","map":{"version":3,"sources":["../../../src/util/string/html.ts"],"names":[],"mappings":"AAAA,OAAO,MAAP,MAAmB,QAAnB;AAYA,OAAM,SAAU,YAAV,CAAuB,IAAvB,EAAoE;AAAA,MAA/B,OAA+B,uEAAF,EAAE;AACxE;AACA;AACA;AACA;AAEA;AACA,QAAM,KAAK,GAAG,MAAM,CAAC,SAAP,CAAiB,IAAjB,EAAuB,IAAvB,EAA6B,KAA7B,CAAd;AAEA,EAAA,KAAK,CAAC,OAAN,CAAe,IAAD,IAAS;AACrB,UAAM,IAAI,GAAG,IAAb;;AACA,QAAI,IAAJ,EAAU;AACR,YAAM,KAAK,GAAG,IAAI,CAAC,UAAnB;;AACA,UAAI,KAAJ,EAAW;AACT,aAAK,IAAI,CAAC,GAAG,CAAR,EAAW,EAAE,GAAG,KAAK,CAAC,MAA3B,EAAmC,CAAC,GAAG,EAAvC,EAA2C,CAAC,IAAI,CAAhD,EAAmD;AACjD,gBAAM,IAAI,GAAG,KAAK,CAAC,IAAN,CAAW,CAAX,CAAb;;AACA,cAAI,IAAJ,EAAU;AACR,kBAAM,GAAG,GAAG,IAAI,CAAC,KAAL,CAAW,WAAX,EAAZ;AACA,kBAAM,IAAI,GAAG,IAAI,CAAC,IAAL,CAAU,WAAV,EAAb,CAFQ,CAIR;AACA;AACA;AACA;;AACA,gBACE,IAAI,CAAC,UAAL,CAAgB,IAAhB,KACA,GAAG,CAAC,UAAJ,CAAe,aAAf,CADA,IACiC;AACjC;AACA,YAAA,GAAG,CAAC,UAAJ,CAAe,OAAf,CAHA,IAIA,GAAG,CAAC,UAAJ,CAAe,WAAf,CALF,EAME;AACA,cAAA,IAAI,CAAC,eAAL,CAAqB,IAArB;AACD;AACF;AACF;AACF;AACF;AACF,GA5BD;;AA8BA,MAAI,OAAO,CAAC,GAAZ,EAAiB;AACf,WAAO,KAAP;AACD;;AAED,SAAO,MAAM,CAAC,QAAD,CAAN,CAAiB,MAAjB,CAAwB,KAAxB,EAA+B,IAA/B,EAAP;AACD","sourceRoot":"","sourcesContent":["import JQuery from 'jquery';\nexport function sanitizeHTML(html, options = {}) {\n    // If documentContext (second parameter) is not specified or given as\n    // `null` or `undefined`, a new document is used. Inline events will not\n    // execute when the HTML is parsed; this includes, for example, sending\n    // GET requests for images.\n    // If keepScripts (last parameter) is `false`, scripts are not executed.\n    const nodes = JQuery.parseHTML(html, null, false);\n    nodes.forEach((node) => {\n        const elem = node;\n        if (elem) {\n            const attrs = elem.attributes;\n            if (attrs) {\n                for (let i = 0, ii = attrs.length; i < ii; i += 1) {\n                    const attr = attrs.item(i);\n                    if (attr) {\n                        const val = attr.value.toLowerCase();\n                        const name = attr.name.toLowerCase();\n                        // Removes attribute name starts with \"on\" (e.g. onload,\n                        // onerror...).\n                        // Removes attribute value starts with \"javascript:\" pseudo\n                        // protocol (e.g. `href=\"javascript:alert(1)\"`).\n                        if (name.startsWith('on') ||\n                            val.startsWith('javascript:') || // eslint-disable-line no-script-url\n                            // ref: https://lgtm.com/rules/1510852698359/\n                            val.startsWith('data:') ||\n                            val.startsWith('vbscript:')) {\n                            elem.removeAttribute(name);\n                        }\n                    }\n                }\n            }\n        }\n    });\n    if (options.raw) {\n        return nodes;\n    }\n    return JQuery('<div/>').append(nodes).html();\n}\n//# sourceMappingURL=html.js.map"]},"metadata":{},"sourceType":"module"}