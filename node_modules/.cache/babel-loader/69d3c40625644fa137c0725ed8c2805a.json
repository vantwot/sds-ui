{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Rectangle } from '../geometry';\nimport { NumberExt, JQuery, Dom, Unit, Vector } from '../util';\nimport { Base } from './base';\nexport class PrintManager extends Base {\n  show() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const localOptions = Object.assign(Object.assign({}, PrintManager.defaultOptions), options);\n    const $pages = this.createPrintPages(localOptions);\n    localOptions.ready($pages, $pages => this.showPrintWindow($pages, localOptions), {\n      sheetSize: this.getSheetSize(localOptions)\n    });\n  }\n\n  get className() {\n    return this.view.prefixClassName('graph-print');\n  }\n\n  showPrintWindow($pages, options) {\n    if ($pages) {\n      const $body = JQuery(document.body);\n      const $container = JQuery(this.view.container);\n      const bodyClassName = this.view.prefixClassName('graph-printing');\n      $body.addClass(bodyClassName);\n      const $detached = $container.children().detach();\n      $pages.forEach($page => {\n        $page.removeClass(`${this.className}-preview`).addClass(`${this.className}-ready`).appendTo($body);\n      });\n      let ret = false;\n\n      const cb = () => {\n        if (!ret) {\n          ret = true;\n          $body.removeClass(bodyClassName);\n          $pages.forEach($page => $page.remove());\n          $container.append($detached);\n          JQuery(`#${this.styleSheetId}`).remove();\n          this.graph.trigger('after:print', options);\n          JQuery(window).off('afterprint', cb);\n        }\n      };\n\n      JQuery(window).one('afterprint', cb);\n      setTimeout(cb, 200);\n      window.print();\n    }\n  }\n\n  createPrintPage(pageArea, options) {\n    this.graph.trigger('before:print', options);\n    const $page = JQuery('<div/>').addClass(this.className);\n    const $wrap = JQuery('<div/>').addClass(this.view.prefixClassName('graph-print-inner')).css('position', 'relative');\n\n    if (options.size) {\n      $page.addClass(`${this.className}-size-${options.size}`);\n    }\n\n    const vSVG = Vector.create(this.view.svg).clone();\n    const vStage = vSVG.findOne(`.${this.view.prefixClassName('graph-svg-stage')}`);\n    $wrap.append(vSVG.node);\n    const sheetSize = this.getSheetSize(options);\n    const graphArea = this.graph.transform.getGraphArea();\n    const s = this.graph.transform.getScale();\n    const ts = this.graph.translate();\n    const matrix = Dom.createSVGMatrix().translate(ts.tx / s.sx, ts.ty / s.sy);\n    const info = this.getPageInfo(graphArea, pageArea, sheetSize);\n    const scale = info.scale;\n    const bbox = info.bbox;\n    $wrap.css({\n      left: 0,\n      top: 0\n    });\n    vSVG.attr({\n      width: bbox.width * scale,\n      height: bbox.height * scale,\n      style: 'position:relative',\n      viewBox: [bbox.x, bbox.y, bbox.width, bbox.height].join(' ')\n    });\n    vStage.attr('transform', Dom.matrixToTransformString(matrix));\n    $page.append($wrap);\n    $page.addClass(`${this.className}-preview`);\n    return {\n      $page,\n      sheetSize\n    };\n  }\n\n  createPrintPages(options) {\n    let ret;\n    const area = this.getPrintArea(options);\n    const $pages = [];\n\n    if (options.page) {\n      const pageSize = this.getPageSize(area, options.page);\n      const pageAreas = this.getPageAreas(area, pageSize);\n      pageAreas.forEach(pageArea => {\n        ret = this.createPrintPage(pageArea, options);\n        $pages.push(ret.$page);\n      });\n    } else {\n      ret = this.createPrintPage(area, options);\n      $pages.push(ret.$page);\n    }\n\n    if (ret) {\n      const size = {\n        width: ret.sheetSize.cssWidth,\n        height: ret.sheetSize.cssHeight\n      };\n      this.updatePrintStyle(size, options);\n    }\n\n    return $pages;\n  }\n\n  get styleSheetId() {\n    return this.view.prefixClassName('graph-print-style');\n  }\n\n  updatePrintStyle(size, options) {\n    const sizeCSS = Object.keys(size).reduce((memo, key) => `${memo} ${key}:${size[key]};`, '');\n    const margin = NumberExt.normalizeSides(options.margin);\n    const marginUnit = options.marginUnit || '';\n    const sheetUnit = options.sheetUnit || '';\n    const css = `\n      @media print {\n        .${this.className}.${this.className}-ready {\n          ${sizeCSS}\n        }\n\n        @page {\n          margin:\n          ${[margin.top + marginUnit, margin.right + marginUnit, margin.bottom + marginUnit, margin.left + marginUnit].join(' ')};\n          size: ${options.sheet.width + sheetUnit} ${options.sheet.height + sheetUnit};\n\n        .${this.className}.${this.className}-preview {\n          ${sizeCSS}\n        }\n      }`;\n    const id = this.styleSheetId;\n    const $style = JQuery(`#${id}`);\n\n    if ($style.length) {\n      $style.html(css);\n    } else {\n      JQuery('head').append(`'<style type=\"text/css\" id=\"${id}\">${css}</style>'`);\n    }\n  }\n\n  getPrintArea(options) {\n    let area = options.area;\n\n    if (!area) {\n      const padding = NumberExt.normalizeSides(options.padding);\n      area = this.graph.getContentArea().moveAndExpand({\n        x: -padding.left,\n        y: -padding.top,\n        width: padding.left + padding.right,\n        height: padding.top + padding.bottom\n      });\n    }\n\n    return area;\n  }\n\n  getPageSize(area, poster) {\n    if (typeof poster === 'object') {\n      const raw = poster;\n      const page = {\n        width: raw.width,\n        height: raw.height\n      };\n\n      if (page.width == null) {\n        page.width = Math.ceil(area.width / (raw.columns || 1));\n      }\n\n      if (page.height == null) {\n        page.height = Math.ceil(area.height / (raw.rows || 1));\n      }\n\n      return page;\n    }\n\n    return {\n      width: area.width,\n      height: area.height\n    };\n  }\n\n  getPageAreas(area, pageSize) {\n    const pages = [];\n    const width = pageSize.width;\n    const height = pageSize.height;\n\n    for (let w = 0, n = 0; w < area.height && n < 200; w += height, n += 1) {\n      for (let h = 0, m = 0; h < area.width && m < 200; h += width, m += 1) {\n        pages.push(new Rectangle(area.x + h, area.y + w, width, height));\n      }\n    }\n\n    return pages;\n  }\n\n  getSheetSize(options) {\n    const sheet = options.sheet;\n    const margin = NumberExt.normalizeSides(options.margin);\n    const marginUnit = options.marginUnit || '';\n    const sheetUnit = options.sheetUnit || '';\n    const cssWidth = // eslint-disable-next-line\n    `calc(${sheet.width}${sheetUnit} - ${margin.left + margin.right}${marginUnit})`;\n    const cssHeight = // eslint-disable-next-line\n    `calc(${sheet.height}${sheetUnit} - ${margin.top + margin.bottom}${marginUnit})`;\n    const ret = Unit.measure(cssWidth, cssHeight);\n    return {\n      cssWidth,\n      cssHeight,\n      width: ret.width,\n      height: ret.height\n    };\n  }\n\n  getPageInfo(graphArea, pageArea, sheetSize) {\n    const bbox = new Rectangle(pageArea.x - graphArea.x, pageArea.y - graphArea.y, pageArea.width, pageArea.height);\n    const pageRatio = bbox.width / bbox.height;\n    const graphRatio = sheetSize.width / sheetSize.height;\n    return {\n      bbox,\n      scale: graphRatio < pageRatio ? sheetSize.width / bbox.width : sheetSize.height / bbox.height,\n      fitHorizontal: graphRatio < pageRatio\n    };\n  }\n\n  dispose() {}\n\n}\n\n__decorate([Base.dispose()], PrintManager.prototype, \"dispose\", null);\n\n(function (PrintManager) {\n  PrintManager.defaultOptions = {\n    page: false,\n    sheet: {\n      width: 210,\n      height: 297\n    },\n    sheetUnit: 'mm',\n    margin: 0.4,\n    marginUnit: 'in',\n    padding: 5,\n    ready: ($pages, readyToPrint) => readyToPrint($pages)\n  };\n})(PrintManager || (PrintManager = {}));","map":{"version":3,"sources":["../../src/graph/print.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Rectangle } from '../geometry';\nimport { NumberExt, JQuery, Dom, Unit, Vector } from '../util';\nimport { Base } from './base';\nexport class PrintManager extends Base {\n    show(options = {}) {\n        const localOptions = Object.assign(Object.assign({}, PrintManager.defaultOptions), options);\n        const $pages = this.createPrintPages(localOptions);\n        localOptions.ready($pages, ($pages) => this.showPrintWindow($pages, localOptions), {\n            sheetSize: this.getSheetSize(localOptions),\n        });\n    }\n    get className() {\n        return this.view.prefixClassName('graph-print');\n    }\n    showPrintWindow($pages, options) {\n        if ($pages) {\n            const $body = JQuery(document.body);\n            const $container = JQuery(this.view.container);\n            const bodyClassName = this.view.prefixClassName('graph-printing');\n            $body.addClass(bodyClassName);\n            const $detached = $container.children().detach();\n            $pages.forEach(($page) => {\n                $page\n                    .removeClass(`${this.className}-preview`)\n                    .addClass(`${this.className}-ready`)\n                    .appendTo($body);\n            });\n            let ret = false;\n            const cb = () => {\n                if (!ret) {\n                    ret = true;\n                    $body.removeClass(bodyClassName);\n                    $pages.forEach(($page) => $page.remove());\n                    $container.append($detached);\n                    JQuery(`#${this.styleSheetId}`).remove();\n                    this.graph.trigger('after:print', options);\n                    JQuery(window).off('afterprint', cb);\n                }\n            };\n            JQuery(window).one('afterprint', cb);\n            setTimeout(cb, 200);\n            window.print();\n        }\n    }\n    createPrintPage(pageArea, options) {\n        this.graph.trigger('before:print', options);\n        const $page = JQuery('<div/>').addClass(this.className);\n        const $wrap = JQuery('<div/>')\n            .addClass(this.view.prefixClassName('graph-print-inner'))\n            .css('position', 'relative');\n        if (options.size) {\n            $page.addClass(`${this.className}-size-${options.size}`);\n        }\n        const vSVG = Vector.create(this.view.svg).clone();\n        const vStage = vSVG.findOne(`.${this.view.prefixClassName('graph-svg-stage')}`);\n        $wrap.append(vSVG.node);\n        const sheetSize = this.getSheetSize(options);\n        const graphArea = this.graph.transform.getGraphArea();\n        const s = this.graph.transform.getScale();\n        const ts = this.graph.translate();\n        const matrix = Dom.createSVGMatrix().translate(ts.tx / s.sx, ts.ty / s.sy);\n        const info = this.getPageInfo(graphArea, pageArea, sheetSize);\n        const scale = info.scale;\n        const bbox = info.bbox;\n        $wrap.css({\n            left: 0,\n            top: 0,\n        });\n        vSVG.attr({\n            width: bbox.width * scale,\n            height: bbox.height * scale,\n            style: 'position:relative',\n            viewBox: [bbox.x, bbox.y, bbox.width, bbox.height].join(' '),\n        });\n        vStage.attr('transform', Dom.matrixToTransformString(matrix));\n        $page.append($wrap);\n        $page.addClass(`${this.className}-preview`);\n        return {\n            $page,\n            sheetSize,\n        };\n    }\n    createPrintPages(options) {\n        let ret;\n        const area = this.getPrintArea(options);\n        const $pages = [];\n        if (options.page) {\n            const pageSize = this.getPageSize(area, options.page);\n            const pageAreas = this.getPageAreas(area, pageSize);\n            pageAreas.forEach((pageArea) => {\n                ret = this.createPrintPage(pageArea, options);\n                $pages.push(ret.$page);\n            });\n        }\n        else {\n            ret = this.createPrintPage(area, options);\n            $pages.push(ret.$page);\n        }\n        if (ret) {\n            const size = {\n                width: ret.sheetSize.cssWidth,\n                height: ret.sheetSize.cssHeight,\n            };\n            this.updatePrintStyle(size, options);\n        }\n        return $pages;\n    }\n    get styleSheetId() {\n        return this.view.prefixClassName('graph-print-style');\n    }\n    updatePrintStyle(size, options) {\n        const sizeCSS = Object.keys(size).reduce((memo, key) => `${memo} ${key}:${size[key]};`, '');\n        const margin = NumberExt.normalizeSides(options.margin);\n        const marginUnit = options.marginUnit || '';\n        const sheetUnit = options.sheetUnit || '';\n        const css = `\n      @media print {\n        .${this.className}.${this.className}-ready {\n          ${sizeCSS}\n        }\n\n        @page {\n          margin:\n          ${[\n            margin.top + marginUnit,\n            margin.right + marginUnit,\n            margin.bottom + marginUnit,\n            margin.left + marginUnit,\n        ].join(' ')};\n          size: ${options.sheet.width + sheetUnit} ${options.sheet.height + sheetUnit};\n\n        .${this.className}.${this.className}-preview {\n          ${sizeCSS}\n        }\n      }`;\n        const id = this.styleSheetId;\n        const $style = JQuery(`#${id}`);\n        if ($style.length) {\n            $style.html(css);\n        }\n        else {\n            JQuery('head').append(`'<style type=\"text/css\" id=\"${id}\">${css}</style>'`);\n        }\n    }\n    getPrintArea(options) {\n        let area = options.area;\n        if (!area) {\n            const padding = NumberExt.normalizeSides(options.padding);\n            area = this.graph.getContentArea().moveAndExpand({\n                x: -padding.left,\n                y: -padding.top,\n                width: padding.left + padding.right,\n                height: padding.top + padding.bottom,\n            });\n        }\n        return area;\n    }\n    getPageSize(area, poster) {\n        if (typeof poster === 'object') {\n            const raw = poster;\n            const page = {\n                width: raw.width,\n                height: raw.height,\n            };\n            if (page.width == null) {\n                page.width = Math.ceil(area.width / (raw.columns || 1));\n            }\n            if (page.height == null) {\n                page.height = Math.ceil(area.height / (raw.rows || 1));\n            }\n            return page;\n        }\n        return {\n            width: area.width,\n            height: area.height,\n        };\n    }\n    getPageAreas(area, pageSize) {\n        const pages = [];\n        const width = pageSize.width;\n        const height = pageSize.height;\n        for (let w = 0, n = 0; w < area.height && n < 200; w += height, n += 1) {\n            for (let h = 0, m = 0; h < area.width && m < 200; h += width, m += 1) {\n                pages.push(new Rectangle(area.x + h, area.y + w, width, height));\n            }\n        }\n        return pages;\n    }\n    getSheetSize(options) {\n        const sheet = options.sheet;\n        const margin = NumberExt.normalizeSides(options.margin);\n        const marginUnit = options.marginUnit || '';\n        const sheetUnit = options.sheetUnit || '';\n        const cssWidth = \n        // eslint-disable-next-line\n        `calc(${sheet.width}${sheetUnit} - ${margin.left + margin.right}${marginUnit})`;\n        const cssHeight = \n        // eslint-disable-next-line\n        `calc(${sheet.height}${sheetUnit} - ${margin.top + margin.bottom}${marginUnit})`;\n        const ret = Unit.measure(cssWidth, cssHeight);\n        return {\n            cssWidth,\n            cssHeight,\n            width: ret.width,\n            height: ret.height,\n        };\n    }\n    getPageInfo(graphArea, pageArea, sheetSize) {\n        const bbox = new Rectangle(pageArea.x - graphArea.x, pageArea.y - graphArea.y, pageArea.width, pageArea.height);\n        const pageRatio = bbox.width / bbox.height;\n        const graphRatio = sheetSize.width / sheetSize.height;\n        return {\n            bbox,\n            scale: graphRatio < pageRatio\n                ? sheetSize.width / bbox.width\n                : sheetSize.height / bbox.height,\n            fitHorizontal: graphRatio < pageRatio,\n        };\n    }\n    dispose() { }\n}\n__decorate([\n    Base.dispose()\n], PrintManager.prototype, \"dispose\", null);\n(function (PrintManager) {\n    PrintManager.defaultOptions = {\n        page: false,\n        sheet: {\n            width: 210,\n            height: 297,\n        },\n        sheetUnit: 'mm',\n        margin: 0.4,\n        marginUnit: 'in',\n        padding: 5,\n        ready: ($pages, readyToPrint) => readyToPrint($pages),\n    };\n})(PrintManager || (PrintManager = {}));\n//# sourceMappingURL=print.js.map"]},"metadata":{},"sourceType":"module"}