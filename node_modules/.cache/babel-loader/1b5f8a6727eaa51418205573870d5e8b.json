{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useCallback, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Empty, Form, Tabs } from 'antd';\nimport { xflowDefaultControls, makeControlMap, getControlFromMap } from './control-map/index';\nexport { FormItemWrapper } from './common/form-item-wrapper';\nconst {\n  TabPane\n} = Tabs;\nexport const SchemaForm = props => {\n  var _a;\n\n  const {\n    schema,\n    form: formInstance,\n    className,\n    triggerUpdate,\n    defaultControlRender,\n    afterUpdatingCb,\n    controlMap: controlMapfromParent\n  } = props,\n        otherProps = __rest(props, [\"schema\", \"form\", \"className\", \"triggerUpdate\", \"defaultControlRender\", \"afterUpdatingCb\", \"controlMap\"]);\n\n  const {\n    tabs\n  } = schema;\n  const [form] = Form.useForm(formInstance);\n  const controlMap = React.useMemo(() => props.controlMap ? props.controlMap : makeControlMap(xflowDefaultControls), [props.controlMap]);\n  const innerTriggerUpdate = useCallback(values => {\n    if (typeof triggerUpdate === 'function') {\n      triggerUpdate(form, values);\n    }\n  }, [form, triggerUpdate]);\n  /** 初次挂载时设置一次值以激活首次联动 */\n\n  useEffect(() => {\n    form.setFieldsValue({});\n  }, [form]);\n  /** 切换标签时激活联动 */\n\n  const onClickTab = useCallback(() => {\n    requestAnimationFrame(() => {\n      form.setFieldsValue({});\n    });\n  }, [form]);\n  return React.createElement(Form, Object.assign({\n    size: \"small\",\n    form: form,\n    layout: \"vertical\",\n    className: classNames('xflow-json-form', className)\n  }, otherProps), React.createElement(Tabs, {\n    type: \"card\",\n    defaultActiveKey: (_a = tabs[0]) === null || _a === void 0 ? void 0 : _a.name,\n    className: classNames({\n      ['tabs']: true,\n      ['xTab']: true,\n      ['singleTab']: (tabs === null || tabs === void 0 ? void 0 : tabs.length) === 1,\n      ['coupleTab']: (tabs === null || tabs === void 0 ? void 0 : tabs.length) === 2,\n      ['ternateTab']: (tabs === null || tabs === void 0 ? void 0 : tabs.length) === 3\n    }),\n    onTabClick: onClickTab\n  }, tabs.map(tab => {\n    const {\n      name: tabName,\n      groups\n    } = tab;\n    return React.createElement(TabPane, {\n      key: tabName,\n      tab: tabName\n    }, groups.length === 0 && React.createElement(Empty, {\n      style: {\n        padding: '24px 0'\n      }\n    }), groups.length > 0 && groups.map(group => {\n      const {\n        controls: groupControls = []\n      } = group;\n\n      if (groupControls.length === 0) {\n        return React.createElement(Empty, {\n          style: {\n            padding: '24px 0'\n          }\n        });\n      }\n\n      return groupControls.map(control => {\n        const {\n          shape,\n          name: controlName\n        } = control;\n        const ControlComponent = getControlFromMap(shape, controlMap, defaultControlRender);\n\n        if (!ControlComponent) {\n          console.error('未找到对应的控件:', shape);\n          return null;\n        }\n\n        return React.createElement(ControlComponent, {\n          key: controlName,\n          form: form,\n          controlSchema: control,\n          triggerUpdate: innerTriggerUpdate,\n          afterUpdatingCb: afterUpdatingCb\n        });\n      });\n    }));\n  })));\n};","map":{"version":3,"sources":["../../../src/canvas-json-schema-form/schema-form/index.tsx"],"names":[],"mappings":";;;;;;;;;;;AAIA,OAAO,KAAP,IAAgB,WAAhB,EAA6B,SAA7B,QAA8C,OAA9C;AACA,OAAO,UAAP,MAAuB,YAAvB;AACA,SAAS,KAAT,EAAgB,IAAhB,EAAsB,IAAtB,QAAkC,MAAlC;AACA,SAAS,oBAAT,EAA+B,cAA/B,EAA+C,iBAA/C,QAAwE,qBAAxE;AACA,SAAS,eAAT,QAAgC,4BAAhC;AAYA,MAAM;AAAE,EAAA;AAAF,IAAc,IAApB;AAEA,OAAO,MAAM,UAAU,GAAoB,KAAK,IAAG;;;AACjD,QAAM;AACJ,IAAA,MADI;AAEJ,IAAA,IAAI,EAAE,YAFF;AAGJ,IAAA,SAHI;AAIJ,IAAA,aAJI;AAKJ,IAAA,oBALI;AAMJ,IAAA,eANI;AAOJ,IAAA,UAAU,EAAE;AAPR,MASF,KATJ;AAAA,QAQK,UAAU,GAAA,MAAA,CACX,KADW,EART,CAAA,QAAA,EAAA,MAAA,EAAA,WAAA,EAAA,eAAA,EAAA,sBAAA,EAAA,iBAAA,EAAA,YAAA,CAQS,CARf;;AAWA,QAAM;AAAE,IAAA;AAAF,MAAW,MAAjB;AACA,QAAM,CAAC,IAAD,IAAS,IAAI,CAAC,OAAL,CAAa,YAAb,CAAf;AACA,QAAM,UAAU,GAAG,KAAK,CAAC,OAAN,CACjB,MAAO,KAAK,CAAC,UAAN,GAAmB,KAAK,CAAC,UAAzB,GAAsC,cAAc,CAAC,oBAAD,CAD1C,EAEjB,CAAC,KAAK,CAAC,UAAP,CAFiB,CAAnB;AAKA,QAAM,kBAAkB,GAAG,WAAW,CACnC,MAAD,IAAgC;AAC9B,QAAI,OAAO,aAAP,KAAyB,UAA7B,EAAyC;AACvC,MAAA,aAAa,CAAC,IAAD,EAAO,MAAP,CAAb;AACD;AACF,GALmC,EAMpC,CAAC,IAAD,EAAO,aAAP,CANoC,CAAtC;AASA;;AACA,EAAA,SAAS,CAAC,MAAK;AACb,IAAA,IAAI,CAAC,cAAL,CAAoB,EAApB;AACD,GAFQ,EAEN,CAAC,IAAD,CAFM,CAAT;AAIA;;AACA,QAAM,UAAU,GAAG,WAAW,CAAC,MAAK;AAClC,IAAA,qBAAqB,CAAC,MAAK;AACzB,MAAA,IAAI,CAAC,cAAL,CAAoB,EAApB;AACD,KAFoB,CAArB;AAGD,GAJ6B,EAI3B,CAAC,IAAD,CAJ2B,CAA9B;AAMA,SACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,MAAA,CAAA,MAAA,CAAA;AACH,IAAA,IAAI,EAAC,OADF;AAEH,IAAA,IAAI,EAAE,IAFH;AAGH,IAAA,MAAM,EAAC,UAHJ;AAIH,IAAA,SAAS,EAAE,UAAU,CAAC,iBAAD,EAAoB,SAApB;AAJlB,GAAA,EAKC,UALD,CAAL,EAOE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AACH,IAAA,IAAI,EAAC,MADF;AAEH,IAAA,gBAAgB,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,CAAD,CAAJ,MAAO,IAAP,IAAO,EAAA,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAO,EAAA,CAAE,IAFxB;AAGH,IAAA,SAAS,EAAE,UAAU,CAAC;AACpB,OAAC,MAAD,GAAU,IADU;AAEpB,OAAC,MAAD,GAAU,IAFU;AAGpB,OAAC,WAAD,GAAe,CAAA,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,MAAN,MAAiB,CAHZ;AAIpB,OAAC,WAAD,GAAe,CAAA,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,MAAN,MAAiB,CAJZ;AAKpB,OAAC,YAAD,GAAgB,CAAA,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,MAAN,MAAiB;AALb,KAAD,CAHlB;AAUH,IAAA,UAAU,EAAE;AAVT,GAAL,EAYG,IAAI,CAAC,GAAL,CAAU,GAAD,IAAc;AACtB,UAAM;AAAE,MAAA,IAAI,EAAE,OAAR;AAAiB,MAAA;AAAjB,QAA4B,GAAlC;AACA,WACE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AAAC,MAAA,GAAG,EAAE,OAAN;AAAe,MAAA,GAAG,EAAE;AAApB,KAAR,EACG,MAAM,CAAC,MAAP,KAAkB,CAAlB,IAAuB,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,MAAA,KAAK,EAAE;AAAE,QAAA,OAAO,EAAE;AAAX;AAAR,KAAN,CAD1B,EAEG,MAAM,CAAC,MAAP,GAAgB,CAAhB,IACC,MAAM,CAAC,GAAP,CAAW,KAAK,IAAG;AACjB,YAAM;AAAE,QAAA,QAAQ,EAAE,aAAa,GAAG;AAA5B,UAAmC,KAAzC;;AACA,UAAI,aAAa,CAAC,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,eAAO,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM;AAAC,UAAA,KAAK,EAAE;AAAE,YAAA,OAAO,EAAE;AAAX;AAAR,SAAN,CAAP;AACD;;AACD,aAAO,aAAa,CAAC,GAAd,CAAkB,OAAO,IAAG;AACjC,cAAM;AAAE,UAAA,KAAF;AAAS,UAAA,IAAI,EAAE;AAAf,YAA+B,OAArC;AACA,cAAM,gBAAgB,GAAG,iBAAiB,CACxC,KADwC,EAExC,UAFwC,EAGxC,oBAHwC,CAA1C;;AAKA,YAAI,CAAC,gBAAL,EAAuB;AACrB,UAAA,OAAO,CAAC,KAAR,CAAc,WAAd,EAA2B,KAA3B;AACA,iBAAO,IAAP;AACD;;AACD,eACE,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB;AACf,UAAA,GAAG,EAAE,WADU;AAEf,UAAA,IAAI,EAAE,IAFS;AAGf,UAAA,aAAa,EAAE,OAHA;AAIf,UAAA,aAAa,EAAE,kBAJA;AAKf,UAAA,eAAe,EAAE;AALF,SAAjB,CADF;AASD,OApBM,CAAP;AAqBD,KA1BD,CAHJ,CADF;AAiCD,GAnCA,CAZH,CAPF,CADF;AA2DD,CAnGM","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useCallback, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Empty, Form, Tabs } from 'antd';\nimport { xflowDefaultControls, makeControlMap, getControlFromMap } from './control-map/index';\nexport { FormItemWrapper } from './common/form-item-wrapper';\nconst { TabPane } = Tabs;\nexport const SchemaForm = props => {\n    var _a;\n    const { schema, form: formInstance, className, triggerUpdate, defaultControlRender, afterUpdatingCb, controlMap: controlMapfromParent } = props, otherProps = __rest(props, [\"schema\", \"form\", \"className\", \"triggerUpdate\", \"defaultControlRender\", \"afterUpdatingCb\", \"controlMap\"]);\n    const { tabs } = schema;\n    const [form] = Form.useForm(formInstance);\n    const controlMap = React.useMemo(() => (props.controlMap ? props.controlMap : makeControlMap(xflowDefaultControls)), [props.controlMap]);\n    const innerTriggerUpdate = useCallback((values) => {\n        if (typeof triggerUpdate === 'function') {\n            triggerUpdate(form, values);\n        }\n    }, [form, triggerUpdate]);\n    /** 初次挂载时设置一次值以激活首次联动 */\n    useEffect(() => {\n        form.setFieldsValue({});\n    }, [form]);\n    /** 切换标签时激活联动 */\n    const onClickTab = useCallback(() => {\n        requestAnimationFrame(() => {\n            form.setFieldsValue({});\n        });\n    }, [form]);\n    return (React.createElement(Form, Object.assign({ size: \"small\", form: form, layout: \"vertical\", className: classNames('xflow-json-form', className) }, otherProps),\n        React.createElement(Tabs, { type: \"card\", defaultActiveKey: (_a = tabs[0]) === null || _a === void 0 ? void 0 : _a.name, className: classNames({\n                ['tabs']: true,\n                ['xTab']: true,\n                ['singleTab']: (tabs === null || tabs === void 0 ? void 0 : tabs.length) === 1,\n                ['coupleTab']: (tabs === null || tabs === void 0 ? void 0 : tabs.length) === 2,\n                ['ternateTab']: (tabs === null || tabs === void 0 ? void 0 : tabs.length) === 3,\n            }), onTabClick: onClickTab }, tabs.map((tab) => {\n            const { name: tabName, groups } = tab;\n            return (React.createElement(TabPane, { key: tabName, tab: tabName },\n                groups.length === 0 && React.createElement(Empty, { style: { padding: '24px 0' } }),\n                groups.length > 0 &&\n                    groups.map(group => {\n                        const { controls: groupControls = [] } = group;\n                        if (groupControls.length === 0) {\n                            return React.createElement(Empty, { style: { padding: '24px 0' } });\n                        }\n                        return groupControls.map(control => {\n                            const { shape, name: controlName } = control;\n                            const ControlComponent = getControlFromMap(shape, controlMap, defaultControlRender);\n                            if (!ControlComponent) {\n                                console.error('未找到对应的控件:', shape);\n                                return null;\n                            }\n                            return (React.createElement(ControlComponent, { key: controlName, form: form, controlSchema: control, triggerUpdate: innerTriggerUpdate, afterUpdatingCb: afterUpdatingCb }));\n                        });\n                    })));\n        }))));\n};\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}