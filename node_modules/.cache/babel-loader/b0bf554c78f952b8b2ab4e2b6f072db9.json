{"ast":null,"code":"import _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { ObjectExt } from '../util';\nimport { Rectangle } from '../geometry';\nimport { Background } from '../registry';\nimport { Base } from './base';\nexport var BackgroundManager = /*#__PURE__*/function (_Base) {\n  _inherits(BackgroundManager, _Base);\n\n  var _super = _createSuper(BackgroundManager);\n\n  function BackgroundManager() {\n    _classCallCheck(this, BackgroundManager);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BackgroundManager, [{\n    key: \"elem\",\n    get: function get() {\n      return this.view.background;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.startListening();\n\n      if (this.options.background) {\n        this.draw(this.options.background);\n      }\n    }\n  }, {\n    key: \"startListening\",\n    value: function startListening() {\n      this.graph.on('scale', this.update, this);\n      this.graph.on('translate', this.update, this);\n    }\n  }, {\n    key: \"stopListening\",\n    value: function stopListening() {\n      this.graph.off('scale', this.update, this);\n      this.graph.off('translate', this.update, this);\n    }\n  }, {\n    key: \"updateBackgroundImage\",\n    value: function updateBackgroundImage() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var backgroundSize = options.size || 'auto auto';\n      var backgroundPosition = options.position || 'center';\n      var scale = this.graph.transform.getScale();\n      var ts = this.graph.translate(); // backgroundPosition\n\n      if (typeof backgroundPosition === 'object') {\n        var x = ts.tx + scale.sx * (backgroundPosition.x || 0);\n        var y = ts.ty + scale.sy * (backgroundPosition.y || 0);\n        backgroundPosition = \"\".concat(x, \"px \").concat(y, \"px\");\n      } // backgroundSize\n\n\n      if (typeof backgroundSize === 'object') {\n        backgroundSize = Rectangle.fromSize(backgroundSize).scale(scale.sx, scale.sy);\n        backgroundSize = \"\".concat(backgroundSize.width, \"px \").concat(backgroundSize.height, \"px\");\n      }\n\n      this.elem.style.backgroundSize = backgroundSize;\n      this.elem.style.backgroundPosition = backgroundPosition;\n    }\n  }, {\n    key: \"drawBackgroundImage\",\n    value: function drawBackgroundImage(img) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!(img instanceof HTMLImageElement)) {\n        this.elem.style.backgroundImage = '';\n        return;\n      } // draw multiple times to show the last image\n\n\n      var cache = this.optionsCache;\n\n      if (cache && cache.image !== options.image) {\n        return;\n      }\n\n      var uri;\n      var opacity = options.opacity;\n      var backgroundSize = options.size;\n      var backgroundRepeat = options.repeat || 'no-repeat';\n      var pattern = Background.registry.get(backgroundRepeat);\n\n      if (typeof pattern === 'function') {\n        var quality = options.quality || 1;\n        img.width *= quality;\n        img.height *= quality;\n        var canvas = pattern(img, options);\n\n        if (!(canvas instanceof HTMLCanvasElement)) {\n          throw new Error('Background pattern must return an HTML Canvas instance');\n        }\n\n        uri = canvas.toDataURL('image/png'); // `repeat` was changed in pattern function\n\n        if (options.repeat && backgroundRepeat !== options.repeat) {\n          backgroundRepeat = options.repeat;\n        } else {\n          backgroundRepeat = 'repeat';\n        }\n\n        if (typeof backgroundSize === 'object') {\n          // recalculate the tile size if an object passed in\n          backgroundSize.width *= canvas.width / img.width;\n          backgroundSize.height *= canvas.height / img.height;\n        } else if (backgroundSize === undefined) {\n          // calcule the tile size if no provided\n          options.size = {\n            width: canvas.width / quality,\n            height: canvas.height / quality\n          };\n        }\n      } else {\n        uri = img.src;\n\n        if (backgroundSize === undefined) {\n          options.size = {\n            width: img.width,\n            height: img.height\n          };\n        }\n      }\n\n      if (cache != null && typeof options.size === 'object' && options.image === cache.image && options.repeat === cache.repeat && options.quality === cache.quality) {\n        cache.size = ObjectExt.clone(options.size);\n      }\n\n      var style = this.elem.style;\n      style.backgroundImage = \"url(\".concat(uri, \")\");\n      style.backgroundRepeat = backgroundRepeat;\n      style.opacity = opacity == null || opacity >= 1 ? '' : \"\".concat(opacity);\n      this.updateBackgroundImage(options);\n    }\n  }, {\n    key: \"updateBackgroundColor\",\n    value: function updateBackgroundColor(color) {\n      this.elem.style.backgroundColor = color || '';\n    }\n  }, {\n    key: \"updateBackgroundOptions\",\n    value: function updateBackgroundOptions(options) {\n      this.graph.options.background = options;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.optionsCache) {\n        this.updateBackgroundImage(this.optionsCache);\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(options) {\n      var _this = this;\n\n      var opts = options || {};\n      this.updateBackgroundOptions(options);\n      this.updateBackgroundColor(opts.color);\n\n      if (opts.image) {\n        this.optionsCache = ObjectExt.clone(opts);\n        var img = document.createElement('img');\n\n        img.onload = function () {\n          return _this.drawBackgroundImage(img, options);\n        };\n\n        img.setAttribute('crossorigin', 'anonymous');\n        img.src = opts.image;\n      } else {\n        this.drawBackgroundImage(null);\n        this.optionsCache = null;\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.draw();\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.clear();\n      this.stopListening();\n    }\n  }]);\n\n  return BackgroundManager;\n}(Base);\n\n__decorate([Base.dispose()], BackgroundManager.prototype, \"dispose\", null);","map":{"version":3,"sources":["../../src/graph/background.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ObjectExt } from '../util';\nimport { Rectangle } from '../geometry';\nimport { Background } from '../registry';\nimport { Base } from './base';\nexport class BackgroundManager extends Base {\n    get elem() {\n        return this.view.background;\n    }\n    init() {\n        this.startListening();\n        if (this.options.background) {\n            this.draw(this.options.background);\n        }\n    }\n    startListening() {\n        this.graph.on('scale', this.update, this);\n        this.graph.on('translate', this.update, this);\n    }\n    stopListening() {\n        this.graph.off('scale', this.update, this);\n        this.graph.off('translate', this.update, this);\n    }\n    updateBackgroundImage(options = {}) {\n        let backgroundSize = options.size || 'auto auto';\n        let backgroundPosition = options.position || 'center';\n        const scale = this.graph.transform.getScale();\n        const ts = this.graph.translate();\n        // backgroundPosition\n        if (typeof backgroundPosition === 'object') {\n            const x = ts.tx + scale.sx * (backgroundPosition.x || 0);\n            const y = ts.ty + scale.sy * (backgroundPosition.y || 0);\n            backgroundPosition = `${x}px ${y}px`;\n        }\n        // backgroundSize\n        if (typeof backgroundSize === 'object') {\n            backgroundSize = Rectangle.fromSize(backgroundSize).scale(scale.sx, scale.sy);\n            backgroundSize = `${backgroundSize.width}px ${backgroundSize.height}px`;\n        }\n        this.elem.style.backgroundSize = backgroundSize;\n        this.elem.style.backgroundPosition = backgroundPosition;\n    }\n    drawBackgroundImage(img, options = {}) {\n        if (!(img instanceof HTMLImageElement)) {\n            this.elem.style.backgroundImage = '';\n            return;\n        }\n        // draw multiple times to show the last image\n        const cache = this.optionsCache;\n        if (cache && cache.image !== options.image) {\n            return;\n        }\n        let uri;\n        const opacity = options.opacity;\n        const backgroundSize = options.size;\n        let backgroundRepeat = options.repeat || 'no-repeat';\n        const pattern = Background.registry.get(backgroundRepeat);\n        if (typeof pattern === 'function') {\n            const quality = options.quality || 1;\n            img.width *= quality;\n            img.height *= quality;\n            const canvas = pattern(img, options);\n            if (!(canvas instanceof HTMLCanvasElement)) {\n                throw new Error('Background pattern must return an HTML Canvas instance');\n            }\n            uri = canvas.toDataURL('image/png');\n            // `repeat` was changed in pattern function\n            if (options.repeat && backgroundRepeat !== options.repeat) {\n                backgroundRepeat = options.repeat;\n            }\n            else {\n                backgroundRepeat = 'repeat';\n            }\n            if (typeof backgroundSize === 'object') {\n                // recalculate the tile size if an object passed in\n                backgroundSize.width *= canvas.width / img.width;\n                backgroundSize.height *= canvas.height / img.height;\n            }\n            else if (backgroundSize === undefined) {\n                // calcule the tile size if no provided\n                options.size = {\n                    width: canvas.width / quality,\n                    height: canvas.height / quality,\n                };\n            }\n        }\n        else {\n            uri = img.src;\n            if (backgroundSize === undefined) {\n                options.size = {\n                    width: img.width,\n                    height: img.height,\n                };\n            }\n        }\n        if (cache != null &&\n            typeof options.size === 'object' &&\n            options.image === cache.image &&\n            options.repeat === cache.repeat &&\n            options.quality ===\n                cache.quality) {\n            cache.size = ObjectExt.clone(options.size);\n        }\n        const style = this.elem.style;\n        style.backgroundImage = `url(${uri})`;\n        style.backgroundRepeat = backgroundRepeat;\n        style.opacity = opacity == null || opacity >= 1 ? '' : `${opacity}`;\n        this.updateBackgroundImage(options);\n    }\n    updateBackgroundColor(color) {\n        this.elem.style.backgroundColor = color || '';\n    }\n    updateBackgroundOptions(options) {\n        this.graph.options.background = options;\n    }\n    update() {\n        if (this.optionsCache) {\n            this.updateBackgroundImage(this.optionsCache);\n        }\n    }\n    draw(options) {\n        const opts = options || {};\n        this.updateBackgroundOptions(options);\n        this.updateBackgroundColor(opts.color);\n        if (opts.image) {\n            this.optionsCache = ObjectExt.clone(opts);\n            const img = document.createElement('img');\n            img.onload = () => this.drawBackgroundImage(img, options);\n            img.setAttribute('crossorigin', 'anonymous');\n            img.src = opts.image;\n        }\n        else {\n            this.drawBackgroundImage(null);\n            this.optionsCache = null;\n        }\n    }\n    clear() {\n        this.draw();\n    }\n    dispose() {\n        this.clear();\n        this.stopListening();\n    }\n}\n__decorate([\n    Base.dispose()\n], BackgroundManager.prototype, \"dispose\", null);\n//# sourceMappingURL=background.js.map"]},"metadata":{},"sourceType":"module"}