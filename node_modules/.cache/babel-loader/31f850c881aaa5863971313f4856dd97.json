{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport BaseMapWrapper from '../BaseMapWrapper';\nimport AMapService from './map';\n\nvar AMapWrapper = function (_BaseMapWrapper) {\n  _inherits(AMapWrapper, _BaseMapWrapper);\n\n  var _super = _createSuper(AMapWrapper);\n\n  function AMapWrapper() {\n    _classCallCheck(this, AMapWrapper);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AMapWrapper, [{\n    key: \"getServiceConstructor\",\n    value: function getServiceConstructor() {\n      return AMapService;\n    }\n  }]);\n\n  return AMapWrapper;\n}(BaseMapWrapper);\n\nexport { AMapWrapper as default };","map":{"version":3,"sources":["../../src/amap/index.ts"],"names":["AMapWrapper","BaseMapWrapper"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA,cAAA,MAAA,mBAAA;AACA,OAAA,WAAA,MAAA,OAAA;;IAEqBA,W;;;;;;;;;;;;;WAGnB,SAAA,qBAAA,GAAkC;AAChC,aAAA,WAAA;AACD;;;;EALsCC,c;;SAApBD,W","sourcesContent":["import { IAMapInstance } from '../../typings/index';\nimport BaseMapWrapper from '../BaseMapWrapper';\nimport AMapService from './map';\n\nexport default class AMapWrapper extends BaseMapWrapper<\n  AMap.Map & IAMapInstance\n> {\n  protected getServiceConstructor() {\n    return AMapService;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}