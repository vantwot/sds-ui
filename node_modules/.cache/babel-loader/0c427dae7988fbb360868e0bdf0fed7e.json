{"ast":null,"code":"import React from 'react';\nimport { PlusSquareOutlined, MinusSquareOutlined } from '@ant-design/icons';\nimport { useXFlowApp, XFlowGroupCommands } from '@antv/xflow';\nexport var GroupNode = function (props) {\n  var cell = props.cell,\n      _a = props.data,\n      label = _a.label,\n      stroke = _a.stroke,\n      fill = _a.fill,\n      fontSize = _a.fontSize,\n      fontFill = _a.fontFill,\n      _b = _a.width,\n      width = _b === void 0 ? 200 : _b,\n      _c = _a.isCollapsed,\n      isCollapsed = _c === void 0 ? false : _c;\n  var app = useXFlowApp(); // const isCollapse = cell.getProp('isCollapsed') || false;\n\n  var onExpand = function (e) {\n    app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\n      nodeId: cell.id,\n      isCollapsed: false,\n      collapsedSize: {\n        width: width,\n        height: 40\n      }\n    });\n  };\n\n  var onCollapse = function (e) {\n    app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\n      nodeId: cell.id,\n      isCollapsed: true,\n      collapsedSize: {\n        width: width,\n        height: 40\n      },\n      gap: 3\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"xflow-group-node\",\n    style: {\n      borderColor: stroke,\n      backgroundColor: fill,\n      fontSize: fontSize,\n      color: fontFill\n    }\n  }, React.createElement(\"div\", {\n    className: \"xflow-group-header\"\n  }, React.createElement(\"div\", {\n    className: \"header-left\"\n  }, label), React.createElement(\"div\", {\n    className: \"header-right\"\n  }, isCollapsed && React.createElement(PlusSquareOutlined, {\n    onClick: onExpand\n  }), !isCollapsed && React.createElement(MinusSquareOutlined, {\n    onClick: onCollapse\n  }))));\n};","map":{"version":3,"sources":["/home/manolo/sds-ui/node_modules/@ant-design/flowchart/es/components/group-panel/group.js"],"names":["React","PlusSquareOutlined","MinusSquareOutlined","useXFlowApp","XFlowGroupCommands","GroupNode","props","cell","_a","data","label","stroke","fill","fontSize","fontFill","_b","width","_c","isCollapsed","app","onExpand","e","executeCommand","COLLAPSE_GROUP","id","nodeId","collapsedSize","height","onCollapse","gap","createElement","className","style","borderColor","backgroundColor","color","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { PlusSquareOutlined, MinusSquareOutlined } from '@ant-design/icons';\nimport { useXFlowApp, XFlowGroupCommands } from '@antv/xflow';\nexport var GroupNode = function (props) {\n    var cell = props.cell, _a = props.data, label = _a.label, stroke = _a.stroke, fill = _a.fill, fontSize = _a.fontSize, fontFill = _a.fontFill, _b = _a.width, width = _b === void 0 ? 200 : _b, _c = _a.isCollapsed, isCollapsed = _c === void 0 ? false : _c;\n    var app = useXFlowApp();\n    // const isCollapse = cell.getProp('isCollapsed') || false;\n    var onExpand = function (e) {\n        app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\n            nodeId: cell.id,\n            isCollapsed: false,\n            collapsedSize: { width: width, height: 40 },\n        });\n    };\n    var onCollapse = function (e) {\n        app.executeCommand(XFlowGroupCommands.COLLAPSE_GROUP.id, {\n            nodeId: cell.id,\n            isCollapsed: true,\n            collapsedSize: { width: width, height: 40 },\n            gap: 3,\n        });\n    };\n    return (React.createElement(\"div\", { className: \"xflow-group-node\", style: {\n            borderColor: stroke,\n            backgroundColor: fill,\n            fontSize: fontSize,\n            color: fontFill,\n        } },\n        React.createElement(\"div\", { className: \"xflow-group-header\" },\n            React.createElement(\"div\", { className: \"header-left\" }, label),\n            React.createElement(\"div\", { className: \"header-right\" },\n                isCollapsed && React.createElement(PlusSquareOutlined, { onClick: onExpand }),\n                !isCollapsed && React.createElement(MinusSquareOutlined, { onClick: onCollapse })))));\n};\n"]},"metadata":{},"sourceType":"module"}