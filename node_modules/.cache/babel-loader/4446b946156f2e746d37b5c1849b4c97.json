{"ast":null,"code":"import React from 'react';\nimport clamp from 'clamp';\nimport classNames from 'classnames';\nimport { debounce } from '../util';\nimport { WheelHandler } from '../util/dom/WheelHandler';\nimport { TouchHandler } from '../util/dom/TouchHandler';\nimport { MouseMoveTracker } from '../util/dom/MouseMoveTracker';\nimport { Scrollbar } from '../scrollbar';\nexport class ScrollBox extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n\n    this.onScroll = (deltaX, deltaY) => {\n      if (!this.scrolling) {\n        this.triggerScrollStart();\n      }\n\n      if (Math.abs(deltaY) > Math.abs(deltaX) && this.state.hasVerticalBar) {\n        this.scrollVertical(deltaY, true);\n      } else if (deltaX && this.state.hasHorizontalBar) {\n        this.scrollHorizontal(deltaX, true);\n      }\n\n      this.triggerScrollStop();\n    };\n\n    this.onVerticalScroll = scrollY => {\n      if (scrollY === this.state.scrollTop) {\n        return;\n      }\n\n      if (!this.scrolling) {\n        this.triggerScrollStart();\n      }\n\n      this.scrollVertical(scrollY, false);\n      this.triggerScrollStop();\n    };\n\n    this.onHorizontalScroll = scrollX => {\n      if (scrollX === this.state.scrollLeft) {\n        return;\n      }\n\n      if (!this.scrolling) {\n        this.triggerScrollStart();\n      }\n\n      this.scrollHorizontal(scrollX, false);\n      this.triggerScrollStop();\n    };\n\n    this.shouldHandleWheelX = delta => {\n      if (!this.state.hasHorizontalBar || delta === 0) {\n        return false;\n      }\n\n      delta = Math.round(delta); // eslint-disable-line\n\n      if (delta === 0) {\n        return false;\n      }\n\n      return delta < 0 && this.state.scrollLeft > 0 || delta >= 0 && this.state.scrollLeft < this.state.maxScrollLeft;\n    };\n\n    this.shouldHandleWheelY = delta => {\n      if (!this.state.hasVerticalBar || delta === 0) {\n        return false;\n      }\n\n      delta = Math.round(delta); // eslint-disable-line\n\n      if (delta === 0) {\n        return false;\n      }\n\n      return delta < 0 && this.state.scrollTop > 0 || delta >= 0 && this.state.scrollTop < this.state.maxScrollTop;\n    };\n\n    this.shouldHandleTouchX = delta => this.props.touchable ? this.shouldHandleWheelX(delta) : false;\n\n    this.shouldHandleTouchY = delta => this.props.touchable ? this.shouldHandleWheelY(delta) : false;\n\n    this.onMouseDown = e => {\n      if (this.mouseMoveTracker != null) {\n        this.mouseMoveTracker.capture(e);\n      }\n    };\n\n    this.onMouseMove = (deltaX, deltaY) => {\n      if (!this.scrolling) {\n        this.triggerScrollStart();\n      }\n\n      this.scrollVertical(deltaY, true);\n      this.scrollHorizontal(deltaX, true);\n    };\n\n    this.onMouseMoveEnd = () => {\n      if (this.mouseMoveTracker != null) {\n        this.mouseMoveTracker.release();\n      }\n\n      this.triggerScrollStop();\n    };\n\n    this.refContainer = container => {\n      this.containerElem = container;\n    };\n\n    this.refContent = content => {\n      this.contentElem = content;\n    };\n\n    this.onWheel = e => {\n      if (this.wheelHandler != null) {\n        this.wheelHandler.onWheel(e);\n      }\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.triggerScrollStop = debounce(this.triggerScrollStopSync, 200, this);\n    this.wheelHandler = new WheelHandler({\n      onWheel: this.onScroll,\n      shouldHandleScrollX: this.shouldHandleWheelX,\n      shouldHandleScrollY: this.shouldHandleWheelY,\n      stopPropagation: this.props.stopPropagation\n    });\n\n    if (this.props.touchable) {\n      this.touchHandler = new TouchHandler({\n        onTouchScroll: this.onScroll,\n        shouldHandleScrollX: this.shouldHandleTouchX,\n        shouldHandleScrollY: this.shouldHandleTouchY,\n        stopPropagation: this.props.stopPropagation\n      });\n    }\n\n    if (this.props.dragable) {\n      this.mouseMoveTracker = new MouseMoveTracker({\n        elem: document.documentElement,\n        onMouseMove: this.onMouseMove,\n        onMouseMoveEnd: this.onMouseMoveEnd\n      });\n    }\n\n    this.setState(this.calculateState());\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.setState(this.calculateState());\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState(this.calculateState(nextProps));\n  }\n\n  componentWillUnmount() {\n    this.wheelHandler = null;\n\n    if (this.props.touchable) {\n      this.touchHandler = null;\n    }\n\n    if (this.props.dragable && this.mouseMoveTracker != null) {\n      this.mouseMoveTracker.release();\n      this.mouseMoveTracker = null;\n    }\n\n    const triggerScrollStop = this.triggerScrollStop;\n    triggerScrollStop.reset();\n    this.triggerScrollStopSync();\n  }\n\n  calculateState() {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n    const containerWidth = props.containerWidth !== undefined && props.containerWidth !== this.props.containerWidth ? props.containerWidth : this.props.containerWidth !== undefined ? this.props.containerWidth : this.containerElem && this.containerElem.clientWidth || 0;\n    const containerHeight = props.containerHeight !== undefined && props.containerHeight !== this.props.containerHeight ? props.containerHeight : this.props.containerHeight !== undefined ? this.props.containerHeight : this.containerElem && this.containerElem.clientHeight || 0;\n    const contentWidth = props.contentWidth !== undefined && props.contentWidth !== this.props.contentWidth ? props.contentWidth : this.props.contentWidth !== undefined ? this.props.contentWidth : this.contentElem && this.contentElem.scrollWidth || 0;\n    const contentHeight = props.contentHeight !== undefined && props.contentHeight !== this.props.contentHeight ? props.contentHeight : this.props.contentHeight !== undefined ? this.props.contentHeight : this.contentElem && this.contentElem.scrollHeight || 0;\n    const hasVerticalBar = contentHeight > containerHeight;\n    const hasHorizontalBar = contentWidth > containerWidth;\n    let scrollTop = 0;\n    let scrollLeft = 0;\n    let maxScrollTop = 0;\n    let maxScrollLeft = 0;\n    let verticalBarHeight = containerHeight;\n    let horizontalBarWidth = containerWidth;\n\n    if (hasVerticalBar) {\n      if (hasHorizontalBar) {\n        verticalBarHeight -= props.scrollbarSize;\n      }\n\n      maxScrollTop = contentHeight - verticalBarHeight;\n\n      if (props.scrollTop !== this.props.scrollTop) {\n        scrollTop = props.scrollTop;\n      } else {\n        scrollTop = (this.state ? this.state.scrollTop : props.scrollTop) || 0;\n      }\n    }\n\n    if (hasHorizontalBar) {\n      if (hasVerticalBar) {\n        horizontalBarWidth -= props.scrollbarSize;\n      }\n\n      maxScrollLeft = contentWidth - horizontalBarWidth;\n\n      if (props.scrollLeft !== this.props.scrollLeft) {\n        scrollLeft = props.scrollLeft;\n      } else {\n        scrollLeft = (this.state ? this.state.scrollLeft : props.scrollLeft) || 0;\n      }\n    }\n\n    const nextState = {\n      containerWidth,\n      containerHeight,\n      contentWidth,\n      contentHeight,\n      verticalBarHeight,\n      horizontalBarWidth,\n      hasVerticalBar,\n      hasHorizontalBar,\n      maxScrollTop,\n      maxScrollLeft,\n      scrollTop: clamp(scrollTop, 0, maxScrollTop),\n      scrollLeft: clamp(scrollLeft, 0, maxScrollLeft)\n    };\n    return nextState;\n  }\n\n  scrollVertical(scrollY, relative) {\n    const scrollTop = clamp(relative ? this.state.scrollTop + scrollY : scrollY, 0, this.state.maxScrollTop);\n\n    if (this.props.onVerticalScroll) {\n      this.props.onVerticalScroll(scrollTop);\n    }\n\n    this.setState({\n      scrollTop\n    });\n  }\n\n  scrollHorizontal(scrollX, relative) {\n    const scrollLeft = clamp(relative ? this.state.scrollLeft + scrollX : scrollX, 0, this.state.maxScrollLeft);\n\n    if (this.props.onHorizontalScroll) {\n      this.props.onHorizontalScroll(scrollLeft);\n    }\n\n    this.setState({\n      scrollLeft\n    });\n  }\n\n  triggerScrollStart() {\n    if (this.scrolling) {\n      return;\n    }\n\n    this.scrolling = true;\n\n    if (this.props.onScrollStart) {\n      this.props.onScrollStart(this.state.scrollLeft, this.state.scrollTop);\n    }\n  }\n\n  triggerScrollStopSync() {\n    if (!this.scrolling) {\n      return;\n    }\n\n    this.scrolling = false;\n\n    if (this.props.onScrollEnd) {\n      this.props.onScrollEnd(this.state.scrollLeft, this.state.scrollTop);\n    }\n  }\n\n  getScrollbarProps() {\n    return {\n      zIndex: this.props.zIndex,\n      miniThumbSize: this.props.miniThumbSize,\n      scrollbarSize: this.props.scrollbarSize,\n      keyboardScrollAmount: this.props.keyboardScrollAmount,\n      stopPropagation: true\n    };\n  }\n\n  renderVerticalBar() {\n    if (this.state.hasVerticalBar) {\n      return React.createElement(Scrollbar, Object.assign({\n        orientation: \"vertical\",\n        scrollPosition: this.state.scrollTop,\n        contentSize: this.state.contentHeight,\n        containerSize: this.state.verticalBarHeight,\n        onScroll: this.onVerticalScroll\n      }, this.getScrollbarProps()));\n    }\n  }\n\n  renderHorizontalBar() {\n    if (this.state.hasHorizontalBar) {\n      return React.createElement(Scrollbar, Object.assign({\n        orientation: \"horizontal\",\n        scrollPosition: this.state.scrollLeft,\n        contentSize: this.state.contentWidth,\n        containerSize: this.state.horizontalBarWidth,\n        onScroll: this.onHorizontalScroll\n      }, this.getScrollbarProps()));\n    }\n  }\n\n  render() {\n    const props = {};\n\n    if (this.props.touchable) {\n      props.onTouchStart = this.touchHandler.onTouchStart;\n      props.onTouchEnd = this.touchHandler.onTouchEnd;\n      props.onTouchMove = this.touchHandler.onTouchMove;\n      props.onTouchCancel = this.touchHandler.onTouchCancel;\n    }\n\n    if (this.props.dragable) {\n      props.onMouseDown = this.onMouseDown;\n    }\n\n    const contentStyle = {};\n    const containerStyle = {};\n\n    if (this.props.containerWidth != null || this.mounted) {\n      containerStyle.width = this.state.containerWidth;\n    }\n\n    if (this.props.containerHeight != null || this.mounted) {\n      containerStyle.height = this.state.containerHeight;\n    }\n\n    if (this.props.contentWidth != null || this.mounted) {\n      contentStyle.width = this.state.contentWidth;\n    }\n\n    if (this.props.contentHeight != null || this.mounted) {\n      contentStyle.height = this.state.contentHeight;\n    }\n\n    if (this.mounted) {\n      contentStyle.transform = `translate(-${this.state.scrollLeft}px, -${this.state.scrollTop}px)`;\n    }\n\n    const {\n      prefixCls,\n      scrollbarAutoHide\n    } = this.props;\n    const baseCls = `${prefixCls}-scroll-box`;\n    return React.createElement(\"div\", Object.assign({}, props, {\n      style: Object.assign(Object.assign({}, this.props.containerStyle), containerStyle),\n      ref: this.refContainer,\n      onWheel: this.onWheel,\n      className: classNames(baseCls, {\n        [`${baseCls}-auto-hide`]: scrollbarAutoHide\n      }, this.props.containerClassName)\n    }), React.createElement(\"div\", {\n      style: Object.assign(Object.assign({}, this.props.contentStyle), contentStyle),\n      ref: this.refContent,\n      className: classNames(`${baseCls}-content`, this.props.contentClassName)\n    }, this.props.children), this.renderVerticalBar(), this.renderHorizontalBar());\n  }\n\n}\n\n(function (ScrollBox) {\n  ScrollBox.defaultProps = {\n    prefixCls: 'x6',\n    scrollTop: 0,\n    scrollLeft: 0,\n    dragable: true,\n    touchable: true,\n    scrollbarAutoHide: true,\n    scrollbarSize: Scrollbar.defaultProps.scrollbarSize,\n    miniThumbSize: Scrollbar.defaultProps.miniThumbSize,\n    keyboardScrollAmount: Scrollbar.defaultProps.keyboardScrollAmount\n  };\n})(ScrollBox || (ScrollBox = {}));","map":{"version":3,"sources":["../../src/scroll-box/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from 'react';\nimport clamp from 'clamp';\nimport classNames from 'classnames';\nimport { debounce } from '../util';\nimport { WheelHandler } from '../util/dom/WheelHandler';\nimport { TouchHandler } from '../util/dom/TouchHandler';\nimport { MouseMoveTracker } from '../util/dom/MouseMoveTracker';\nimport { Scrollbar } from '../scrollbar';\nexport class ScrollBox extends React.PureComponent {\n    constructor() {\n        super(...arguments);\n        this.onScroll = (deltaX, deltaY) => {\n            if (!this.scrolling) {\n                this.triggerScrollStart();\n            }\n            if (Math.abs(deltaY) > Math.abs(deltaX) && this.state.hasVerticalBar) {\n                this.scrollVertical(deltaY, true);\n            }\n            else if (deltaX && this.state.hasHorizontalBar) {\n                this.scrollHorizontal(deltaX, true);\n            }\n            this.triggerScrollStop();\n        };\n        this.onVerticalScroll = (scrollY) => {\n            if (scrollY === this.state.scrollTop) {\n                return;\n            }\n            if (!this.scrolling) {\n                this.triggerScrollStart();\n            }\n            this.scrollVertical(scrollY, false);\n            this.triggerScrollStop();\n        };\n        this.onHorizontalScroll = (scrollX) => {\n            if (scrollX === this.state.scrollLeft) {\n                return;\n            }\n            if (!this.scrolling) {\n                this.triggerScrollStart();\n            }\n            this.scrollHorizontal(scrollX, false);\n            this.triggerScrollStop();\n        };\n        this.shouldHandleWheelX = (delta) => {\n            if (!this.state.hasHorizontalBar || delta === 0) {\n                return false;\n            }\n            delta = Math.round(delta); // eslint-disable-line\n            if (delta === 0) {\n                return false;\n            }\n            return ((delta < 0 && this.state.scrollLeft > 0) ||\n                (delta >= 0 && this.state.scrollLeft < this.state.maxScrollLeft));\n        };\n        this.shouldHandleWheelY = (delta) => {\n            if (!this.state.hasVerticalBar || delta === 0) {\n                return false;\n            }\n            delta = Math.round(delta); // eslint-disable-line\n            if (delta === 0) {\n                return false;\n            }\n            return ((delta < 0 && this.state.scrollTop > 0) ||\n                (delta >= 0 && this.state.scrollTop < this.state.maxScrollTop));\n        };\n        this.shouldHandleTouchX = (delta) => this.props.touchable ? this.shouldHandleWheelX(delta) : false;\n        this.shouldHandleTouchY = (delta) => this.props.touchable ? this.shouldHandleWheelY(delta) : false;\n        this.onMouseDown = (e) => {\n            if (this.mouseMoveTracker != null) {\n                this.mouseMoveTracker.capture(e);\n            }\n        };\n        this.onMouseMove = (deltaX, deltaY) => {\n            if (!this.scrolling) {\n                this.triggerScrollStart();\n            }\n            this.scrollVertical(deltaY, true);\n            this.scrollHorizontal(deltaX, true);\n        };\n        this.onMouseMoveEnd = () => {\n            if (this.mouseMoveTracker != null) {\n                this.mouseMoveTracker.release();\n            }\n            this.triggerScrollStop();\n        };\n        this.refContainer = (container) => {\n            this.containerElem = container;\n        };\n        this.refContent = (content) => {\n            this.contentElem = content;\n        };\n        this.onWheel = (e) => {\n            if (this.wheelHandler != null) {\n                this.wheelHandler.onWheel(e);\n            }\n        };\n    }\n    UNSAFE_componentWillMount() {\n        this.triggerScrollStop = debounce(this.triggerScrollStopSync, 200, this);\n        this.wheelHandler = new WheelHandler({\n            onWheel: this.onScroll,\n            shouldHandleScrollX: this.shouldHandleWheelX,\n            shouldHandleScrollY: this.shouldHandleWheelY,\n            stopPropagation: this.props.stopPropagation,\n        });\n        if (this.props.touchable) {\n            this.touchHandler = new TouchHandler({\n                onTouchScroll: this.onScroll,\n                shouldHandleScrollX: this.shouldHandleTouchX,\n                shouldHandleScrollY: this.shouldHandleTouchY,\n                stopPropagation: this.props.stopPropagation,\n            });\n        }\n        if (this.props.dragable) {\n            this.mouseMoveTracker = new MouseMoveTracker({\n                elem: document.documentElement,\n                onMouseMove: this.onMouseMove,\n                onMouseMoveEnd: this.onMouseMoveEnd,\n            });\n        }\n        this.setState(this.calculateState());\n    }\n    componentDidMount() {\n        this.mounted = true;\n        this.setState(this.calculateState());\n    }\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState(this.calculateState(nextProps));\n    }\n    componentWillUnmount() {\n        this.wheelHandler = null;\n        if (this.props.touchable) {\n            this.touchHandler = null;\n        }\n        if (this.props.dragable && this.mouseMoveTracker != null) {\n            this.mouseMoveTracker.release();\n            this.mouseMoveTracker = null;\n        }\n        const triggerScrollStop = this.triggerScrollStop;\n        triggerScrollStop.reset();\n        this.triggerScrollStopSync();\n    }\n    calculateState(props = this.props) {\n        const containerWidth = props.containerWidth !== undefined &&\n            props.containerWidth !== this.props.containerWidth\n            ? props.containerWidth\n            : this.props.containerWidth !== undefined\n                ? this.props.containerWidth\n                : (this.containerElem && this.containerElem.clientWidth) || 0;\n        const containerHeight = props.containerHeight !== undefined &&\n            props.containerHeight !== this.props.containerHeight\n            ? props.containerHeight\n            : this.props.containerHeight !== undefined\n                ? this.props.containerHeight\n                : (this.containerElem && this.containerElem.clientHeight) || 0;\n        const contentWidth = props.contentWidth !== undefined &&\n            props.contentWidth !== this.props.contentWidth\n            ? props.contentWidth\n            : this.props.contentWidth !== undefined\n                ? this.props.contentWidth\n                : (this.contentElem && this.contentElem.scrollWidth) || 0;\n        const contentHeight = props.contentHeight !== undefined &&\n            props.contentHeight !== this.props.contentHeight\n            ? props.contentHeight\n            : this.props.contentHeight !== undefined\n                ? this.props.contentHeight\n                : (this.contentElem && this.contentElem.scrollHeight) || 0;\n        const hasVerticalBar = contentHeight > containerHeight;\n        const hasHorizontalBar = contentWidth > containerWidth;\n        let scrollTop = 0;\n        let scrollLeft = 0;\n        let maxScrollTop = 0;\n        let maxScrollLeft = 0;\n        let verticalBarHeight = containerHeight;\n        let horizontalBarWidth = containerWidth;\n        if (hasVerticalBar) {\n            if (hasHorizontalBar) {\n                verticalBarHeight -= props.scrollbarSize;\n            }\n            maxScrollTop = contentHeight - verticalBarHeight;\n            if (props.scrollTop !== this.props.scrollTop) {\n                scrollTop = props.scrollTop;\n            }\n            else {\n                scrollTop = (this.state ? this.state.scrollTop : props.scrollTop) || 0;\n            }\n        }\n        if (hasHorizontalBar) {\n            if (hasVerticalBar) {\n                horizontalBarWidth -= props.scrollbarSize;\n            }\n            maxScrollLeft = contentWidth - horizontalBarWidth;\n            if (props.scrollLeft !== this.props.scrollLeft) {\n                scrollLeft = props.scrollLeft;\n            }\n            else {\n                scrollLeft =\n                    (this.state ? this.state.scrollLeft : props.scrollLeft) || 0;\n            }\n        }\n        const nextState = {\n            containerWidth,\n            containerHeight,\n            contentWidth,\n            contentHeight,\n            verticalBarHeight,\n            horizontalBarWidth,\n            hasVerticalBar,\n            hasHorizontalBar,\n            maxScrollTop,\n            maxScrollLeft,\n            scrollTop: clamp(scrollTop, 0, maxScrollTop),\n            scrollLeft: clamp(scrollLeft, 0, maxScrollLeft),\n        };\n        return nextState;\n    }\n    scrollVertical(scrollY, relative) {\n        const scrollTop = clamp(relative ? this.state.scrollTop + scrollY : scrollY, 0, this.state.maxScrollTop);\n        if (this.props.onVerticalScroll) {\n            this.props.onVerticalScroll(scrollTop);\n        }\n        this.setState({ scrollTop });\n    }\n    scrollHorizontal(scrollX, relative) {\n        const scrollLeft = clamp(relative ? this.state.scrollLeft + scrollX : scrollX, 0, this.state.maxScrollLeft);\n        if (this.props.onHorizontalScroll) {\n            this.props.onHorizontalScroll(scrollLeft);\n        }\n        this.setState({ scrollLeft });\n    }\n    triggerScrollStart() {\n        if (this.scrolling) {\n            return;\n        }\n        this.scrolling = true;\n        if (this.props.onScrollStart) {\n            this.props.onScrollStart(this.state.scrollLeft, this.state.scrollTop);\n        }\n    }\n    triggerScrollStopSync() {\n        if (!this.scrolling) {\n            return;\n        }\n        this.scrolling = false;\n        if (this.props.onScrollEnd) {\n            this.props.onScrollEnd(this.state.scrollLeft, this.state.scrollTop);\n        }\n    }\n    getScrollbarProps() {\n        return {\n            zIndex: this.props.zIndex,\n            miniThumbSize: this.props.miniThumbSize,\n            scrollbarSize: this.props.scrollbarSize,\n            keyboardScrollAmount: this.props.keyboardScrollAmount,\n            stopPropagation: true,\n        };\n    }\n    renderVerticalBar() {\n        if (this.state.hasVerticalBar) {\n            return (React.createElement(Scrollbar, Object.assign({ orientation: \"vertical\", scrollPosition: this.state.scrollTop, contentSize: this.state.contentHeight, containerSize: this.state.verticalBarHeight, onScroll: this.onVerticalScroll }, this.getScrollbarProps())));\n        }\n    }\n    renderHorizontalBar() {\n        if (this.state.hasHorizontalBar) {\n            return (React.createElement(Scrollbar, Object.assign({ orientation: \"horizontal\", scrollPosition: this.state.scrollLeft, contentSize: this.state.contentWidth, containerSize: this.state.horizontalBarWidth, onScroll: this.onHorizontalScroll }, this.getScrollbarProps())));\n        }\n    }\n    render() {\n        const props = {};\n        if (this.props.touchable) {\n            props.onTouchStart = this.touchHandler.onTouchStart;\n            props.onTouchEnd = this.touchHandler.onTouchEnd;\n            props.onTouchMove = this.touchHandler.onTouchMove;\n            props.onTouchCancel = this.touchHandler.onTouchCancel;\n        }\n        if (this.props.dragable) {\n            props.onMouseDown = this.onMouseDown;\n        }\n        const contentStyle = {};\n        const containerStyle = {};\n        if (this.props.containerWidth != null || this.mounted) {\n            containerStyle.width = this.state.containerWidth;\n        }\n        if (this.props.containerHeight != null || this.mounted) {\n            containerStyle.height = this.state.containerHeight;\n        }\n        if (this.props.contentWidth != null || this.mounted) {\n            contentStyle.width = this.state.contentWidth;\n        }\n        if (this.props.contentHeight != null || this.mounted) {\n            contentStyle.height = this.state.contentHeight;\n        }\n        if (this.mounted) {\n            contentStyle.transform = `translate(-${this.state.scrollLeft}px, -${this.state.scrollTop}px)`;\n        }\n        const { prefixCls, scrollbarAutoHide } = this.props;\n        const baseCls = `${prefixCls}-scroll-box`;\n        return (React.createElement(\"div\", Object.assign({}, props, { style: Object.assign(Object.assign({}, this.props.containerStyle), containerStyle), ref: this.refContainer, onWheel: this.onWheel, className: classNames(baseCls, {\n                [`${baseCls}-auto-hide`]: scrollbarAutoHide,\n            }, this.props.containerClassName) }),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, this.props.contentStyle), contentStyle), ref: this.refContent, className: classNames(`${baseCls}-content`, this.props.contentClassName) }, this.props.children),\n            this.renderVerticalBar(),\n            this.renderHorizontalBar()));\n    }\n}\n(function (ScrollBox) {\n    ScrollBox.defaultProps = {\n        prefixCls: 'x6',\n        scrollTop: 0,\n        scrollLeft: 0,\n        dragable: true,\n        touchable: true,\n        scrollbarAutoHide: true,\n        scrollbarSize: Scrollbar.defaultProps.scrollbarSize,\n        miniThumbSize: Scrollbar.defaultProps.miniThumbSize,\n        keyboardScrollAmount: Scrollbar.defaultProps.keyboardScrollAmount,\n    };\n})(ScrollBox || (ScrollBox = {}));\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}