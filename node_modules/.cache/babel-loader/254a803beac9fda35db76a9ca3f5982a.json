{"ast":null,"code":"import { getJudgeFunction } from '../fn';\nimport { normalizeWheel } from './normalizeWheel';\nimport { requestAnimationFrame } from './animationFrame';\nexport class WheelHandler {\n  constructor(options) {\n    this.onWheel = e => {\n      const normalizedEvent = normalizeWheel(e);\n      const {\n        pixelX,\n        pixelY\n      } = normalizedEvent;\n      const deltaX = this.deltaX + pixelX;\n      const deltaY = this.deltaY + pixelY;\n      const handleScrollX = this.shouldHandleScrollX(deltaX, deltaY);\n      const handleScrollY = this.shouldHandleScrollY(deltaY, deltaX);\n\n      if (!handleScrollX && !handleScrollY) {\n        return;\n      }\n\n      this.deltaX += handleScrollX ? pixelX : 0;\n      this.deltaY += handleScrollY ? pixelY : 0;\n      let changed;\n\n      if (this.deltaX !== 0 || this.deltaY !== 0) {\n        if (this.stopPropagation()) {\n          e.stopPropagation();\n        }\n\n        changed = true;\n      }\n\n      if (changed === true && this.animationFrameID == null) {\n        this.animationFrameID = requestAnimationFrame(this.didWheel);\n      }\n    };\n\n    this.didWheel = () => {\n      this.animationFrameID = null;\n\n      if (this.callback) {\n        this.callback(this.deltaX, this.deltaY);\n      }\n\n      this.deltaX = 0;\n      this.deltaY = 0;\n    };\n\n    this.callback = options.onWheel;\n    this.stopPropagation = getJudgeFunction(options.stopPropagation);\n    this.shouldHandleScrollX = getJudgeFunction(options.shouldHandleScrollX);\n    this.shouldHandleScrollY = getJudgeFunction(options.shouldHandleScrollY);\n    this.deltaX = 0;\n    this.deltaY = 0;\n  }\n\n}","map":{"version":3,"sources":["../../../src/util/dom/WheelHandler.ts"],"names":[],"mappings":"AAAA,SAAS,gBAAT,QAAiC,OAAjC;AACA,SAAS,cAAT,QAA+B,kBAA/B;AACA,SAAS,qBAAT,QAAsC,kBAAtC;AAEA,OAAM,MAAO,YAAP,CAAmB;AAevB,EAAA,WAAA,CAAY,OAAZ,EAAyC;AASzC,SAAA,OAAA,GAAW,CAAD,IAAwB;AAChC,YAAM,eAAe,GAAG,cAAc,CAAC,CAAD,CAAtC;AACA,YAAM;AAAE,QAAA,MAAF;AAAU,QAAA;AAAV,UAAqB,eAA3B;AACA,YAAM,MAAM,GAAG,KAAK,MAAL,GAAc,MAA7B;AACA,YAAM,MAAM,GAAG,KAAK,MAAL,GAAc,MAA7B;AACA,YAAM,aAAa,GAAG,KAAK,mBAAL,CAAyB,MAAzB,EAAiC,MAAjC,CAAtB;AACA,YAAM,aAAa,GAAG,KAAK,mBAAL,CAAyB,MAAzB,EAAiC,MAAjC,CAAtB;;AAEA,UAAI,CAAC,aAAD,IAAkB,CAAC,aAAvB,EAAsC;AACpC;AACD;;AAED,WAAK,MAAL,IAAe,aAAa,GAAG,MAAH,GAAY,CAAxC;AACA,WAAK,MAAL,IAAe,aAAa,GAAG,MAAH,GAAY,CAAxC;AAEA,UAAI,OAAJ;;AACA,UAAI,KAAK,MAAL,KAAgB,CAAhB,IAAqB,KAAK,MAAL,KAAgB,CAAzC,EAA4C;AAC1C,YAAI,KAAK,eAAL,EAAJ,EAA4B;AAC1B,UAAA,CAAC,CAAC,eAAF;AACD;;AACD,QAAA,OAAO,GAAG,IAAV;AACD;;AAED,UAAI,OAAO,KAAK,IAAZ,IAAoB,KAAK,gBAAL,IAAyB,IAAjD,EAAuD;AACrD,aAAK,gBAAL,GAAwB,qBAAqB,CAAC,KAAK,QAAN,CAA7C;AACD;AACF,KA1BD;;AA4BQ,SAAA,QAAA,GAAW,MAAK;AACtB,WAAK,gBAAL,GAAwB,IAAxB;;AACA,UAAI,KAAK,QAAT,EAAmB;AACjB,aAAK,QAAL,CAAc,KAAK,MAAnB,EAA2B,KAAK,MAAhC;AACD;;AACD,WAAK,MAAL,GAAc,CAAd;AACA,WAAK,MAAL,GAAc,CAAd;AACD,KAPO;;AApCN,SAAK,QAAL,GAAgB,OAAO,CAAC,OAAxB;AACA,SAAK,eAAL,GAAuB,gBAAgB,CAAC,OAAO,CAAC,eAAT,CAAvC;AACA,SAAK,mBAAL,GAA2B,gBAAgB,CAAC,OAAO,CAAC,mBAAT,CAA3C;AACA,SAAK,mBAAL,GAA2B,gBAAgB,CAAC,OAAO,CAAC,mBAAT,CAA3C;AACA,SAAK,MAAL,GAAc,CAAd;AACA,SAAK,MAAL,GAAc,CAAd;AACD;;AAtBsB","sourceRoot":"","sourcesContent":["import { getJudgeFunction } from '../fn';\nimport { normalizeWheel } from './normalizeWheel';\nimport { requestAnimationFrame } from './animationFrame';\nexport class WheelHandler {\n    constructor(options) {\n        this.onWheel = (e) => {\n            const normalizedEvent = normalizeWheel(e);\n            const { pixelX, pixelY } = normalizedEvent;\n            const deltaX = this.deltaX + pixelX;\n            const deltaY = this.deltaY + pixelY;\n            const handleScrollX = this.shouldHandleScrollX(deltaX, deltaY);\n            const handleScrollY = this.shouldHandleScrollY(deltaY, deltaX);\n            if (!handleScrollX && !handleScrollY) {\n                return;\n            }\n            this.deltaX += handleScrollX ? pixelX : 0;\n            this.deltaY += handleScrollY ? pixelY : 0;\n            let changed;\n            if (this.deltaX !== 0 || this.deltaY !== 0) {\n                if (this.stopPropagation()) {\n                    e.stopPropagation();\n                }\n                changed = true;\n            }\n            if (changed === true && this.animationFrameID == null) {\n                this.animationFrameID = requestAnimationFrame(this.didWheel);\n            }\n        };\n        this.didWheel = () => {\n            this.animationFrameID = null;\n            if (this.callback) {\n                this.callback(this.deltaX, this.deltaY);\n            }\n            this.deltaX = 0;\n            this.deltaY = 0;\n        };\n        this.callback = options.onWheel;\n        this.stopPropagation = getJudgeFunction(options.stopPropagation);\n        this.shouldHandleScrollX = getJudgeFunction(options.shouldHandleScrollX);\n        this.shouldHandleScrollY = getJudgeFunction(options.shouldHandleScrollY);\n        this.deltaX = 0;\n        this.deltaY = 0;\n    }\n}\n//# sourceMappingURL=WheelHandler.js.map"]},"metadata":{},"sourceType":"module"}