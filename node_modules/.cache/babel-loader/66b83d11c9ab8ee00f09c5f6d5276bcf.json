{"ast":null,"code":"import { attr } from './attr';\nimport { createSvgElement } from './elem';\nexport var KAPPA = 0.551784;\n\nfunction getNumbericAttribute(elem, attr) {\n  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : NaN;\n  var v = elem.getAttribute(attr);\n\n  if (v == null) {\n    return defaultValue;\n  }\n\n  var n = parseFloat(v);\n  return Number.isNaN(n) ? defaultValue : n;\n}\n\nexport function sample(elem) {\n  var interval = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var length = elem.getTotalLength();\n  var samples = [];\n  var distance = 0;\n  var sample;\n\n  while (distance < length) {\n    sample = elem.getPointAtLength(distance);\n    samples.push({\n      distance: distance,\n      x: sample.x,\n      y: sample.y\n    });\n    distance += interval;\n  }\n\n  return samples;\n}\nexport function lineToPathData(line) {\n  return ['M', getNumbericAttribute(line, 'x1'), getNumbericAttribute(line, 'y1'), 'L', getNumbericAttribute(line, 'x2'), getNumbericAttribute(line, 'y2')].join(' ');\n}\nexport function polygonToPathData(polygon) {\n  var points = getPointsFromSvgElement(polygon);\n\n  if (points.length === 0) {\n    return null;\n  }\n\n  return \"\".concat(svgPointsToPath(points), \" Z\");\n}\nexport function polylineToPathData(polyline) {\n  var points = getPointsFromSvgElement(polyline);\n\n  if (points.length === 0) {\n    return null;\n  }\n\n  return svgPointsToPath(points);\n}\n\nfunction svgPointsToPath(points) {\n  var arr = points.map(function (p) {\n    return \"\".concat(p.x, \" \").concat(p.y);\n  });\n  return \"M \".concat(arr.join(' L'));\n}\n\nexport function getPointsFromSvgElement(elem) {\n  var points = [];\n  var nodePoints = elem.points;\n\n  if (nodePoints) {\n    for (var i = 0, ii = nodePoints.numberOfItems; i < ii; i += 1) {\n      points.push(nodePoints.getItem(i));\n    }\n  }\n\n  return points;\n}\nexport function circleToPathData(circle) {\n  var cx = getNumbericAttribute(circle, 'cx', 0);\n  var cy = getNumbericAttribute(circle, 'cy', 0);\n  var r = getNumbericAttribute(circle, 'r');\n  var cd = r * KAPPA; // Control distance.\n\n  return ['M', cx, cy - r, 'C', cx + cd, cy - r, cx + r, cy - cd, cx + r, cy, 'C', cx + r, cy + cd, cx + cd, cy + r, cx, cy + r, 'C', cx - cd, cy + r, cx - r, cy + cd, cx - r, cy, 'C', cx - r, cy - cd, cx - cd, cy - r, cx, cy - r, 'Z'].join(' ');\n}\nexport function ellipseToPathData(ellipse) {\n  var cx = getNumbericAttribute(ellipse, 'cx', 0);\n  var cy = getNumbericAttribute(ellipse, 'cy', 0);\n  var rx = getNumbericAttribute(ellipse, 'rx');\n  var ry = getNumbericAttribute(ellipse, 'ry') || rx;\n  var cdx = rx * KAPPA; // Control distance x.\n\n  var cdy = ry * KAPPA; // Control distance y.\n\n  var d = ['M', cx, cy - ry, 'C', cx + cdx, cy - ry, cx + rx, cy - cdy, cx + rx, cy, 'C', cx + rx, cy + cdy, cx + cdx, cy + ry, cx, cy + ry, 'C', cx - cdx, cy + ry, cx - rx, cy + cdy, cx - rx, cy, 'C', cx - rx, cy - cdy, cx - cdx, cy - ry, cx, cy - ry, 'Z'].join(' ');\n  return d;\n}\nexport function rectangleToPathData(rect) {\n  return rectToPathData({\n    x: getNumbericAttribute(rect, 'x', 0),\n    y: getNumbericAttribute(rect, 'y', 0),\n    width: getNumbericAttribute(rect, 'width', 0),\n    height: getNumbericAttribute(rect, 'height', 0),\n    rx: getNumbericAttribute(rect, 'rx', 0),\n    ry: getNumbericAttribute(rect, 'ry', 0)\n  });\n}\nexport function rectToPathData(r) {\n  var d;\n  var x = r.x;\n  var y = r.y;\n  var width = r.width;\n  var height = r.height;\n  var topRx = Math.min(r.rx || r['top-rx'] || 0, width / 2);\n  var bottomRx = Math.min(r.rx || r['bottom-rx'] || 0, width / 2);\n  var topRy = Math.min(r.ry || r['top-ry'] || 0, height / 2);\n  var bottomRy = Math.min(r.ry || r['bottom-ry'] || 0, height / 2);\n\n  if (topRx || bottomRx || topRy || bottomRy) {\n    d = ['M', x, y + topRy, 'v', height - topRy - bottomRy, 'a', bottomRx, bottomRy, 0, 0, 0, bottomRx, bottomRy, 'h', width - 2 * bottomRx, 'a', bottomRx, bottomRy, 0, 0, 0, bottomRx, -bottomRy, 'v', -(height - bottomRy - topRy), 'a', topRx, topRy, 0, 0, 0, -topRx, -topRy, 'h', -(width - 2 * topRx), 'a', topRx, topRy, 0, 0, 0, -topRx, topRy, 'Z'];\n  } else {\n    d = ['M', x, y, 'H', x + width, 'V', y + height, 'H', x, 'V', y, 'Z'];\n  }\n\n  return d.join(' ');\n}\nexport function toPath(elem) {\n  var path = createSvgElement('path');\n  attr(path, attr(elem));\n  var d = toPathData(elem);\n\n  if (d) {\n    path.setAttribute('d', d);\n  }\n\n  return path;\n}\nexport function toPathData(elem) {\n  var tagName = elem.tagName.toLowerCase();\n\n  switch (tagName) {\n    case 'path':\n      return elem.getAttribute('d');\n\n    case 'line':\n      return lineToPathData(elem);\n\n    case 'polygon':\n      return polygonToPathData(elem);\n\n    case 'polyline':\n      return polylineToPathData(elem);\n\n    case 'ellipse':\n      return ellipseToPathData(elem);\n\n    case 'circle':\n      return circleToPathData(elem);\n\n    case 'rect':\n      return rectangleToPathData(elem);\n\n    default:\n      break;\n  }\n\n  throw new Error(\"\\\"\".concat(tagName, \"\\\" cannot be converted to svg path element.\"));\n} // Inspired by d3.js https://github.com/mbostock/d3/blob/master/src/svg/arc.js\n\nexport function createSlicePathData(innerRadius, outerRadius, startAngle, endAngle) {\n  var svgArcMax = 2 * Math.PI - 1e-6;\n  var r0 = innerRadius;\n  var r1 = outerRadius;\n  var a0 = startAngle;\n  var a1 = endAngle;\n\n  if (a1 < a0) {\n    var tmp = a0;\n    a0 = a1;\n    a1 = tmp;\n  }\n\n  var da = a1 - a0;\n  var df = da < Math.PI ? '0' : '1';\n  var c0 = Math.cos(a0);\n  var s0 = Math.sin(a0);\n  var c1 = Math.cos(a1);\n  var s1 = Math.sin(a1);\n  return da >= svgArcMax ? r0 ? // eslint-disable-next-line\n  \"M0,\".concat(r1, \"A\").concat(r1, \",\").concat(r1, \" 0 1,1 0,\").concat(-r1, \"A\").concat(r1, \",\").concat(r1, \" 0 1,1 0,\").concat(r1, \"M0,\").concat(r0, \"A\").concat(r0, \",\").concat(r0, \" 0 1,0 0,\").concat(-r0, \"A\").concat(r0, \",\").concat(r0, \" 0 1,0 0,\").concat(r0, \"Z\") : // eslint-disable-next-line\n  \"M0,\".concat(r1, \"A\").concat(r1, \",\").concat(r1, \" 0 1,1 0,\").concat(-r1, \"A\").concat(r1, \",\").concat(r1, \" 0 1,1 0,\").concat(r1, \"Z\") : r0 ? // eslint-disable-next-line\n  \"M\".concat(r1 * c0, \",\").concat(r1 * s0, \"A\").concat(r1, \",\").concat(r1, \" 0 \").concat(df, \",1 \").concat(r1 * c1, \",\").concat(r1 * s1, \"L\").concat(r0 * c1, \",\").concat(r0 * s1, \"A\").concat(r0, \",\").concat(r0, \" 0 \").concat(df, \",0 \").concat(r0 * c0, \",\").concat(r0 * s0, \"Z\") : // eslint-disable-next-line\n  \"M\".concat(r1 * c0, \",\").concat(r1 * s0, \"A\").concat(r1, \",\").concat(r1, \" 0 \").concat(df, \",1 \").concat(r1 * c1, \",\").concat(r1 * s1, \"L0,0\") + \"Z\";\n}","map":{"version":3,"sources":["../../../src/util/dom/path.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { attr } from './attr';\nimport { createSvgElement } from './elem';\nexport const KAPPA = 0.551784;\nfunction getNumbericAttribute(elem, attr, defaultValue = NaN) {\n    const v = elem.getAttribute(attr);\n    if (v == null) {\n        return defaultValue;\n    }\n    const n = parseFloat(v);\n    return Number.isNaN(n) ? defaultValue : n;\n}\nexport function sample(elem, interval = 1) {\n    const length = elem.getTotalLength();\n    const samples = [];\n    let distance = 0;\n    let sample;\n    while (distance < length) {\n        sample = elem.getPointAtLength(distance);\n        samples.push({ distance, x: sample.x, y: sample.y });\n        distance += interval;\n    }\n    return samples;\n}\nexport function lineToPathData(line) {\n    return [\n        'M',\n        getNumbericAttribute(line, 'x1'),\n        getNumbericAttribute(line, 'y1'),\n        'L',\n        getNumbericAttribute(line, 'x2'),\n        getNumbericAttribute(line, 'y2'),\n    ].join(' ');\n}\nexport function polygonToPathData(polygon) {\n    const points = getPointsFromSvgElement(polygon);\n    if (points.length === 0) {\n        return null;\n    }\n    return `${svgPointsToPath(points)} Z`;\n}\nexport function polylineToPathData(polyline) {\n    const points = getPointsFromSvgElement(polyline);\n    if (points.length === 0) {\n        return null;\n    }\n    return svgPointsToPath(points);\n}\nfunction svgPointsToPath(points) {\n    const arr = points.map((p) => `${p.x} ${p.y}`);\n    return `M ${arr.join(' L')}`;\n}\nexport function getPointsFromSvgElement(elem) {\n    const points = [];\n    const nodePoints = elem.points;\n    if (nodePoints) {\n        for (let i = 0, ii = nodePoints.numberOfItems; i < ii; i += 1) {\n            points.push(nodePoints.getItem(i));\n        }\n    }\n    return points;\n}\nexport function circleToPathData(circle) {\n    const cx = getNumbericAttribute(circle, 'cx', 0);\n    const cy = getNumbericAttribute(circle, 'cy', 0);\n    const r = getNumbericAttribute(circle, 'r');\n    const cd = r * KAPPA; // Control distance.\n    return [\n        'M',\n        cx,\n        cy - r,\n        'C',\n        cx + cd,\n        cy - r,\n        cx + r,\n        cy - cd,\n        cx + r,\n        cy,\n        'C',\n        cx + r,\n        cy + cd,\n        cx + cd,\n        cy + r,\n        cx,\n        cy + r,\n        'C',\n        cx - cd,\n        cy + r,\n        cx - r,\n        cy + cd,\n        cx - r,\n        cy,\n        'C',\n        cx - r,\n        cy - cd,\n        cx - cd,\n        cy - r,\n        cx,\n        cy - r,\n        'Z',\n    ].join(' ');\n}\nexport function ellipseToPathData(ellipse) {\n    const cx = getNumbericAttribute(ellipse, 'cx', 0);\n    const cy = getNumbericAttribute(ellipse, 'cy', 0);\n    const rx = getNumbericAttribute(ellipse, 'rx');\n    const ry = getNumbericAttribute(ellipse, 'ry') || rx;\n    const cdx = rx * KAPPA; // Control distance x.\n    const cdy = ry * KAPPA; // Control distance y.\n    const d = [\n        'M',\n        cx,\n        cy - ry,\n        'C',\n        cx + cdx,\n        cy - ry,\n        cx + rx,\n        cy - cdy,\n        cx + rx,\n        cy,\n        'C',\n        cx + rx,\n        cy + cdy,\n        cx + cdx,\n        cy + ry,\n        cx,\n        cy + ry,\n        'C',\n        cx - cdx,\n        cy + ry,\n        cx - rx,\n        cy + cdy,\n        cx - rx,\n        cy,\n        'C',\n        cx - rx,\n        cy - cdy,\n        cx - cdx,\n        cy - ry,\n        cx,\n        cy - ry,\n        'Z',\n    ].join(' ');\n    return d;\n}\nexport function rectangleToPathData(rect) {\n    return rectToPathData({\n        x: getNumbericAttribute(rect, 'x', 0),\n        y: getNumbericAttribute(rect, 'y', 0),\n        width: getNumbericAttribute(rect, 'width', 0),\n        height: getNumbericAttribute(rect, 'height', 0),\n        rx: getNumbericAttribute(rect, 'rx', 0),\n        ry: getNumbericAttribute(rect, 'ry', 0),\n    });\n}\nexport function rectToPathData(r) {\n    let d;\n    const x = r.x;\n    const y = r.y;\n    const width = r.width;\n    const height = r.height;\n    const topRx = Math.min(r.rx || r['top-rx'] || 0, width / 2);\n    const bottomRx = Math.min(r.rx || r['bottom-rx'] || 0, width / 2);\n    const topRy = Math.min(r.ry || r['top-ry'] || 0, height / 2);\n    const bottomRy = Math.min(r.ry || r['bottom-ry'] || 0, height / 2);\n    if (topRx || bottomRx || topRy || bottomRy) {\n        d = [\n            'M',\n            x,\n            y + topRy,\n            'v',\n            height - topRy - bottomRy,\n            'a',\n            bottomRx,\n            bottomRy,\n            0,\n            0,\n            0,\n            bottomRx,\n            bottomRy,\n            'h',\n            width - 2 * bottomRx,\n            'a',\n            bottomRx,\n            bottomRy,\n            0,\n            0,\n            0,\n            bottomRx,\n            -bottomRy,\n            'v',\n            -(height - bottomRy - topRy),\n            'a',\n            topRx,\n            topRy,\n            0,\n            0,\n            0,\n            -topRx,\n            -topRy,\n            'h',\n            -(width - 2 * topRx),\n            'a',\n            topRx,\n            topRy,\n            0,\n            0,\n            0,\n            -topRx,\n            topRy,\n            'Z',\n        ];\n    }\n    else {\n        d = ['M', x, y, 'H', x + width, 'V', y + height, 'H', x, 'V', y, 'Z'];\n    }\n    return d.join(' ');\n}\nexport function toPath(elem) {\n    const path = createSvgElement('path');\n    attr(path, attr(elem));\n    const d = toPathData(elem);\n    if (d) {\n        path.setAttribute('d', d);\n    }\n    return path;\n}\nexport function toPathData(elem) {\n    const tagName = elem.tagName.toLowerCase();\n    switch (tagName) {\n        case 'path':\n            return elem.getAttribute('d');\n        case 'line':\n            return lineToPathData(elem);\n        case 'polygon':\n            return polygonToPathData(elem);\n        case 'polyline':\n            return polylineToPathData(elem);\n        case 'ellipse':\n            return ellipseToPathData(elem);\n        case 'circle':\n            return circleToPathData(elem);\n        case 'rect':\n            return rectangleToPathData(elem);\n        default:\n            break;\n    }\n    throw new Error(`\"${tagName}\" cannot be converted to svg path element.`);\n}\n// Inspired by d3.js https://github.com/mbostock/d3/blob/master/src/svg/arc.js\nexport function createSlicePathData(innerRadius, outerRadius, startAngle, endAngle) {\n    const svgArcMax = 2 * Math.PI - 1e-6;\n    const r0 = innerRadius;\n    const r1 = outerRadius;\n    let a0 = startAngle;\n    let a1 = endAngle;\n    if (a1 < a0) {\n        const tmp = a0;\n        a0 = a1;\n        a1 = tmp;\n    }\n    const da = a1 - a0;\n    const df = da < Math.PI ? '0' : '1';\n    const c0 = Math.cos(a0);\n    const s0 = Math.sin(a0);\n    const c1 = Math.cos(a1);\n    const s1 = Math.sin(a1);\n    return da >= svgArcMax\n        ? r0\n            ? // eslint-disable-next-line\n                `M0,${r1}A${r1},${r1} 0 1,1 0,${-r1}A${r1},${r1} 0 1,1 0,${r1}M0,${r0}A${r0},${r0} 0 1,0 0,${-r0}A${r0},${r0} 0 1,0 0,${r0}Z`\n            : // eslint-disable-next-line\n                `M0,${r1}A${r1},${r1} 0 1,1 0,${-r1}A${r1},${r1} 0 1,1 0,${r1}Z`\n        : r0\n            ? // eslint-disable-next-line\n                `M${r1 * c0},${r1 * s0}A${r1},${r1} 0 ${df},1 ${r1 * c1},${r1 * s1}L${r0 * c1},${r0 * s1}A${r0},${r0} 0 ${df},0 ${r0 * c0},${r0 * s0}Z`\n            : // eslint-disable-next-line\n                `M${r1 * c0},${r1 * s0}A${r1},${r1} 0 ${df},1 ${r1 * c1},${r1 * s1}L0,0` +\n                    `Z`;\n}\n//# sourceMappingURL=path.js.map"]},"metadata":{},"sourceType":"module"}