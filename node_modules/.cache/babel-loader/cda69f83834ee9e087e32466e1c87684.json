{"ast":null,"code":"import _defineProperty from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _createForOfIteratorHelper from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/manolo/sds-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { ScheduleTypeEnum } from './interface';\nimport { ErrorUtils, HookUtils, Deferred } from './utils';\nexport { ScheduleTypeEnum } from './interface';\nexport var HookHub = function HookHub(options) {\n  var _this = this,\n      _this$schedulers;\n\n  _classCallCheck(this, HookHub);\n\n  /** scheduleType */\n  this.scheduleType = ScheduleTypeEnum.ASYNC_SRRIES;\n  /** hasRegistered */\n\n  this.hasHook = function (hookName) {\n    return _this.hookMap.has(hookName);\n  };\n  /** getHooks */\n\n\n  this.getHooks = function () {\n    var runtimeHooks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var sort = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var hooks = HookUtils.normalize(runtimeHooks, _this.hookMap);\n\n    if (!sort) {\n      return hooks;\n    }\n\n    HookUtils.sort(hooks, _this.hookMap);\n    return hooks;\n  };\n  /** registerHook */\n\n\n  this.registerHook = function (hookMeta) {\n    if (_this.hookMap.has(hookMeta.name)) {\n      console.error(\"\".concat(hookMeta.name, \" is duplicated in hookmap\"));\n    }\n\n    _this.hookMap.set(hookMeta.name, hookMeta);\n\n    return {\n      dispose: function dispose() {\n        _this.hookMap.delete(hookMeta.name);\n      }\n    };\n  };\n  /** registerHook */\n\n\n  this.call = function (args) {\n    var main = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (mainArgs) {\n      return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", mainArgs);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    };\n    var runtimeHook = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var hooks, scheduler;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // TODO: 这里加cache\n              hooks = this.getHooks(runtimeHook);\n              scheduler = this.schedulers[this.scheduleType];\n              return _context2.abrupt(\"return\", scheduler(args, main, hooks));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n  };\n  /** 执行hook的scheduler */\n\n\n  this.schedulers = (_this$schedulers = {}, _defineProperty(_this$schedulers, ScheduleTypeEnum.ASYNC_SRRIES, function (args, main) {\n    var hooks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var callback, _iterator, _step, hook, result, err;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              callback = main;\n              /** 用 hook 加工 args  */\n\n              _iterator = _createForOfIteratorHelper(hooks);\n              _context3.prev = 2;\n\n              _iterator.s();\n\n            case 4:\n              if ((_step = _iterator.n()).done) {\n                _context3.next = 26;\n                break;\n              }\n\n              hook = _step.value;\n\n              if (![0, 1].includes(hook.handler.length)) {\n                _context3.next = 10;\n                break;\n              }\n\n              _context3.next = 9;\n              return hook.handler.call(this, args);\n\n            case 9:\n              return _context3.abrupt(\"continue\", 24);\n\n            case 10:\n              if (!([2].includes(hook.handler.length) && callback !== null)) {\n                _context3.next = 22;\n                break;\n              }\n\n              _context3.next = 13;\n              return hook.handler.call(this, args, callback);\n\n            case 13:\n              result = _context3.sent;\n\n              if (!(result === null)) {\n                _context3.next = 19;\n                break;\n              }\n\n              callback = null;\n              return _context3.abrupt(\"break\", 26);\n\n            case 19:\n              if (!(typeof result === 'function')) {\n                _context3.next = 22;\n                break;\n              }\n\n              callback = result;\n              return _context3.abrupt(\"continue\", 24);\n\n            case 22:\n              err = ErrorUtils.InvalidHookArguments(hook);\n              throw err;\n\n            case 24:\n              _context3.next = 4;\n              break;\n\n            case 26:\n              _context3.next = 31;\n              break;\n\n            case 28:\n              _context3.prev = 28;\n              _context3.t0 = _context3[\"catch\"](2);\n\n              _iterator.e(_context3.t0);\n\n            case 31:\n              _context3.prev = 31;\n\n              _iterator.f();\n\n              return _context3.finish(31);\n\n            case 34:\n              if (!callback) {\n                _context3.next = 38;\n                break;\n              }\n\n              _context3.next = 37;\n              return callback.call(this, args);\n\n            case 37:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 38:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this, [[2, 28, 31, 34]]);\n    }));\n  }), _defineProperty(_this$schedulers, ScheduleTypeEnum.ASYNC_PARALLEL, function (args, main) {\n    var hooks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _this2 = this;\n\n      var promises, defer;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              /** 同时触发 hook */\n              promises = hooks.map(function (hook) {\n                if ([0, 1].includes(hook.handler.length)) {\n                  return hook.handler.call(_this2, args);\n                }\n\n                if ([2].includes(hook.handler.length)) {\n                  return hook.handler.call(_this2, args, main);\n                }\n\n                throw ErrorUtils.InvalidHookArguments(hook);\n              });\n              defer = new Deferred();\n              Promise.all(promises).then(function (res) {\n                return defer.resolve(res);\n              });\n              /** 检查是否被替换 */\n\n              if (!main) {\n                _context4.next = 7;\n                break;\n              }\n\n              _context4.next = 6;\n              return main.call(this, defer);\n\n            case 6:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n  }), _this$schedulers);\n  this.hookMap = new Map();\n\n  if (options && options.type) {\n    this.scheduleType = options.type;\n  }\n};","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,gBAAT,QAAiC,aAAjC;AACA,SAAS,UAAT,EAAqB,SAArB,EAAgC,QAAhC,QAAgD,SAAhD;AAEA,SAAS,gBAAT,QAAiC,aAAjC;AAUA,WAAa,OAAb,GAME,iBAAY,OAAZ,EAAqC;AAAA;AAAA;;AAAA;;AAHrC;AACQ,OAAA,YAAA,GAAiC,gBAAgB,CAAC,YAAlD;AAQR;;AACA,OAAA,OAAA,GAAU,UAAC,QAAD,EAA8B;AACtC,WAAO,KAAI,CAAC,OAAL,CAAa,GAAb,CAAiB,QAAjB,CAAP;AACD,GAFD;AAGA;;;AACA,OAAA,QAAA,GAAW,YAGgB;AAAA,QAFzB,YAEyB,uEAFkB,EAElB;AAAA,QADzB,IACyB,uEADlB,IACkB;AACzB,QAAM,KAAK,GAAG,SAAS,CAAC,SAAV,CAAoB,YAApB,EAAkC,KAAI,CAAC,OAAvC,CAAd;;AACA,QAAI,CAAC,IAAL,EAAW;AACT,aAAO,KAAP;AACD;;AACD,IAAA,SAAS,CAAC,IAAV,CAAe,KAAf,EAAsB,KAAI,CAAC,OAA3B;AACA,WAAO,KAAP;AACD,GAVD;AAWA;;;AACA,OAAA,YAAA,GAAe,UAAC,QAAD,EAA8C;AAC3D,QAAI,KAAI,CAAC,OAAL,CAAa,GAAb,CAAiB,QAAQ,CAAC,IAA1B,CAAJ,EAAqC;AACnC,MAAA,OAAO,CAAC,KAAR,WAAiB,QAAQ,CAAC,IAA1B;AACD;;AACD,IAAA,KAAI,CAAC,OAAL,CAAa,GAAb,CAAiB,QAAQ,CAAC,IAA1B,EAAgC,QAAhC;;AACA,WAAO;AACL,MAAA,OAAO,EAAE,mBAAK;AACZ,QAAA,KAAI,CAAC,OAAL,CAAa,MAAb,CAAoB,QAAQ,CAAC,IAA7B;AACD;AAHI,KAAP;AAKD,GAVD;AAWA;;;AACA,OAAA,IAAA,GAAO,UACL,IADK;AAAA,QAEL,IAFK,uEAEuC,UAAM,QAAN;AAAA,aAAiB,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAC,QAAD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA,EAAjB;AAAA,KAFvC;AAAA,QAGL,WAHK,uEAGqC,EAHrC;AAAA,WAI0B,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/B;AACM,cAAA,KAFyB,GAEjB,KAAK,QAAL,CAAc,WAAd,CAFiB;AAGzB,cAAA,SAHyB,GAGb,KAAK,UAAL,CAAgB,KAAK,YAArB,CAHa;AAAA,gDAIxB,SAAS,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,CAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA,EAJ1B;AAAA,GAAP;AAUA;;;AACQ,OAAA,UAAA,6DAEL,gBAAgB,CAAC,YAFZ,EAE2B,UAC/B,IAD+B,EAE/B,IAF+B;AAAA,QAG/B,KAH+B,uEAGA,EAHA;AAAA,WAI7B,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACE,cAAA,QADF,GACuD,IADvD;AAEF;;AAFE,qDAGiB,KAHjB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGS,cAAA,IAHT;;AAAA,mBAII,CAAC,CAAD,EAAI,CAAJ,EAAO,QAAP,CAAgB,IAAI,CAAC,OAAL,CAAa,MAA7B,CAJJ;AAAA;AAAA;AAAA;;AAAA;AAKE,qBAAM,IAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,IAAlB,EAAwB,IAAxB,CAAN;;AALF;AAAA;;AAAA;AAAA,oBAQI,CAAC,CAAD,EAAI,QAAJ,CAAa,IAAI,CAAC,OAAL,CAAa,MAA1B,KAAqC,QAAQ,KAAK,IARtD;AAAA;AAAA;AAAA;;AAAA;AAUkE,qBAAM,IAAI,CAAC,OAAL,CAAa,IAAb,CACpE,IADoE,EAEpE,IAFoE,EAGpE,QAHoE,CAAN;;AAVlE;AAUQ,cAAA,MAVR;;AAAA,oBAgBM,MAAM,KAAK,IAhBjB;AAAA;AAAA;AAAA;;AAiBI,cAAA,QAAQ,GAAG,IAAX;AAjBJ;;AAAA;AAAA,oBAmBa,OAAO,MAAP,KAAkB,UAnB/B;AAAA;AAAA;AAAA;;AAoBI,cAAA,QAAQ,GAAG,MAAX;AApBJ;;AAAA;AAwBM,cAAA,GAxBN,GAwBY,UAAU,CAAC,oBAAX,CAAgC,IAAhC,CAxBZ;AAAA,oBAyBM,GAzBN;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,mBA4BE,QA5BF;AAAA;AAAA;AAAA;;AAAA;AA6BO,qBAAM,QAAQ,CAAC,IAAT,CAAc,IAAd,EAAoB,IAApB,CAAN;;AA7BP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA,EAJ6B;AAAA,GAF3B,qCAsCL,gBAAgB,CAAC,cAtCZ,EAsC6B,UACjC,IADiC,EAEjC,IAFiC;AAAA,QAGjC,KAHiC,uEAGF,EAHE;AAAA,WAI/B,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,wCAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACF;AACM,cAAA,QAFJ,GAEe,KAAK,CAAC,GAAN,CAAU,UAAA,IAAI,EAAG;AAChC,oBAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,QAAP,CAAgB,IAAI,CAAC,OAAL,CAAa,MAA7B,CAAJ,EAA0C;AACxC,yBAAO,IAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,MAAlB,EAAwB,IAAxB,CAAP;AACD;;AACD,oBAAI,CAAC,CAAD,EAAI,QAAJ,CAAa,IAAI,CAAC,OAAL,CAAa,MAA1B,CAAJ,EAAuC;AACrC,yBAAO,IAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,MAAlB,EAAwB,IAAxB,EAA8B,IAA9B,CAAP;AACD;;AACD,sBAAM,UAAU,CAAC,oBAAX,CAAgC,IAAhC,CAAN;AACD,eARgB,CAFf;AAWI,cAAA,KAXJ,GAWY,IAAI,QAAJ,EAXZ;AAYF,cAAA,OAAO,CAAC,GAAR,CAAY,QAAZ,EAAsB,IAAtB,CAA2B,UAAA,GAAG;AAAA,uBAAI,KAAK,CAAC,OAAN,CAAc,GAAd,CAAJ;AAAA,eAA9B;AACA;;AAbE,mBAcE,IAdF;AAAA;AAAA;AAAA;;AAAA;AAeO,qBAAM,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB,KAAhB,CAAN;;AAfP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAA,EAJ+B;AAAA,GAtC7B;AA7CN,OAAK,OAAL,GAAe,IAAI,GAAJ,EAAf;;AACA,MAAI,OAAO,IAAI,OAAO,CAAC,IAAvB,EAA6B;AAC3B,SAAK,YAAL,GAAoB,OAAO,CAAC,IAA5B;AACD;AACF,CAXH","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ScheduleTypeEnum } from './interface';\nimport { ErrorUtils, HookUtils, Deferred } from './utils';\nexport { ScheduleTypeEnum } from './interface';\nexport class HookHub {\n    constructor(options) {\n        /** scheduleType */\n        this.scheduleType = ScheduleTypeEnum.ASYNC_SRRIES;\n        /** hasRegistered */\n        this.hasHook = (hookName) => {\n            return this.hookMap.has(hookName);\n        };\n        /** getHooks */\n        this.getHooks = (runtimeHooks = [], sort = true) => {\n            const hooks = HookUtils.normalize(runtimeHooks, this.hookMap);\n            if (!sort) {\n                return hooks;\n            }\n            HookUtils.sort(hooks, this.hookMap);\n            return hooks;\n        };\n        /** registerHook */\n        this.registerHook = (hookMeta) => {\n            if (this.hookMap.has(hookMeta.name)) {\n                console.error(`${hookMeta.name} is duplicated in hookmap`);\n            }\n            this.hookMap.set(hookMeta.name, hookMeta);\n            return {\n                dispose: () => {\n                    this.hookMap.delete(hookMeta.name);\n                },\n            };\n        };\n        /** registerHook */\n        this.call = (args, main = (mainArgs) => __awaiter(this, void 0, void 0, function* () { return mainArgs; }), runtimeHook = []) => __awaiter(this, void 0, void 0, function* () {\n            // TODO: 这里加cache\n            const hooks = this.getHooks(runtimeHook);\n            const scheduler = this.schedulers[this.scheduleType];\n            return scheduler(args, main, hooks);\n        });\n        /** 执行hook的scheduler */\n        this.schedulers = {\n            /** pipeline执行 */\n            [ScheduleTypeEnum.ASYNC_SRRIES]: (args, main, hooks = []) => __awaiter(this, void 0, void 0, function* () {\n                let callback = main;\n                /** 用 hook 加工 args  */\n                for (const hook of hooks) {\n                    if ([0, 1].includes(hook.handler.length)) {\n                        yield hook.handler.call(this, args);\n                        continue;\n                    }\n                    if ([2].includes(hook.handler.length) && callback !== null) {\n                        // eslint-disable-next-line @typescript-eslint/no-shadow\n                        const result = yield hook.handler.call(this, args, callback);\n                        /** 如果返回为null，则直接中断执行 */\n                        if (result === null) {\n                            callback = null;\n                            break;\n                        }\n                        else if (typeof result === 'function') {\n                            callback = result;\n                            continue;\n                        }\n                    }\n                    const err = ErrorUtils.InvalidHookArguments(hook);\n                    throw err;\n                }\n                /** 检查是否被替换为null */\n                if (callback) {\n                    return yield callback.call(this, args);\n                }\n            }),\n            [ScheduleTypeEnum.ASYNC_PARALLEL]: (args, main, hooks = []) => __awaiter(this, void 0, void 0, function* () {\n                /** 同时触发 hook */\n                const promises = hooks.map(hook => {\n                    if ([0, 1].includes(hook.handler.length)) {\n                        return hook.handler.call(this, args);\n                    }\n                    if ([2].includes(hook.handler.length)) {\n                        return hook.handler.call(this, args, main);\n                    }\n                    throw ErrorUtils.InvalidHookArguments(hook);\n                });\n                const defer = new Deferred();\n                Promise.all(promises).then(res => defer.resolve(res));\n                /** 检查是否被替换 */\n                if (main) {\n                    return yield main.call(this, defer);\n                }\n            }),\n        };\n        this.hookMap = new Map();\n        if (options && options.type) {\n            this.scheduleType = options.type;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}