{"ast":null,"code":"var _jsxFileName = \"/home/manolo/sds-ui/src/components/charts/GraphChart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n/* UI Library Components */\n\nimport { Card } from 'antd';\n/* Componentes */\n\nimport InfoButton from '../infoButton';\n/* Libraries */\n\nimport G6 from '@antv/g6';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GraphChart = _ref => {\n  _s();\n\n  let {\n    data,\n    title,\n    height = 622\n  } = _ref;\n  const ref = useRef(null);\n  const {\n    innerWidth\n  } = window;\n  useEffect(() => {\n    let graph = null;\n\n    if (!graph) {\n      var _data$nodes;\n\n      graph = new G6.Graph({\n        container: ReactDOM.findDOMNode(ref.current),\n        width: innerWidth > 1400 ? 1346 : innerWidth - 53,\n        height: 600,\n        modes: {\n          default: [{\n            type: 'zoom-canvas',\n            enableOptimize: true,\n            optimizeZoom: 0.9\n          }, {\n            type: 'drag-canvas',\n            enableOptimize: true\n          }, {\n            type: 'tooltip',\n\n            formatText(model) {\n              return `Grado: ${model.degree}`;\n            }\n\n          }, {\n            type: 'edge-tooltip',\n\n            formatText(model) {\n              return `${model.coauthorships} ${model.coauthorships > 1 ? 'coautorías' : 'coautoría'}`;\n            }\n\n          }]\n        },\n        layout: {\n          type: (data === null || data === void 0 ? void 0 : (_data$nodes = data.nodes) === null || _data$nodes === void 0 ? void 0 : _data$nodes.length) > 220 ? 'forceAtlas2' : 'gForce',\n          preventOverlap: true\n        },\n        defaultNode: {\n          style: {\n            stroke: '#00A283',\n            fill: '#00E4A9',\n            fillOpacity: 0.6\n          },\n          labelCfg: {\n            style: {\n              fontSize: 8\n            },\n            position: 'bottom',\n            offset: 1\n          }\n        },\n        defaultEdge: {\n          style: {\n            stroke: '#e8e7e3'\n          }\n        }\n      });\n    }\n\n    graph.data(data);\n    graph.render(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    size: \"small\",\n    title: title,\n    headStyle: {\n      backgroundColor: '#003e65',\n      color: 'white'\n    },\n    bodyStyle: {\n      padding: '10px',\n      height: height\n    },\n    extra: /*#__PURE__*/_jsxDEV(InfoButton, {\n      title: title,\n      type: 'graph'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 14\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GraphChart, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = GraphChart;\nexport default GraphChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphChart\");","map":{"version":3,"sources":["/home/manolo/sds-ui/src/components/charts/GraphChart.jsx"],"names":["React","useEffect","useRef","ReactDOM","Card","InfoButton","G6","GraphChart","data","title","height","ref","innerWidth","window","graph","Graph","container","findDOMNode","current","width","modes","default","type","enableOptimize","optimizeZoom","formatText","model","degree","coauthorships","layout","nodes","length","preventOverlap","defaultNode","style","stroke","fill","fillOpacity","labelCfg","fontSize","position","offset","defaultEdge","render","backgroundColor","color","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\n\n/* UI Library Components */\nimport { Card } from 'antd';\n\n/* Componentes */\nimport InfoButton from '../infoButton';\n\n/* Libraries */\nimport G6 from '@antv/g6';\n\nconst GraphChart = ({ data, title, height = 622 }) => {\n  const ref = useRef(null);\n  const { innerWidth } = window;\n\n  useEffect(() => {\n    let graph = null;\n    if (!graph) {\n      graph = new G6.Graph({\n        container: ReactDOM.findDOMNode(ref.current),\n        width: innerWidth > 1400 ? 1346 : innerWidth - 53,\n        height: 600,\n        modes: {\n          default: [\n            {\n              type: 'zoom-canvas',\n              enableOptimize: true,\n              optimizeZoom: 0.9,\n            },\n            {\n              type: 'drag-canvas',\n              enableOptimize: true,\n            },\n            {\n              type: 'tooltip',\n              formatText(model) {\n                return `Grado: ${model.degree}`;\n              },\n            },\n            {\n              type: 'edge-tooltip',\n              formatText(model) {\n                return `${model.coauthorships} ${\n                  model.coauthorships > 1 ? 'coautorías' : 'coautoría'\n                }`;\n              },\n            },\n          ],\n        },\n        layout: {\n          type: data?.nodes?.length > 220 ? 'forceAtlas2' : 'gForce',\n          preventOverlap: true,\n        },\n        defaultNode: {\n          style: { stroke: '#00A283', fill: '#00E4A9', fillOpacity: 0.6 },\n          labelCfg: {\n            style: { fontSize: 8 },\n            position: 'bottom',\n            offset: 1,\n          },\n        },\n        defaultEdge: {\n          style: {\n            stroke: '#e8e7e3',\n          },\n        },\n      });\n    }\n    graph.data(data);\n    graph.render();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return (\n    <Card\n      size=\"small\"\n      title={title}\n      headStyle={{ backgroundColor: '#003e65', color: 'white' }}\n      bodyStyle={{ padding: '10px', height: height }}\n      extra={<InfoButton title={title} type={'graph'} />}\n    >\n      <div className=\"chart\">\n        <div ref={ref}></div>\n      </div>\n    </Card>\n  );\n};\n\nexport default GraphChart;\n"]},"metadata":{},"sourceType":"module"}