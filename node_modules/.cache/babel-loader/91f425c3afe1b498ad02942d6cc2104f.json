{"ast":null,"code":"import { getLayoutByName } from \"../registy\";\nimport { GridLayout } from \"./grid\";\nimport { RandomLayout } from \"./random\";\nimport { GForceLayout } from \"./gForce\";\nimport { ForceLayout } from \"./force\";\nimport { CircularLayout } from \"./circular\";\nimport { DagreLayout } from \"./dagre\";\nimport { RadialLayout } from \"./radial\";\nimport { ConcentricLayout } from \"./concentric\";\nimport { MDSLayout } from \"./mds\";\nimport { FruchtermanLayout } from \"./fruchterman\";\nimport { FruchtermanGPULayout } from \"./gpu/fruchterman\";\nimport { GForceGPULayout } from \"./gpu/gForce\";\nimport { ComboForceLayout } from \"./comboForce\";\nimport { ForceAtlas2Layout } from \"./forceAtlas2\";\nexport class Layout {\n  constructor(options) {\n    const layoutClass = getLayoutByName(options.type);\n    this.layoutInstance = new layoutClass(options);\n  }\n\n  layout(data) {\n    return this.layoutInstance.layout(data);\n  }\n\n  updateCfg(cfg) {\n    this.layoutInstance.updateCfg(cfg);\n  }\n\n  init(data) {\n    this.layoutInstance.init(data);\n  }\n\n  execute() {\n    this.layoutInstance.execute();\n  }\n\n  getDefaultCfg() {\n    return this.layoutInstance.getDefaultCfg();\n  }\n\n  destroy() {\n    return this.layoutInstance.destroy();\n  }\n\n} // FIXME\n// FOR G6\n// tslint:disable-next-line\n\nexport const Layouts = {\n  force: ForceLayout,\n  fruchterman: FruchtermanLayout,\n  forceAtlas2: ForceAtlas2Layout,\n  gForce: GForceLayout,\n  dagre: DagreLayout,\n  circular: CircularLayout,\n  radial: RadialLayout,\n  concentric: ConcentricLayout,\n  grid: GridLayout,\n  mds: MDSLayout,\n  comboForce: ComboForceLayout,\n  random: RandomLayout,\n  'gForce-gpu': GForceGPULayout,\n  'fruchterman-gpu': FruchtermanGPULayout\n};","map":{"version":3,"sources":["../../src/layout/layout.ts"],"names":[],"mappings":"AAEA,SAAS,eAAT,QAAgC,YAAhC;AACA,SAAS,UAAT,QAA2B,QAA3B;AACA,SAAS,YAAT,QAA6B,UAA7B;AACA,SAAS,YAAT,QAA6B,UAA7B;AACA,SAAS,WAAT,QAA4B,SAA5B;AACA,SAAS,cAAT,QAA+B,YAA/B;AACA,SAAS,WAAT,QAA4B,SAA5B;AACA,SAAS,YAAT,QAA6B,UAA7B;AACA,SAAS,gBAAT,QAAiC,cAAjC;AACA,SAAS,SAAT,QAA0B,OAA1B;AACA,SAAS,iBAAT,QAAkC,eAAlC;AACA,SAAS,oBAAT,QAAqC,mBAArC;AACA,SAAS,eAAT,QAAgC,cAAhC;AACA,SAAS,gBAAT,QAAiC,cAAjC;AACA,SAAS,iBAAT,QAAkC,eAAlC;AACA,OAAM,MAAO,MAAP,CAAa;AAGjB,EAAA,WAAA,CAAY,OAAZ,EAA0C;AACxC,UAAM,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC,IAAT,CAAnC;AACA,SAAK,cAAL,GAAsB,IAAI,WAAJ,CAAgB,OAAhB,CAAtB;AACD;;AAED,EAAA,MAAM,CAAC,IAAD,EAAY;AAChB,WAAO,KAAK,cAAL,CAAoB,MAApB,CAA2B,IAA3B,CAAP;AACD;;AAED,EAAA,SAAS,CAAC,GAAD,EAA2B;AAClC,SAAK,cAAL,CAAoB,SAApB,CAA8B,GAA9B;AACD;;AAED,EAAA,IAAI,CAAC,IAAD,EAAY;AACd,SAAK,cAAL,CAAoB,IAApB,CAAyB,IAAzB;AACD;;AAED,EAAA,OAAO,GAAA;AACL,SAAK,cAAL,CAAoB,OAApB;AACD;;AAED,EAAA,aAAa,GAAA;AACX,WAAO,KAAK,cAAL,CAAoB,aAApB,EAAP;AACD;;AAED,EAAA,OAAO,GAAA;AACL,WAAO,KAAK,cAAL,CAAoB,OAApB,EAAP;AACD;;AA9BgB,C,CAiCnB;AACA;AACA;;AACA,OAAO,MAAM,OAAO,GAA2B;AAC7C,EAAA,KAAK,EAAE,WADsC;AAE7C,EAAA,WAAW,EAAE,iBAFgC;AAG7C,EAAA,WAAW,EAAE,iBAHgC;AAI7C,EAAA,MAAM,EAAE,YAJqC;AAK7C,EAAA,KAAK,EAAE,WALsC;AAM7C,EAAA,QAAQ,EAAE,cANmC;AAO7C,EAAA,MAAM,EAAE,YAPqC;AAQ7C,EAAA,UAAU,EAAE,gBARiC;AAS7C,EAAA,IAAI,EAAE,UATuC;AAU7C,EAAA,GAAG,EAAE,SAVwC;AAW7C,EAAA,UAAU,EAAE,gBAXiC;AAY7C,EAAA,MAAM,EAAE,YAZqC;AAa7C,gBAAc,eAb+B;AAc7C,qBAAmB;AAd0B,CAAxC","sourceRoot":"","sourcesContent":["import { getLayoutByName } from \"../registy\";\nimport { GridLayout } from \"./grid\";\nimport { RandomLayout } from \"./random\";\nimport { GForceLayout } from \"./gForce\";\nimport { ForceLayout } from \"./force\";\nimport { CircularLayout } from \"./circular\";\nimport { DagreLayout } from \"./dagre\";\nimport { RadialLayout } from \"./radial\";\nimport { ConcentricLayout } from \"./concentric\";\nimport { MDSLayout } from \"./mds\";\nimport { FruchtermanLayout } from \"./fruchterman\";\nimport { FruchtermanGPULayout } from \"./gpu/fruchterman\";\nimport { GForceGPULayout } from \"./gpu/gForce\";\nimport { ComboForceLayout } from \"./comboForce\";\nimport { ForceAtlas2Layout } from \"./forceAtlas2\";\nexport class Layout {\n    constructor(options) {\n        const layoutClass = getLayoutByName(options.type);\n        this.layoutInstance = new layoutClass(options);\n    }\n    layout(data) {\n        return this.layoutInstance.layout(data);\n    }\n    updateCfg(cfg) {\n        this.layoutInstance.updateCfg(cfg);\n    }\n    init(data) {\n        this.layoutInstance.init(data);\n    }\n    execute() {\n        this.layoutInstance.execute();\n    }\n    getDefaultCfg() {\n        return this.layoutInstance.getDefaultCfg();\n    }\n    destroy() {\n        return this.layoutInstance.destroy();\n    }\n}\n// FIXME\n// FOR G6\n// tslint:disable-next-line\nexport const Layouts = {\n    force: ForceLayout,\n    fruchterman: FruchtermanLayout,\n    forceAtlas2: ForceAtlas2Layout,\n    gForce: GForceLayout,\n    dagre: DagreLayout,\n    circular: CircularLayout,\n    radial: RadialLayout,\n    concentric: ConcentricLayout,\n    grid: GridLayout,\n    mds: MDSLayout,\n    comboForce: ComboForceLayout,\n    random: RandomLayout,\n    'gForce-gpu': GForceGPULayout,\n    'fruchterman-gpu': FruchtermanGPULayout,\n};\n//# sourceMappingURL=layout.js.map"]},"metadata":{},"sourceType":"module"}