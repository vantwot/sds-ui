{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar lng_lat_1 = require(\"../geometry/lng-lat\");\n\nvar bounds_1 = require(\"../geometry/bounds\");\n\nvar point_1 = require(\"../geometry/point\");\n\nexports.sphericalMercator = {\n  R: 6378137,\n  MAX_LATITUDE: 85.0511287798,\n\n  /**\n   * 经纬度坐标转平面坐标\n   * @param lnglat 经纬度\n   */\n  project: function project(lnglat) {\n    var d = Math.PI / 180;\n    var max = this.MAX_LATITUDE;\n    var lat = Math.max(Math.min(max, lnglat.lat), -max);\n    var sin = Math.sin(lat * d);\n    return new point_1.Point(this.R * lnglat.lng * d, this.R * Math.log((1 + sin) / (1 - sin)) / 2);\n  },\n  // 平面坐标转经纬度\n  unproject: function unproject(point) {\n    var d = 180 / Math.PI;\n    return new lng_lat_1.LngLat(point.x * d / this.R, (2 * Math.atan(Math.exp(point.y / this.R)) - Math.PI / 2) * d);\n  },\n  bounds: function () {\n    var d = 6378137 * Math.PI;\n    return new bounds_1.Bounds([-d, -d], [d, d]);\n  }()\n};","map":{"version":3,"sources":["../../../src/geo/projection/spherical-mercator.ts"],"names":[],"mappings":";;;;AAAA,IAAA,SAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,mBAAA,CAAA;;AACa,OAAA,CAAA,iBAAA,GAAoB;AAC/B,EAAA,CAAC,EAAE,OAD4B;AAE/B,EAAA,YAAY,EAAE,aAFiB;;AAG/B;;;AAGG;AACH,EAAA,OAAO,EAAP,iBAAQ,MAAR,EAAsB;AACpB,QAAM,CAAC,GAAG,IAAI,CAAC,EAAL,GAAU,GAApB;AACA,QAAM,GAAG,GAAG,KAAK,YAAjB;AACA,QAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,IAAI,CAAC,GAAL,CAAS,GAAT,EAAc,MAAM,CAAC,GAArB,CAAT,EAAoC,CAAC,GAArC,CAAZ;AACA,QAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,GAAG,GAAG,CAAf,CAAZ;AAEA,WAAO,IAAI,OAAA,CAAA,KAAJ,CACL,KAAK,CAAL,GAAS,MAAM,CAAC,GAAhB,GAAsB,CADjB,EAEJ,KAAK,CAAL,GAAS,IAAI,CAAC,GAAL,CAAS,CAAC,IAAI,GAAL,KAAa,IAAI,GAAjB,CAAT,CAAV,GAA6C,CAFxC,CAAP;AAID,GAjB8B;AAkB/B;AACA,EAAA,SAAS,EAAT,mBAAU,KAAV,EAAsB;AACpB,QAAM,CAAC,GAAG,MAAM,IAAI,CAAC,EAArB;AAEA,WAAO,IAAI,SAAA,CAAA,MAAJ,CACJ,KAAK,CAAC,CAAN,GAAU,CAAX,GAAgB,KAAK,CADhB,EAEL,CAAC,IAAI,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,GAAL,CAAS,KAAK,CAAC,CAAN,GAAU,KAAK,CAAxB,CAAV,CAAJ,GAA4C,IAAI,CAAC,EAAL,GAAU,CAAvD,IAA4D,CAFvD,CAAP;AAID,GA1B8B;AA4B/B,EAAA,MAAM,EAAG,YAAA;AACP,QAAM,CAAC,GAAG,UAAU,IAAI,CAAC,EAAzB;AACA,WAAO,IAAI,QAAA,CAAA,MAAJ,CAAW,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,CAAX,EAAqB,CAAC,CAAD,EAAI,CAAJ,CAArB,CAAP;AACD,GAHO;AA5BuB,CAApB","sourceRoot":"","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar lng_lat_1 = require(\"../geometry/lng-lat\");\nvar bounds_1 = require(\"../geometry/bounds\");\nvar point_1 = require(\"../geometry/point\");\nexports.sphericalMercator = {\n    R: 6378137,\n    MAX_LATITUDE: 85.0511287798,\n    /**\n     * 经纬度坐标转平面坐标\n     * @param lnglat 经纬度\n     */\n    project: function (lnglat) {\n        var d = Math.PI / 180;\n        var max = this.MAX_LATITUDE;\n        var lat = Math.max(Math.min(max, lnglat.lat), -max);\n        var sin = Math.sin(lat * d);\n        return new point_1.Point(this.R * lnglat.lng * d, (this.R * Math.log((1 + sin) / (1 - sin))) / 2);\n    },\n    // 平面坐标转经纬度\n    unproject: function (point) {\n        var d = 180 / Math.PI;\n        return new lng_lat_1.LngLat((point.x * d) / this.R, (2 * Math.atan(Math.exp(point.y / this.R)) - Math.PI / 2) * d);\n    },\n    bounds: (function () {\n        var d = 6378137 * Math.PI;\n        return new bounds_1.Bounds([-d, -d], [d, d]);\n    })()\n};\n//# sourceMappingURL=spherical-mercator.js.map"]},"metadata":{},"sourceType":"script"}